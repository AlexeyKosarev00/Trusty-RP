// Мод Trusty  RP
// Автор последней версии: Berg, r_itashi

// Include`s
#include <a_samp>
#include <a_others>
#include <foreach>
#include <progress2>
#include <crashdetect>
//#include <jit>
//#include "gl_common.inc"
#undef MAX_PLAYERS
#define MAX_PLAYERS 170
#define @p playerid
#define SCM SendClientMessage
#define SPD ShowPlayerDialog
#define U_Day 86400
#define gpvi GetPVarInt
#define spvi SetPVarInt

#define SQL_HOST 	"localhost"
#define SQL_USER 	"root"
#define SQL_DB		"ENERNITY"
#define SQL_PASS 	""

/*#define SQL_HOST "db1.myarena.ru"
#define SQL_USER "takage_takage" 
#define SQL_DB "takage_takage" 
#define SQL_PASS "vasya228"*/

stock S_ApplyAnimation(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time,forcesync = 1)
{
	return ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time,forcesync);
}
#if    defined    _ALS_ApplyAnimation
#undef    ApplyAnimation
#else
#define    _ALS_ApplyAnimation
#endif
#define ApplyAnimation S_ApplyAnimation
/*stock S_SetPlayerVirtualWorld(playerid, worldid)
{
	GetShowSnow(@p,worldid);
	return SetPlayerVirtualWorld(playerid, worldid);
}
#if    defined    _ALS_SetPlayerVirtualWorld
#undef    SetPlayerVirtualWorld
#else
#define    _ALS_SetPlayerVirtualWorld
#endif
#define SetPlayerVirtualWorld S_SetPlayerVirtualWorld
stock S_SetPlayerInterior(playerid,interiorid)
{
	GetShowSnow(@p,interiorid);
	return SetPlayerInterior(playerid,interiorid);
}
#if    defined    _ALS_SetPlayerInterior
#undef    SetPlayerInterior
#else
#define    _ALS_SetPlayerInterior
#endif
#define SetPlayerInterior S_SetPlayerInterior
*/
stock S_SendClientMessageToAll(color, const outstr[])
{
	foreach(new i:Player)
	{
		SCM(i,color, outstr);
	}
}
#if    defined    _ALS_SendClientMessageToAll
#undef    SendClientMessageToAll
#else
#define    _ALS_SendClientMessageToAll
#endif
#define SendClientMessageToAll S_SendClientMessageToAll
#define DONATE 			31000
#define DONATE1 			31001
#define DONATE2 			31002
#define CLEARWARN 		31003
#define FIGHTSTYLE 		31004
#define ROULETTE 			31005

#define MAX_ATM 			50
#define MAX_LAREK 		50
#define MAX_GARAGE 		500
#define MAX_KVART 		1000
#define MAX_HOUSE 		350
#define MAX_BIZ 			50
#define MAX_ACC			5	//магазины аксессуаров
#define MAX_FUELS		50


//  Massive`s
new exitpick,prava_z;
new PlayerBar:pbar_sat;
new PlayerText:taxi_info[MAX_PLAYERS];
new Text:taxi_fon;
new taxi_z;
new uptime = 0;
new pdx2 = 0;
new CarRadio[MAX_VEHICLES][128];
new siren;
new glob_str[2248];
new PlayerText:ptd_skin[8][MAX_PLAYERS];
new bar_obj[10] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
new Text3D:bar_text[10];
//new Snow2[MAX_PLAYERS];
new Text3D:CDOText[MAX_VEHICLES];
new asalon_z;
new const Float:rep_pos[3][3] = 
{
	{361.0456,711.6874,11.9599},
	{0.0,0.0,0.0},
	{0.0,0.0,0.0}
};
#define M_CINFO 20
enum pCheat
{
	c_name[MAX_PLAYER_NAME],
	c_id
};
new PCI[M_CINFO][pCheat];
new PlayerText:ptd_magskin[2][MAX_PLAYERS];
new Text:td_magskin[4];
#define MMSkin 20
static const men_skin[MMSkin][2] =
{
	{19,1500},
	{3,3500},
	{20, 1000},
	{26, 1800},
	{29, 4400},
	{30, 5500},
	{17, 7800},
	{36, 3000},
	{46, 5300},
	{60, 4500},
	{98, 8600},
	{100,6000},
	{102,7700},
	{105,4300},
	{109,5800},
	{110,6100},
	{114,5900},
	{184,2300},
	{187,3400},
	{217,4100}
};
#define MWSkin 15
static const wom_skin[MWSkin][2] =
{
	{193,2000},
	{195,3300},
	{91,3400},
	{13,2800},
	{56,3800},
	{141,5100},
	{150,6300},
	{169,4400},
	{192,1800},
	{211,4100},
	{214,6700},
	{216,6800},
	{233,5700},
	{257,6400},
	{298,3600}
};

/*stock GetShowSnow(playerid,wor_int_id)
{
	if(!wor_int_id)
	{
		if(!gpvi(@p,#P_Snow2) && !gpvi(@p,#P_Snow_Set))
		{
			new Float:pos[3];
			GetPlayerPos(@p,pos[0],pos[1],pos[2]);
			Snow2[@p] = CreatePlayerObject(@p,16014, pos[0],pos[1],pos[2], 0.0, 0.0, 0.0);
			spvi(@p,#P_Snow2,1);
		}
	}
	else
	{
		if(gpvi(@p,#P_Snow2) && !gpvi(@p,#P_Snow_Set))
		{
			DestroyPlayerObject(@p,Snow2[@p]);
			DeletePVar(@p,#P_Snow2);
		}
	}
}*/
enum dcars_i
{
	mod_id,
	mod_name[32],
	mod_price,
	mod_color1,
	mod_color2,
	mod_price1
};
#define M_DCARS 37
new const DCAR_I[M_DCARS][dcars_i] =
{
	{461,"Мотоцикл Jawa",105,1,1,1},
	{404,"ВАЗ 2101",110,0,0,0},
	{546,"ВАЗ 2106",130,1,1,1},
	{419,"ВАЗ 2107",140,0,0,1},
	{492,"ВАЗ 2109",145,1,1,1},
	{596,"ВАЗ 2115",150,1,1,1},
	{547,"ВАЗ 2170",150,1,1,1},
	{445,"ИЖ 'Ода'",150,1,1,1},
	{550,"VAZ 2170",180,1,1,1},
	{500,"UAZ Hunter",180,1,1,1},
	{516,"VAZ 2115",180,1,1,1},
	{467,"Mazda 626",190,1,1,1},
	{527,"Skoda Superb",210,1,1,1},
	{421,"Honda Accord",220,1,1,1},
	{587,"Mercedes-Benz CL65 ///AMG",240,1,1,1},
	{534,"Volkswagen Passat B3",240,1,1,1},
	{589,"Volkswagen Golf 4",250,1,1,1},
	{475,"Mitsubishi Pajero",270,1,1,1},
	{585,"Toyota Camry V40",300,1,1,1},
	{410,"Mercedes-Benz A45 ///AMG",320,1,1,1},
	{602,"Volkswagen Toureg R50",330,1,1,1},
	{579,"Porsche Cayenne",350,1,1,1},
	{604,"BMW 760il",370,1,1,1},
	{505,"BMW E53 X5",400,1,1,1},
	{426,"Mercedes-Benz W140 600SEL",420,1,1,1},
	{415,"BMW E60 M5",450,1,1,1},
	{605,"Lexus LX570",470,1,1,1},
	{466,"Audi S8",500,1,1,1},
	{429,"BMW F10 530xD 2015",550,1,1,1},
	{489,"Toyota Highlander V6",800,1,1,1},
	{405,"Toyota Camry V55",950,1,1,1},
    {603,"Mercedes-Benz W221 S65 ///AMG",1500,1,1,1},
    {490,"Chevrolet Suburban",1900,1,1,1},
	{503,"Mercedes-Benz E500 W212",2100,1,1,1},
	{436,"Mercedes-Benz W222 S63 ///AMG",2300,1,1,1},
	{480,"Porcshe Panamera Turbo",2500,1,1,1},
	{502,"Shelby Mustang Cobra",3000,1,1,1}
};
new Text:td_as[9];
new PlayerText:ptd_as[2][MAX_PLAYERS];
enum acars_i
{
	mod_id,
	mod_name[32],
	mod_price
};
#define M_ACARS 34
new const ACAR_I[M_ACARS][acars_i] =
{
	{415, "BMW E60 M5",2800000},
	{421, "Honda Accord",730000},
	{547, "VAZ 2170",250000},
	{419,"VAZ 2107",70000},
	{466,"Audi S8",690000},
	{605,"Lexus LX570",8999000},
	{467,"Mazda 626",200000},
	{505,"BMW E53 X5",680000},
	{410,"Mercedes-Benz W176 A45 ///AMG",2850000},
	{506,"Audi RS5",3500000},
	{507,"Mercedes-Benz W220 S600", 720000},
	{498,"Mercedes-Benz Sprinter 313 CDI",1200000},
	{426,"Mercedes-Benz W140 S600 SEL",800000},
	{491,"Volkswagen Passat B5",190000},
	{550,"VAZ 2170",330000},
	{445,"IZH 2126",58000},
	{500,"UAZ-31514",160000},
	{474,"GAZ 31029",85000},
	{458,"GAZ 3110",90000},
	{587,"Mercedes-Benz CL65 ///AMG",700000},
	{516,"VAZ 2115",110000},
	{604,"BMW 760il",395000},
	{439,"IZH 412",55000},
	{527,"Skoda Superb",280000},
	{475,"Mitsubishi Pajero",1399000},
	{529,"VAZ 2110",105000},
	{579,"Porsche Cayenne",2999000},
	{536,"Toyota Chaser Tourer V",275000},
	{589,"Volkswagen Golf 4",195000},
	{429,"BMW F10 530xd",1880000},
	{492,"VAZ 2109",95000},
	{534,"Volkswagen Passat B3",130000},
	{585,"Toyota Camry V40",670000},
	{405,"Toyota Camry V55",1890000}
};
enum accInfo
{
	acID,
	acOwned,
	acOwner[MAX_PLAYER_NAME],
Float:acEntX,
Float:acEntY,
Float:acEntZ,
	acLevel,
	acPrice,
	acPriceP[26],
	acTill,
	acTill2,
	acLock,
Text3D:acLab[2],	
	acPick[2],
Float:acBuyX,
Float:acBuyY,
Float:acBuyZ,
	acWorld,
	acInter,
	acMess[64],
	acMapIc
};
new AC[MAX_ACC][accInfo];
#define MAX_RADARS 10
enum rInfo1
{
Float:rPos[3],
	rSpeed,
bool:rActive,
	rObject,
	rZone,
	rMember,
}
new RadarInfo[MAX_RADARS][rInfo1];
new PlayerType[MAX_PLAYERS];
new mus_j;
new const Float:mus_pos[10][3] = {
	{466.3880,746.0582,12.1252},
	{269.4623,604.7769,12.1262},
	{231.1393,694.0386,12.1270},
	{344.1340,1523.6447,12.3499},
	{-2457.5747,2795.6912,37.7602},
	{-2402.1118,2781.8923,39.2531},
	{-2418.8540,2781.2351,37.8467},
	{-2262.7944,169.3217,24.6892},
	{-2089.0557,-5.8630,27.1151},
	{-2232.0332,301.3828,24.6621}
};
#define Mus_Dm 10 //оплата за одну точку мусоровоза
new zone_r[4];
enum skinI
{
	kols_itt,
	name_s[90],
	id0,
	rang
}
#define forPod(%0) 	for(new %0 = 0; %0 < AllPod+1; %0++)
#define POD_X 		1747.9825	//Где появится при входе в подъезд X
#define POD_Y 		-2347.8438	//Где появится при входе в подъезд Y
#define POD_Z 		23.5419	//Где появится при входе в подъезд Z
#define POD_A       	263.2307    //Где появится при входе в подъезд A
#define MAX_POD 		50		//Максимальное кол-во подъездов которое может быть создано на сервере!
#define WHITE 		0xE6E6E6FF
#define GREEN 		0x0BA215FF
#define PRESSED1(%0)	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define KEY_AIM 128
stock AllPod = 0;

enum podInfo
{
	pID,
Float:pPos[6],
	pInt,
	pWorld,
	pPickup[2],
Text3D:p3DText
};
new PodInfo[MAX_POD][podInfo];
new pick_lift;
new Text:td_fon;

#define MAX_ITEMS_S 12 //максимальное кол-во элементов
new const frak_r_info[4][MAX_ITEMS_S][skinI] =
{
	{//0
		//кол-во элементов для итераций цикла указывать только в 1 строке, в остальных можно не указывать.
		//						Имя для диалога									ид скина	ранг доступности
		{8,"Форма рядового-младшего сержанта полиции",							284,			1},
		{0,"Форма сержанта-старшего сержанта полиции",							267,			3},
		{0,"Форма старшины-младшего лейтенанта полиции",						266,			5},
		{0,"Форма лейтенанта-старшего лейтенанта полиции",						265,			7},
		{0,"Форма капитана-майора полиции",										280,			9},
		{0,"Форма подполковника-полковника полиции",							290,			11},
		{0,"Форма подполковника-полковника полиции в кителе",					288,			11},
		{0,"Форма девушки полиции",												263,			1},
		{0,"none____",															0,				0},
		{0,"none____",															0,				0},
		{0,"none____",															0,				0},
		{0,"none____",															0,				0}
	},
	{//1
		{7,"Форма мед.сестры ГКБ",												219,			1},
		{0,"Форма практиканта - водителя",										274,			1},
		{0,"Форма фельдшера",													276,			3},
		{0,"Форма фельдшера (вар.2)",											177,			3},
		{0,"Форма интерна - психиатра",											70,				4},
		{0,"Форма невролога - врача специалиста",								176,			8},
		{0,"Форма заведующего отделением - заведующего больницей",				275,			9},
		{0,"none____",															0,				0},
		{0,"none____",															0,				0},
        {0,"none____",															0,				0},
        {0,"none____",															0,				0},
        {0,"none____",															0,				0}
	},
	{//2
		{12,"Форма девушки полиции (вар.1)",									12,				1},
		{0,"Форма девушки полиции (вар.2)",										264,			1},
		{0,"Форма сотрудника ОМОН",												292,			2},
		{0,"Форма рядового-младшего сержанта полиции",							282,			1},
		{0,"Форма сержанта-старшего сержанта полиции",							281,			3},
		{0,"Форма старшины-младшего лейтенанта полиции",						287,			5},
		{0,"Форма лейтенанта-старшего лейтенанта полиции",						296,			7},
		{0,"Форма капитана-майора полиции",										283,			9},
		{0,"Форма подполковника-полковника полиции",							286,			11},
		{0,"Форма сотрудника СУ в кителе",										272,			6},
		{0,"Форма сотрудника СУ в рубашке",										273,			6},
		{0,"Форма оперативного дежурного полиции",								270,			1}
 	},
	{//3
		{5,"Форма рядового-сержанта",											277,			1},
		{0,"Форма старшего сержанта-старшего прапорщика",						273,			5},
		{0,"Форма младшего лейтенанта-капитана",								279,			9},
		{0,"Форма майора-полковника ",											270,			1},
		{0,"Форма сотрудника МЧС в боевке",										71,				13},
		{0,"none____",															278,			1},
		{0,"none____",															0,				0},
  		{0,"none____",															0,				0},
		{0,"none____",															0,				0},
		{0,"none____",															0,				0},
		{0,"none____",															0,				0},
		{0,"none____",															0,				0}
	}
};
#define MAX_ITEMS_G 6 //максимальное кол-во элементов
new const frak_g_info[4][MAX_ITEMS_G][skinI] =
{
	{//0
		//кол-во элементов для итераций цикла указывать только в 1 строке, в остальных можно не указывать.
		//Имя для диалога						ид оружия	кол-во патронов
		{6,"Пистолет 'Макарова' - 50 патрон.",		24,			50},
		{0,"Автомат 'АКС74-У' - 100 патрон.",		29,			100},
		{0,"Жезл.",									12,			1},
		{0,"Резиновая дубинка.",					3,			1},
		{0,"Фотоаппарат.",							43,			1000},
		{0,"Бронежилет.",							0,			100}

	},
	{//1
		{2,"Медицинский чемоданчик.",				13,			1},
		{0,"Газовый балончик для самообороны.",		41,			50},
		{0,"none____",								0,			0},
		{0,"none____",								0,			0},
		{0,"none____",								0,			0},
		{0,"none____",								0,			0}
	},
	{//2
		{5,"Пистолет 'Макарова' - 50 патрон.",		24,			50},
		{0,"Автомат 'АКС74-У' - 100 патрон.",		29,			100},
		{0,"Резиновая дубинка.",					3,			1},
		{0,"Газовый балончик.",						41,			1000},
		{0,"Бронежилет.",							0,			100},
		{0,"none____",								0,			0}
	},
	{//3
		{3,"Огнетушитель.",							42,			1000},
		{0,"Пила для спасательных работ.",			9,			1},
		{0,"Топор для спасательных работ.",			15,			1},
		{0,"none____",								0,			0},
		{0,"none____",								0,			0},
		{0,"none____",								0,			0}
	}
};
enum VO
{
	strvop[650],
	otv
};
new const AS_Teor[15][VO] =
{
	{"{FFFFFF}(1 вопрос) Какие транспортные средства по Правилам относятся к маршрутным транспортным средствам?\n\n\
		{2E9AFE}1. Все автобусы.\n\
		2. Автобусы, троллейбусы и трамваи, предназначенные для перевозки людей и движущиеся по установленному маршруту с обозначенными местами остановок.\n\
		3. Любые транспортные средства, перевозящие пассажиров.",2},
	{"{FFFFFF}(2 вопрос) Что означает мигание зеленого сигнала светофора?\n\n{2E9AFE}1. Запрещает дальнейшее движение.\n\
		2. Разрешает движение и информирует о том, что вскоре будет включен запрещающий сигнал.\n\
		3. Предупреждает о неисправности светофора.\n",2},
	{"{FFFFFF}(3 вопрос) Какие внешние световые приборы Вы можете использовать при движении в темное время суток на неосвещенных участках дорог?\n\n\
		{2E9AFE}1. Фары ближнего или дальнего света.\n2. Только фары дальнего света.\n3. Только фары ближнего света.",1},
	{"{FFFFFF}(4 вопрос) При какой неисправности Вам разрешается эксплуатация транспортного средства?\n\n{2E9AFE}1. Не работает механизм регулировки сиденья водителя.\n\
		2. Не работает стеклоподъемник.\n3. Не работает устройство обогрева и обдува стекла.\n4. Не работают запоры горловин топливных баков.",2},
	{"{FFFFFF}(5 вопрос) В случае, когда правые колеса автомобиля наезжают на неукрепленную влажную обочину, рекомендуется:\n\n{2E9AFE}1. Затормозить и полностью остановиться.\n\
		2. Не прибегая к торможению, плавно вернуть автомобиль на проезжую часть.\n3. Затормозить и плавно направить автомобиль в левую сторону.",2},
	{"{FFFFFF}(6 вопрос) При движении на легковом автомобиле, оборудованном ремнями безопасности, пристегиваться ремнями должны:\n\n{2E9AFE}1. Все лица, находящиеся в автомобиле.\n\
		2. Только водитель и пассажир на переднем сиденье.\n3. Только водитель.",1},
	{"{FFFFFF}(7 вопрос) В каких случаях Вы можете наезжать на прерывистые линии разметки, разделяющие проезжую часть на полосы движения?\n\n\
		{2E9AFE}1. Только если на дороге нет других транспортных средств.\n2. Только при перестроении.\n3. Во всех перечисленных случаях.\n\
		4. Только при движении в темное время суток.",2},
	{"{FFFFFF}(8 вопрос) В каких из перечисленных случаев запрещена буксировка на гибкой сцепке?\n\n{2E9AFE}1. Только в гололедицу.\n\
		2. Только в темное время суток и в условиях недостаточной видимости.\n3. Во всех перечисленных случаях.\n\
		4. Только на горных дорогах.",1},
	{"{FFFFFF}(9 вопрос) Что подразумевается под остановочным путем?\n\n\
		{2E9AFE}1. Расстояние, пройденное транспортным средством с момента обнаружения водителем опасности до полной остановки.\n\
		2. Расстояние, соответствующее тормозному пути, определенному технической характеристикой данного транспортного средства.\n\
		3. Расстояние, пройденное транспортным средством с момента начала срабатывания тормозного привода до полной остановки.",1},
	{"{FFFFFF}(10 вопрос) Что подразумевается под временем реакции водителя?\n\n\
		{2E9AFE}1. Время с момента обнаружения водителем опасности до начала принятия мер по ее избежанию.\n\
		2. Время, необходимое для переноса ноги с педали подачи топлива на педаль тормоза.\n\
		3. Время с момента обнаружения водителем опасности до полной остановки транспортного средства.",1},
	{"{FFFFFF}(11 вопрос) В каких случаях Вы не должны подавать предупредительный сигнал указателями поворота?\n\n\
		{2E9AFE}1. В обоих перечисленных случаях.\n2. Только при отсутствии на дороге других участников движения.\n\
		3. Только если сигнал может ввести в заблуждение других участников движения.",3},
	{"{FFFFFF}(12 вопрос) В каком случае Вы можете начать обгон, если такой маневр на данном участке дороги не запрещен?\n\n\
		{2E9AFE}1. Только если полоса встречного движения свободна на достаточном для обгона расстоянии.\n\
		2. Только если Вас никто не обгоняет.\n3. В случае, если выполнены оба условия.",3},
	{"{FFFFFF}(13 вопрос) Какие из перечисленных требований предъявляются к обучаемому, допущенному к учебной езде на дорогах?\n\n\
		{2E9AFE}1. Знание Правил дорожного движения.\n2. Возраст не менее 16 лет.\n3. Наличие первоначальных навыков управления.\n\
		4. Все перечисленные требования.",4},
	{"{FFFFFF}(14 вопрос) В каких случаях запрещается эксплуатация мотоцикла?\n\n\
		{2E9AFE}1. При отсутствии предусмотренных конструкцией дуг безопасности, подножек,поперечных рукояток для пассажиров на седле.\n\
		2. Только при отсутствии предусмотренных конструкцией дуг безопасности.\n\
		3. Только при отсутствии предусмотренных конструкцией подножек, поперечных рукояток для пассажиров на седле.",1},
	{"{FFFFFF}(15 вопрос) На повороте возник занос задней оси переднеприводного автомобиля. Ваши действия?\n\n\
		{2E9AFE}1. Притормозите и повернете рулевое колесо в сторону заноса.\n\
		2. Уменьшите подачу топлива, рулевым колесом стабилизируете движение.\n\
		3. Слегка увеличите подачу топлива, корректируя направление движения рулевым колесом.\n\
		4. Значительно увеличите подачу топлива, не меняя положения рулевого колеса. ",3}
	/*{"{FFFFFF}(16 вопрос) Какие сведения необходимо сообщить диспетчеру для вызова «Скорой помощи» при ДТП?\n\n\
		{2E9AFE}1. Указать улицу и номер дома, ближайшего к месту ДТП. Сообщить, кто пострадал в ДТП (пешеход, водитель автомобиля или пассажиры),\n\
		и описать травмы, которые они получили.\n\
		2. Указать общеизвестные ориентиры, ближайшие к месту ДТП. Сообщить о количестве пострадавших, указать их пол и возраст.\n\
		3. Указать точное место совершенного ДТП (назвать улицу, номер дома и общеизвестные ориентиры, ближайшие к месту ДТП).\n\
		Сообщить о количестве пострадавших, их пол, примерный возраст и о наличии у них признаков жизни, а также сильного кровотечения.",3},
	{"{FFFFFF}(17 вопрос) Что означает разметка в виде надписи «СТОП» на проезжей части?\n\n\
		{2E9AFE}1. Предупреждает о приближении к знаку 'Уступите дорогу'.\n\
		2. Предупреждает о приближении к стоп-линии перед регулируемым перекрестком.\n\
		3. Предупреждает о приближении к стоп-линии и знаку 'Движение без остановки запрещено'.",3},
	{"{FFFFFF}(18 вопрос) По какой полосе проезжей части Вам разрешено движение в населенном пункте, если по техническим причинам\n\
		Ваше транспортное средство не может развивать скорость более 40 км/ч?\n\n\
		{2E9AFE}1. Только по крайней правой.\n2. Не далее второй полосы.\n3. По любой, кроме крайней левой.",1},
	{"{FFFFFF}(19 вопрос) Какие действия запрещены в жилой зоне?\n\n{2E9AFE}1. Все перечисленные действия.\n\
		2. Только сквозное движение.\n3. Только стоянка с работающим двигателем.\n4. Только учебная езда.",1},
	{"{FFFFFF}(20 вопрос) В каком случае Вам разрешается эксплуатация транспортного средства?\n\n\
		{2E9AFE}1. На световых приборах используются рассеиватели, не соответствующие типу данного светового прибора.\n\
		2. Нарушена регулировка фар.\n3. Загрязнены внешние световые приборы.\n4. Отсутствуют противотуманные фары.",4}*/
};
enum fInf
{
	rang[64],
	Rcolor,
};
new FrakInfo[20][17][fInf] =
{
	{//1
		{"ОГИБДД",0x8D8DFF00},
		{"Рядовой полиции (ОГИБДД)",0x8D8DFF00},
		{"Мл. сержант полиции (ОГИБДД)",0x8D8DFF00},
		{"Сержант полиции (ОГИБДД)",0x8D8DFF00},
		{"Ст. сержант полиции (ОГИБДД)",0x8D8DFF00},
		{"Старшина полиции (ОГИБДД)",0x8D8DFF00},
		{"Мл. лейтенант полиции (ОГИБДД)",0x8D8DFF00},
		{"Лейтенант полиции (ОГИБДД)",0x8D8DFF00},
		{"Ст. лейтенант полиции (ОГИБДД)",0x8D8DFF00},
		{"Капитан полиции (ОГИБДД)",0x8D8DFF00},
		{"Майор полиции (ОГИБДД)",0x8D8DFF00},
		{"Подполковник полиции (ОГИБДД)",0x8D8DFF00},
		{"Полковник полиции (ОГИБДД)",0x8D8DFF00},		
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//2
		{"ФСБ",0x10F441AA},
		{"Прапорщик ФСБ",0x10F441AA},
		{"Ст. прапорщик ФСБ",0},
		{"Мл. лейтенант ФСБ",0},
		{"Лейтенант ФСБ",0},
		{"Ст. лейтенант ФСБ",0},
		{"Капитан ФСБ",0},
		{"Майор ФСБ",0},
		{"Подполковник ФСБ",0},
		{"Полковник ФСБ",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//3
		{"Армия",0x33AA33AA},
		{"Рядовой",0x33AA33AA},
		{"Ефрейтор",0},
		{"Мл. сержант",0},
		{"Сержант",0},
		{"Ст. сержант",0},
		{"Старшина",0},
		{"Прапорщик",0},
		{"Ст.Прапорщик",0},
		{"Мл. лейтенант",0},
		{"Лейтенант",0},
		{"Ст. лейтенант",0},
		{"Капитан",0},
		{"Майор",0},
		{"Подполковник",0},
		{"Полковник",0},
		{"Генерал Армии",0}
	},
	{//4
		{"ГКБ №3",0x8D8DFF00},
		{"Практикант",0x8D8DFF00},
		{"Водитель",0},
		{"Фельдшер",0},
		{"Интерн",0},
		{"Терапевт",0},
		{"Окулист",0},
		{"Психиатр",0},
		{"Невролог ",0},
		{"Эндокирнолог",0},
		{"Хирург",0},
		{"Врач-специалист",0},
		{"Зав. Отделением",0},
		{"Главный врач",0},
		{"Помощник заведующего",0},
		{"Заведующий больницей",0},
		{"Заведующий больницей",0}
	},
	{//5
		{"АТП",0x33CCFFAA},
		{"Ученик Водителя",0x33CCFFAA},
		{"Кондуктор",0},
		{"Водитель",0},
		{"Диспетчер",0},
		{"Ревизор по БДД",0},
		{"Начальник Калонны",0},
		{"Помошник Механика",0},
		{"Механик",0},
		{"Сотрудник ТО",0},
		{"Начальник ТО",0},
		{"Инструктор",0},
		{"Заместитель директора",0},
		{"Генеральный Директор",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//6
		{"УМВД г. Арзамас",0x8D8DFF00},
		{"Рядовой полиции",0x8D8DFF00},
		{"Мл. сержант полиции",0},
		{"Сержант полиции",0},
		{"Ст. сержант полиции",0},
		{"Старшина полиции",0},
		{"Мл. лейтенант полиции",0},
		{"Лейтенант полиции",0},
		{"Ст. лейтенант полиции",0},
		{"Капитан полиции",0},
		{"Майор полиции",0},
		{"Подполковник полиции",0},
		{"Полковник полиции",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//7
		{"Нотарильная контора",0x2E9AFEAA},
		{"Охранник",0},
		{"Секретарь",0},
		{"Юрист-Консультант",0},
		{"Нотариус",0},
		{"Бухгалтер",0},
		{"Зам. директора конторы",0},
		{"Директор конторы",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//8
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//9
		{"Репортеры",0xFFC0CBAA},
		{"Практикант",0xFFC0CBAA},
		{"Звукооператор",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//10
		{"Такси",0x33CCFFAA},
		{"Практикант",0x33CCFFAA},
		{"Таксист третьего класса",0},
		{"Таксист второго класса",0},
		{"Таксист первого класса",0},
		{"Диспетчер",0},
		{"Руководитель Автопарка",0},
		{"Зам.Директора",0},
		{"Директор",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//11
		{"Автошкола",0x007fffaa},
		{"Практикант",0x007fffaa},
		{"Охранник",0},
		{"Инструктор 3 класса",0},
		{"Инструктор 2 класса",0},
		{"Инструктор 1 класса",0},
		{"Начальник охраны",0},
		{"Менеджер",0},
		{"Старший менеджер",0},
		{"Бухгалтер",0},
		{"Заместитель директора",0},
		{"Директор",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"Практикант",0}
	},
	{//12
		{"АТУ",0x01FCFFC8},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//13
		{"ООО 'Нижстрой'",0x01FCFFC8},
		{"Гопник",0x01FCFFC8},
		{"Хулиган",0},
		{"Рецидивист",0},
		{"Блатной",0},
		{"Рэкетир",0},
		{"Вор",0},
		{"Смотрящий за районом",0},
		{"Авторитет",0},
		{"Пахан",0},		
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//14
		{"Picciotto",0x33CCFFAA},
		{"Assosiato",0},
		{"Combattente",0},
		{"Soldato",0},
		{"Gangster",0},
		{"Sotto Capo",0},
		{"Capo",0},
		{"Aiutantc",0},
		{"Padrino",0},
		{"Don",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//15
		{"Арзамасовская братва",0xFF0000FF},
		{"Молодой",0xFF0000FF},
		{"Боец",0},
		{"Барыга",0},
		{"Браток",0},
		{"Блатной",0},
		{"Арестант",0},
		{"Зам. бригадира",0},
		{"Бригадир",0},
		{"Исполнитель",0},
		{"Смотрящий",0},
		{"Авторитет",0},
		{"Правая рука вора",0},
		{"Вор в законе",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//16
		{"Горковская ОПГ",0x01FCFFC8},
		{"Барыга",0x01FCFFC8},
		{"Фраер",0},
		{"Вышибала",0},
		{"Боец",0},
		{"Блатной",0},
		{"Жиган",0},
		{"Смотрящий",0},
		{"Менеджер",0},
		{"Авторитет",0},
		{"Вор В Законе",0},
		{"Отец Мафии",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//17
		{"СТО №23",0x01FCFFC8},
		{"Водитель",0x01FCFFC8},
		{"Младший Охранник",0},
		{"Охранник",0},
		{"Старший Охранник",0},
		{"Менеджер",0},
		{"Маркетолог",0},
		{"Начальник Охраны",0},
		{"Заместитель директора ЧОП",0},
		{"Директор ЧОП",0},
		{"Генеральный директор",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//18
		{"Металла-База",0x10F441AA},
		{"Сторож",0x10F441AA},
		{"Приемщик",0},
		{"Оценщик",0},
		{"Кассир",0},
		{"Бухгалтер",0},
		{"Начальник Отдела Кадров",0},
		{"Замиститель Директора",0},
		{"Генеральный Директор",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0},
		{"",0}
	},
	{//19
		{"СВПЧ №31",0xB3040FAA},
		{"Рядовой МЧС",0xB3040FAA},
		{"Ефрейтор МЧС",0},
		{"Мл. сержант МЧС",0},
		{"Сержант МЧС",0},
		{"Ст. сержант МЧС",0},
		{"Старшина МЧС",0},
		{"Прапорщик МЧС",0},
		{"Ст. прапорщик МЧС",0},
		{"Мл. лейтенант",0},
		{"Лейтенант МЧС",0},
		{"Ст. лейтенант МЧС",0},
		{"Капитан МЧС",0},
		{"Майор МЧС",0},
		{"Подполковник МЧС",0},
		{"Полковник МЧС",0},
		{"Генерал МЧС",0}
	},
	{//20
		{"СОБР",0x10F441AA},
		{"Рядовой СОБР",0x10F441AA},
		{"Ефрейтор СОБР",0},
		{"Мл. сержант СОБР",0},
		{"Сержант СОБР",0},
		{"Ст. сержант СОБР",0},
		{"Старшина СОБР",0},
		{"Ст. прапорщик СОБР",0},
		{"Мл. лейтенант СОБР",0},
		{"Лейтенант СОБР",0},
		{"Ст. лейтенант СОБР",0},
		{"Капитан СОБР",0},
		{"Майор СОБР",0},
		{"Подполковник СОБР",0},
		{"Полковник СОБР",0},
		{"Генерал-Майор СОБР",0},
		{"Генерал-Майор СОБР",0}
	}
};
new AMusic_Zone = -1;
enum pObject
{
	is_used[24],
	modelid0[24],
	boneid0[24],
Float:fOffsetX0[24],
Float:fOffsetY0[24],
Float:fOffsetZ0[24],
Float:fRotX0[24],
Float:fRotY0[24],
Float:fRotZ0[24],
Float:fScaleX0[24],
Float:fScaleY0[24],
Float:fScaleZ0[24]
}
new test2[MAX_PLAYERS][pObject];
enum inv_i
{
	mod_id,
	i_name[64],
	i_price,
	i_type,
	i_bone,
	i_slot
}
new const Inv_Info[26][inv_i] = 
{
	{19069,"Чёрная шапка.",230,0,2,5}, 
	{19067,"Красная шапка.",220,0,2,5}, 
	{18947,"Чёрная шляпа.",350,0,2,5}, 
	{18946,"Серая шляпа.",325,0,2,5}, 
	{19095,"Коричневая шляпа.",370,0,2,5},
	{18978,"Шлем модуляр LAZER PANAME InSV Z-Line.",4900,1,2,5},
	{18977,"Шлем интеграл Vega ALTURA Solid.",3900,1,2,5},
	{18979,"Шлем трансформер Vega HD190 Solid.",4000,1,2,5},
	{18953,"Чёрная шапка Moronero.",499,2,2,5},
	{18941,"Бейсболка чёрная ASOS.",550,2,2,5},
	{18942,"Бейсболка серая TrueSpin Basic Baseball.",580,2,2,5},
	{19033,"Солнцезащитные чёрные очки RayBan.",457,3,2,6},
	{19029,"Солнцезащитные хамелеон очки Kawaii Factory.",535,3,2,6},
	{19025,"Солнцезащитные розовые очки Visionmania.",450,3,2,6},
	{19025,"Солнцезащитные голубые очки Vitacci.",760,3,2,6},
	{18898,"Бандана зелёная Buff Chasmere Black.",430,4,18,7},
	{18897,"Бандана голубая Buff Original Buff R-speed.",470,4,18,7},
	{18896,"Бандана чёрная Buff High Uv Protection Buff Xovui.",505,4,18,7},
	{19043,"Серебряные часы ASOS.",2330,5,5,8},
	{19042,"Золотые часы Casio MTP1170N-9A.",2564,5,5,8},
	{19041,"Шоколадные часы Reclaimed Vintage.",2755,5,5,8},
	{19039,"Золотые часы Accurist.",6859,5,5,8},
	{19317,"Красная бас-гитара Swing SB-4-ACTIVE-WS.",4965,6,1,9},
	{19318,"Белая бас-гитара Clevan CB-40-WH.",5435,6,1,9},
	{19421,"Беспроводные белые наушники Partner Soul White.",2312,7,2,10},
	{19422,"Беспроводные чёрные наушники Parhter Soul Black.",2435,7,2,10}
};
enum t_n
{
	eng_n[24],
	ru_n[24],
	type_id
}
new const type_name[8][t_n] =
{
	{"hat","Шляпы",0},		
	{"helmet","Шлема",1},
	{"cap","Кепки",2},
	{"glasses","Очки",3},
	{"bandana","Банданы",4},
	{"watch","Часы",5},
	{"guitar","Гитары",6},
	{"handphone","Наушники",7}
};
enum gInfo { gID,gOwner[24],gPrice,gInter,gVirtual,Float:gX1,Float:gY1,Float:gZ1,Float:gX2,Float:gY2,Float:gZ2,Float:gR2,Float:gX3,Float:gY3,Float:gZ3,Float:gR3,Float:gX4,Float:gY4,Float:gZ4,gLock,gUL,Text3D:gText,gPickup,gLevel };
enum Dom {
	houseidd,owner[MAX_PLAYER_NAME],
	int,stoim,lvl,
	prodaja,sale,
Float:HOx,Float:HOy,Float:HOz,
	hMIcon1,rentable,rentsumma,
Float:SPx,Float:SPy,Float:SPz,Float:SPr,
	HBank,
	lock,
Float:Ex,Float:Ey,Float:Ez,Float:Ea,
	hZone,hPick,hType,
};
enum Biz { owner[MAX_PLAYER_NAME],stoim,sale,lvl,prodaja,Float:HOx,Float:HOy,Float:HOz,messageb[128] };



enum VehControl
{
	vLeftBlink,
	vRightBlink,
	vAvaBlink,
	vStopBlink
};
new VehInfo[MAX_VEHICLES][VehControl];

enum tTrunkInfo
{
	tMoney,
	tDrugs,
	tGun1,
	tGun2,
	tGun3,
	tGun4,
	tGun5,
	tAmmo1,
	tAmmo2,
	tAmmo3,
	tAmmo4,
	tAmmo5,
	tOpened
};
new TrunkInfo[MAX_VEHICLES][tTrunkInfo];

enum aInfo
{
	aKey,
	aModel,
Float:aPos[4],
	aColor1,
	aColor2,
	aOwned,
	aOwner[24],
	aPrice,
	aLock,
Float:aMilleage,
	aFuel,
	aMiglo,
Float:aMigPos[6],
	aNumber[8],
	aArrest,
	aPArrest[128],
	aPArrestName[24],
	aNitro,
	aWheels,
	aGydra,
	aInt,
	aWorld,
	//
Text3D:aNumPlate,
	aMigObj,
	aFrak,
	aJobs,
	aCarid,
	aPj
}
new aData[MAX_VEHICLES][aInfo];
new Fuel[MAX_VEHICLES];
new dpsbaum1;
new ppsbaum1;
new avtbaum1;
new shbaum1;
new baum1;
//#define Fuel[%0] CarFuel[%0-1001]
new CreatedCars[300];

enum oInfo { oID, };
enum BanInfo { bBan_name[MAX_PLAYER_NAME],bAdmin_Name[MAX_PLAYER_NAME],bBan_Reason[30],bUnban_Date,bBan_Date };
enum cCKInfo { cSendername[20],cGiveplayer[20],cUsed, };
enum zInfo { zOwner[64],zColor[20],Float:zMinX,Float:zMinY,Float:zMaxX,Float:zMaxY, };
enum rInfo { sCreated,Float:sX,Float:sY,Float:sZ,sObject, };
enum hNews { hTaken1,hTaken2,hTaken3,hTaken4,hTaken5,hAdd1[128],hAdd2[128],hAdd3[128],hAdd4[128],hAdd5[128],hContact1[128],hContact2[128],hContact3[128],hContact4[128],hContact5[128], };
enum pSpec { Float:Coords[3],Float:sPx,Float:sPy,Float:sPz,sPint,sLocal,sCam, };
enum pHaul { pCapasity,pLoad, }
enum pCrime { pBplayer[32],pAccusing[32],pAccusedof[32],pVictim[32], };
enum AntChtInf { Float:atcX,Float:atcY,Float:atcZ,atcint,Float:atcarmor,tspawnfix };
enum FInfoKvart { kid, Float:pXpic, Float:pYpic, Float:pZpic, vladelec[MAX_PLAYER_NAME], Text3D:dtextss, lock, kworld, plata, virtmir, lvl, cena };
enum LarInfo { larID,larOwner[32],larMapIc,larOwned,larCena,larLevel,larProds,larMoney,larLock,Float:larX,Float:larY,Float:larZ,Text3D:larText,larPickup };
enum atmInfo { atmID,atmOwner[32],atmMapIc,atmOwned,atmCena,atmLevel,atmMoney,atmLock,Float:atmX,Float:atmY,Float:atmZ,Text3D:atmText };
enum sbInfo { sbID,sbOwned,sbOwner[64],sbMessage[128],Float:sbEntranceX,Float:sbEntranceY,Float:sbEntranceZ,sbLevelNeeded,sbBuyPrice,sbEntranceCost,sbCena,sbTill,s2bTill,sbLocked,sbInterior,sbProducts,sbMafia,sbPriceProd,Text3D:sbLabel,sbPickup };
enum pInfo
{
	pID,pCKey,pNickname[128],pRef[MAX_PLAYER_NAME],pKey[128],pRent[2],pStatus,pRegData[64],pLevel,pBiz,pBizAcc,pRadio1[2],pAptechka,pFill[2],pMFon,pRabotalLopatoy,pRPD,pLangEng,pRequestingBackup,pLangJap,pLangIta,pLangRus,pLangFra,pNarcoZavisimost,pAlcoZavisimost,pNarcoLomka,pAlcoLomka,pForce,pAdmin,pLarek,pCasino,pAtm,pWantedPoints,
	pWantedReason1,pWantedReason2,pWantedReason3,pWantedReason4,pWantedReason5,pWantedReason6,pVoennik,pDm,pData,pMK,pHelper,pUvp,pDonateRank,gPupgrade,pConnectTime,pReg,pSex,pOrigin,pNotLic,pMuted,pExp,pCash,pAccount,pCrimes,
	pBanTime,pBanData,pKills,pDeaths,pArrested,pWantedDeaths,pPhoneBook,pLottoNr,pJob,pPayCheck,pHeadValue,pJailed,pJailTime,pMats,pDrugs,pLeader,pMember,pRank,pDolj,pAdminname,pCanal,pMobDengi,
	pChar,pContractTime,pDetSkill,pNewsSkill,pDrugsSkill,Float:pHealth,Float:pSHealth,pInt,pLocal,pModel,pPnumber,Float:pPos_x,Float:pPos_y,Float:pPos_z,
	pVirWorld,pKatA,pKatB,pKatC,pKatD,pKategA,pKategB,pKategC,pKategD,pCarLic1,pCarLic2[256],pCarLic21[256],pCarLic3[256],pUdost1[256],pUdost2[256],pUdost,pMK2[256],pMK3[256],pMK4[500],pCarLic4[256],pCarLic5,pCarLic,pFlyLic,
	pGunLic,pOtkRabota1,pOtkRabota2,pOtkRabota3,pOtkRabota7,pOtkRabota8,pOtkRabota12,pOtkRabota14,pOtkRabota15,pOtkRabota16,pOtkRabota22,pOtkRabota24,pCarTime,pPayDay,pPayDayHad,pCDPlayer,pWins,pLoses,pAlcoholPerk,pDrugPerk,
	pMiserPerk,pPainPerk,pTraderPerk,pTut,pMissionNr,pWarns,pAdjustable,pFuel,pWeapons[256],pAmmos[256],pWeapon[13],pAmmo[13],pMarried,pMarriedTo[128],pTA,pVirtualWorld,pPivo,pSigs,pRoliki,pMask,pClock,pRope,pGunSkill,pCard,
	pMutedTime,pZoloto,pRadio,pPasport,pNeSdal,pFWarns,pLivingAt[128],pFirstName[128],pLastName[128],pBornAt[128],Text3D:pAdmText,pRobTime,pDuty,pWatch,pSpawnP,pNewHouse,pRentHouse,pFlatKey,pPbiskey,peee,pRoadblock,pEmail[128],pRegIp[16],pNowIp[16],pSatiety,pAvtoP[4]
};

new
Atm[MAX_ATM][atmInfo],LarekInfo[MAX_LAREK][LarInfo], FuelsInfo[MAX_FUELS][sbInfo];
new Garage[MAX_GARAGE][gInfo];
new House[MAX_HOUSE][Dom],BizInfo[MAX_BIZ][Biz];
new object[OBJECTS][oInfo];
new ban_variable[MAX_PLAYERS][BanInfo];
new CKInfo[10][cCKInfo],TurfInfo[6][zInfo];
new	Roadblocks[MAX_ROADBLOCKS][rInfo],Unspec[MAX_PLAYERS][pSpec];
new News[hNews],PlayerCrime[MAX_PLAYERS][pCrime],AnticheatCinfo[MAX_PLAYERS][AntChtInf];
new PlayerInfo[MAX_PLAYERS][pInfo],FlatInfo[MAX_KVART][FInfoKvart];

new
HospitalTime[MAX_PLAYERS],pAvtomat[MAX_PLAYERS],pizzadone[MAX_PLAYERS],
PlayerTextFormat[MAX_PLAYERS][2],verent[MAX_PLAYERS],radart[MAX_PLAYERS],FindCar[MAX_PLAYERS],pInvite[MAX_PLAYERS],
PolisMoney[MAX_PLAYERS],bezopas[MAX_PLAYERS],nowbiz[MAX_PLAYERS],eee[MAX_PLAYERS],DalOnReis[MAX_PLAYERS],
gpspoint[MAX_PLAYERS],onbusreis[MAX_PLAYERS],nowpoint[MAX_PLAYERS],nomerpop[MAX_PLAYERS],nomerpopsumma[MAX_PLAYERS],summaperevod[MAX_PLAYERS],idperevod[MAX_PLAYERS],playername[MAX_PLAYERS],
postradal[MAX_PLAYERS],ArmourTime[MAX_PLAYERS],engine_start[MAX_PLAYERS],BrowsingCar[MAX_PLAYERS],
HealthTime[MAX_PLAYERS],BlindFold[MAX_PLAYERS],gSpectateID[MAX_PLAYERS],PyxiTime[MAX_PLAYERS],
PlayerAFKtime[MAX_PLAYERS],OnWeapon[MAX_PLAYERS],PlayerLomkaTime[MAX_PLAYERS],PlayerMayNarco[MAX_PLAYERS],PlayerMayAlco[MAX_PLAYERS],uTarget[MAX_PLAYERS],tietime[MAX_PLAYERS],ChangeCost[MAX_PLAYERS],ChangeNumber[MAX_PLAYERS],
ChangeOffer[MAX_PLAYERS],FarmerVar[MAX_PLAYERS],FarmerPickup[MAX_PLAYERS][2],JustStarted[MAX_PLAYERS],PlayerIsSweeping[MAX_PLAYERS],Gotos[MAX_PLAYERS],firstname[MAX_PLAYERS],secondname[MAX_PLAYERS],PlayerDobuvaet[MAX_PLAYERS],
PlayerVRolikax[MAX_PLAYERS],
TransportValue[MAX_PLAYERS],TransportMoney[MAX_PLAYERS],TransportTime[MAX_PLAYERS],TransportCost[MAX_PLAYERS],
TransportDriver[MAX_PLAYERS],PlayerPaintballing[MAX_PLAYERS],PlayerPaintballKills[MAX_PLAYERS],
TakingLesson[MAX_PLAYERS],UsedFind[MAX_PLAYERS],PlayersChannel[MAX_PLAYERS],PlayerOnMission[MAX_PLAYERS],MissionCheckpoint[MAX_PLAYERS],
WatchingTV[MAX_PLAYERS],NoFuel[MAX_PLAYERS],MatsHolding[MAX_PLAYERS],DivorceOffer[MAX_PLAYERS],MarriageCeremoney[MAX_PLAYERS],ProposeOffer[MAX_PLAYERS],ProposedTo[MAX_PLAYERS],GotProposedBy[MAX_PLAYERS],MarryWitness[MAX_PLAYERS],
MarryWitnessOffer[MAX_PLAYERS],TicketOffer[MAX_PLAYERS],TicketMoney[MAX_PLAYERS],TicketOffer1[MAX_PLAYERS],TicketMoney1[MAX_PLAYERS],TicketOffer2[MAX_PLAYERS],TicketMoney2[MAX_PLAYERS],PlayerStoned[MAX_PLAYERS],
ConsumingMoney[MAX_PLAYERS],TutTime[MAX_PLAYERS],
PlayerDrunk[MAX_PLAYERS],PlayerDrunkTime[MAX_PLAYERS],PlayerTazeTime[MAX_PLAYERS],FindTimePoints[MAX_PLAYERS],FindTime[MAX_PLAYERS],
MedicBill[MAX_PLAYERS],PlayerTied[MAX_PLAYERS],PlayerCuffed[MAX_PLAYERS],PlayerCuffedTime[MAX_PLAYERS],LiveOffer[MAX_PLAYERS],TalkingLive[MAX_PLAYERS],
SelectChar[MAX_PLAYERS],SelectCharID[MAX_PLAYERS],SelectCharPlace[MAX_PLAYERS],ChosenSkin[MAX_PLAYERS],GettingJob[MAX_PLAYERS],CallLawyer[MAX_PLAYERS],
WantLawyer[MAX_PLAYERS],CP[MAX_PLAYERS],MoneyMessage[MAX_PLAYERS],
RepairOffer[MAX_PLAYERS],RepairPrice[MAX_PLAYERS],RefillOffer[MAX_PLAYERS],RefillPrice[MAX_PLAYERS],RepairCar[MAX_PLAYERS],UsingDrugs[MAX_PLAYERS],
DrugOffer[MAX_PLAYERS],DrugPrice[MAX_PLAYERS],DrugGram[MAX_PLAYERS],WantedPoints[MAX_PLAYERS],WantedLevel[MAX_PLAYERS],gPlayerCheckpointStatus[MAX_PLAYERS],gPlayerLogged[MAX_PLAYERS],
gLastCar[301],gOoc[MAX_PLAYERS],gNews[MAX_PLAYERS],gFam[MAX_PLAYERS],BigEar[MAX_PLAYERS],Spectate[MAX_PLAYERS],CellTime[MAX_PLAYERS],AfterTutorial[MAX_PLAYERS],StartTime[MAX_PLAYERS],
SafeTime[MAX_PLAYERS],HidePM[MAX_PLAYERS],HideTP[MAX_PLAYERS],PhoneOnline[MAX_PLAYERS],gDice[MAX_PLAYERS],gGas[MAX_PLAYERS],gSpeedo[MAX_PLAYERS],
Fixr[MAX_PLAYERS],PlayerFoodSlot[MAX_PLAYERS],Locator[MAX_PLAYERS],Mobile[MAX_PLAYERS],RingTone[MAX_PLAYERS],CallCost[MAX_PLAYERS],gPlayerMission[MAX_PLAYERS],GunOffer[MAX_PLAYERS],GunDPrice[MAX_PLAYERS],
GunType[MAX_PLAYERS],GunAmmo[MAX_PLAYERS],JustReported[MAX_PLAYERS],JustShout[MAX_PLAYERS],JustAdm[MAX_PLAYERS],GopUSE[MAX_PLAYERS],KnockedDown[MAX_PLAYERS],TryChat[MAX_PLAYERS],Masked[MAX_PLAYERS],BeretPassport[MAX_PLAYERS],DrivingTest[MAX_PLAYERS],OtherLang[MAX_PLAYERS],MnePizda[MAX_PLAYERS],IsMessageSent[MAX_PLAYERS],
HouseEntered[MAX_PLAYERS],cuffss[MAX_PLAYERS],MinetOffer[MAX_PLAYERS],MinetPrice[MAX_PLAYERS];

new Float: MGM[5] = 100.0,Float:PlayerArmour[MAX_PLAYERS],Float:PlayerHealth[MAX_PLAYERS],Float:TeleportDest[MAX_PLAYERS][3],Float:TelePos[MAX_PLAYERS][6],Float:rx, Float:ry, Float:rz,Float:AntiAFK[MAX_PLAYERS][6];
new Float:PaintballSpawns[7][3] = { {-394.8027,2232.2317,42.4297},{-430.8412,2240.5371,42.9834},{-369.2361,2248.3127,42.4844},{-350.8910,2218.0215,42.4912},{-384.0544,2206.2908,42.4235},{-395.7100,2214.9480,42.4297},{-445.3718,2222.5481,42.4297} };
new Float:gSweeperPoints[16][3] =
{
	{2003.3517,-1730.5336,13.1080},{2243.8682,-1895.1603,13.1057},{2872.5264,-1507.8936,10.5887},{2733.4851,-1079.1128,69.0215},{2491.6882,-1096.9484,48.1798},{1973.2815,-1173.0474,25.6866},{1441.3285,-1038.8422,23.4461},{1041.5815,-776.1030,104.3925},{958.6799,-1034.2134,29.8119},{995.9623,-1351.8215,13.0737},{793.3896,-1583.4993,13.1155},
	{368.1902,-1977.2362,7.3970},{834.1572,-1794.8837,13.5680},{1243.4885,-1853.9174,13.1080},{1527.9438,-1663.3240,13.1080},{2083.6062,-1843.3563,13.1080}
};

new Blink[MAX_VEHICLES][4],LightPwr[MAX_VEHICLES],CarEngine[MAX_VEHICLES],IsLocked[MAX_VEHICLES],orugie[13][MAX_VEHICLES],patrons[13][MAX_VEHICLES],dru[MAX_VEHICLES],mater[MAX_VEHICLES],lockedcar[MAX_VEHICLES];
new bool:MusicON,bool:pizzapoint[MAX_PLAYERS] = false,bool:acceptedpizza[MAX_PLAYERS] = false;

new PlayerText:BolTime1[MAX_PLAYERS],PlayerText:BolTime2[MAX_PLAYERS],PlayerText:speedometer[4][MAX_PLAYERS];
new stinger[MAX_STINGERS],conus[MAX_CONUS],Engine[CAR_AMOUNT],Gas[MAX_VEHICLES],ALLKVARTIRI, ALLFUELS,LAREKCOUNT, ALLATM,ALLACC,ALLGARAGE = 0;
new Menu:sushimenu,Menu:otherlang,Menu:BuyProdMenu[2],Menu:regskinselects;

new	Text:txtTimeDisp,Text:Polosa[2],Text:Eternity[2],Text:ratext;

static Text3D:Player3DText[MAX_PLAYERS];
static Text3D:Player3DTextDo[MAX_PLAYERS];
static stock NamePlayer[MAX_PLAYERS][24];
static stock UserKey[MAX_PLAYERS][64];
static stock UserMail[MAX_PLAYERS][64];
new CIV[] = {7,19,20,23,14,101,122};
new mname[][] = {"Января", "Февраля", "Марта", "Апреля", "Мая", "Июня", "Июля", "Августа", "Сентября", "Отктября", "Ноября", "Декабря"};
new Peds[172][1] = 
{
	{170},{256},{263},{262},{261},{260},{259},{258},{257},{256},{255},{253},{252},{251},{249},{245},{244},{243},{242},{241},{239},{238},{237},{236},{235},{234},{233},{232},{231},{230},{229},{226},{225},{224},{222},{221},{219},{218},
	{217},{215},{214},{213},{212},{211},{210},{209},{207},{206},{205},{204},{203},{202},{201},{200},{199},{198},{197},{196},{194},{184},{183},{182},{179},{178},{176},{172},{170},{168},{167},{162},{161},{160},{159},{158},{157},{155},{154},{153},{152},{151},
	{146},{145},{144},{143},{141},{140},{139},{138},{137},{136},{135},{134},{133},{132},{131},{130},{129},{99},{97},{96},{95},{94},{92},{90},{89},{88},{87},{85},{84},{83},{82},{81},{80},{79},{78},{77},{75},{72},{68},{67},{66},{64},{63},{62},{58},{55},
	{54},{53},{52},{51},{49},{45},{44},{43},{39},{38},{37},{36},{35},{34},{33},{32},{31},{30},{29},{28},{27},{26},{25},{24},{23},{22},{21},{20},{19},{18},{17},{16},{15},{14},{11},{10},{1},{2},{290},{291},{292},{293},{187},{297},{298},{299}
};

new VehiclesName[][] =
{
	"Mercedes-Benz GLE63 ///AMG","IZH 2715","Toyota Camry V55","Iveco Hi-Way","VAZ 2101","Toyota Camry V55","ZIL 130","KAMAZ 4526","Garbage","GAZ 14","Mercedes-Benz A45 ///AMG","BMW E63 M6","IZH Kombi","ISUZU A09216",
	"MAZ-105","BMW E60 M5","Ford Tranzit","FIAT","FIAT","VAZ 2107","Mercedes-Benz S600 W140","Honda Accord","UAZ 2206","Ford Tranzit","СМЗ С3А","Hunter","Mercedes-Benz W140 600SEL","GAZ 3221",
	"Инкасатор","BMW F10 530xd","Predator","Автобус ЛАЗ А141","Танк","ЗИЛ 131","Hotknife","Trailer","Mercedes-Benz W222 S63 ///AMG","Икарус 260","Chevrolet Lanos","IZH 412","GAZ 33023","RC Bandit",
	"ГАЗ М1","KAMAZ 54115","Monster Truck","IZH Oda","Squalo","Seasparrow","Honda","Tram","Trailer","Lamborghini Huracan","Speeder","Reefer","Tropic","Бульдозер","GAZ 3901",
	"Caddy","GAZ 3110","Berkley's RC Van","Skimmer","Mercedes-Benz Sprinter 211 CDI","Scooter","JAVA","RC Baron","RC Raider","Audi S8","Mazda 626","Sanchez","Sparrow","GAZ OMON",
	"Quad","Coastguard","Dinghy","GAZ 31029","Mitsubishi Pajero","Rustler","Mazda RX-7","ИЖ 27151","VAZ 2114","Porsche Panamera","Bike AIST", "GAZ 3221","PAZ 3205","Marquis","GAZ 2402","Dozer",
	"Maverick","News Chopper","Toyota Highlander V6","Chevrolet Suburban","Volkswagen Passat B5","VAZ 2109","Jetmax","Lada Vesta","Mercedes Benz G63 AMG 6x6","Chevrolet Lanos","Police Maverick","Mercedes-Benz Sprinter 313CDI",
	"Benson","UAZ-315195","RC Goblin","Shelby","Mercedes-Benz E500 W212","Bloodring Banger",   "BMW E53 X5",   "Audi RS5",   "Mercedes-Benz W220 S600",   "GAZ 32213",   "Bike",   "Mountain Bike",   "Beagle",
	"Cropdust",   "Stunt",   "Mercedes-Benz Actros",   "Volvo FH16",   "VAZ 2115",   "Mercedes-Benz Sprinter",   "PAZ 3205",   "Shamal",   "Hydra",   "Bike BMW",   "NRG-500",   "Bike BMW",   "Цементовоз",   "Mercedes-Benz Sprinter",
	"Fortune",   "Skoda Superb",   "UAZ 2206",   "VAZ 2110",   "Forklift",   "Трактор",   "Combine",   "Feltzer",   "Volkswagen Passat B3",   "Mercedes-Benz S600 W140",   "Toyota Chaser Tourer V",   "Поезд",   "Поезд",   "Vortex",
	"Mercedes Benz CLS63 AMG",   "Subaru Impreza WRX STI",   "VAZ 2121",   "Mercedes Benz S63 W222 AMG",   "KAMAZ AL 50",   "IZH 400",   "VAZ 2106",   "VAZ 2170",   "Cargobob",   "ZAZ 968A",   "VAZ 2170",   "Mercedes-Benz S600 W140",   "Utility",   "Nevada",
	"UAZ-31514",   "Windsor",   "Monster Truck",   "Monster Truck",   "VAZ 1111",   "Toyota Celica",   "Audi RS7",   "VAZ 2171",   "Mazda RX-8",   "Raindance",   "RC Tiger",   "Nissan Qashqai",   "VAZ 2104",
	"Mercedes-Benz W124 E320",   "ГАЗ Победа",   "Freight",   "Trailer",   "Kart",   "Mower",   "Duneride",   "Sweeper",   "Broadway",   "IZH 408",   "AT-400",   "ZIL 157",   "Porsche Cayenne",   "Rolls-Royce Phantom",   "Мотоцикл BMW ДПС ГИБДД",
	"Newsvan",   "Tug",   "Trailer",   "Toyota Camry V40",   "Bike Voshod",   "Mercedes-Benz CL65 ///AMG",   "LIAZ 677",   "Volkswagen Golf 4",   "Trailer",   "Trailer",   "Andromada",   "Dodo",   "RC Cam",   "Launch",   "VAZ 2115",
	"Renault Logan",   "VAZ 2170",   "UAZ Hunter",   "Москвич 2335",   "БТР",   "Volkswagen Toureg R50",   "Mercedes-Benz W221 S65 ///AMG",   "BMW 760il",   "Lexus LX570",   "Luggage Trailer",   "Luggage Trailer",
	"Stair Trailer",   "Ford 530104",   "Farm Plow",   "ZIL 5301"
};

new
engine,lights,alarm,doors,bonnet,boot,objective,entermer = 0,enterlicen = 0,SlotObject[200],vrent[2],vaz1,yaz,enteranashan,exitanashan,enterkino,exitkino,enterpch,exitpch,enteropg,exitopg,enteromon,exitomon,enterban,exitban,
MySQLGo,URLW[300],kazino1,kazino2,TimerBol, TimeSS,evrik,evrik1,gazel,GuvdGate,GuvdGateTimer,gatevorota,gatevorota1,gazel1,francjobodej,vaz,
ld1,ld2,ld3,ld4,ld5,ld6,lc,lcstatus,lczanyat,dtimer1,ltimer1,ltimer2,dtimer3,ltimer3,gatefsb,gateopg,Bizpic,enter1, exit1,chatoff = 1,
enter2,exit2,enterbomj,exitbomj,enterchop,exitchop,enterrzd,exitrzd,enterbol,exitbol,enterdps,exitdps,entergyvd,exitgyvd,enterlic,exitlic,entermag,ServerRoadClosed,ServerRoadClosed1,
exitmag,enters, exits,enterritm,exitritm,shlak1,shlak2,shlak3,shlak4,shlak5,timershlak1,timershlak2,timershlak3,timershlak4,timershlak5,ServerRoadClosedHw,bulka,pizzawork,
chekpointm4c,housepick[2],createdb,createdh,totalstinger,totalconus,FireTimer, FireObject[2],totalo,buyclother1,
DefaultWeather = 20,Security = 0,
Tax = 0,TaxValue = 0,Jackpot = 0,StartingPaintballRound = 0,AnnouncedPaintballRound = 0,PaintballPlayers = 0,PaintballRound = 0,PaintballWinnerKills = 0,
Medics = 0,Mechanics = 0,
giveplayerid,meria,meria2,lice,lice2,pojarobj,gLastDriver[302],noooc = 1,adds = 1,addtimer = 30000,
adds1 = 1,addtimer1 = 400000,objstore[128],cbjstore[128],ghour = 0,gminute = 0,gsecond = 0,numplayers = 0,realtime = 1,wtime = 15,callcost = 20,realchat = 1,timeshift = -1,shifthour,othtimer,
synctimer,newmistimer,unjailtimer,turftimer,pickuptimer,spectatetimer,productiontimer,accountstimer,checkgastimer,stoppedvehtimer,cartimer,levelexp = 2,cchargetime = 60,txtcost = 25,
pickups,LSPDGate,LSPD1Gate,TaxiGate,M4CGate,LSPDGateTimer,LSPD1GateTimer,TaxiGateTimer,M4CGateTimer,matbi = 30000,Treasury,CopSal = 0,FbiSal = 0,NGSal = 0,MedSal = 0,SwatSal = 0,
ReportSal = 0,PolSal = 0,LicSal = 0,NonJobSal = 0,biztax = 0,Biz1 = 0,Biz2 = 0,Biz3 = 0,Biz4 = 0,Biz5 = 0,Biz6 = 0,Biz7 = 0,Biz8 = 0,Biz9 = 0,Biz10 = 0,Biz11 = 0,gunhit,gungang[6],mentweapon1,dpsweapon,m4sweapon,
chopweapon,fsbweapon1,armweapon1,gorweapon,recordweapon,gunmenu[2],sexmenu[2],textlic[4],gop111,Skor111,numpickup,dropmats[105][2],
Turfs[6],flathouse1[2],flathouse2[2],flathouse3[2],interval = 2,timestr[32],oplayers, Precord, Drecord, Mrecord, Yrecord, THrecord, TMrecord,gyvd5,gyvd6,dps,dps1,
Rent[2],RentSF[2],dalnobt[6],	
Harvest[2],Sweeper[2],FBIGate,DPSGate,FBIGateTimer,dpsGateTimer,gbddGate,gbddGateTimer,Most1, gruzpick, guvdslak, lspdslak1;
//
// Other
new RegMaleSkins[] = {2,3,20,21,46,72};
new RegFemaleSkins[] = {12,13,40,91,93,257};
new ReasonShtraf[MAX_PLAYERS][128];
new FracBank[23], autoshkolapick;
new prava[MAX_PLAYERS];

// Система сдачи теста
#define AUTO_CP_COUNT       15
new Float:AutoCP[AUTO_CP_COUNT][3] =
{
	{-381.1519,625.7814,11.7409},{-118.3118,573.8519,11.7429},{140.0685,589.0955,11.7430},{194.5088,615.7228,11.7236},{269.9870,599.1595,11.7729},{240.5433,503.8822,11.7441},{306.6187,539.3524,11.7429},{347.4314,754.8749,11.7425},
	{162.2140,822.5208,11.7428},{65.7082,899.1367,11.7419},{109.5725,1031.1239,11.7419},{92.7943,1095.9619,11.7416},{118.2611,1270.0460,11.7418},{315.6196,1679.0458,11.7398},{15.3299,893.4032,11.7450}
};

// Работа шахтера
new SahtaJob, shaxta[2];


// Начало основной части мода
main() {
	new a[][] = {"Unarmed (Fist)","Brass K"};
	#pragma unused a
}
publics: ServerGivePlayerArmour(playerid,Float:armour)
{
	ArmourTime[playerid] = 10; PlayerArmour[playerid] = armour;
	return SetPlayerArmour(playerid,armour);
}
publics: ServerGivePlayerHealth(playerid,Float:health)
{
	HealthTime[playerid] = 1; PlayerHealth[playerid] = health;
	return SetPlayerHealth(playerid,health);
}
publics: Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2; GetPlayerPos(p1,x1,y1,z1); GetPlayerPos(p2,x2,y2,z2);
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) return -1.00;
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
PizdaAnimation(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
	MnePizda[playerid] = 1;
	return ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}
OnePlayAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp) return ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);

publics: UpdateTime()
{
	new hour, minute; gettime(hour, minute);
	format(timestr,32,"%02d:%02d",hour,minute), TextDrawSetString(txtTimeDisp,timestr);
	if(!uptime) SetWorldTime(hour);

	//
	new xx = 0;
	while(xx!=MAX_PLAYERS)
	{
		if(IsPlayerConnected(xx) && GetPlayerState(xx) != PLAYER_STATE_NONE) 
		if(!uptime) SetPlayerTime(xx,hour,minute);
		xx++;
	}
}

publics: MK1(playerid)
{
	new string[64];
	format(string, sizeof(string), "%s достал пустую карту.", NamePlayer[playerid]);
	ProxDetector(30.0, playerid, string, COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
}
publics: MK2(playerid)
{
	new string[64];
	format(string, sizeof(string), "%s выписывает данные с паспорта.", NamePlayer[playerid]);
	ProxDetector(30.0, playerid, string, COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
}
publics: MK3(playerid)
{
	new string[64];
	format(string, sizeof(string), "%s передал карту пациенту.", NamePlayer[playerid]);
	ProxDetector(30.0, playerid, string, COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
}
publics: LoadTrunk()
{
	new arrCoords[13][64];
	new strFromFile2[256];
	new File: file = fopen("trunk.cfg", io_read);
	if(file)
	{
		new idx = 1;
		while(idx < CAR_AMOUNT)
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			TrunkInfo[idx][tMoney] = strval(arrCoords[0]);
			TrunkInfo[idx][tDrugs] = strval(arrCoords[1]);
			TrunkInfo[idx][tGun1] = strval(arrCoords[2]);
			TrunkInfo[idx][tGun2] = strval(arrCoords[3]);
			TrunkInfo[idx][tGun3] = strval(arrCoords[4]);
			TrunkInfo[idx][tGun4] = strval(arrCoords[5]);
			TrunkInfo[idx][tGun5] = strval(arrCoords[6]);
			TrunkInfo[idx][tAmmo1] = strval(arrCoords[7]);
			TrunkInfo[idx][tAmmo2] = strval(arrCoords[8]);
			TrunkInfo[idx][tAmmo3] = strval(arrCoords[9]);
			TrunkInfo[idx][tAmmo4] = strval(arrCoords[10]);
			TrunkInfo[idx][tAmmo5] = strval(arrCoords[11]);
			TrunkInfo[idx][tOpened] = strval(arrCoords[12]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

publics: SaveTrunk()
{
	new idx = 1;
	new File: file2;
	while(idx < CAR_AMOUNT)
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		TrunkInfo[idx][tMoney],
		TrunkInfo[idx][tDrugs],
		TrunkInfo[idx][tGun1],
		TrunkInfo[idx][tGun2],
		TrunkInfo[idx][tGun3],
		TrunkInfo[idx][tGun4],
		TrunkInfo[idx][tGun5],
		TrunkInfo[idx][tAmmo1],
		TrunkInfo[idx][tAmmo2],
		TrunkInfo[idx][tAmmo3],
		TrunkInfo[idx][tAmmo4],
		TrunkInfo[idx][tAmmo5],
		TrunkInfo[idx][tOpened]);

		//
		if(idx == 1) file2 = fopen("trunk.cfg", io_write);
		else file2 = fopen("trunk.cfg", io_append);

		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

publics: LoadBizZap()
{
	new arrCoords[15][64];
	new strFromFile2[256];
	new File: file = fopen("logs/bizzap.ini", io_read);
	if(file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Biz1 = strval(arrCoords[0]);
		Biz2 = strval(arrCoords[1]);
		Biz3 = strval(arrCoords[2]);
		Biz4 = strval(arrCoords[3]);
		Biz5 = strval(arrCoords[4]);
		Biz6 = strval(arrCoords[5]);
		Biz7 = strval(arrCoords[6]);
		Biz8 = strval(arrCoords[7]);
		Biz9 = strval(arrCoords[8]);
		Biz10 = strval(arrCoords[9]);
		Biz11 = strval(arrCoords[10]);
		fclose(file);
	}
	return 1;
}
publics: SaveBizZap()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d", Biz1,Biz2, Biz3,Biz4,Biz5,Biz6,Biz7,Biz8,Biz9,Biz10,Biz11);
	new File: file2 = fopen("logs/bizzap.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

publics: HABroadCast(playerid,color,const string[],level)
{
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i)) continue;
		if(PlayerInfo[i][pAdmin] >= level) SendClientMessage(i, color, string);
	}
	return 1;
}
publics: DollahScoreUpdate()
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i)) continue;
		SetPlayerScore(i, PlayerInfo[i][pLevel]);
	}
	return 1;
}
stock ArestCar(playerid, carid, reason[])
{
	new id_car = GetVehicleIdxByID(carid);
	if(id_car == -1) return SCM(@p,-1,"Эту машину нельзя отправить на штраф стоянку!");
	aData[id_car][aArrest] = 1;
	format(aData[id_car][aPArrestName], 32, NamePlayer[playerid]);
	format(aData[id_car][aPArrest], 32, reason);
	GetVehiclePos(carid, aData[id_car][aPos][0], aData[id_car][aPos][1], aData[id_car][aPos][2]);
	GetVehicleZAngle(carid, aData[id_car][aPos][3]);
	return SaveVehicle(id_car);
}
stock UnArestCar(carid)
{
	new id_car = GetVehicleIdxByID(carid);
	aData[id_car][aArrest] = 0;
	format(aData[id_car][aPArrest], 32, "Nones");
	format(aData[id_car][aPArrestName], 32, "No");
	return SaveVehicle(id_car);
}
stock PreloadAnimLib(playerid, animlib[]) return ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
stock IsValidWeapon(weaponid)
{
	if(weaponid > 0 && weaponid < 19 || weaponid > 21 && weaponid < 47) return 1;
	return 0;
}
stock GetCop(playerid)
{
	if(PlayerInfo[playerid][pLeader] == 1) { if(PlayerInfo[playerid][pDolj] > 3) return 1; }
	if(PlayerInfo[playerid][pMember] == 1) { if(PlayerInfo[playerid][pDolj] > 3) return 1; }
	return 0;
}
stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,PX,PY,PZ);
		GetVehiclePos(vehicleid, X,Y,Z);
		new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
		if(Distance <= radi*radi) return 1;
	}
	return 0;
}
stock GetSpeedKMH(playerid)
{
	new Float:ST[4];
	if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 253.3;
	return floatround(ST[3]);
}
stock randomchar()
{
	new rand = random(12), chr[128];
	switch(rand)
	{
	case 0: format(chr,200,"%s","A");
	case 1: format(chr,200,"%s","B");
	case 2: format(chr,200,"%s","C");
	case 3: format(chr,200,"%s","E");
	case 4: format(chr,200,"%s","P");
	case 5: format(chr,200,"%s","K");
	case 6: format(chr,200,"%s","M");
	case 7: format(chr,200,"%s","O");
	case 8: format(chr,200,"%s","P");
	case 9: format(chr,200,"%s","T");
	case 10: format(chr,200,"%s","X");
	case 11: format(chr,200,"%s","C");
	}
	return chr;
}
stock right(source[], len)
{
	new retval[MAX_STRING], srclen;
	srclen = strlen(source);
	strmid(retval, source, srclen - len, srclen, MAX_STRING);
	return retval;
}
publics: Spectator()
{
	new string[256];
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i)) continue;
		if(Spectate[i] < 253 && Spectate[i] != 255)
		{
			SetPlayerColor(i,COLOR_SPEC);
			TogglePlayerControllable(i, 0);
			new targetid = Spectate[i];
			if(IsPlayerConnected(targetid))
			{
				TogglePlayerSpectating(i, 1);
				if(PlayerInfo[i][pAdmin] >= 1)
				{
					new Float:health; GetPlayerHealth(targetid, health);
					format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~y~%s(ID:%d)~n~~y~„…€м…:%.1f", NamePlayer[targetid],targetid,health), GameTextForPlayer(i, string, 2500, 3);
				}
				if(IsPlayerInAnyVehicle(targetid)) PlayerSpectateVehicle(i, GetPlayerVehicleID(targetid));
				else PlayerSpectatePlayer(i, targetid);

				//
				if(GetPlayerInterior(targetid) == 0) SetPlayerInterior(i,0);
				else if(GetPlayerInterior(targetid) > 0) SetPlayerInterior(i,GetPlayerInterior(targetid));
			}
		}
		if(Spectate[i] == 253)
		{
			TogglePlayerControllable(i, 1); TogglePlayerSpectating(i, 0); SetPlayerInterior(i,Unspec[i][sPint]);
			PlayerInfo[i][pInt] = Unspec[i][sPint]; PlayerInfo[i][pLocal] = Unspec[i][sLocal]; Unspec[i][sLocal] = 255;
			//SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pModel], Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]-1.0, 1.0, -1, -1, -1, -1, -1, -1);
			//SetPlayerToTeamColor(i);
			MedicBill[i] = 0;
			if(PlayerInfo[i][pDonateRank] > 0)
			{
				//SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pModel], Unspec[i][Coords][0], Unspec[i][Coords][1], Unspec[i][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
				SpawnPlayer(i); SetCameraBehindPlayer(i);
			}
			else SpawnPlayer(i);
			Spectate[i] = 255;
		}
		if(Spectate[i] == 254)
		{
			TogglePlayerControllable(i, 1); SetPlayerInterior(i,Unspec[i][sPint]);
			PlayerInfo[i][pInt] = Unspec[i][sPint]; PlayerInfo[i][pLocal] = Unspec[i][sLocal];
			SetPPos(i, Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]);
			Spectate[i] = 255;
		}
		if(Spectate[i] == 256) /*SetPlayerToTeamColor(i),*/ Spectate[i] = 255;
		if(Spectate[i] == 257) Spectate[i] = 254;
	}
}
stock GetBan1(playerid)
{
	new string[128];
	format(string, 64, "banlist1/%s.ini", NamePlayer[playerid]);
	if(fexist(string))
	{
		new OpenBan = ini_openFile(string), unbantime;
		ini_getInteger(OpenBan, "UnBanTime", unbantime);
		ini_closeFile(OpenBan);

		//
		if(gettime() >= unbantime -1) return UnBan1(NamePlayer[playerid]);
		else return SendClientMessage(playerid, COLOR_RED, "Вы забанены на сервере. Для разбана пишите на форум в тему заявкок на разбан аккаунта: er-project.ru"), KickEx(playerid);
	}
	else return true;
}
stock UnBan1(playerid[])
{
	new string[64];
	format(string, 64, "banlist1/%s.ini", playerid);
	return fremove(string);
}
stock AddBan1(player, playerid[], giveid[], chislo, reason[])
{
	new totalban = 86400*chislo;
	new string[64];
	format(string, sizeof(string), "banlist1/%s.ini", playerid);
	new OpenBan = ini_createFile(string);
	if(OpenBan < 0) ini_openFile(string);
	ini_setInteger(OpenBan, "BanTime", gettime()-86400);
	ini_setInteger(OpenBan, "UnBanTime", gettime()-86400+totalban);
	ini_setString(OpenBan, "PlayerBan", giveid);
	ini_setString(OpenBan, "Reason", reason);
	ini_closeFile(OpenBan);
	return Ban(player);
}

public OnRconLoginAttempt(ip[], password[], success)
{
	if(!success)
	{
		new pip[16];
		for(new i=0; i<MAX_PLAYERS; i++)
		{
			GetPlayerIp(i, pip, sizeof(pip));
			if(!strcmp(ip, pip, true))
			{
				Ban(i);
				printf("Brute Rcon Password IP %s vvel pass %s",ip, password);
			}
		}
	}
	return 1;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(IsPlayerNPC(playerid)) return 1;
	if(vehicleid >= vrent[0] && vehicleid <= vrent[1])
	{
		new Float:slx, Float:sly, Float:slz;
		GetPlayerPos(playerid, slx, sly, slz);
		if(verent[playerid] != 1) SendClientMessage(playerid,COLOR_RED,"Этот велосипед нужно арендовать."), SetPPos(playerid, slx, sly, slz);
	}
	new id_car = GetVehicleIdxByID(vehicleid);
	if(id_car != -1 && aData[id_car][aJobs] == 3)
	{
		if(!ispassenger)
		{
			foreach(new i:Player)
			{
				if(GetPVarInt(i,#P_Taxi_CarID) == vehicleid)
				{
					SCM(@p,COLOR_LIGHTBLUE,#Это такси занято!);
					break;
				}
			}
		}
	}
	if(MnePizda[playerid] == 1)
	{
		new Float:cx, Float:cy, Float:cz; GetPlayerPos(playerid, cx, cy, cz);
		SetPPos(playerid, cx, cy, cz);
		PizdaAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	}
	return 1;
}

stock SetWeaponNew(p)
{
	for(new i; i < 13; i++)
	{
		if(PlayerInfo[p][pWeapon][i] != 0 && PlayerInfo[p][pAmmo][i] != 0) GivePlayerWeapon(p, PlayerInfo[p][pWeapon][i], PlayerInfo[p][pAmmo][i]);
	}
	return 1;
}
stock ResetWeapons(p)
{
	for(new i = 0; i < 13; i++) PlayerInfo[p][pWeapon][i] = 0, PlayerInfo[p][pAmmo][i] = 0;
	ResetPlayerWeapons(p);
}
stock GiveWeapon(p, weaponid, ammo)
{
	switch(weaponid)
	{
	case 1: PlayerInfo[p][pAmmo][0] += ammo, PlayerInfo[p][pWeapon][0] = weaponid;
	case 2..9: PlayerInfo[p][pAmmo][1] += ammo, PlayerInfo[p][pWeapon][1] = weaponid;
	case 22..24: PlayerInfo[p][pAmmo][2] += ammo, PlayerInfo[p][pWeapon][2] = weaponid;
	case 25..27: PlayerInfo[p][pAmmo][3] += ammo, PlayerInfo[p][pWeapon][3] = weaponid;
	case 28,29,32: PlayerInfo[p][pAmmo][4] += ammo, PlayerInfo[p][pWeapon][4] = weaponid;
	case 30,31: PlayerInfo[p][pAmmo][5] += ammo, PlayerInfo[p][pWeapon][5] = weaponid;
	case 33,34: PlayerInfo[p][pAmmo][6] += ammo, PlayerInfo[p][pWeapon][6] = weaponid;
	case 35..38: PlayerInfo[p][pAmmo][7] += ammo, PlayerInfo[p][pWeapon][7] = weaponid;
	case 16..18,39: PlayerInfo[p][pAmmo][8] += ammo, PlayerInfo[p][pWeapon][8] = weaponid;
	case 41..43: PlayerInfo[p][pAmmo][9] += ammo, PlayerInfo[p][pWeapon][9] = weaponid;
	case 10..15: PlayerInfo[p][pAmmo][10] += ammo, PlayerInfo[p][pWeapon][10] = weaponid;
	case 44,45,46: PlayerInfo[p][pAmmo][11] += ammo, PlayerInfo[p][pWeapon][11] = weaponid;
	case 40: PlayerInfo[p][pAmmo][12] += ammo, PlayerInfo[p][pWeapon][12] = weaponid;
	}
	return GivePlayerWeapon(p, weaponid, ammo);
}
publics: IsAnInstructor(playerid)
{
	if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) return 1;
	return 0;
}
publics: IsAMember(playerid)
{
	new leader = PlayerInfo[playerid][pLeader], member = PlayerInfo[playerid][pMember];
	if(member == 5 || member == 6 || member == 8 || member == 13 || member == 14 || member == 15 || member == 16 || member == 18 || member == 20 || leader == 5 || leader == 6 || leader == 8 || leader == 13 || leader == 14 || leader == 15 || leader == 16 || leader == 18 || leader == 20) return 1;
	return 0;
}
/*publics: IsAMexi(carid)
{
	if(carid >= mexi[0] && carid <= mexi[4]) return 1;
	return 0;
}*/
publics: IsASkin(playerid)
{
	new leader = PlayerInfo[playerid][pLeader], member = PlayerInfo[playerid][pMember];
	if(member == 1 || member == 2 || member == 3 || member == 6 || member == 7 || member == 8 || member == 9 || member == 11 || member == 12 || member == 13 || member == 14 || member == 15 || member == 16 || member == 17
			|| member == 18 || member == 19 || member == 20 || leader == 1 || leader == 2 || leader == 3 || leader == 6 || leader == 7 || leader == 8 || leader == 9 || leader == 11 || leader == 12 || leader == 13 || leader == 14
			|| leader == 15 || leader == 16 || leader == 17 || leader == 18 || leader == 19 || leader == 20) return 1;
	return 0;
}
publics: IsACop(playerid)
{
	new leader = PlayerInfo[playerid][pLeader], member = PlayerInfo[playerid][pMember];
	if(member == 1 || member == 2 || member == 3 || member == 6 || leader == 1 || leader == 2 || leader == 3 || leader == 6) return 1;
	return 0;
}
publics: SendTeamPoliceMessage(color, string[])
{
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i)) continue;
		if(IsACop(i)) SendClientMessage(i, color, string);
	}
}
publics:IsAtClothShop(playerid)
{
	if(PlayerToPoint(25.0,playerid,207.5627,-103.7291,1005.2578) || PlayerToPoint(25.0,playerid,203.9068,-41.0728,1001.8047)) return 1;
	else if(PlayerToPoint(30.0,playerid,214.4470,-7.6471,1001.2109) || PlayerToPoint(50.0,playerid,161.3765,-83.8416,1001.8047)) return 1;
	return 0;
}
publics: IsAtGasStation(playerid)
{
	if(PlayerToPoint(6.0,playerid,2246.2651,-1788.0293,22.0589) || PlayerToPoint(6.0,playerid,-433.1538,939.5297,12.0740) || PlayerToPoint(6.0,playerid,-836.5684,1923.1292,45.4531) || PlayerToPoint(6.0,playerid,-2548.8594,2407.2881,53.1227) || PlayerToPoint(6.0,playerid,1741.8716,2259.8213,15.7948) || PlayerToPoint(8.0,playerid,2371.7876,1942.7997,15.4191) || PlayerToPoint(8.0,playerid,2884.3511,298.8292,14.1553)) return 1;
	else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484)) return 1;
	else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968)) return 1;
	else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165)) return 1;
	else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625)) return 1;
	else if(PlayerToPoint(9.0,playerid,2146.7600,2747.9089,10.8203) || PlayerToPoint(9.0,playerid,1595.7739,2199.8542,10.8203)) return 1;
	else if(PlayerToPoint(9.0,playerid,-2048.940,-114.570,35.704)) return 1;
	return 0;
}
publics: IsAtDealership(playerid)
{
	if(PlayerToPoint(40,playerid,549.206115,-1276.320312,16.874300)||PlayerToPoint(40,playerid,2526.225585,-1526.953613,23.623899)||PlayerToPoint(40,playerid,599.643371,-1507.325073,14.866394)) return 1;
	else if(PlayerToPoint(40,playerid,2126.457519,-1152.129272,23.869300)||PlayerToPoint(40,playerid,1054.454345,-909.379272,42.562801)||PlayerToPoint(40,playerid,1623.161132,-1896.359497,13.122594)) return 1;
	return 0;
}
publics: IsAtFishPlace(playerid)
{
	if(PlayerToPoint(1.0,playerid,403.8266,-2088.7598,7.8359) || PlayerToPoint(1.0,playerid,398.7553,-2088.7490,7.8359)) return 1;
	else if(PlayerToPoint(1.0,playerid,396.2197,-2088.6692,7.8359) || PlayerToPoint(1.0,playerid,391.1094,-2088.7976,7.8359)) return 1;
	else if(PlayerToPoint(1.0,playerid,383.4157,-2088.7849,7.8359) || PlayerToPoint(1.0,playerid,374.9598,-2088.7979,7.8359)) return 1;
	else if(PlayerToPoint(1.0,playerid,369.8107,-2088.7927,7.8359) || PlayerToPoint(1.0,playerid,367.3637,-2088.7925,7.8359)) return 1;
	else if(PlayerToPoint(1.0,playerid,362.2244,-2088.7981,7.8359) || PlayerToPoint(1.0,playerid,354.5382,-2088.7979,7.8359)) return 1;
	return 0;
}
publics: IsNearBankomat(playerid)
{
	if(PlayerToPoint(2.0,playerid,2235.553,-1150.351,25.510) || PlayerToPoint(2.0,playerid,1551.295,-1669.336,13.204)) return 1;
	else if(PlayerToPoint(2.0,playerid,590.312,-1248.474,17.740) || PlayerToPoint(2.0,playerid,-2033.099,-54.313,34.997)) return 1;
	return 0;
}
publics: IsAtCookPlace(playerid)
{
	if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589)) return 1;
	else if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078)) return 1;
	else if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922)) return 1;
	return 0;
}
publics: IsAtBar(playerid)
{
	if(PlayerToPoint(4.0,playerid,2129.7322,-1794.2936,19.9222) || PlayerToPoint(4.0,playerid,499.9654,-20.2515,1000.6797) || PlayerToPoint(4.0,playerid,212.1390,1198.5426,13.3094)) return 1;
	else if(PlayerToPoint(4.0,playerid,1215.9480,-13.3519,1000.9219) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734)) return 1;
	else if(PlayerToPoint(4.0,playerid,970.8369,-47.3932,1001.1172) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734)) return 1;
	else if(PlayerToPoint(4.0,playerid,-224.7980,1405.0027,27.7734) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734)) return 1;
	else if(PlayerToPoint(4.0,playerid,1257.3406,-791.0210,1084.0078) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734)) return 1;
	else if(PlayerToPoint(4.0,playerid,941.9321,6.0474,1000.9297) || PlayerToPoint(4.0,playerid,-74.9143,-1180.2904,-4.2702)) return 1;
	else if(PlayerToPoint(6.0,playerid, 1950.6121,1017.9167,992.5890)) return 1;
	else if(PlayerToPoint(4.0,playerid, 2319.1677,-1640.4757,-3.3814)) return 1;
	else if(PlayerToPoint(3.0,playerid, 1832.5436,748.8612,-13.0000)) return 1;
	else if(PlayerToPoint(3.0,playerid, 1830.1538,722.4489,-29.9720)) return 1;
	else if(PlayerToPoint(3.0,playerid, 1829.4430,695.0259,-35.3850)) return 1;
	else if(PlayerToPoint(3.0,playerid, 1830.7551,669.7284,-50.8020)) return 1;
	else if(PlayerToPoint(3.0,playerid, 2099.1377,2484.3823,-1.9728)) return 1;
	else if(PlayerToPoint(4.0,playerid, 1207.2330,-29.4961,1000.9531)) return 1;
	return 0;
}
publics: DrinkWater(playerid)
{
	if(PlayerToPoint(1.0,playerid,-2028.0981,-118.8332,1035.1719) || PlayerToPoint(1.0,playerid,369.7458,178.0733,1019.9844)) return 1;
	else if(PlayerToPoint(1.0,playerid,349.4134,167.5184,1019.9844) || PlayerToPoint(1.0,playerid,373.5237,188.5966,1008.3893)) return 1;
	else if(PlayerToPoint(1.0,playerid,354.3719,187.4313,1008.3809) || PlayerToPoint(1.0,playerid,351.2860,204.0628,1008.3828)) return 1;
	else if(PlayerToPoint(1.0,playerid,1496.2834,1304.3014,1093.2891)) return 1;
	return 0;
}
publics: IsAtKFC(playerid)
{
	if(PlayerToPoint(3.0,playerid, 2267.1768,-1739.1151,21.9619) || PlayerToPoint(3.0,playerid, 2517.3420,-2169.1660,21.9766) || PlayerToPoint(3.0,playerid, 666.5582,989.5479,12.2000) || PlayerToPoint(3.0,playerid, -213.0339,945.2304,12.0889) || PlayerToPoint(3.0,playerid, 366.6329,933.3463,12.1417) || PlayerToPoint(3.0,playerid, 134.0443,642.3143,11.8643)) return 1;
	else if(PlayerToPoint(3.0,playerid, 800.4971,-1616.4236,3.2461) || PlayerToPoint(3.0,playerid, 1376.0552,241.6627,9.1341)) return 1;
	else if(PlayerToPoint(3.0,playerid, 2092.7537,2231.5042,2.5441)) return 1;
	else if(PlayerToPoint(3.0,playerid, 2388.8455,-1908.3680,7.7947)) return 1;
	else if(PlayerToPoint(3.0,playerid, -1821.0597,962.6539,20.4564)) return 1;
	else if(PlayerToPoint(3.0,playerid, -1930.9778,816.7506,29.8972)) return 1;
	return 0;
}
publics: IsAtBLIN(playerid)
{
	if(PlayerToPoint(3.0,playerid, 184.4868,798.7873,12.1494) || PlayerToPoint(3.0,playerid, 6.3214,905.4076,12.0000) || PlayerToPoint(3.0,playerid, -327.5139,727.8653,12.0010) || PlayerToPoint(3.0,playerid, -223.3686,615.3171,12.0010) || PlayerToPoint(3.0,playerid, -90.4967,552.6256,12.0010) || PlayerToPoint(3.0,playerid, 167.9001,616.1498,12.0000)
			|| PlayerToPoint(3.0,playerid, 2527.3657,-2321.8689,21.9660) || PlayerToPoint(3.0,playerid, 1956.1135,-2598.6370,11.0281) || PlayerToPoint(3.0,playerid, -367.7760,933.2001,12.1417) || PlayerToPoint(3.0,playerid, -179.6967,600.7740,12.0913) || PlayerToPoint(3.0,playerid, -898.8466,1198.9580,10.5319)  || PlayerToPoint(3.0,playerid, 2294.0962,-1007.5493,2.1100)
			|| PlayerToPoint(3.0,playerid, 668.3066,995.5753,12.2000)|| PlayerToPoint(3.0,playerid, 668.3066,995.5753,12.2000)) return 1;
	else if(PlayerToPoint(3.0,playerid, 800.4971,-1616.4236,3.2461) || PlayerToPoint(3.0,playerid, 1376.0552,241.6627,9.1341)) return 1;
	else if(PlayerToPoint(3.0,playerid, 2092.7537,2231.5042,2.5441)) return 1;
	else if(PlayerToPoint(3.0,playerid, 2388.8455,-1908.3680,7.7947)) return 1;
	else if(PlayerToPoint(3.0,playerid, -1821.0597,962.6539,20.4564)) return 1;
	else if(PlayerToPoint(3.0,playerid, -1930.9778,816.7506,29.8972)) return 1;
	return 0;
}
publics: IsAtSexShop(playerid)
{
	if(PlayerToPoint(3.0,playerid, -105.7932,-10.6171,1000.7188)) return 1;
	return 0;
}
publics: IsAtGUN(playerid)
{
	if(PlayerToPoint(15.0,playerid,311.2905,1069.8027,12.7063) || PlayerToPoint(15.0,playerid,2206.2598,-1777.8463,22.7362) || PlayerToPoint(15.0,playerid,2758.1326,-2572.7629,22.9063) || PlayerToPoint(15.0,playerid,2522.3652,-757.1533,13.0063)
			|| PlayerToPoint(5.0,playerid,-1719.1241,1352.8751,7.1787) || PlayerToPoint(5.0,playerid,247.5677,113.8852,1003.2188) || PlayerToPoint(5.0,playerid,2171.5544,945.5235,5.6469) || PlayerToPoint(5.0,playerid,313.6466,-167.7686,999.5938)
			|| PlayerToPoint(5.0,playerid,167.5257,1450.6711,13.2668)) return 1;
	return 0;
}
publics: IsAtBankomat(playerid)
{
	if(PlayerToPoint(1.0,playerid,228.228,228.228,228.228)||PlayerToPoint(1.0,playerid,228.228,228.228,228.228)||PlayerToPoint(1.0,playerid,228.228,228.228,228.228)) return 1;
	return 0;
}
publics: IsAtBank(playerid)
{
	if(PlayerToPoint(1.0,playerid,318.622406,502.496673,12.875165) || PlayerToPoint(1.0,playerid,2382.170898,-1914.038940,22.675144)) return 1;
	return 0;
}
publics: IsAtATM(playerid)
{
	if(PlayerToPoint(1.0,playerid,2502.9878,-2128.9326,23.4458) || PlayerToPoint(1.0,playerid,150.2318,785.2685,12.1560)||PlayerToPoint(1.0,playerid,2328.1279,-1781.7161,22.4540) || PlayerToPoint(1.0,playerid,1854.7231,2246.6370,15.2729)) return 1;
	return 0;
}
publics: IsAHarvest(carid)
{
	if(carid >= Harvest[0] && carid <= Harvest[1]) return 1;
	return 0;
}
publics: IsASweeper(carid)
{
	if(carid >= Sweeper[0] && carid <= Sweeper[1]) return 1;
	return 0;
}
publics: IsKatA(carid)
{
	new model = GetVehicleModel(carid);
	if(model == 461 || model == 463 || model == 468 || model == 471 || model == 521 || model == 522|| model == 523 || model == 581 || model == 586) return 1;
	return 0;
}
publics: IsKatB(carid)
{
	new model = GetVehicleModel(carid);
	if(model == 400 || model == 401 || model == 404 || model == 405 || model == 415 || model == 447 || model == 460 || model == 469 || model == 476 || model == 487 || model == 488 || model == 497 || model == 511 || model == 512 || model == 513 || model == 519 || model == 520 || model == 548 || model == 553 || model == 563 || model == 577 || model == 592 || model == 593
			|| model == 434 || model == 436 || model == 438 || model == 439 || model == 440 || model == 442 || model == 445 || model == 451 || model == 457 || model == 458 || model == 459 || model == 466 || model == 467 || model == 470 || model == 474 || model == 475 || model == 477 || model == 478 || model == 479 || model == 480
			|| model == 605 || model == 604 || model == 603 || model == 602 || model == 600 || model == 599 || model == 598 || model == 597 || model == 596 || model == 589 || model == 587 || model == 585 || model == 582 || model == 580 || model == 579 || model == 576 || model == 575 || model == 568 || model == 566 || model == 567
			|| model == 566 || model == 565 || model == 562 || model == 561 || model == 560 || model == 559 || model == 558 || model == 555 || model == 554 || model == 552 || model == 551 || model == 550 || model == 549 || model == 547 || model == 546 || model == 545 || model == 543 || model == 542 || model == 541 || model == 540
			|| model == 536 || model == 535 || model == 534 || model == 533 || model == 527 || model == 526 || model == 518 || model == 517 || model == 516 || model == 552 || model == 508 || model == 507 || model == 506 || model == 505 || model == 504 || model == 503 || model == 502 || model == 496 || model == 495 || model == 500
			|| model == 494 || model == 492 || model == 491 || model == 490 || model == 485 || model == 482 || model == 402 || model == 426 || model == 410 || model == 420 || model == 421 || model == 419 || model == 411) return 1;
	return 0;
}
publics: IsKatC(carid)
{
	new model = GetVehicleModel(carid);
	if(model == 403 || model == 406 || model == 409 || model == 412 || model == 418 || model == 422 || model == 423 || model == 424 || model == 427 || model == 428 || model == 514 || model == 515) return 1;
	return 0;
}
publics: IsKatD(carid)
{
	new model = GetVehicleModel(carid);
	if(model == 417 || model == 407 || model == 431 || model == 443 || model == 437 || model == 498 || model == 544 || model == 601) return 1;
	return 0;
}
publics: IsABoat(carid)
{
	new model = GetVehicleModel(carid);
	if(model == 430 || model == 446 || model == 452 || model == 453 || model == 454 || model == 472 || model == 473 || model == 484 || model == 493 || model == 539) return 1;
	return 0;
}
publics: IsAPlane(carid)
{
	new model = GetVehicleModel(carid);
	if(model == 417 || model == 425 || model == 447 || model == 460 || model == 469 || model == 476 || model == 487 || model == 488 || model == 497 || model == 511 || model == 512 || model == 513 || model == 519 || model == 520 || model == 548 || model == 553 || model == 563 || model == 577 || model == 592 || model == 593) return 1;
	return 0;
}
publics: IsACopCar(carid)
{
	new id_car = GetVehicleIdxByID(carid);
	if(id_car != -1 && aData[id_car][aFrak] == 6 || id_car != -1 && aData[id_car][aFrak] == 1) return 1;
	return 0;
}
publics: Isdalnob(carid)
{
	new id_car = GetVehicleIdxByID(carid);
	if(id_car != -1 && aData[id_car][aJobs] == 16) return 1;
	return 0;
}
publics: IsABMX(carid)
{
	if(GetVehicleModel(carid) == 481 || GetVehicleModel(carid) == 510) return 1;
	return 0;
}
publics: IsAMoped(carid)
{
	if(GetVehicleModel(carid) == 586 || GetVehicleModel(carid) == 462) return 1;
	return 0;
}
publics: IsAnAmbulance(carid)
{
	if(aData[carid][aFrak] == 4) return 1;
	return 0;
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(response == 2) SetObjectPos(objectid,fX, fY, fZ), SetObjectRot(objectid,fRotX,fRotY,fRotZ);
	return 1;
}
public OnPlayerConnect(playerid)
{
	GetPlayerName(playerid, NamePlayer[playerid], 24);
	TextDrawShowForPlayer(playerid,Eternity[0]);
	TextDrawShowForPlayer(playerid,Eternity[1]);
	TextDrawHideForPlayer(playerid,td_fon);
	SetPVarInt(playerid,"cdo",0);
	SendClientMessage(playerid,0x01010101, "$cmd get_custom_hash");
	/*new Float:pos[3];
	PlayerInfo[playerid][pNickname]=0;
	GetPlayerPos(@p,pos[0],pos[1],pos[2]);
	Snow2[@p] = CreatePlayerObject(@p,16014, pos[0],pos[1],pos[2], 0.0, 0.0, 0.0);
	spvi(@p,#P_Snow2,1);*/
	LoadPlayerTextDraws(playerid); RemoveBulding(playerid); PreloadAnimLibs(playerid); LoadOther(playerid); DataDefault(playerid);
	return 1;
}
publics: EmptyMessages(playerid, count)
{
	for(new i = 0; i < count; i++) SendClientMessage(playerid, 0, "\n");
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	for(new i, v = strlen(inputtext);  i < v; i++) { if(inputtext[i] == '%') inputtext[i] = '#'; }
	switch(dialogid)
	{
	case 0:
		{
			if(GetPVarInt(playerid,#P_Avto_A) == 1) return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"{D03434}Вы пострадали в аварии!","{D03434}\t\tВы пострадали в аварии!\n\tВнимание! Вас зажало в автомобиле!\nВызовите службу спасения по тел. 112! (( /call 112 ))","Понял","");
			else return 1;
		}
	case 1200:
		{
			if(!response) return 1;
			new j = GetPVarInt(playerid,#P_BizAcc_Idx);
			new str[64*8] = "{ffffff}";
			for(new i = 0; i < sizeof(Inv_Info); i++)
			{
				if(Inv_Info[i][i_type] == listitem)
				{
					format(str,sizeof(str),"%s%s \t\t%d р\n",str,Inv_Info[i][i_name],AC[j][acPriceP][i]);
				}
				else continue;
			}
			SetPVarInt(playerid,#P_Inv_Type,listitem);
			static const str0[] = "{ffffff}Изменение цен на «%s»";
			new str1[sizeof(str0)+32];
			format(str1,sizeof(str1),str0,type_name[listitem][ru_n]);
			ShowPlayerDialog(playerid,1209,DIALOG_STYLE_LIST,str1,str,"Выбор","Отмена");
		}
	case 1204:
		{
			if(!response) return 1;
			SetPVarInt(playerid,#P_Inv_Type,listitem);
			new str[64*3];
			for(new j,i = listitem*3; j < 3; i++,++j)
			{
				if(test2[playerid][modelid0][i])
				{
					
					new c = GetNameByMId(test2[playerid][modelid0][i]);
					if(c >= 0) {
						if(test2[playerid][is_used][i])	format(str,sizeof(str),"%s[№ %d] %s {00ff00}[Используется]{ffffff}\n",str,j,Inv_Info[c][i_name]);
						else format(str,sizeof(str),"%s[№ %d] %s\n",str,j,Inv_Info[c][i_name]);
					}
					else 
					{
						static const str0[] = "Произошла ошибка получен индекс -1 id модели %d, обратитесь к администрации.";
						new str1[sizeof(str0)+3];
						format(str1,sizeof(str1),str0,test2[playerid][modelid0][i]);
						SendClientMessage(playerid,-1,str1);
					}
				}
				else format(str,sizeof(str),"%s[№ %d] Свободен\n",str,j);
			}
			ShowPlayerDialog(playerid,1205,DIALOG_STYLE_LIST,type_name[listitem][ru_n],str,"Выбор","Отмена");
		}
	case 1205:
		{
			if(!response) return GetListItems(playerid,1);
			new type = GetPVarInt(playerid,#P_Inv_Type);
			new i = (type*3)+listitem;
			SetPVarInt(playerid,#P_PObj_Idx,i);			
			if(test2[playerid][modelid0][i] == 0) return SendClientMessage(playerid,-1,#Выбран пустой слот!);
			new c = GetNameByMId(test2[playerid][modelid0][i]);
			if(c >= 0) ShowPlayerDialog(playerid,1206,DIALOG_STYLE_LIST,Inv_Info[c][i_name],"Одеть\nСнять\nУдалить","Выбор","Отмена");
			SetPVarInt(playerid,#P_Inv_Idx,c);
		}
	case 1206:
		{
			if(!response) return GetListItems(playerid,1);
			new i = GetPVarInt(playerid,#P_PObj_Idx);
			new idx = GetPVarInt(playerid,#P_Inv_Idx);
			new type = GetPVarInt(playerid,#P_Inv_Type);
			switch(listitem)
			{
			case 0:
				{
					for(new j,k = type*3; j < 3; k++,++j)
					{
						if((test2[playerid][is_used][k] == 1) && (k != i)) return SendClientMessage(playerid,-1,"На вас уже одета вещь данного типа, для продолжения ее необходимо снять!");
					}
					if(IsPlayerAttachedObjectSlotUsed(playerid, Inv_Info[idx][i_slot]-1)) return SendClientMessage(playerid,-1,"На вас уже одета вещь данного типа, для продолжения ее необходимо снять!");
					if(test2[playerid][fScaleX0][i] == 0.0) test2[playerid][fScaleX0][i] = 1.0,test2[playerid][fScaleY0][i] = 1.0,test2[playerid][fScaleZ0][i] = 1.0;
					SetPlayerAttachedObject(playerid, Inv_Info[idx][i_slot]-1, test2[playerid][modelid0][i], test2[playerid][boneid0][i],test2[playerid][fOffsetX0][i],test2[playerid][fOffsetY0][i],
					test2[playerid][fOffsetZ0][i],test2[playerid][fRotX0][i],test2[playerid][fRotY0][i],test2[playerid][fRotZ0][i],test2[playerid][fScaleX0][i],test2[playerid][fScaleY0][i],test2[playerid][fScaleZ0][i]);
					EditAttachedObject(playerid, Inv_Info[idx][i_slot]-1);
					test2[playerid][is_used][i] = 1;
					SetPVarInt(playerid,#P_Edit_InvObj,1);
				}
			case 1:
				{
					if(test2[playerid][is_used][i])
					{
						RemovePlayerAttachedObject(playerid,Inv_Info[idx][i_slot]-1);
						test2[playerid][is_used][i] = 0;
						static const str0[] = "Вы сняли {D0800E}%s";
						new str[sizeof(str0)+64];
						format(str,sizeof(str),str0,Inv_Info[idx][i_name]);
						SendClientMessage(playerid,-1,str);
					}
					else return SendClientMessage(playerid,-1,"На вас не одета данная вещь!");
				}
			case 2:
				{
					static const str0[] = "{ffffff}Вы действительно хотите удалить {D0800E}%s?\n\n{ffffff}Данное действие невозможно отменить!";
					new str[sizeof(str0)+64];
					format(str,sizeof(str),str0,Inv_Info[idx][i_name]);
					ShowPlayerDialog(playerid,1207,DIALOG_STYLE_MSGBOX,"Item Del",str,"Yes","No");
				}
			}
		}
	case 1207:
		{
			if(!response) return GetListItems(playerid,1);
			new i = GetPVarInt(playerid,#P_PObj_Idx);
			new idx = GetPVarInt(playerid,#P_Inv_Idx);
			test2[playerid][modelid0][i] = 0, test2[playerid][boneid0][i] = 0,test2[playerid][fOffsetX0][i] = 0.00,test2[playerid][fOffsetY0][i] = 0.00;
			test2[playerid][fOffsetZ0][i] = 0.00,test2[playerid][fRotX0][i] = 0.00,test2[playerid][fRotY0][i] = 0.00,test2[playerid][fRotZ0][i] = 0.00;
			test2[playerid][fScaleX0][i] = 0.00,test2[playerid][fScaleY0][i] = 0.00,test2[playerid][fScaleZ0][i] = 0.00;
			new type = GetPVarInt(playerid,#P_Inv_Type);
			SaveItems_Tp(type,playerid);
			if(test2[playerid][is_used][i])
			{
				RemovePlayerAttachedObject(playerid,Inv_Info[idx][i_slot]-1);
				test2[playerid][is_used][i] = 0;				
			}
			static const str0[] = "Вы удалили из инвентаря «{39A0F5}%s{ffffff}»";
			new str[sizeof(str0)+64];
			format(str,sizeof(str),str0,Inv_Info[idx][i_name]);
			SendClientMessage(playerid,-1,str);
		}
	case 1208:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid,#P_BizAcc_Idx);
			switch(listitem)
			{
			case 0:PrintAccInfo(playerid,i);
			case 1://lock
				{
					switch(AC[i][acLock])
					{
					case 0:
						{
							SendClientMessage(playerid,-1,"Вы закрыли бизнес");
							AC[i][acLock] = 1;
						}
					case 1:
						{
							SendClientMessage(playerid,-1,"Вы открыли бизнес");
							AC[i][acLock] = 0;
						}
					}
					static const str0[] = "{008cf0}Магазин аксессуаров:\n{FFFFFF}%s\n{008cf0}Владелец: {FFFFFF}%s\n{008cf0}Статус: %s";
					new str[sizeof(str0)+MAX_PLAYER_NAME+64+6+8];
					format(str,sizeof(str),str0,AC[i][acMess],AC[i][acOwner],	(AC[i][acLock]) ? ("{ff0000}Закрыт"):("{00ff00}Открыт"));
					UpdateDynamic3DTextLabelText(AC[i][acLab][0], -1, str);
					SaveAcc(i);
				}
			case 2:ShowPlayerDialog(playerid,1211,DIALOG_STYLE_INPUT,"{ffffff}Снять со счета","{ffffff}Введите в поле ниже сумму которую желаете снять со счета:","Далее","Отмена");
			case 3:ShowPlayerDialog(playerid,1212,DIALOG_STYLE_INPUT,"{ffffff}Положить на счет","{ffffff}Введите в поле ниже сумму которую желаете положить на счет:","Далее","Отмена");
			case 4:GetListItems(playerid);
			case 5:OnPlayerCommandText(playerid,"/sellacc");
			case 6:ShowPlayerDialog(playerid,1213,DIALOG_STYLE_INPUT,"Название бизнеса","Введите новое название бизнеса\n{ff0000}Недопускается использование спец.символов!","Далее","Отмена");
			}
		}
	case 1213:
		{
			if(!response) return 1;
			new j = GetPVarInt(playerid,#P_BizAcc_Idx);
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1213,DIALOG_STYLE_INPUT,"Название бизнеса","Введите новое название бизнеса\n{ff0000}Недопускается использование спец.символов!\nМаксимальная длинна 64 символа","Далее","Отмена");
			if(strlen(inputtext) >= 64) return ShowPlayerDialog(playerid,1213,DIALOG_STYLE_INPUT,"Название бизнеса","Введите новое название бизнеса\n{ff0000}Недопускается использование спец.символов!\nМаксимальная длинна 64 символа","Далее","Отмена");
			strmid(AC[j][acMess],inputtext,0,strlen(inputtext),strlen(inputtext)+1);
			SaveAcc(j);
			static const str0[] = "{008cf0}Магазин аксессуаров:\n{FFFFFF}%s\n{008cf0}Владелец: {FFFFFF}%s\n{008cf0}Статус: %s";
			new str[sizeof(str0)+MAX_PLAYER_NAME+64+6+8];
			format(str,sizeof(str),str0,AC[j][acMess],AC[j][acOwner],	(AC[j][acLock]) ? ("{ff0000}Закрыт"):("{00ff00}Открыт"));
			UpdateDynamic3DTextLabelText(AC[j][acLab][0], -1, str);
			SendClientMessage(playerid,-1,"Название изменено.");
			return 1;
		}
	case 1209:
		{
			if(!response) return 1;
			new type = GetPVarInt(playerid,#P_Inv_Type);
			new buffer[15],c = 0;
			for(new i = 0; i < sizeof(Inv_Info); i++)
			{
				if(Inv_Info[i][i_type] == type)
				{
					buffer[c] = i;
					c++;
				}
				else continue;
			}
			SetPVarInt(playerid,#P_Inv_Idx,buffer[listitem]);
			static const str0[] = "{ffffff}Новая цена для «{39A0F5}%s{ffffff}»";
			new str1[sizeof(str0)+64];
			format(str1,sizeof(str1),str0,Inv_Info[buffer[listitem]][i_name]);
			ShowPlayerDialog(playerid,1210,DIALOG_STYLE_INPUT,str1,"{ffffff}Ввведите новую цену в поле ниже:","Изменить","Отмена");
		}
	case 1210:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid,#P_Inv_Idx);
			if(!strlen(inputtext))
			{
				SendClientMessage(playerid,COLOR_LIGHTRED,"Вы не указали цену!");
				static const str0[] = "{ffffff}Новая цена для «{39A0F5}%s{ffffff}»";
				new str1[sizeof(str0)+64];
				format(str1,sizeof(str1),str0,Inv_Info[i][i_name]);
				ShowPlayerDialog(playerid,1210,DIALOG_STYLE_INPUT,str1,"{ffffff}Ввведите новую цену в поле ниже:","Изменить","Отмена");
				return 1;
			}
			if(1 < strval(inputtext) > 9999) 
			{
				SendClientMessage(playerid,COLOR_LIGHTRED,"Некорректная цена!");
				static const str0[] = "{ffffff}Новая цена для «{39A0F5}%s{ffffff}»";
				new str1[sizeof(str0)+64];
				format(str1,sizeof(str1),str0,Inv_Info[i][i_name]);
				ShowPlayerDialog(playerid,1210,DIALOG_STYLE_INPUT,str1,"{ffffff}Ввведите новую цену в поле ниже:","Изменить","Отмена");
				return 1;
			}			
			new j = GetPVarInt(playerid,#P_BizAcc_Idx);
			AC[j][acPriceP][i] = strval(inputtext);
			static const str0[] = "Вы успешно изменили цену для «{39A0F5}%s{ffffff}» Новая цена: {39A0F5}%d{ffffff} рублей";
			new str1[sizeof(str0)+64+4];
			format(str1,sizeof(str1),str0,Inv_Info[i][i_name],strval(inputtext));
			SendClientMessage(playerid,-1,str1);
			SaveAcc(j);
			GetListItems(playerid);
			return 1;
		}
	case 1211:
		{
			if(!response) return 1;
			if(!strlen(inputtext))
			{
				SendClientMessage(playerid,COLOR_LIGHTRED,"Вы не указали сумму!");
				ShowPlayerDialog(playerid,1211,DIALOG_STYLE_INPUT,"{ffffff}Снять со счета","{ffffff}Введите в поле ниже сумму, которую желаете снять со счета:","Далее","Отмена");
				return 1;
			}
			if(1 < strval(inputtext) > 999999) 
			{
				SendClientMessage(playerid,COLOR_LIGHTRED,"Некорректная сумма!");
				ShowPlayerDialog(playerid,1211,DIALOG_STYLE_INPUT,"{ffffff}Снять со счета","{ffffff}Введите в поле ниже сумму, которую желаете снять со счета:","Далее","Отмена");
				return 1;
			}
			new summ = strval(inputtext);
			new j = GetPVarInt(playerid,#P_BizAcc_Idx);
			if(AC[j][acTill] < summ) return SendClientMessage(playerid,COLOR_LIGHTRED,"На счету недостаточно средств!");
			GivePlayerMoney(playerid, summ), PlayerInfo[playerid][pCash] += summ;
			AC[j][acTill] -= summ;
			static const str0[] = "Вы сняли со счета {39A0F5}%d{ffffff} рублей. Остаток: {39A0F5}%d{ffffff} рублей.";
			new str1[sizeof(str0)+16];
			format(str1,sizeof(str1),str0,summ,AC[j][acTill]);
			SendClientMessage(playerid,-1,str1);
			SaveAcc(j);
			return 1;
		}
	case 1212:
		{
			if(!response) return 1;
			if(!strlen(inputtext))
			{
				SendClientMessage(playerid,COLOR_LIGHTRED,"Вы не указали сумму!");
				ShowPlayerDialog(playerid,1212,DIALOG_STYLE_INPUT,"{ffffff}Положить на счет","{ffffff}Введите в поле ниже сумму которую желаете положить на счет:","Далее","Отмена");
				return 1;
			}
			if(1 < strval(inputtext) > 999999) 
			{
				SendClientMessage(playerid,COLOR_LIGHTRED,"Некорректная сумма!");
				ShowPlayerDialog(playerid,1212,DIALOG_STYLE_INPUT,"{ffffff}Положить на счет","{ffffff}Введите в поле ниже сумму которую желаете положить на счет:","Далее","Отмена");
				return 1;
			}
			new summ = strval(inputtext);
			new j = GetPVarInt(playerid,#P_BizAcc_Idx);
			if(PlayerInfo[playerid][pCash] < summ) return SendClientMessage(playerid,COLOR_LIGHTRED,"У вас недостаточно средств!");
			GivePlayerMoney(playerid, -summ), PlayerInfo[playerid][pCash] -= summ;
			AC[j][acTill] += summ;
			static const str0[] = "Вы положили на счет {39A0F5}%d{ffffff} рублей. Новый остаток: {39A0F5}%d{ffffff} рублей.";
			new str1[sizeof(str0)+16];
			format(str1,sizeof(str1),str0,summ,AC[j][acTill]);
			SendClientMessage(playerid,-1,str1);
			SaveAcc(j);
			return 1;
		}
	case 1214:
		{
			if(!response) return 1;
			new j = GetPVarInt(playerid,#P_BizAcc_Idx);
			new str[64*8] = "{ffffff}";
			for(new i = 0; i < sizeof(Inv_Info); i++)
			{
				if(Inv_Info[i][i_type] == listitem)
				{
					format(str,sizeof(str),"%s%s \t\t%d р\n",str,Inv_Info[i][i_name],AC[j][acPriceP][i]);
				}
				else continue;
			}
			SetPVarInt(playerid,#P_Inv_Type,listitem);
			ShowPlayerDialog(playerid,1201,DIALOG_STYLE_LIST,type_name[listitem][ru_n],str,"Выбор","Отмена");
		}
	case 1201:
		{
			if(!response) return 1;
			new type = GetPVarInt(playerid,#P_Inv_Type);
			new buffer[15],c = 0;
			for(new i = 0; i < sizeof(Inv_Info); i++)
			{
				if(Inv_Info[i][i_type] == type)
				{
					buffer[c] = i;
					c++;
				}
				else continue;
			}
			SetPVarInt(playerid,#P_Inv_Idx,buffer[listitem]);
			ShowPlayerDialog(playerid,1202,DIALOG_STYLE_LIST,Inv_Info[buffer[listitem]][i_name],"{ffffff}Купить\nПримерить","Выбор","Отмена");
		}
	case 1202:
		{
			if(!response) return 1;
			new idx = GetPVarInt(playerid,#P_Inv_Idx);
			switch(listitem)
			{
			case 0:
				{
					new l = GetPVarInt(playerid,#P_BizAcc_Idx);
					if(PlayerInfo[playerid][pCash] < AC[l][acPriceP][idx]) return SendClientMessage(playerid,-1,"У вас недостаточно средств для покупки!");
					new type = GetPVarInt(playerid,#P_Inv_Type);
					new str[64*3];
					for(new j,i = type*3; j < 3; i++,++j)
					{
						if(test2[playerid][modelid0][i])
						{
							
							new c = GetNameByMId(test2[playerid][modelid0][i]);
							if(c >= 0) format(str,sizeof(str),"%s[№ %d] %s\n",str,j,Inv_Info[c][i_name]);
							else 
							{
								static const str0[] = "Произошла ошибка получен индекс -1 id модели %d, обратитесь к администрации.";
								new str1[sizeof(str0)+2];
								format(str1,sizeof(str1),str0,test2[playerid][modelid0][i]);
								SendClientMessage(playerid,-1,str1);
							}
						}
						else format(str,sizeof(str),"%s[№ %d] Свободен\n",str,j);
					}
					ShowPlayerDialog(playerid,1203,DIALOG_STYLE_LIST,"Выберите размещение для вещи",str,"Выбор","Отмена");
				}
			case 1:
				{
					SetPlayerAttachedObject(playerid, Inv_Info[idx][i_slot]-1, Inv_Info[idx][mod_id], Inv_Info[idx][i_bone]);
					EditAttachedObject(playerid, Inv_Info[idx][i_slot]-1);
					SetPVarInt(@p,#P_Acc_Prim,1);
				}
			}
		}
	case 1203:
		{
			if(!response) return 1;
			new idx = GetPVarInt(playerid,#P_Inv_Idx);
			new type = GetPVarInt(playerid,#P_Inv_Type);
			new i = (type*3)+listitem;
			new j = GetPVarInt(playerid,#P_BizAcc_Idx);
			GivePlayerMoney(playerid,-AC[j][acPriceP][idx]);
			PlayerInfo[playerid][pCash] -= AC[j][acPriceP][idx];
			AC[j][acTill] += AC[j][acPriceP][idx];
			AC[j][acTill2] += AC[j][acPriceP][idx];
			test2[playerid][modelid0][i] = Inv_Info[idx][mod_id];
			test2[playerid][boneid0][i] = Inv_Info[idx][i_bone];
			test2[playerid][fScaleX0][i] = 1.0;
			test2[playerid][fScaleY0][i] = 1.0;
			test2[playerid][fScaleZ0][i] = 1.0;
			SaveItems_Tp(type,playerid);
			static const str0[] = "Вы купили «{39A0F5}%s{ffffff}» за {39A0F5}%d{ffffff} рублей";
			new str[sizeof(str0)+64+5];
			format(str,sizeof(str),str0,Inv_Info[idx][i_name],AC[j][acPriceP][idx]);
			SendClientMessage(playerid,-1,str);
			SaveAcc(j);
		}
	case 1215:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:GetListItems(playerid,1);
			case 1:
				{
					static const str0[] = "{ffffff}Рация %s\nАптечка %s\nМаска %s\nКанистра с бензином %s\nМагнитофон %s\nМатериалы [%d]\nНаркотики [%d]";
					new radiostr[30],aptstr[30],maskstr[30],fillstr[30],mfonstr[30],str[sizeof(str0)+(30*5)];
					if(!PlayerInfo[playerid][pRadio1][0]) radiostr = "{A1A1A1}[Отсутствует]{ffffff}";
					if(PlayerInfo[playerid][pRadio1][0] && !PlayerInfo[playerid][pRadio1][1]) radiostr = "{FF0000}[Откл]{ffffff}";
					if(PlayerInfo[playerid][pRadio1][0] && PlayerInfo[playerid][pRadio1][1]) format(radiostr,sizeof(radiostr),"{149F0A}[Канал №%d]{ffffff}",PlayerInfo[playerid][pRadio1][1]);
					if(!PlayerInfo[playerid][pAptechka]) aptstr = "{A1A1A1}[Отсутствует]{ffffff}";
					else format(aptstr,sizeof(aptstr),"{149F0A}[%d шт.]{ffffff}",PlayerInfo[playerid][pAptechka]);
					if(!PlayerInfo[playerid][pMask]) maskstr = "{A1A1A1}[Отсутствует]{ffffff}";
					if(PlayerInfo[playerid][pMask] && GetPVarInt(playerid,#P_Mask_On)) maskstr = "{149F0A}[Снять]{ffffff}";
					if(PlayerInfo[playerid][pMask] && !GetPVarInt(playerid,#P_Mask_On)) maskstr = "{FF0000}[Одеть]{ffffff}";
					if(!PlayerInfo[playerid][pFill][0]) fillstr = "{A1A1A1}[Отсутствует]{ffffff}";
					if(PlayerInfo[playerid][pFill][0] && PlayerInfo[playerid][pFill][1]) format(fillstr,sizeof(fillstr),"{149F0A}[%d л.]{ffffff}",PlayerInfo[playerid][pFill][1]);
					if(!PlayerInfo[playerid][pMFon]) mfonstr = "{A1A1A1}[Отсутствует]{ffffff}";
					if(PlayerInfo[playerid][pMFon] && GetPVarInt(playerid,#P_MFon_On)) mfonstr = "{149F0A}[Включен]{ffffff}";
					if(PlayerInfo[playerid][pMFon] && !GetPVarInt(playerid,#P_MFon_On)) mfonstr = "{FF0000}[Выключен]{ffffff}";
					format(str,sizeof(str),str0,radiostr,aptstr,maskstr,fillstr,mfonstr,PlayerInfo[playerid][pMats],PlayerInfo[playerid][pDrugs]);
					ShowPlayerDialog(playerid,1216,DIALOG_STYLE_LIST,"Предметы",str,"Выбор","Отмена");
				}
			case 2:
				{
					ShowPlayerDialog(playerid,1222,DIALOG_STYLE_LIST,"{ffffff}Документы","{ffffff}1. Паспорт \n2. Водительское удостоверение \n3. Справки из автошколы\n4. Военный билет\n5. Лицензия на оружие/воздушный транспорт\n6. Служебное удостоверение","Далее","Отмена");
				}
			}
		}
	case 1222:
		{
			if(!response) return 1;
			SetPVarInt(playerid,#P_Docs_L,listitem);
			ShowPlayerDialog(playerid,1223,DIALOG_STYLE_INPUT,"{ffffff}Документы","{ffffff}Введите ID игрока, которому желаете предьявить документ.","Далее","Отмена");
		}
	case 1223:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1223,DIALOG_STYLE_INPUT,"{ffffff}Документы","{ffffff}Введите ID игрока, которому желаете предьявить документ.","Далее","Отмена");
			new pid = strval(inputtext);
			if(!IsPlayerConnected(pid)) 
			{
				SendClientMessage(playerid,-1,#Некорректный ид!);
				ShowPlayerDialog(playerid,1223,DIALOG_STYLE_INPUT,"{ffffff}Документы","{ffffff}Введите ID игрока, которому желаете предьявить документ.","Далее","Отмена");
				return 1;
			}
			new str[64];
			switch(GetPVarInt(playerid,#P_Docs_L))
			{
			case 0:format(str,sizeof(str),"/showpassport %d",pid);
			case 1:format(str,sizeof(str),"/showdocs %d",pid);
			case 2:format(str,sizeof(str),"/showash %d",pid);
			case 3:format(str,sizeof(str),"/showvnbil %d",pid);
			case 4:format(str,sizeof(str),"/лицензии %d",pid);
			case 5:format(str,sizeof(str),"/udost %d",pid);
			}
			OnPlayerCommandText(playerid,str);
			return 1;
		}
	case 1216:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(!PlayerInfo[playerid][pRadio1][0]) return SendClientMessage(playerid,-1,#У вас нет рации);
					new str[306];
					str = "{FF0000}Выключить{ffffff}\n";
					for(new i = 1; i < 51; i++)
					{
						if(PlayerInfo[playerid][pRadio1][1] == i) format(str,sizeof(str),"%s%d {149F0A}[Активный]{ffffff}\n",str,i);
						else format(str,sizeof(str),"%s%d\n",str,i);
					}
					ShowPlayerDialog(playerid,1217,DIALOG_STYLE_LIST,"{ffffff}Выбор канала",str,"Выбор","Отмена");
				}
			case 1:
				{
					if(!PlayerInfo[playerid][pAptechka]) return SendClientMessage(playerid,-1,#У вас нет аптечки);
					ShowPlayerDialog(playerid,1218,DIALOG_STYLE_LIST,"{ffffff}Аптечка","{ffffff}Использовать\nИспользовать на ком-нибудь","Выбор","Отмена");
				}
			case 2:
				{
					if(!PlayerInfo[playerid][pMask]) return SendClientMessage(playerid,-1,#У вас нет маски);
					switch(GetPVarInt(playerid,#P_Mask_On))
					{
					case 0:
						{
							foreach(new i:Player)
							{
								if(!IsPlayerConnected(i)) continue;
								ShowPlayerNameTagForPlayer(i, playerid, 0);
							}
							SetPVarInt(playerid,#P_Mask_On,1);
							SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы одели маску.");
						}
					case 1:
						{
							foreach(new i:Player)
							{
								if(!IsPlayerConnected(i)) continue;
								ShowPlayerNameTagForPlayer(i, playerid, 1);
							}
							DeletePVar(playerid,#P_Mask_On);
							SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы сняли маску.");
						}
					}
					SaveItems_Tp(_,playerid,3);
					
				}
			case 3:
				{
					if(!PlayerInfo[playerid][pFill][0]) return SendClientMessage(playerid,-1,#У вас нет канистры с бензином);
					new vehid = GetNearestVehicle(playerid);
					new id_car = GetVehicleIdxByID(vehid);
					if(CarEngine[vehid]) return SendClientMessage(playerid,-1,#Двигатель должен быть заглушен!);
					if(id_car == -1)
					{
						if(Fuel[vehid] >= 60) return SendClientMessage(playerid,-1,#Данному авто заправка не требуется);
						Fuel[vehid] += 10;
						PlayerInfo[playerid][pFill][0] --;
						PlayerInfo[playerid][pFill][1] -= 10;
						SendClientMessage(playerid,-1,#Вы заправили автомобиль из канистры.);
					}
					else
					{
						if(aData[id_car][aFuel] >= 60) return SendClientMessage(playerid,-1,#Данному авто заправка не требуется);
						aData[id_car][aFuel] += 10;
						PlayerInfo[playerid][pFill][0] --;
						PlayerInfo[playerid][pFill][1] -= 10;
						SendClientMessage(playerid,-1,#Вы заправили автомобиль из канистры.);
					}
					SaveItems_Tp(_,playerid,3);
				}
			case 4://магнитофон
				{
					if(!PlayerInfo[playerid][pMFon]) return SendClientMessage(playerid,-1,#У вас нет магнитофона);
					new str[45];
					format(str,sizeof(str),"%s",(GetPVarInt(playerid,#P_MFon_On)) ? ("{ff0000}Выключить\n{ffffff}Сменить станцию") : ("{00ff00}Включить"));					
					ShowPlayerDialog(playerid,1228,DIALOG_STYLE_LIST,"{ffffff}Магнитофон",str,"Выбор","Отмена");
					return 1;
				}
			case 5:
				{
					return 1;
				}
			case 6:
				{
					return 1;
				}
			}
		}
	case 1227:
		{
			if(!response) return 1;
			new str[124];
			if(GetPVarInt(playerid,#P_MFon_On)) Stop_MFon(playerid);
			switch(listitem)
			{
			case 0: str = "http://www.zaycev.fm:9001/rnb/ZaycevFM(128)";
			case 1: str = "http://s3.radioheart.ru:8043/RH376";				
			case 2: str = "http://radiorecord.fm/m3u/rr320-28kbps.m3u";
			case 3: str = "http://stream02.media.rambler.ru/auto128.mp3";
			case 4: str = "http://radiopotok.ru/f/m3u/station_2.m3u";
			case 5: str = "http://radiopotok.ru/f/m3u/station_33.m3u";
			}
			SetPVarString(playerid, #P_MFon_St, str);
			SetPVarInt(playerid,#P_MFon_On,1);
			Start_MFon(playerid);
		}
	case 1228:
		{
			if(!response) return 1;
			if(!listitem)
			{
				switch(GetPVarInt(playerid,#P_MFon_On))
				{
				case 0:
					{
						foreach(new i:Player)
						{
							if(IsPlayerInDynamicArea(playerid,GetPVarInt(i,#P_MFon_Area))) return SendClientMessage(playerid,COLOR_GRAD1,"В этом месте уже установлен магнитофон, попробуйте поставить в другом месте");
						}
						ShowPlayerDialog(playerid,1227,DIALOG_STYLE_LIST, "{2E9AFE}Выбор радиостанции.","{808080}1.{FFFFFF} Zaycev FM.\n{808080}2.{FFFFFF} Европа+.\n{808080}3.{FFFFFF} Radio Record.\
						\n{808080}4.{FFFFFF} Авторадио.\n{808080}5.{FFFFFF} Радио шансон.\n{808080}6.{FFFFFF} Наше радио.","Выбрать","Отмена");
					}
				case 1:
					{
						if(!PlayerToPoint(3.0, playerid, GetPVarFloat(playerid,#P_MFon_X), GetPVarFloat(playerid,#P_MFon_Y), GetPVarFloat(playerid,#P_MFon_Z))) return SendClientMessage(playerid,COLOR_GRAD1,#Вы должны быть рядом с магинтофоном!);
						Stop_MFon(playerid);
					}
				}
			}
			else{
				if(!PlayerToPoint(3.0, playerid, GetPVarFloat(playerid,#P_MFon_X), GetPVarFloat(playerid,#P_MFon_Y), GetPVarFloat(playerid,#P_MFon_Z))) return SendClientMessage(playerid,COLOR_GRAD1,#Вы должны быть рядом с магинтофоном!);
				ShowPlayerDialog(playerid,1227,DIALOG_STYLE_LIST, "{FFFFFF}Выбор радиостанции.","{808080}1.{FFFFFF} Zaycev FM.\n{808080}2.{FFFFFF} Европа+.\n{808080}3.{FFFFFF} Radio Record.\
				\n{808080}4.{FFFFFF} Авторадио.\n{808080}5.{FFFFFF} Радио шансон.\n{808080}6.{FFFFFF} Наше радио.","Выбрать","Отмена");
			}
		}
	case 1217:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][pRadio1][1] == listitem) return SendClientMessage(playerid,-1,#Данный канал уже выбран);
			if(!listitem)
			{
				SendClientMessage(playerid,-1,#Рация отключена);
				PlayerInfo[playerid][pRadio1][1] = 0;
				SaveItems_Tp(_,playerid,3);
				return 1;
			}
			PlayerInfo[playerid][pRadio1][1] = listitem;
			static const str0[]="Вы переключили свою радиостанцию на канал №%d.";
			new str[sizeof(str0)+2];
			format(str,sizeof(str),str0,PlayerInfo[playerid][pRadio1][1]);
			SendClientMessage(playerid,-1,str);
			SaveItems_Tp(_,playerid,3);
		}
	case 1218:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					new Float:healt;
					GetPlayerHealth(playerid,healt);
					if(healt >= 95.0) return SendClientMessage(playerid,-1,#Вам не требуется лечение);
					ServerGivePlayerHealth(playerid, 100);
					PlayerInfo[playerid][pAptechka]--;
					SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы вылечились!");	
					SaveItems_Tp(_,playerid,3);					
				}
			case 1:
				{
					ShowPlayerDialog(playerid,1219,DIALOG_STYLE_INPUT,"Помощь игроку", "Введите id игрока, к которому желаете применить аптечку:", "Далее","Отмена");
				}
			}
		}
	case 1219:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1219,DIALOG_STYLE_INPUT,"Помощь игроку", "Введите ID игрока, к которому желаете применить аптечку:", "Далее","Отмена");
			new tarid = strval(inputtext);
			if(!IsPlayerConnected(tarid)) return SendClientMessage(playerid,-1,#Игрок не найден!);
			if(!ProxDetectorS(5.0, playerid, tarid)) return SendClientMessage(playerid,-1,#Игрок далеко от вас);
			new Float:healt;
			GetPlayerHealth(tarid,healt);
			if(healt >= 99.0) return SendClientMessage(playerid,-1,#Данному игроку не требуется лечение);
			ServerGivePlayerHealth(tarid, 100);
			if(GetPVarInt(tarid,#P_Hung_Ob))
			{
				PlayerInfo[tarid][pSatiety] = 20;
				DeletePVar(tarid,#P_Hung_Ob);
				SetPlayerProgressBarValue(tarid, pbar_sat, float(PlayerInfo[tarid][pSatiety]));
				ClearAnimations(tarid);
			}
			PlayerInfo[playerid][pAptechka]--;
			new str[50];
			format(str,sizeof(str),"Вы отдали свою аптечку %s.",NamePlayer[tarid]);
			SendClientMessage(playerid,-1,str);
			format(str,sizeof(str),"%s отдал вам свою аптечку.",NamePlayer[playerid]);
			SendClientMessage(tarid,-1,str);
			SaveItems_Tp(_,playerid,3);
			return 1;
		}
	case 1220:
		{
			if(!response) return 1;
			if(!listitem)
			{
				if(PlayerInfo[playerid][pCKey] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нет личного автомобиля!");
				new vehid = GetVehicleIdxByKey(PlayerInfo[playerid][pCKey]), str[64];
				if(!strcmp(aData[vehid][aNumber], "ТРАНЗИТ", true))
				{
					if(PlayerInfo[playerid][pCash] < 2000) return SendClientMessage(playerid, -1, "У вас нет столько денег.");
					PlayerInfo[playerid][pCash] -= 2000; GivePlayerMoney(playerid, - 2000);
					format(aData[vehid][aNumber], 16, "%s%d%d%d%s%s", randomchar(), random(9), random(9), random(9), randomchar(), randomchar());
					format(str, sizeof(str), "Вы получили регистрационные знаки на свой автомобили %s.", aData[vehid][aNumber]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, str);
					format(str, sizeof(str), "{ffffff}%s | {2E9AFE}52RUS", aData[vehid][aNumber]);
					UpdateDynamic3DTextLabelText(aData[vehid][aNumPlate], COLOR_YELLOW, str);
					SaveVehicle(vehid);
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Ваш автомобиль уже стоит на учете!");
			}
			else 
			{
				glob_str = "";
				format(glob_str,sizeof(glob_str),"{FFFFFF}- Категория {056C0E}A %s\n{ffffff}- Категория {056C0E}B %s\n{ffffff}- Категория {056C0E}C %s\n{ffffff}- Категория {056C0E}D %s",
				(PlayerInfo[playerid][pKategA]) ? ("{056C0E}Доступно 15.000 рублей") : ("{ff0000}Недоступно"),(PlayerInfo[playerid][pKategB]) ? ("{056C0E}Доступно 24.000 рублей") : ("{ff0000}Недоступно"),(PlayerInfo[playerid][pKategC]) ? ("{056C0E}Доступно 30.000 рублей") : ("{ff0000}Недоступно"),(PlayerInfo[playerid][pKategD]) ? ("{056C0E}Доступно 28.000 рублей") : ("{ff0000}Недоступно"));
				SPD(@p,1221,DIALOG_STYLE_LIST,"Выбор желаемой категории.",glob_str,"Выбор","Отмена");
				glob_str = "";
				return 1;
			}
			ShowPlayerDialog(playerid,1221,DIALOG_STYLE_LIST,"{FFFFFF}Выбор желаемой категории.","{FFFFFF}- Категория {056C0E}A\n{ffffff}- Категория {056C0E}B\n{ffffff}- Категория {056C0E}C\n{ffffff}- Категория {056C0E}D","Выбрать","Закрыть");
		}
	case 1221:
		{
			if(!response) return 1;		    
			if(PlayerInfo[playerid][pAvtoP][listitem]) return SendClientMessage(playerid,-1,#Данной услугой можно воспользоваться только 1 раз.);
			switch(listitem)
			{
			case 0:
				{
					if(!PlayerInfo[playerid][pKategA]) return SendClientMessage(playerid,-1,#У вас нет справки об окончании автошколы!);
					if(PlayerInfo[playerid][pCash] < 15000) return SendClientMessage(playerid, 0xFF0000AA, "У вас недостаточно средств для получения прав.");
					PlayerInfo[@p][pCash] -= 15000; GivePlayerMoney(@p, -15000);
					PlayerInfo[playerid][pKatA] = 1;
					SendClientMessage(playerid,COLOR_LIGHTBLUE,"Поздравляем, Вы получили права категории А.");
				}
			case 1:
				{
					if(!PlayerInfo[playerid][pKategB]) return SendClientMessage(playerid,-1,#У вас нет справки об окончании автошколы!);
					if(PlayerInfo[playerid][pCash] < 24000) return SendClientMessage(playerid, 0xFF0000AA, "У вас недостаточно средств для получения прав.");
					PlayerInfo[@p][pCash] -= 24000; GivePlayerMoney(@p, - 24000);
					PlayerInfo[playerid][pKatB] = 1;
					SendClientMessage(playerid,COLOR_LIGHTBLUE,"Поздравляем, Вы получили права категории В.");
				}
			case 2:
				{
					if(!PlayerInfo[playerid][pKategC]) return SendClientMessage(playerid,-1,#У вас нет справки об окончании автошколы!);
					if(PlayerInfo[playerid][pCash] < 30000) return SendClientMessage(playerid, 0xFF0000AA, "У вас недостаточно средств для получения прав.");
					PlayerInfo[@p][pCash] -= 30000; GivePlayerMoney(@p, -30000);
					PlayerInfo[playerid][pKatC] = 1;
					SendClientMessage(playerid,COLOR_LIGHTBLUE,"Поздравляем, Вы получили права категории С.");
				}
			case 3:
				{
					if(!PlayerInfo[playerid][pKategD]) return SendClientMessage(playerid,-1,#У вас нет справки об окончании автошколы!);
					if(PlayerInfo[playerid][pCash] < 28000) return SendClientMessage(playerid, 0xFF0000AA, "У вас недостаточно средств для получения прав.");
					PlayerInfo[@p][pCash] -= 28000; GivePlayerMoney(@p, -28000);
					PlayerInfo[playerid][pKatD] = 1;
					SendClientMessage(playerid,COLOR_LIGHTBLUE,"Поздравляем, Вы получили права категории D.");
				}
			}
			PlayerInfo[playerid][pAvtoP][listitem] = 1;
			return 1;
		}
	case 1224:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					ShowPlayerDialog(playerid,1225, DIALOG_STYLE_LIST, "{808080}Стили походки","{FFFFFF}Стандартный\nГражданский\nГангстерский - 1\nГангстерский - 2\nПоходка пожилого человека\nПоходка пожилой женщины\nЖенская - 1\nЖенская - 2\nЖенская - 3\nЖенская - 4\nЖенская - 5\nПоходка пьяного", "Выбрать", "Отмена");
				}
			case 1:
				{
					ShowPlayerDialog(playerid,1226, DIALOG_STYLE_LIST, "{808080}Стили разговора","{808080}1. {FFFFFF}Стиль разговора №1 (стандартный)\n{808080}2. {FFFFFF}Стиль разговора №2\n{808080}3. {FFFFFF}Стиль разговора №3\n{808080}4. {FFFFFF}Стиль разговора №4\n{808080}5. {FFFFFF}Стиль разговора №5","Выбор","Отмена");
				}
			case 2:
				{
					if(GetPVarInt(playerid,#P_NameTags))
					{
						DeletePVar(playerid,#P_NameTags);
						foreach(new i:Player)
						{
							if(!IsPlayerConnected(i)) continue;
							ShowPlayerNameTagForPlayer(playerid, i, 1);
						}
						SendClientMessage(playerid,-1,#Отображение ников включено!);
					}
					else
					{
						SetPVarInt(playerid,#P_NameTags,1);
						foreach(new i:Player)
						{
							if(!IsPlayerConnected(i)) continue;
							ShowPlayerNameTagForPlayer(playerid, i, 0);
						}
						SendClientMessage(playerid,-1,#Отображение ников отключено!);
					}
				}
			case 3:
				{
					if(GetPVarInt(playerid,#P_Speed_On))
					{
						DeletePVar(playerid,#P_Speed_On);
						if(IsPlayerConnected(playerid) && IsPlayerInAnyVehicle(playerid))
						{
							if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
							{
								if(!IsABicycle(GetPlayerVehicleID(playerid)))
								for(new v = 0; v < 4; v++) PlayerTextDrawShow(playerid, speedometer[v][playerid]);
							}
						}
						SendClientMessage(playerid,-1,#Отображение спидометра включено!);
					}
					else
					{
						SetPVarInt(playerid,#P_Speed_On,1);
						if(IsPlayerConnected(playerid) && IsPlayerInAnyVehicle(playerid))
						{
							if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
							{
								if(!IsABicycle(GetPlayerVehicleID(playerid)))
								for(new v = 0; v < 4; v++) PlayerTextDrawHide(playerid, speedometer[v][playerid]);
							}
						}
						SendClientMessage(playerid,-1,#Отображение спидометра отключено!);
					}
					
				}
			/*case 4:
				{
					if(gpvi(@p,#P_Snow_Set))//выкл
					{
						DeletePVar(@p,#P_Snow_Set);
						if(!GetPlayerInterior(@p) && !GetPlayerVirtualWorld(@p))	GetShowSnow(@p,0);						
						SCM(@p,-1,"Отображение снега включено!");
					}
					else
					{
						spvi(@p,#P_Snow_Set,1);
						DestroyPlayerObject(@p,Snow2[@p]);
						DeletePVar(@p,#P_Snow2);
						SCM(@p,-1,"Отображение снега отключено!");
					}
				}*/
			}
		}
	case 1225:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:SetPlayerWalkingStyle(playerid, 1);
			case 1:SetPlayerWalkingStyle(playerid, 2);
			case 2:SetPlayerWalkingStyle(playerid, 3);
			case 3:SetPlayerWalkingStyle(playerid, 4);
			case 4:SetPlayerWalkingStyle(playerid, 5);
			case 5:SetPlayerWalkingStyle(playerid, 6);
			case 6:SetPlayerWalkingStyle(playerid, 7);
			case 7:SetPlayerWalkingStyle(playerid, 8);
			case 8:SetPlayerWalkingStyle(playerid, 9);
			case 9:SetPlayerWalkingStyle(playerid, 10);
			case 10:SetPlayerWalkingStyle(playerid, 11);
			case 11:SetPlayerWalkingStyle(playerid, 12);
			case 12:SetPlayerWalkingStyle(playerid, 13);
			case 13:SetPlayerWalkingStyle(playerid, 0);
			}
		}
	case 1226:
		{
			if(!response) return 1;
			new mess[64];
			if(!listitem) mess = "Ваш стиль разговора был изменен на стандартный";
			else	format(mess,sizeof(mess),"Ваш стиль разговора был изменен на №%d",listitem);
			SendClientMessage(playerid,-1,mess);
			SetPVarInt(playerid,#P_Chat_Style,listitem);
			return 1;
		}
	case 1230:
		{
			if(!response)
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				DeletePVar(@p,#P_Taxi_CarID);
				return 1;
			}
			if(listitem)//договор
			{
				new vehid = GetPlayerVehicleID(@p);
				SetPVarInt(@p,#P_Taxi_On,1);
				SetPVarInt(@p,#P_Taxi_Type,1);
				SetPVarInt(@p,#P_Taxi_Text3d,_:CreateDynamic3DTextLabel("--{00ff00}Свободное {FFFF00}такси--\nОплата: Договорная.", COLOR_YELLOW, 0.0,0.0,2.2,30.0,INVALID_PLAYER_ID,vehid,0));
				SetPVarInt(@p,#P_Taxi_CarID, vehid);
			}
			else //таксометр
			{
				ShowPlayerDialog(@p,1231,DIALOG_STYLE_INPUT,"{ffffff}Установка тарифа","{ffffff}Введите цену за 1 км проезда:","Готово","Отмена");
			}
		}
	case 1231:
		{
			if(!response)
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			if(!strlen(inputtext)) return ShowPlayerDialog(@p,1231,DIALOG_STYLE_INPUT,"{ffffff}Тариф","{ffffff}Введите цену за 1 км проезда:\n\n{ff0000}Некорректное значение. Повторите ввод.","Готово","Отмена");
			new sum = strval(inputtext);
			if(sum <= 749 || sum >= 1501) return ShowPlayerDialog(@p,1231,DIALOG_STYLE_INPUT,"{ffffff}Тариф","{ffffff}Введите цену за 1 км проезда:\n\n{ff0000}Некорректное значение. Повторите ввод.\nТариф может быть от 750 рублей до 1500 рублей.","Готово","Отмена");
			new vehid = GetPlayerVehicleID(@p);
			SetPVarInt(@p,#P_Taxi_On,1);
			SetPVarInt(@p,#P_Taxi_Type,2);
			SetPVarInt(@p,#P_Taxi_Tar,sum);
			
			static const str0[] = "--{00ff00}Свободное {FFFF00}такси--\nЦена за километр: {00ff00}%d {FFFF00}рублей.";
			new str[sizeof(str0)+4];
			format(str,sizeof(str),str0,sum);
			if(IsValidDynamic3DTextLabel(Text3D:GetPVarInt(@p,#P_Taxi_Text3d)))
			{
				UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(@p,#P_Taxi_Text3d), COLOR_YELLOW, str);
			}
			else	SetPVarInt(@p,#P_Taxi_Text3d,_:CreateDynamic3DTextLabel(str, COLOR_YELLOW, 0.0,0.0,2.2,30.0,INVALID_PLAYER_ID,vehid,0));
			SetPVarInt(@p,#P_Taxi_CarID, vehid);
			DeletePVar(@p,#P_Taxi_Off);
		}
	case 1232:
		{
			if(!response && GetPVarInt(@p,#P_Taxi_Type) == 2)
			{
				if(GetPVarType(@p,#P_Taxi_IDPass) && IsPlayerConnected(GetPVarInt(@p,#P_Taxi_IDPass)))
				{
					SendClientMessage(GetPVarInt(@p,#P_Taxi_IDPass),COLOR_GRAD1,#Вам отказали в обслуживании);
					static const str0[] = "Вы отказали в обслуживании {ffff00}%s";
					new str[sizeof(str0)+MAX_PLAYER_NAME];
					format(str,sizeof(str),str0,NamePlayer[GetPVarInt(@p,#P_Taxi_IDPass)]);
					SendClientMessage(@p,COLOR_GRAD1,str);
					RemovePlayerFromVehicle(GetPVarInt(@p,#P_Taxi_IDPass));
					TogglePlayerControllable(GetPVarInt(@p,#P_Taxi_IDPass), 1);
					DeletePVar(GetPVarInt(@p,#P_Taxi_IDPass),#P_Taxi_Drive);
					DeletePVar(@p,#P_Taxi_IDPass);
					#pragma unused str0
					#pragma unused str
					return 1;
				}
			}
			if(!listitem)
			{
				new g = GetPVarInt(@p,#P_Taxi_IDPass);
				SCM(g,COLOR_LIGHTBLUE,"Водитель предложил вам отметить направление на карте.");
				SCM(g,COLOR_LIGHTBLUE,"Для этого: Меню паузы -> Карта -> Поставьте метку на карте.");
				SCM(g,COLOR_LIGHTBLUE,"Метку следует устанавливать на то место куда вы желаете отправиться.");
				static const str0[] = "Вы предложили {ffff00}%s{33CCFF} отметить маршрут на карте.";
				new str[sizeof(str0)+MAX_PLAYER_NAME];
				format(str,sizeof(str),str0,NamePlayer[g]);
				SCM(@p,COLOR_LIGHTBLUE,str);
				SetPVarInt(g,#P_Taxi_IDDriver,@p);
				SetPVarInt(g,#P_Taxi_Drive,2);
				SetPVarInt(@p,#P_Taxi_State,1);
				if(GetPVarInt(@p,#P_Taxi_Type) == 2)
				{
					static const str1[] = "--Такси {ff0000}занято{FFFF00}--\nЦена за километр: {00ff00}%d {FFFF00}рублей.";
					new str2[sizeof(str1)+4];
					format(str2,sizeof(str2),str1,GetPVarInt(@p,#P_Taxi_Tar));
					UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(@p,#P_Taxi_Text3d), COLOR_YELLOW, str2);
				}
				else if(GetPVarInt(@p,#P_Taxi_Type) == 1)
				{
					static const str1[] = "--Такси {ff0000}занято{FFFF00}--\nОплата: Договорная.";
					UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(@p,#P_Taxi_Text3d), COLOR_YELLOW, str1);
				}				
			}
			else
			{
				TextDrawShowForPlayer(@p,taxi_fon);
				TextDrawShowForPlayer(GetPVarInt(@p,#P_Taxi_IDPass),taxi_fon);
				PlayerTextDrawShow(@p,taxi_info[@p]);
				PlayerTextDrawShow(GetPVarInt(@p,#P_Taxi_IDPass),taxi_info[GetPVarInt(@p,#P_Taxi_IDPass)]);
				SetPVarInt(GetPVarInt(@p,#P_Taxi_IDPass),#P_Taxi_Drive,3);
				SetPVarInt(@p,#P_Taxi_State,2);
				if(GetPVarInt(@p,#P_Taxi_Type) == 2)
				{
					static const str1[] = "--Такси {ff0000}занято{FFFF00}--\nЦена за километр: {00ff00}%d {FFFF00}рублей.";
					new str2[sizeof(str1)+4];
					format(str2,sizeof(str2),str1,GetPVarInt(@p,#P_Taxi_Tar));
					UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(@p,#P_Taxi_Text3d), COLOR_YELLOW, str2);
				}
				else if(GetPVarInt(@p,#P_Taxi_Type) == 1)
				{
					static const str1[] = "--Такси {ff0000}занято{FFFF00}--\nОплата: Договорная.";
					UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(@p,#P_Taxi_Text3d), COLOR_YELLOW, str1);
				}
			}
		}
	case 1233:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					ShowPlayerDialog(@p,1231,DIALOG_STYLE_INPUT,"{ffffff}Тариф","{ffffff}Введите цену за 1 км проезда:","Готово","Отмена");
				}
			case 1:
				{
					if(GetPVarInt(@p,#P_Taxi_Type) == 1) return SCM(@p,-1,#У вас уже установлена данная система);
					if(IsValidDynamic3DTextLabel(Text3D:GetPVarInt(@p,#P_Taxi_Text3d)))
					{
						UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(@p,#P_Taxi_Text3d), COLOR_YELLOW, "--{00ff00}Свободное {FFFF00}такси--\nОплата: Договорная.");
					}
					else
					{
						new vehid = GetPVarInt(@p,#P_Taxi_CarID);
						SetPVarInt(@p,#P_Taxi_Text3d,_:CreateDynamic3DTextLabel("--{00ff00}Свободное {FFFF00}такси--\nОплата: Договорная.", COLOR_YELLOW, 0.0,0.0,2.2,30.0,INVALID_PLAYER_ID,vehid,0));
					}
					SetPVarInt(@p,#P_Taxi_On,1);
					SetPVarInt(@p,#P_Taxi_Type,1);	
					DeletePVar(@p,#P_Taxi_Off);
				}
			case 2:
				{
					if(GetPVarInt(@p,#P_Taxi_Off)) return SCM(@p,-1,#Вы не начинали работу!);
					DestroyDynamic3DTextLabel(Text3D:GetPVarInt(@p,#P_Taxi_Text3d));
					DisablePlayerCheckpoint(@p);
					DeletePVar(@p,#P_Taxi_State);
					DeletePVar(@p,#P_Taxi_On);
					DeletePVar(@p,#P_Taxi_Tar);
					DeletePVar(@p,#P_Taxi_Type);
					DeletePVar(@p,#P_Taxi_Tick);
					DeletePVar(@p,#P_Taxi_IDPass);
					DeletePVar(@p,#P_Taxi_Text3d);
					PlayerTextDrawHide(@p,taxi_info[@p]);
					TextDrawHideForPlayer(@p,taxi_fon);
					DeletePVar(@p,#P_Taxi_Summ);
					SetPVarInt(@p,#P_Taxi_Off,1);
					SCM(@p,COLOR_LIGHTBLUE,#Вы временно ушли с работы);
				}
			}
		}
	case 1234:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pJob] == 3) return SCM(@p,-1,#Вы уже работаете здесь.);
					if(PlayerInfo[playerid][pJob]) return SCM(@p,-1,"Для начала нужно уволиться! Используйте команду /quitjob.");
					if(!PlayerInfo[playerid][pKatB]) return SendClientMessage(playerid,-1,#Для устройства на данную работу нужны права категории B.);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы устроились на работу. Автопарк находится через дорогу, напротив здания Таксомотороного парка.");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Для помощи по данной работе введите /help.");
					PlayerInfo[playerid][pJob] = 3;
				}
			case 1:
				{
					if(PlayerInfo[playerid][pJob] != 3) return SCM(@p,-1,#Вы не работаете здесь);
					OnPlayerCommandText(@p,"/quitjob");
				}
			case 2:
				{
					ShowPlayerDialog(@p,0,DIALOG_STYLE_MSGBOX,"{2E9AFE}Информация о работе",
					"\t\t\t{ffffff}Таксомоторный парк №3.\n\n\
					{ffffff}Мы рады приветствовать Вас в отделе кадров Таксомоторного парка №3.\n\
					Именно здесь Вы сможете устроиться на работу водителем такси, имея лишь\n\
					только паспорт и водительские права категории B! График работы свободный,\n\
					зарплата будет зависеть от того, сколько пассажиров Вы перевезете.\
					\n\n\
					{00ff00}\t\tЗаинтересовало? Присоединяйся к нам!","Прочитал","");
				}
			}
		}
	case 1236:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) 
			{
				SendClientMessage(playerid,COLOR_GRAD1,#Некорректный ответ!);
				ShowBilet(playerid);
				return 1;
			}
			new p = GetPVarInt(playerid,#ID_Bil);
			if(strval(inputtext) != AS_Teor[p][otv])
			{
				new c = GetPVarInt(playerid,#P_KolVop);
				SetPVarInt(playerid,#P_KolVop,c+1);
				SendClientMessage(playerid,COLOR_LIGHTRED,#Вы дали неверный ответ. Будьте внимательнее при выборе ответа!);
				if(GetPVarInt(playerid,#P_KolVop) >= 2)
				{
					SendClientMessage(playerid,COLOR_LIGHTRED,#Вы допустили более 2-х ошибок. Теоритический экзамен провален!);
					DeletePVar(playerid,#ID_Bil);
					DeletePVar(playerid,#P_KolVop);
					DeletePVar(playerid,"AutoExam");
					DeletePVar(playerid,"LessonSlot");
					SetPlayerVirtualWorld(@p,0);
					return 1;
				}				
			}
			else	SendClientMessage(playerid,COLOR_GREEN,#Верно);
			if(p >= 14)
			{
				DeletePVar(playerid,#ID_Bil);
				DeletePVar(playerid,#P_KolVop);
				SendClientMessage(playerid,COLOR_GREEN,"Поздравляем, Вы сдали теоритический экзамен!");	
				SendClientMessage(playerid,COLOR_GREEN,"Теперь следуйте на стоянку автошколы");	
				SendClientMessage(playerid,COLOR_GREEN,"Садитесь в траспорт вашей категории и следуйте инструкциям навигатора.");	
				SendClientMessage(playerid,COLOR_GREEN,"Желаем вам удачи!");
				spvi(@p,"LessonSlot",0);
				/*PlayerInfo[playerid][pCash] -= gpvi(@p,#P_Ash_Sum); GivePlayerMoney(playerid, -gpvi(@p,#P_Ash_Sum)); 					
				DeletePVar(@p,#P_Ash_Sum);*/
				
				
				PlayerInfo[playerid][pCarLic] = 1;
				/*if(GetPVarInt(playerid,"Category") == 1) PlayerInfo[playerid][pKatA] = 1, PlayerInfo[playerid][pKategA] = 1, SendClientMessage(playerid,-1,"Поздравляем, вы успешно получили справку категории A. (/showash)");
				if(GetPVarInt(playerid,"Category") == 2) PlayerInfo[playerid][pKatB] = 1, PlayerInfo[playerid][pKategB] = 1, SendClientMessage(playerid,-1,"Поздравляем, вы успешно получили справку категории B. (/showash)");
				if(GetPVarInt(playerid,"Category") == 3) PlayerInfo[playerid][pKatC] = 1, PlayerInfo[playerid][pKategC] = 1, SendClientMessage(playerid,-1,"Поздравляем, вы успешно получили справку категории C. (/showash)");
				if(GetPVarInt(playerid,"Category") == 4) PlayerInfo[playerid][pKatD] = 1, PlayerInfo[playerid][pKategD] = 1, SendClientMessage(playerid,-1,"Поздравляем, вы успешно получили справку категории D. (/showash)");*/
				SetPlayerVirtualWorld(@p,0);
				return 1;
			}
			SetPVarInt(playerid,#ID_Bil,p+1);
			ShowBilet(playerid);
		}
	case 1237:
		{
			if(!response) return SCM(@p,-1,#Операция отменена!);
			switch(listitem)
			{
			case 0:return SPD(@p,1237,DIALOG_STYLE_LIST,"{ffffff}Создание дома (шаг 1/5)","{ffff00}На данном шаге вам предстоит выбрать тип валюты за которую будет продаватьсь дом\n{ffffff}1. Игровые рубли\n2. Донат очки","Далее","Отмена");
			case 1:SetPVarInt(@p,#A_Ch_V,1);
			case 2:SetPVarInt(@p,#A_Ch_V,2);
			}
			SPD(@p,1238,DIALOG_STYLE_INPUT,"{ffffff}Создание дома (шаг 2/5)","{ffff00}На данном шаге вам предстоит указать минимальный уровень для возможной покупки дома","Далее","Отмена");
		}
	case 1238:
		{
			if(!response) return SCM(@p,-1,#Операция отменена!);
			if(!strlen(inputtext)) return SPD(@p,1238,DIALOG_STYLE_INPUT,"{ffffff}Создание дома (шаг 2/5)","{ffff00}На данном шаге вам предстоит указать минимальный уровень для возможной покупки дома","Далее","Отмена");
			new lvl1 = strval(inputtext);
			if(!lvl1) return SPD(@p,1238,DIALOG_STYLE_INPUT,"{ffffff}Создание дома (шаг 2/5)","{ffff00}На данном шаге вам предстоит указать минимальный уровень для возможной покупки дома","Далее","Отмена");
			SetPVarInt(@p,#A_Ch_Lvl,lvl1);
			SPD(@p,1239,DIALOG_STYLE_INPUT,"{ffffff}Создание дома (шаг 3/5)","{ffff00}На данном шаге вам предстоит указать цену дома","Далее","Отмена");
		}
	case 1239:
		{
			if(!response) return SCM(@p,-1,#Операция отменена!);
			if(!strlen(inputtext)) return SPD(@p,1239,DIALOG_STYLE_INPUT,"{ffffff}Создание дома (шаг 3/5)","{ffff00}На данном шаге вам предстоит указать цену дома","Далее","Отмена");
			new price = strval(inputtext);
			switch(GetPVarInt(@p,#A_Ch_V))
			{
			case 1:
				{
					if(price <= 0 && price >= 10000000) return SPD(@p,1239,DIALOG_STYLE_INPUT,"{ffffff}Создание дома (шаг 3/5)","{ffff00}На данном шаге вам предстоит указать цену дома\n{ff0000}Стоимость дома не может превышать 10 млн. рублей.","Далее","Отмена");
				}
			case 2:
				{
					if(price <= 0 && price >= 10000) return SPD(@p,1239,DIALOG_STYLE_INPUT,"{ffffff}Создание дома (шаг 3/5)","{ffff00}На данном шаге вам предстоит указать цену дома\n{ff0000}Стоимость дома не может превышать 10 000 донат очков.","Далее","Отмена");
				}
			}
			SetPVarInt(@p,#A_Ch_Price,price);
			SPD(@p,1240,DIALOG_STYLE_LIST,"{ffffff}Создание дома (шаг 4/5)","{ffff00}На данном шаге вам предстоит выбрать интерьер дома\n1. Тип №1\n2. Тип №2","Далее","Отмена");
		}
	case 1240:
		{
			if(!response) return SCM(@p,-1,#Операция отменена!);
			switch(listitem)
			{
			case 0:return SPD(@p,1240,DIALOG_STYLE_LIST,"{ffffff}Создание дома (шаг 4/5)","{ffff00}На данном шаге вам предстоит выбрать интерьер дома\n1. Тип №1\n2. Тип №2","Далее","Отмена");
			case 1:SetPVarInt(@p,#A_Ch_Int,1);
			case 2:SetPVarInt(@p,#A_Ch_Int,2);
			}
			static const str0[] = "{ffffff}\t\tВы собираетесь создать новый дом.\n\n\t\tТип валюты:\t|\t{008cf0}%s{ffffff}\n\t\tУровень:\t|\t{008cf0}%d\n{ffffff}\t\tЦена:\t\t|\t{008cf0}%d\n{ffffff}\t\tИнтерьер:\t|\t{008cf0}%d\n\n{ffffff}Вы уверены? Точка входа будет создана на вашей текущей позиции.\n\nПродолжить?";
			new str[sizeof(str0)+6+9+2+2];
			format(str,sizeof(str),str0,(GetPVarInt(@p,#A_Ch_V) == 1) ? ("Рубли"):("Донат очки"),GetPVarInt(@p,#A_Ch_Lvl),GetPVarInt(@p,#A_Ch_Price),GetPVarInt(@p,#A_Ch_Int));
			SPD(@p,1241,DIALOG_STYLE_MSGBOX,"{ffffff}Создание дома (шаг 5/5)",str,"Да","Нет");
		}
	case 1241:
		{
			if(!response) return SCM(@p,-1,#Операция отменена!);
			GetPlayerPos(playerid, House[createdh][HOx],House[createdh][HOy],House[createdh][HOz]);
			GetPlayerPos(playerid, House[createdh][SPx],House[createdh][SPy],House[createdh][SPz]);
			GetPlayerFacingAngle(playerid,House[createdh][SPr]);

			format(House[createdh][owner],32,"На продаже!");
			House[createdh][sale] = 0;
			House[createdh][int] = GetPVarInt(@p,#A_Ch_Int);
			if(!GetInterPosH(GetPVarInt(@p,#A_Ch_Int),House[createdh][Ex],House[createdh][Ey],House[createdh][Ez],House[createdh][Ea])) return SendClientMessage(playerid,-1,#Указан неверный ид интерьера!);
			House[createdh][stoim] = GetPVarInt(@p,#A_Ch_Price);
			House[createdh][rentable] = 0; // int
			House[createdh][rentsumma] = 50;
			House[createdh][lvl] = GetPVarInt(@p,#A_Ch_Lvl);
			House[createdh][HBank] = 900;
			House[createdh][lock] = 1;
			House[createdh][hType] = GetPVarInt(@p,#A_Ch_V);//+++

			new strings[512];
			mysql_format(MySQLGo,strings,sizeof(strings),"INSERT INTO `houses` (`owner`,`hType`,`sale`,`stoim`,`rentable`,`rentsumma`,`lvl`,`HBank`,`lock`,`x`,`y`,`z`,`INT`,`SPx`,`SPy`,`SPz`,`SPr`,`Ex`,`Ey`,`Ez`,`Ea`) VALUES ('На продаже!','%d','0','%d','0','0','%d','10000','1','%.1f','%.1f','%.1f','%d','%.1f','%.1f','%.1f','%.1f','%.1f','%.1f','%.1f','%.1f')", 
			House[createdh][hType],House[createdh][stoim],House[createdh][lvl], House[createdh][HOx], House[createdh][HOy], House[createdh][HOz],House[createdh][int],
			House[createdh][SPx],House[createdh][SPy],House[createdh][SPz],House[createdh][SPr],
			House[createdh][Ex],House[createdh][Ey],House[createdh][Ez],House[createdh][Ea]);
			new Cache:p = mysql_query(MySQLGo,strings);
			House[createdh][houseidd] = cache_insert_id();
			SendClientMessage(playerid, COLOR_GRAD2, "Дом успешно создан");
			cache_delete(p, MySQLGo);
			
			House[createdh][hPick] = CreatePickup(1273, 23, House[createdh][HOx],House[createdh][HOy],House[createdh][HOz],-1);
			House[createdh][hZone] = CreateDynamicSphere(House[createdh][HOx],House[createdh][HOy],House[createdh][HOz], 1.0, -1, -1,-1);
			printf("house new created zone id: %d house idx: %d",House[createdh][hZone],createdh);
			House[createdh][hMIcon1] = CreateDynamicMapIcon(House[createdh][HOx],House[createdh][HOy],House[createdh][HOz],31,0);
			createdh++;
			format_string = "";
			new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
			format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

			mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','AddHouse For Sale','%d','None','%s')", NamePlayer[playerid], GetPVarInt(@p,#A_Ch_Price), data);
			mysql_tquery(MySQLGo, format_string);
		}
	case 1242:
		{
			if(!response) return DeletePVar(@p,#P_House_Id);
			new days;
			switch(listitem)
			{
			case 0: days = 1;
			case 1: days = 3;
			case 2: days = 7;
			case 3: days = 14;
			}
			new i = GetPVarInt(@p,#P_House_Id);
			new rents = House[i][rentsumma];
			new summ = (days*24)* rents;
			if(PlayerInfo[@p][pCash] < summ) return (GetPVarInt(@p,#P_HArend)) ? (SCM(@p,-1,"У вас недостаточно средств, чтобы продлить аренду этого дома на данный срок.")):(SCM(@p,-1,"У вас недостаточно средств, чтобы арендовать этот дом на данный срок."));
			SetPVarInt(@p,#P_Ar_Summ,summ);
			PlayerInfo[@p][pRent][0] = gettime();
			PlayerInfo[@p][pRent][1] = gettime() + days*U_Day;
			if(GetPVarInt(@p,#P_HArend))
			{
				static const str0[] = "{ffffff}Вы действительно хотите продлить аренду на этот дом до {FF0000}%s{ffffff} за {FF0000}%d{ffffff} рублей?\n\n{B2B2B2}Данная сумма будет списана с вашего счета единоразово \nи возврату в случае расторжения договора не подлежит";
				new str[sizeof(str0)+32];
				format(str,sizeof(str),str0,date("%dd.%mm.%yyyy  %hh:%ii",PlayerInfo[@p][pRent][1]),summ);
				SPD(@p,1243,DIALOG_STYLE_MSGBOX,"Аренда дома(продление)",str,"Да","Нет");
			}
			else
			{	
				static const str0[] = "{ffffff}Вы действительно хотите арендовать этот дом до {FF0000}%s{ffffff} за {FF0000}%d{ffffff} рублей?\n\n{B2B2B2}Данная сумма будет списана с вашего счета единоразово \nи возврату в случае расторжения договора не подлежит";
				new str[sizeof(str0)+32];
				format(str,sizeof(str),str0,date("%dd.%mm.%yyyy  %hh:%ii",PlayerInfo[@p][pRent][1]),summ);
				SPD(@p,1243,DIALOG_STYLE_MSGBOX,"Аренда дома",str,"Да","Нет");
			}			
			return 1;
		}
	case 1243:
		{
			if(!response)
			{
				PlayerInfo[@p][pRent][0] = 0;
				PlayerInfo[@p][pRent][1] = 0;
				DeletePVar(@p,#P_Ar_Summ);
				DeletePVar(@p,#P_House_Id);
				SCM(@p,-1,"Вы отказались от аренды этого дома.");
				return 1;
			}
			new i = GetPVarInt(@p,#P_House_Id);
			PlayerInfo[playerid][pSpawnP] = 1; PlayerInfo[playerid][pRentHouse] = House[i][houseidd];		
			PlayerInfo[@p][pCash] -= GetPVarInt(@p,#P_Ar_Summ); GivePlayerMoney(@p, -GetPVarInt(@p,#P_Ar_Summ));
			House[i][HBank] += GetPVarInt(@p,#P_Ar_Summ);
			DeletePVar(@p,#P_House_Id);
			if(GetPVarInt(@p,#P_HArend))
			{
				static const str0[] = "Вы продлили аренду этого дома до %s за %d рублей";
				new str[sizeof(str0)+32];
				format(str,sizeof(str),str0,date("%dd.%mm.%yyyy %hh:%ii",PlayerInfo[@p][pRent][1]),GetPVarInt(@p,#P_Ar_Summ));
				DeletePVar(@p,#P_HArend);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, str);
			}
			else 
			{
				static const str0[] = "Поздравляем! Вы успешно арендовали дом до %s за %d рублей";
				new str[sizeof(str0)+32];
				format(str,sizeof(str),str0,date("{FFFFFF}%dd.%mm.%yyyy %hh:%ii",PlayerInfo[@p][pRent][1]),GetPVarInt(@p,#P_Ar_Summ));
				SendClientMessage(playerid, COLOR_GREY, str);
			}
			SendClientMessage(playerid, COLOR_GREY, "Чтобы выселиться из дома, используйте команду {FFFFFF}/unrent");
			UpdatePlayerData(@p,"pCash",PlayerInfo[@p][pCash]);
			UpdatePlayerData(@p,"rent_0",PlayerInfo[@p][pRent][0]);
			UpdatePlayerData(@p,"rent_1",PlayerInfo[@p][pRent][1]);
			return 1;
		}
	case 1244:
		{
			if(!response) return SCM(@p,-1,"Вы отказались от продажи дома");
			new houseid = GetHouseIdx(PlayerInfo[@p][pNewHouse]);
			new str[144];
			format(str,sizeof(str),"SELECT `pNickname`,`rent_1` FROM `accounts` WHERE `pRentHouse` = '%d'",House[houseid][houseidd]);
			new Cache:p = mysql_query(MySQLGo,str);	
			if(cache_num_rows())
			{
				new name[MAX_PLAYER_NAME],tick;
				for(new k = 0; k < cache_num_rows(); k++)
				{
					cache_get_field_content(k, "pNickname", name, MySQLGo, 128);
					tick = cache_get_field_content_int(k, "rent_1", MySQLGo);
					new days = floatround((tick-gettime())/U_Day);
					new summ = House[houseid][rentsumma]*days*24;
					if(GetPlayerID(name) != -1)
					{
						new j = GetPlayerID(name);
						SCM(j,COLOR_LIGHTRED,"Дом который вы арендовали был продан владельцем.");
						format(str,sizeof(str),"Деньги за %d незавершенных дня(-ей) в размере %d рублей были перечислены на ваш банковский счет.",days,summ);
						SCM(j,COLOR_LIGHTRED,str);
						PlayerInfo[j][pRentHouse] = 0;
						PlayerInfo[j][pRent][0] = 0;
						PlayerInfo[j][pRent][1] = 0;
						PlayerInfo[j][pAccount] += summ;
						UpdatePlayerData(j,"pRentHouse",PlayerInfo[j][pRentHouse]);
						UpdatePlayerData(j,"rent_0",PlayerInfo[j][pRent][0]);
						UpdatePlayerData(j,"rent_1",PlayerInfo[j][pRent][1]);
					}
					else
					{
						format(str,sizeof(str),"UPDATE `accounts` SET `pRentHouse` = '0',`rent_0` = '%d',`rent_1` = '0',`pStatus` = '4' WHERE `pNickname` = '%s'",summ,name);
						mysql_tquery(MySQLGo,str);
					}
					if(House[houseid][HBank] >= summ)
					{
						House[houseid][HBank] -= summ;
						format(str,sizeof(str),"Выселен: %s До окончания срока: %d дня(-ей). Неустойка: %d рублей. Счет дома.",name,days,summ);
						SCM(@p,COLOR_GRAD1,str);
					}
					else if(PlayerInfo[@p][pAccount] >= summ)
					{
						PlayerInfo[@p][pAccount] -= summ;
						format(str,sizeof(str),"Выселен: %s До окончания срока: %d дня(-ей). Неустойка: %d рублей. Банковский счет.",name,days,summ);
						SCM(@p,COLOR_GRAD1,str);
					}
					else if(PlayerInfo[@p][pCash] >= summ)
					{
						PlayerInfo[@p][pCash] -= summ;
						GivePlayerMoney(@p,-summ);
						format(str,sizeof(str),"Выселен: %s До окончания срока: %d дня(-ей). Неустойка: %d рублей. Наличные.",name,days,summ);
						SCM(@p,COLOR_GRAD1,str);
					}
				}
			}
			cache_delete(p);
			new summa = GetPVarInt(@p,#P_HSumm);
			if(House[houseid][hType] == 2)
			{
				House[houseid][hType] = 1;
				House[houseid][stoim] = GetPVarInt(@p,#P_HSumm);
			}
			format(str, sizeof(str),"Вы продали дом за %d рублей. Поздравляем!", summa);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,str);
			House[houseid][sale] = 0;
			strmid(House[houseid][owner],"Продаётся",0,128,128);
			DestroyPickup(House[houseid][hPick]);
			DestroyDynamicMapIcon(House[houseid][hMIcon1]);
			House[houseid][hMIcon1] = CreateDynamicMapIcon(House[houseid][HOx],House[houseid][HOy],House[houseid][HOz],31,0);
			House[houseid][hPick] = CreatePickup(1273, 23, House[houseid][HOx],House[houseid][HOy],House[houseid][HOz],-1);
			PlayerInfo[playerid][pNewHouse] = 0;
			PlayerInfo[playerid][pRentHouse] = 0;
			PlayerInfo[playerid][pSpawnP] = 0;
			GivePlayerMoney(playerid,summa);
			PlayerInfo[playerid][pCash]+=summa;
			SaveHouse(houseid);
			UpdatePlayerData(@p,"pCash",PlayerInfo[playerid][pCash]);
			UpdatePlayerData(@p,"pNewHouse",0);
			UpdatePlayerData(@p,"pRentHouse",0);
			UpdatePlayerData(@p,"pSpawnP",0);
			return 1;
		}
	case 1245:
		{
			if(!response) return 1;
			new days;
			switch(listitem)
			{
			case 0: days = 1;
			case 1: days = 3;
			case 2: days = 7;
			case 3: days = 14;
			}
			new i = GetHouseIdx(PlayerInfo[@p][pNewHouse]);
			if(i == -1) return SCM(@p,-1,"Произошла ошибка");
			new max1 = (14*24)*300;
			new cur_summ = (days*24)*300;
			if(PlayerInfo[@p][pAccount] < cur_summ) return SCM(@p,-1,"Суммы на вашем счете недостаточно для проведения транзакции");
			if((House[i][HBank] + cur_summ) > 2*max1) return SCM(@p,-1,"Невозможно оплатить дом на данный срок. Сумма на счете дома превышает максимально возможную.");
			glob_str = "";
			format(glob_str,sizeof(glob_str),"Вы собираетесь оплатить коммунальные услуги вашего дома на %d дня(-ей).\nЭто будет стоить вам %d рублей. Продолжить?",days,cur_summ);
			SPD(@p,1247,DIALOG_STYLE_MSGBOX,"Оплата коммунальных услуг",glob_str,"Да","Нет");
			SetPVarInt(@p,#P_HOpl_Summ,cur_summ);
			SetPVarInt(@p,#P_HOpl_Day,days);			
			return 1;			
		}
	case 1246:
		{
			new id = GetPVarInt(@p,#P_Heal_ID);
			new price = GetPVarInt(@p,#P_Heal_Price);
			if(!response)
			{
				SCM(@p,COLOR_GRAD1,"Вы отказались от лечения");
				SCM(id,COLOR_GRAD1,"Игрок отказался от лечения");
				DeletePVar(@p,#P_Heal_ID);
				DeletePVar(@p,#P_Heal_Price);
				return 1;
			}			
			if(PlayerInfo[@p][pCash] < price)
			{
				SCM(@p,COLOR_GRAD1,"У вас недостаточно денег!");
				SCM(id,COLOR_GRAD1,"У игрока недостаточно денег!");
				DeletePVar(@p,#P_Heal_ID);
				DeletePVar(@p,#P_Heal_Price);
				return 1;
			}
			ServerGivePlayerHealth(@p, 100);
			if(GetPVarInt(@p,#P_Hung_Ob))
			{
				PlayerInfo[@p][pSatiety] = 20;
				DeletePVar(@p,#P_Hung_Ob);
				SetPlayerProgressBarValue(@p, pbar_sat, float(PlayerInfo[@p][pSatiety]));
				ClearAnimations(@p);
			}
			glob_str = "";
			format(glob_str, sizeof(glob_str), "Вы вылечили игрока %s за %d рублей", NamePlayer[@p],price);
			SendClientMessage(id, COLOR_LIGHTBLUE, glob_str);
			glob_str = "";
			format(glob_str, sizeof(glob_str), "Сотрудник СМП/спасатель %s вылечил вас за %d рублей", NamePlayer[id],price);
			SendClientMessage(@p, COLOR_LIGHTBLUE, glob_str);
			FracBank[4] += price;
			PlayerInfo[@p][pCash] -= price;
			GivePlayerMoney(@p,-price);
			DeletePVar(@p,#P_Heal_ID);
			DeletePVar(@p,#P_Heal_Price);
			spvi(@p,#P_Heal_Tick,gettime()+3*60);
			return 1;
		}
	case 1247:
		{
			if(!response)
			{
				DeletePVar(@p,#P_HOpl_Summ);
				DeletePVar(@p,#P_HOpl_Day);
				return 1;
			}
			glob_str = "";
			new cur_summ = GetPVarInt(@p,#P_HOpl_Summ);
			new i = GetHouseIdx(PlayerInfo[@p][pNewHouse]);
			SendClientMessage(playerid, -1, "|___________________ ЧЕК _________________|");
			format(glob_str, sizeof(glob_str), "Ваш старый баланс: %d рублей", PlayerInfo[@p][pAccount]), SendClientMessage(playerid, COLOR_GREY, glob_str);
			format(glob_str, sizeof(glob_str), "Расходная операция на сумму: %d рублей", cur_summ), SendClientMessage(playerid, COLOR_GREY, glob_str);
			PlayerInfo[@p][pAccount] -= cur_summ;
			House[i][HBank] += cur_summ;
			format(glob_str, sizeof(glob_str), "Ваш баланс на данный момент составляет: %d рублей", PlayerInfo[@p][pAccount]), SendClientMessage(playerid, COLOR_GREY, glob_str);
			SendClientMessage(playerid, -1, "|-----------------------------------------|");
			new days = floatround(House[i][HBank]/(24*300));
			format(glob_str,sizeof(glob_str),"Вы успешно оплатили дом на %d дня(-ей)",GetPVarInt(@p,#P_HOpl_Day));
			SCM(@p,COLOR_GRAD1,glob_str);
			format(glob_str,sizeof(glob_str),"Текущий остаток на счету вашего дома %d рублей. Достаточно для оплаты на %d дня(-ей)",House[i][HBank],days);
			SCM(@p,COLOR_GRAD1,glob_str);
			DeletePVar(@p,#P_HOpl_Summ);
			DeletePVar(@p,#P_HOpl_Day);
			return 1;
		}
	case 1248:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:OnPlayerCommandText(@p,"/ahelp");
			case 1:SPD(@p,1249,DIALOG_STYLE_INPUT,"{ffffff}Изменение погоды","{ffffff}Введите в поле ниже id погоды [0 - 20]","Продолжить","Отмена");
			case 2:OnPlayerCommandText(@p,"/payday");
			case 3:
				{
					if(PlayerInfo[@p][pAdmin] < 4) return SCM(@p,-1,"У вас недостаточно полномочий для доступа к данному разделу");
					SPD(@p,1250,DIALOG_STYLE_LIST,"{ffffff}Рестарт и Сохранение","1. Сохранить аккаунты\n2. Сохранить дома/бизнесы и т.д\n3. Рестарт сервера","Выбор","Назад");
				}
			}
		}
	case 1249:
		{
			if(!response) return OnPlayerCommandText(@p,"/apanel");
			if(!strlen(inputtext)) return SPD(@p,1249,DIALOG_STYLE_INPUT,"{ffffff}Изменение погоды","{ffffff}Введите в поле ниже id погоды [0 - 20]","Продолжить","Отмена");
			new weather = strval(inputtext);
			if(weather < 0) return SPD(@p,1249,DIALOG_STYLE_INPUT,"{ffffff}Изменение погоды","{ffffff}Введите в поле ниже id погоды [0 - 20]\n{ff0000}Отрицательные значения не допускаются!","Продолжить","Отмена"); 
			SetWeather(weather);
			SCM(@p,-1,"Погода изменена");
			OnPlayerCommandText(@p,"/apanel");
			return 1;
		}
	case 1250:
		{
			if(!response) return OnPlayerCommandText(@p,"/apanel");
			switch(listitem)
			{
			case 0:
				{
					foreach(new i:Player)
					{
						SavePlayer(i);
					}
					SCM(@p,-1,"Аккаунты сохранены.");
				}
			case 1:
				{
					for(new i = 0; i < sizeof(AC); i++) SaveAcc(i);
					for(new i = 0; i < sizeof(FuelsInfo); i++) OnPropUpdate(i);
					for(new i = 0; i < sizeof(House); i++) SaveHouse(i);
					for(new i = 0; i < sizeof(Atm); i++) UpdateAtm(i);
					for(new i = 0; i < sizeof(Garage); i++) UpdateGarage(i);
					for(new i = 0; i < sizeof(LarekInfo); i++) UpdateLarek(i);
					for(new i = 0; i < sizeof(FlatInfo); i++) updatekvar(i);
					SCM(@p,-1,"Сохранено");
				}
			case 2:OnPlayerCommandText(@p,"/gmx");
			}
		}
	case 1251:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					new name[MAX_PLAYER_NAME],rank,frak = PlayerInfo[playerid][pLeader];
					glob_str = "";
					format(glob_str,sizeof(glob_str),"SELECT `pNickname`,`pRank`,`rent_1` FROM `accounts` WHERE `pMember` = '%d'",frak);
					new Cache:p = mysql_query(MySQLGo,glob_str);	
					if(cache_num_rows())
					{
						glob_str = "{ffffff}Имя:\t\t\t\tДолжность:\n";
						for(new i = 0; i < cache_num_rows(); i++)
						{
							cache_get_field_content(i, "pNickname", name, MySQLGo, 128);
							rank = cache_get_field_content_int(i, "pRank", MySQLGo);
							if(IsPlayerConnected(GetPlayerID(name))) continue;
							
							format(glob_str,sizeof(glob_str),"%s%s\t\t%s\n",glob_str,name,FrakInfo[frak-1][rank][rang]);
						}
						SPD(@p,0,DIALOG_STYLE_MSGBOX,"Список оффлайн сотрудников",glob_str,"Ок","");
						cache_delete(p);
						return 1;
					}
					else return SCM(@p,-1,"В вашей огранизации нет сотрудников оффлайн");
				}
			case 1:
				{
					SPD(@p,1252,DIALOG_STYLE_INPUT,"{ffffff}Уволить сотрудника оффлайн","{ffffff}Вы собираетесь уволить своего сотрудника находящегося в оффлайне\nДля этого введите его ник в поле ниже:","Далее","Отмена");
				}
			}
		}
	case 1252:
		{
			if(!response) return OnPlayerCommandText(@p,"/lpanel");
			if(!strlen(inputtext)) return SPD(@p,1252,DIALOG_STYLE_INPUT,"{ffffff}Уволить сотрудника оффлайн","{ffffff}Вы собираетесь уволить своего сотрудника находящегося в оффлайне\nДля этого введите его ник в поле ниже:","Далее","Отмена");
			if(IsPlayerConnected(GetPlayerID(inputtext))) return SCM(@p,COLOR_GRAD1,"Этот игрок онлайн!");
			glob_str = "";
			mysql_format(MySQLGo,glob_str,sizeof(glob_str),"SELECT `pMember` FROM `accounts` WHERE `pNickname` = '%e' AND `pMember` = '%d'",inputtext,PlayerInfo[@p][pLeader]);
			new Cache:p = mysql_query(MySQLGo,glob_str,true);
			glob_str = "";
			if(cache_num_rows())
			{
				glob_str = "";
				mysql_format(MySQLGo,glob_str,sizeof(glob_str),"UPDATE `accounts` SET `pMember` = '-1', `pRank` = '0' WHERE `pNickname` = '%e'",inputtext);
				mysql_tquery(MySQLGo,glob_str);
				cache_delete(p);
				glob_str = "";
				format(glob_str,sizeof(glob_str),"Вы успешно уволили сторудника %s в оффлайне.",inputtext);
				SCM(@p,-1,glob_str);
				glob_str = "";
				return 1;
			}
			else return SCM(@p, COLOR_GRAD1,"Неправильное имя сотрудника либо он не состоит в вашей организации."),cache_delete(p);
		}
	case 1253:
		{
			if(!response) return 1;
			if(PlayerInfo[@p][pCKey]) return SCM(@p,-1,"У вас уже есть личный транспорт");
			SetPPos(@p,424.1025, 1619.1857, 14.5426);
			TogglePlayerControllable(@p,0);
			SetPlayerCameraPos(playerid, 424.1025, 1619.1857, 14.5426);
			SetPlayerCameraLookAt(playerid, 424.7175, 1618.3998, 14.2926);
			SetPlayerVirtualWorld(@p,@p+1);
			for(new i = 0; i < 9; i++)
			{
				if(i < 2) PlayerTextDrawShow(@p,ptd_as[i][@p]);
				TextDrawShowForPlayer(@p,td_as[i]);
				SelectTextDraw(@p, 0xFFFF00FF);
			}
			for(new i = 0; i < MAX_VEHICLES; i++)
			{
				if(aData[i][aKey]) continue;
				spvi(@p,#P_AsCarIdx,i);
				aData[i][aKey] = -1;
				aData[i][aCarid] = CreateVehicle(ACAR_I[0][mod_id], 429.6757, 1611.6901, 12.5292, 0.0, 1, 1, 600000);
				SetVehicleVirtualWorld(aData[i][aCarid], @p+1);
				spvi(@p,#P_AsOn,1);
				spvi(@p,#P_AcarIdx,0);
				PlayerTextDrawSetString(@p,ptd_as[0][@p],ACAR_I[gpvi(@p,#P_AcarIdx)][mod_name]);
				glob_str = "";
				format(glob_str,sizeof glob_str,"%d P",ACAR_I[gpvi(@p,#P_AcarIdx)][mod_price]);
				PlayerTextDrawSetString(@p,ptd_as[1][@p],glob_str);
				glob_str = "";
				break;
			}
		}
	case 1254:
		{
			if(!response) return 1;
			new xid = gpvi(@p,#P_AcarIdx);
			if(PlayerInfo[@p][pCash] < ACAR_I[xid][mod_price]) return SCM(@p,-1,"У вас недостаточно денег для покупки");
			TogglePlayerControllable(@p,1);
			for(new i = 0; i < 9; i++)
			{
				if(i < 2) PlayerTextDrawHide(@p,ptd_as[i][@p]);
				TextDrawHideForPlayer(@p,td_as[i]);				
			}
			CancelSelectTextDraw(@p);
			SetPlayerVirtualWorld(@p,0);
			SetCameraBehindPlayer(@p);
			new i = gpvi(@p,#P_AsCarIdx);
			aData[i][aModel] = ACAR_I[xid][mod_id];
			aData[i][aColor1] = gpvi(@p,#P_AsCarCol);
			aData[i][aColor2] = gpvi(@p,#P_AsCarCol);
			aData[i][aPrice] = ACAR_I[xid][mod_price];
			aData[i][aLock] = 0;
			aData[i][aMigPos][0] = 0;
			aData[i][aMigPos][1] = 0;
			aData[i][aMigPos][2] = 0;
			aData[i][aMigPos][3] = 0;
			aData[i][aMigPos][4] = 0;
			aData[i][aMigPos][5] = 0;
			aData[i][aMiglo] = 0;
			aData[i][aArrest] = 0;
			aData[i][aFuel] = 60;
			aData[i][aWorld] = 0;
			aData[i][aInt] = 0;
			aData[i][aFrak] = 0;
			aData[i][aJobs] = 0;
			aData[i][aPj] = -1;
			printf("1 %d %s %s",i,aData[i][aNumber],aData[i][aOwner]);
			strmid(aData[i][aPArrest], "Nones", 0, strlen("Nones"));
			format(aData[i][aPArrestName], 32, "Nones");
			strmid(aData[i][aNumber], "ТРАНЗИТ", 0, strlen("ТРАНЗИТ"));				
			strmid(aData[i][aOwner], NamePlayer[@p], 0, strlen(NamePlayer[@p]));
			printf("2 %d %s %s",i,aData[i][aNumber],aData[i][aOwner]);
			aData[i][aOwned] = 1;
			SendClientMessage(playerid, COLOR_GREY, "{808080}Вы успешно приобрели данное транспортное средство. Не забудьте перепарковать ваш автомобиль...");
			SendClientMessage(playerid, COLOR_GREY, "{808080}...  с помощью команды {FFFFFF}'/park'{808080}, чтобы его не эвакуировали.");
			SendClientMessage(playerid, COLOR_GREY, "{808080}Для того, чтобы ознакомиться с командами, связанными с т/с, воспользуйтесь командой {FFFFFF}'/help'{808080}.");							
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);	
			SetVehiclePos(aData[i][aCarid], 391.3371,1662.9233,12.1383), SetVehicleZAngle(aData[i][aCarid], 85.4025);
			SetVehicleVirtualWorld(aData[i][aCarid], aData[i][aWorld]);
			LinkVehicleToInterior(aData[i][aCarid], aData[i][aInt]);
			PutPlayerInVeh(@p, aData[i][aCarid], 0);
			aData[i][aNumPlate] = CreateDynamic3DTextLabel("{ffffff}ТРАНЗИТ", COLOR_YELLOW, 0.0, 0.0, 1.2, 15.0, INVALID_PLAYER_ID, aData[i][aCarid], 0);
			glob_str = "";
			mysql_format(MySQLGo,glob_str,sizeof(glob_str),"INSERT INTO `vehicles` (`Model`) VALUES ('%d')",aData[i][aModel]);
			new Cache:p = mysql_query(MySQLGo,glob_str);			
			aData[i][aKey] = cache_insert_id();
			PlayerInfo[playerid][pCKey] = aData[i][aKey];
			PlayerInfo[playerid][pCash] -= ACAR_I[xid][mod_price];
			GivePlayerMoney(@p,-ACAR_I[xid][mod_price]);
			cache_delete(p, MySQLGo);
			LockCar(aData[i][aCarid]);
			UpdatePlayerData(@p,"pCash",PlayerInfo[playerid][pCash]);
			UpdatePlayerData(@p,"pCKey",PlayerInfo[playerid][pCKey]);
			glob_str = "";
			SaveVehicle(i);
			DeletePVar(@p,#P_AsOn);
			DeletePVar(@p,#P_AcarIdx);
			DeletePVar(@p,#P_AsCarIdx);			
			return 1;
		}
	case 1255:
		{
			if(!response) return true;
			switch (listitem)
			{
				case 0: SetPlayerCheckpoint(playerid,-2430.6741,2757.2744,37.6597,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Метка установлена, она отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
				case 1: SetPlayerCheckpoint(playerid,-2145.8123,-184.9906,25.8884,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Метка установлена, она отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
				case 2: SetPlayerCheckpoint(playerid,423.3881,611.8600,12.0000,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Метка установлена, она отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
				case 3: SetPlayerCheckpoint(playerid,-126.7971,983.8889,12.1494,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Метка установлена, она отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			}
			return 1;
		}
	case 12600:
		{
			if(!response) return DeletePVar(@p,#P_House_Id);
			OnPlayerCommandText(@p,"/buyhouse");
		}
	case 12601:
		{
			if(!response) return DeletePVar(@p,#P_House_Id);
			ShowPlayerDialog(playerid,12617,DIALOG_STYLE_LIST,"Действия с домом","{ffffff}Войти\r\nАрендовать\r\n","Далее","Отмена");
		}
	case 12602:
		{
			if(!response) return DeletePVar(@p,#P_House_Id);
			new i = GetPVarInt(@p,#P_House_Id);
			if(IsValidDynamicArea(House[i][hZone]) && IsPlayerInDynamicArea(@p,House[i][hZone]))
			{
				SetPlayerVirtualWorld(playerid, i);
				SetPPos(playerid,House[i][Ex],House[i][Ey],House[i][Ez]);
				PlayerInfo[playerid][pInt] = House[i][int];
				SetPlayerInterior(playerid,House[i][int]);
				SetPlayerFacingAngle(playerid,House[i][Ea]);
				TogglePlayerControllable(playerid, false);
				SetTimerEx("@UnFreeze", 3000, false, "i", playerid);
				return true;
			}
			else
			{
				DeletePVar(@p,#P_House_Id);
			}
		}
	case 12617:
		{
			if(!response) return DeletePVar(@p,#P_House_Id);
			switch(listitem)
			{
			case 0:
				{
					new i = GetPVarInt(@p,#P_House_Id);
					if(IsValidDynamicArea(House[i][hZone]) && IsPlayerInDynamicArea(@p,House[i][hZone]))
					{
						if(House[i][lock] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Дом закрыт!");
						SetPlayerVirtualWorld(playerid, i);
						SetPPos(playerid,House[i][Ex],House[i][Ey],House[i][Ez]);
						PlayerInfo[playerid][pInt] = House[i][int];
						SetPlayerInterior(playerid,House[i][int]);
						SetPlayerFacingAngle(playerid,House[i][Ea]);
						TogglePlayerControllable(playerid, false);
						SetTimerEx("@UnFreeze", 3000, false, "i", playerid);
						return true;
					}
					else
					{
						DeletePVar(@p,#P_House_Id);
					}
				}
			case 1:
				{
					OnPlayerCommandText(@p,"/rent");
				}
			}
		}
	case 9795:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,9796,DIALOG_STYLE_LIST,"Выбор желаемой категории.","{FFFFFF}- Категория {056C0E}A\n{ffffff}- Категория {056C0E}B\n{ffffff}- Категория {056C0E}C\n{ffffff}- Категория {056C0E}D","Выбрать","Закрыть");
			return 1;
		}
		// autoschool system
	case 9796:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: // Категория A
				{
					if(GetPVarInt(playerid,"AutoExam")) return 1;
					if(PlayerInfo[playerid][pKategA]) return SCM(@p,COLOR_GREY,"У вас уже есть справка этой категории!");
					if(PlayerInfo[playerid][pKatA]) return SCM(@p,COLOR_GREY,"У вас уже есть права этой категории!");
					SetPVarInt(playerid,"AutoExam", true);
					SetPVarInt(playerid,"Category", 1);
				}
			case 1: // Категория B
				{
					if(GetPVarInt(playerid,"AutoExam")) return 1;
					if(PlayerInfo[playerid][pKategB]) return SCM(@p,COLOR_GREY,"У вас уже есть справка этой категории!");
					if(PlayerInfo[playerid][pKatB]) return SCM(@p,COLOR_GREY,"У вас уже есть права этой категории!");				
					SetPVarInt(playerid,"AutoExam", true);
					SetPVarInt(playerid,"Category", 2);
				}
			case 2: // Категория C
				{
					if(GetPVarInt(playerid,"AutoExam")) return 1;
					if(PlayerInfo[playerid][pKategC]) return SCM(@p,COLOR_GREY,"У вас уже есть справка этой категории!");
					if(PlayerInfo[playerid][pKatC]) return SCM(@p,COLOR_GREY,"У вас уже есть права этой категории!");				
					SetPVarInt(playerid,"AutoExam", true);
					SetPVarInt(playerid,"Category", 3);
				}
			case 3: // Категория D
				{
					if(GetPVarInt(playerid,"AutoExam")) return 1;
					if(PlayerInfo[playerid][pKategD]) return SCM(@p,COLOR_GREY,"У вас уже есть справка этой категории!");
					if(PlayerInfo[playerid][pKatD]) return SCM(@p,COLOR_GREY,"У вас уже есть права этой категории!");
					SetPVarInt(playerid,"AutoExam", true);
					SetPVarInt(playerid,"Category", 4);
				}
			}
			SetPPos(playerid,548.2638,485.5985,451.7959);
			SetPlayerVirtualWorld(@p,@p+1);
			ShowBilet(playerid);
			return 1;
		}
	case DONATE:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					ShowPlayerDialog(playerid,DONATE1,DIALOG_STYLE_LIST,"Донат | Потратить донат-очки.","{808080}1. {FFFFFF}Покупка автомобиля\n{808080}2. {FFFFFF}Смена номера личного автомобиля\n{808080}3. {FFFFFF}Сменить номер телефона\n{808080}4. {FFFFFF}Снять все предупреждения\n{808080}5. {FFFFFF}Покупка персональной мигалки\n{808080}6. {FFFFFF}Покупка V.I.P статуса\n{808080}7. {FFFFFF}Обмен донат-очков\n{808080}8. {FFFFFF}Рулетка {FF0000}(NEW)","Далее","Выход");
				}
			case 1:
				{
					new donatestr[666];
					new stringerl[400];
					format(stringerl,sizeof(stringerl),"{FFFFFF}Ваш игровой ник: {2E9AFE}%s\n{FFFFFF}Ваш счет: {2E9AFE}%d донат-очков\n\n{FFFFFF}Пополнить баланс Вашего счета можно на сайте: er-project.ru\nЗачисление средств происходит моментально.\nПеред пополнением баланса покиньте игру, во избежание ошибок.\n\nПополнение счета дает Вам возможность воспользоваться дополнительными услугами:\n",PlayerInfo[playerid][pNickname],PlayerInfo[playerid][pDm]);
					strcat(donatestr,stringerl);
					strcat(donatestr,"- Приобретение личного автомобиля\n- Приобретение желаемых номеров\n- Приобретение VIP статуса\n- Приобретение персональной мигалки\n- Снятие предупреждений\n- Приобретение желаемого номера телефона\n- Обмен донат-очков\n- Также вы можете испытать удачу, крутанув рулетку! (NEW)");
					ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Информация",donatestr,"Окей","Выход");
				}
			}
		}
	case DONATE1:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					glob_str = "{ffffff}";
					for(new i = 0; i < M_DCARS; i++)
					{
						format(glob_str,sizeof(glob_str),"%s%s - %d донат-очков.\n",glob_str,DCAR_I[i][mod_name],DCAR_I[i][mod_price]);
					}				
					ShowPlayerDialog(playerid,432,DIALOG_STYLE_LIST,"Покупка авто",glob_str,"Далее","Отмена");
				}
			case 1:
				{
					ShowPlayerDialog(playerid,8712,DIALOG_STYLE_INPUT,"Покупка номера на авто","{FFFFFF}Введите номер автомобиля, который хотите установить.\n- Цена - 450 донат-очков.\n- Формат номера: Х000ХХ\n\n","Установить","Назад");
				}
			case 2:
				{
					ShowPlayerDialog(playerid,8711,DIALOG_STYLE_INPUT,"Покупка номера телефона","{FFFFFF}Введите номер телефона, который хотите установить.\n- Цена:\n4 цифры - 300 донат-очков\n5 цифры - 250 донат-очков\n6 цифры - 200 донат-очков\n\n","Установить","Назад");
				}
			case 3:
				{
					ShowPlayerDialog(playerid,CLEARWARN,DIALOG_STYLE_MSGBOX,"Снятие предупреждений","{FFFFFF}Вы действительно хотите снять 1 предупреждение с вашего аккаунта?\n- Стоимость: 50 донат-очков","Продолжить","Отмена");
				}
			case 4:
				{
					ShowPlayerDialog(playerid,449,DIALOG_STYLE_MSGBOX,"Покупка мигалки для автомобиля","{2E9AFE}Вы действительно хотите купить персональную мигалку за 750 донат-очков?\n{FFFFFF}/miglo - включить/выключить мигалку, /migloset - сменить позицию мигалки.","Купить","Отмена");
				}
			case 5:
				{
					ShowPlayerDialog(playerid,433,DIALOG_STYLE_MSGBOX,"Покупка V.I.P. статуса","{FFFFFF}Вы действительно хотите купить VIP аккаунт за 200 донат-очков?\nНовые команды вы увидите, введя команду /help в чат.","Купить","Отмена");
				}
			case 6:ShowPlayerDialog(playerid,8812,DIALOG_STYLE_INPUT,"Обмен донат-очков","{FFFFFF}Введите сумму донат-очков, которую хотите обменять на игровую валюту.\n- За одно донат-очко Вы получите 1.000 рублей.\n\n","Обменять","Назад");
			case 7:
				{
					ShowPlayerDialog(playerid,ROULETTE,DIALOG_STYLE_LIST,"Рулетка","{808080}1. {FFFFFF}Малый кейс | 200 донат-очков\n{808080}2. {FFFFFF}Средний кейс | 400 донат-очков\n{808080}3. {FFFFFF}Большой кейс | 700 донат-очков","Окей","Выход");
				}
			}
		}
	case CLEARWARN:
		{
			if(!response) return true;
			if(PlayerInfo[playerid][pWarns] == 0) return SendClientMessage(playerid,-1,"У вас нет предупреждений");
			if(PlayerInfo[playerid][pDm] < 50) return SendClientMessage(playerid,-1,"У вас недостаточно очков доната");
			PlayerInfo[playerid][pWarns] -= 1;
			PlayerInfo[playerid][pDm] -= 50;
			SendClientMessage(playerid,-1,"Вы сняли 1 предупреждение с вашего аккаунта");
			UpdatePlayerData(@p,"pWarns",PlayerInfo[playerid][pWarns]);
			UpdatePlayerData(@p,"pDm",PlayerInfo[playerid][pDm]);
		}
	case ROULETTE:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pDm] < 250) return SendClientMessage(playerid,-1,"У вас недостаточно донат-очков, чтобы крутануть рулетку");
					switch(random(100))
					{
					case 0..64:
						{
							SendClientMessage(playerid,-1,"Поздравляем! Вы выиграли 50000 рублей");
							GivePlayerMoney(playerid,50000);
							PlayerInfo[playerid][pCash] += 50000;
							PlayerInfo[playerid][pDm] -= 250;
						}
					case 65..79:
						{
							SendClientMessage(playerid,-1,"Поздравляем! Вам выпал VIP статус");
							PlayerInfo[playerid][pDonateRank] = 1;
							PlayerInfo[playerid][pDm] -= 250;
						}
					case 80..89:
						{
							SendClientMessage(playerid,-1,"Поздравляем! Ваши донат-очки удвоились!");
							PlayerInfo[playerid][pDm] += 250;
						}
					case 90..99:
						{
							GivePlayerMoney(playerid,150000);
							PlayerInfo[playerid][pCash] += 150000;
							PlayerInfo[playerid][pDm] -= 250;
							SendClientMessage(playerid,-1,"Поздравляем! Вы выиграли 150000 рублей");
						}
					}
				}
			case 1:
				{
					if(PlayerInfo[playerid][pDm] < 500) return SendClientMessage(playerid,-1,"У вас недостаточно донат-очков, чтобы крутануть рулетку");
					switch(random(100))
					{
					case 0..64:
						{
							SendClientMessage(playerid,-1,"Поздравляем! Вы выиграли 250000 рублей");
							GivePlayerMoney(playerid,250000);
							PlayerInfo[playerid][pCash] += 250000;
							PlayerInfo[playerid][pDm] -= 500;
						}
					case 65..79:
						{
							SendClientMessage(playerid,-1,"Поздравляем! Вам выпал VIP статус и 200000 рублей");
							PlayerInfo[playerid][pDonateRank] = 1;
							GivePlayerMoney(playerid,200000);
							PlayerInfo[playerid][pCash] += 200000;
							PlayerInfo[playerid][pDm] -= 500;
						}
					case 80..89:
						{
							SendClientMessage(playerid,-1,"Поздравляем! Ваши донат-очки удвоились!");
							PlayerInfo[playerid][pDm] += 500;
						}
					case 90..99:
						{
							PlayerInfo[playerid][pDm] += 1000;
							SendClientMessage(playerid,-1,"Поздравляем! Вы получили 1000 донат-очков");
						}
					}
				}
			case 2:
				{
					if(PlayerInfo[playerid][pDm] < 1000) return SendClientMessage(playerid,-1,"У вас недостаточно донат-очков, чтобы крутануть рулетку");
					switch(random(100))
					{
					case 0..49:
						{
							SendClientMessage(playerid,-1,"Поздравляем! Вы выиграли 750000 рублей");
							GivePlayerMoney(playerid,750000);
							PlayerInfo[playerid][pCash] += 750000;
							PlayerInfo[playerid][pDm] -= 1000;
						}
					case 50..74:
						{
							SendClientMessage(playerid,-1,"Поздравляем! Вам выпал VIP статус и 500000 рублей");
							PlayerInfo[playerid][pDonateRank] = 1;
							GivePlayerMoney(playerid,500000);
							PlayerInfo[playerid][pCash] += 500000;
							PlayerInfo[playerid][pDm] -= 1000;
						}
					case 75..89:
						{
							SendClientMessage(playerid,-1,"Поздравляем! Вам выпало 1000 донат очков!");
							PlayerInfo[playerid][pDm] += 1500;
						}
					case 90..99:
						{
							PlayerInfo[playerid][pDm] += 1000;
							PlayerInfo[playerid][pDonateRank] = 1;
							GivePlayerMoney(playerid,500000);
							PlayerInfo[playerid][pCash] += 500000;
							SendClientMessage(playerid,-1,"Поздравляем! Вы получили 700 донат-очков + VIP статус + 500000 рублей");
						}
					}
				}
			}
			UpdatePlayerData(@p,"pCash",PlayerInfo[playerid][pCash]);
			UpdatePlayerData(@p,"pDonateRank",PlayerInfo[playerid][pDonateRank]);
			UpdatePlayerData(@p,"pDm",PlayerInfo[playerid][pDm]);
		}
	case 9898:
		{
			if(!response) return 1;
			SPD(@p,1256,DIALOG_STYLE_MSGBOX,"Продажа авто","{ffffff}Выберите кому вы хотите продать свой автомобиль","Гос-ву","Игроку");			
		}
	case 1256:
		{
			if(response) { SPD(@p,12561,DIALOG_STYLE_MSGBOX,"Продажа авто","{ffffff}Вы действительно хотите продать автомобиль государству?","Да","Нет"); }
			else	SPD(@p,1257,DIALOG_STYLE_INPUT,"Продажа авто","{ffffff}Введите ид игрока которому вы желете продать свой автомобиль:","Далее","Отмена");
			return 1;
		}
	case 12561:
	{
	    if(response)
	    {
	        	new vehidx = GetVehicleIdxByKey(PlayerInfo[playerid][pCKey]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы успешно продали свой автомобиль!");
				GivePlayerMoney(playerid, aData[vehidx][aPrice]);
				PlayerInfo[playerid][pCash] += aData[vehidx][aPrice];
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				glob_str = "";
				mysql_format(MySQLGo,glob_str,sizeof(glob_str),"DELETE FROM `vehicles` WHERE `Key` = '%i'",PlayerInfo[playerid][pCKey]);
				mysql_tquery(MySQLGo,glob_str);
				glob_str = "";
				DestroyVehicle(aData[vehidx][aCarid]);
				DestroyDynamic3DTextLabel(aData[vehidx][aNumPlate]);
				if(IsValidDynamicObject(aData[vehidx][aMigObj])) DestroyDynamicObject(aData[vehidx][aMigObj]), aData[vehidx][aMigObj] = 0;
				PlayerInfo[playerid][pCKey] = 0;
				aData[vehidx][aKey] = 0;
				UpdatePlayerData(@p,"pCKey",0);
				UpdatePlayerData(@p,"pCash",PlayerInfo[playerid][pCash]);
				return 1;
		}
		else SCM(@p,-1,"Вы отказались от продажи автомобиля!");
	}
	case 1257:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return SPD(@p,1257,DIALOG_STYLE_INPUT,"Продажа авто","{ffffff}Введите ид игрока которому вы желете продать свой автомобиль:","Далее","Отмена");
			new pid = strval(inputtext);
			if(!IsPlayerConnected(pid)) return SPD(@p,1257,DIALOG_STYLE_INPUT,"Продажа авто","{ffffff}Введите ид игрока которому вы желете продать свой автомобиль:\n\n{ff0000}Некорректный ид!","Далее","Отмена");
			if(!ProxDetectorS(10.0, playerid, pid)) return SendClientMessage(playerid,-1,#Игрок далеко от вас);
			if(PlayerInfo[pid][pCKey]) return SCM(@p,COLOR_GREY,"У игрока уже есть личный транспорт");
			spvi(@p,#P_SellCar_ID,pid);
			SPD(@p,1258,DIALOG_STYLE_INPUT,"Продажа авто","{ffffff}Введите сумму за которую хотите продать свой автомобиль.\n Сумма не должна превышать суммы за которую вы приобрели свой автомобиль","Далее","Отмена");
			return 1;
		}
	case 1258:
		{
			if(!response) return 1;
			new vehidx = GetVehicleIdxByKey(PlayerInfo[playerid][pCKey]);
			if(vehidx == -1) return 1;
			if(!strlen(inputtext)) return SPD(@p,1258,DIALOG_STYLE_INPUT,"Продажа авто","{ffffff}Введите сумму за которую хотите продать свой автомобиль.\n Сумма не должна превышать суммы за которую вы приобрели свой автомобиль","Далее","Отмена");
			new price = strval(inputtext);
			if(price > aData[vehidx][aPrice]) return SPD(@p,1258,DIALOG_STYLE_INPUT,"Продажа авто","{ffffff}Введите сумму за которую хотите продать свой автомобиль.\n Сумма не должна превышать суммы за которую вы приобрели свой автомобиль","Далее","Отмена");
			spvi(@p,#P_SellCar_Pr,price);
			spvi(gpvi(@p,#P_SellCar_ID),#P_SellCar_ID,@p);
			glob_str = "";
			format(glob_str,sizeof(glob_str),"Вы предложили %s купить ваш автомобиль. Ожидайте подтверждения",NamePlayer[gpvi(@p,#P_SellCar_ID)]);
			format(glob_str,sizeof(glob_str),"{ffffff}%s предложил вам купить его автомобиль за %d рублей.\nВы согласны?",NamePlayer[@p],price);
			SPD(gpvi(@p,#P_SellCar_ID),1259,DIALOG_STYLE_MSGBOX,"Продажа авто",glob_str,"Да","Нет");
			glob_str = "";
			return 1;
		}
	case 1259:
		{
			if(!response)
			{
				SCM(gpvi(@p,#P_SellCar_ID),-1,"Игрок отказался от покупки");
				SCM(@p,-1,"Вы отказались от покупки");
				DeletePVar(gpvi(@p,#P_SellCar_ID),#P_SellCar_ID);
				DeletePVar(gpvi(@p,#P_SellCar_ID),#P_SellCar_Pr);
				DeletePVar(@p,#P_SellCar_ID);
				return 1;
			}
			new pid = gpvi(@p,#P_SellCar_ID);
			if(PlayerInfo[@p][pCash] < gpvi(pid,#P_SellCar_Pr)) return SCM(@p,-1,"У вас недостаточно денег для покупки");
			PlayerInfo[@p][pCKey] = PlayerInfo[pid][pCKey];
			new id_car = GetVehicleIdxByKey(PlayerInfo[pid][pCKey]);
			PlayerInfo[pid][pCKey] = 0;
			strmid(aData[id_car][aOwner],NamePlayer[@p],0,MAX_PLAYER_NAME+1);
			SCM(@p,-1,"Поздравляем вы успешно купили автомобиль!");
			SCM(pid,-1,"Поздравляем вы успешно продали свой автомобиль!");
			PlayerInfo[@p][pCash] -= gpvi(pid,#P_SellCar_Pr);
			GivePlayerMoney(@p, -gpvi(pid,#P_SellCar_Pr));
			PlayerInfo[pid][pCash] += gpvi(pid,#P_SellCar_Pr);
			GivePlayerMoney(pid, gpvi(pid,#P_SellCar_Pr));
			return 1;
		}
	case 1260:
		{
			if(!response) return 1;
			if(!listitem)
			{
				if(PlayerInfo[@p][pCash] < 5000) return SCM(@p,-1,#Недостаточно средств!);
				PlayerInfo[@p][pCash] -= 5000; GivePlayerMoney(@p,-5000);
				RepairVehicle(GetPlayerVehicleID(@p)), SendClientMessage(playerid, -1, "Транспорт успешно отремонтирован!");
				return 1;
			}
			else 
			{
				if(PlayerInfo[@p][pCash] < 50000) return SCM(@p,-1,#Недостаточно средств!);
				SPD(@p,1264,DIALOG_STYLE_INPUT,"Покраска автомобиля","{ffffff}Введите номера цветов в поле ниже через запятую:\nПример: 0,0 - черный цвет 1,1 - белый","Далее","Отмена");
				return 1;
			}
		}
		
	case 1261:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:OnPlayerCommandText(@p,"/fracbank");
				case 2:SPD(@p,1262,DIALOG_STYLE_INPUT,"Пополнение счета фракции","Введите сумму на которую вы желатете пополнить счет вашей фракции:","Далее","Отмена");
				case 1:SPD(@p,1263,DIALOG_STYLE_INPUT,"Снятие со счета фракции","Введите сумму которую вы желатете снять со счета вашей фракции:","Далее","Отмена");
			}
			return 1;
		}
	case 1262:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return SPD(@p,1262,DIALOG_STYLE_INPUT,"Пополнение счета фракции","Введите сумму на которую вы желатете пополнить счет вашей фракции:","Далее","Отмена");
			new summamoney = strval(inputtext);
			if(summamoney < 1 || summamoney > 100000) return SendClientMessage(playerid, -1, "Значение не может быть 0 и больше 100.000 рублей.") & SPD(@p,1262,DIALOG_STYLE_INPUT,"Пополнение счета фракции","Введите сумму на которую вы желатете пополнить счет вашей фракции:","Далее","Отмена");
			if(PlayerInfo[playerid][pCash] < summamoney) return SendClientMessage(playerid, -1, "У вас недостаточно денег.") & SPD(@p,1262,DIALOG_STYLE_INPUT,"Пополнение счета фракции","Введите сумму на которую вы желатете пополнить счет вашей фракции:","Далее","Отмена");
			PlayerInfo[playerid][pCash] -= summamoney; GivePlayerMoney(playerid, -summamoney);
			glob_str = "";
			format(glob_str, sizeof(glob_str), "Вы положили на счет организации: %d рублей", summamoney), SendClientMessage(playerid, 0x6495EDFF, glob_str);
			FracBank[PlayerInfo[playerid][pLeader]] += summamoney;
			glob_str = "";
			SaveBank();
		}
	case 1263:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return SPD(@p,1263,DIALOG_STYLE_INPUT,"Снятие со счета фракции","Введите сумму которую вы желатете снять со счета вашей фракции:","Далее","Отмена");
			new summamoney = strval(inputtext);
			if(summamoney < 1 || summamoney > 100000) return SendClientMessage(playerid, -1, "Значение не может быть 0 и больше 100.000 рублей.") & SPD(@p,1263,DIALOG_STYLE_INPUT,"Снятие со счета фракции","Введите сумму которую вы желатете снять со счета вашей фракции:","Далее","Отмена");
			if(FracBank[PlayerInfo[playerid][pLeader]] < summamoney) return SendClientMessage(playerid, -1, "В банке недостаточно денег.") & SPD(@p,1263,DIALOG_STYLE_INPUT,"Снятие со счета фракции","Введите сумму которую вы желатете снять со счета вашей фракции:","Далее","Отмена");
			PlayerInfo[playerid][pCash] += summamoney; GivePlayerMoney(playerid, summamoney);
			glob_str = "";
			format(glob_str, sizeof(glob_str), "Вы сняли с банка фракции: %d рублей", summamoney), SendClientMessage(playerid, 0x6495EDFF, glob_str);
			FracBank[PlayerInfo[playerid][pLeader]] -= summamoney;
			glob_str = "";
			SaveBank();
			return 1;
		}
	case 1264:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return SPD(@p,1264,DIALOG_STYLE_INPUT,"Покраска автомобиля","{ffffff}Введите ID'ы цветов в поле ниже через запятую:\nПример: 0,0 - черный цвет 1,1 - белый","Далее","Отмена");
			new color[2];
			if(sscanf(inputtext,"p<,>dd",color[0],color[1])) return SPD(@p,1264,DIALOG_STYLE_INPUT,"Покраска автомобиля","{ffffff}Введите ID'ы цветов в поле ниже через запятую:\nПример: 0,0 - черный цвет 1,1 - белый","Далее","Отмена");
			if(color[0] < 0 || color[0] > 255 || color[1] < 0 || color[1] > 255) return SPD(@p,1264,DIALOG_STYLE_INPUT,"Покраска автомобиля","{ffffff}Введите ID'ы цветов в поле ниже через запятую:\nПример: 0,0 - черный цвет 1,1 - белый","Далее","Отмена");
			new veh = GetPlayerVehicleID(@p);
			new id_car = GetVehicleIdxByID(veh);
			if(id_car != -1)
			{
				aData[id_car][aColor1] = color[0];
				aData[id_car][aColor2] = color[1];
				SaveVehicle(id_car);
			}
			ChangeVehicleColor(veh,color[0],color[1]);
			PlayerInfo[@p][pCash] -= 50000; GivePlayerMoney(@p,-50000);
			SCM(@p,-1,"Машина успешно перекрашена!");
			return 1;
		}
	case 1265:
		{
			if(!response) return 1;
			if(!listitem)
			{
				if(!PlayerInfo[@p][pNewHouse] && !PlayerInfo[@p][pRentHouse] && !KGet(@p)) return SCM(@p,COLOR_GREY,"У вас нет ни дома, ни квартиры!");
				PlayerInfo[@p][pSpawnP] = 1;
				SendClientMessage(playerid, COLOR_GREY, "Теперь вы будете появляться в своем доме либо в квартире.");
				SavePlayer(@p);
				return 1;
			}
			else
			{
				PlayerInfo[playerid][pSpawnP]=0;
				SavePlayer(@p);
				SendClientMessage(playerid, COLOR_GREY, "Теперь вы будете появляться на территории вашей организации или на вокзале.");
				return 1;
			}			
		}
	case 1266:
		{
			if(!response) return 1;
			if(PlayerInfo[@p][pCash] < gpvi(@p,#P_Skin_Summ)) return SCM(@p,COLOR_GREY,"У вас недостаточно средств для покупки!");
			PlayerInfo[playerid][pCash] -= gpvi(@p,#P_Skin_Summ); GivePlayerMoney(playerid, gpvi(@p,#P_Skin_Summ));
			PlayerInfo[playerid][pModel] = gpvi(@p,#P_Skin_ID);
			if(PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0) SetPlayerSkin(@p,PlayerInfo[playerid][pChar]);
			else SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);			
			glob_str = "";
			DeletePVar(@p,#P_Skin);
			DeletePVar(@p,#P_Skin_I);
			CancelSelectTextDraw(@p);
			for(new i = 0; i < 4; i++)
			{
				if(i < 2) PlayerTextDrawHide(@p,ptd_magskin[i][@p]);
				TextDrawHideForPlayer(@p,td_magskin[i]);
			}
			SetPPos(@p,-1779.4672,1773.8760,2377.4160);
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
			SetPlayerVirtualWorld(@p,0);
			return 1;
		}	
		// Garage System (NEW)
	case D_GAR+1:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid,#PG_id), str[256];
			switch(listitem)
			{
			case 0:
				{
					if(!strcmp(Garage[i][gOwner], "None", true))
					{
						if(GetPlayerGarage(playerid)) return SendClientMessage(playerid, -1, "У Вас уже есть гараж!");
						if(PlayerInfo[playerid][pLevel] < Garage[i][gLevel]) return SendClientMessage(playerid, -1, "У вас недостаточный уровень для покупки гаража!");
						if(PlayerInfo[playerid][pCash] < Garage[i][gPrice]) return SendClientMessage(playerid, -1, "У вас недостаточно денег для покупки гаража!");
						strmid(Garage[i][gOwner], NamePlayer[playerid], 0, strlen(NamePlayer[playerid]));

						PlayerInfo[playerid][pCash] -= Garage[i][gPrice], GivePlayerMoney(playerid, -Garage[i][gPrice]);
						SendClientMessage(playerid, -1, "Поздравляем! Вы успешно купили гараж - меню управления: {2E9AFE}/gmenu");
						UpdateGarage(i);
						GetPlayerGarage(playerid);
					}
				}
			case 1:
				{
					new lockgarage[8];
					if(!GetPlayerGarage(playerid)) return SendClientMessage(playerid, -1, "У Вас нет гаража!");
					if(i != GetPVarInt(playerid,"PlayerGarage")) return SendClientMessage(playerid, -1, "Это не ваш гараж!");

					//
					if(Garage[i][gLock] == 1) lockgarage = "Закрыт";
					else lockgarage = "Открыт";

					format(str, sizeof(str), "{ffffff}Дверной замок: {2E9AFE}%s\n{ffffff}Уровень улучшений: {2E9AFE}%d", lockgarage, Garage[i][gUL]);
					ShowPlayerDialog(playerid, D_GAR+2, DIALOG_STYLE_MSGBOX, "Информация о гараже", str, "Назад", "");
					return true;
				}
			case 2:
				{
					if(!GetPlayerGarage(playerid)) return SendClientMessage(playerid, -1, "У Вас нет гаража!");
					if(i != GetPVarInt(playerid,"PlayerGarage")) return SendClientMessage(playerid, -1, "Это не ваш гараж!");
					if(Garage[i][gLock] == 0) return SendClientMessage(playerid, -1, "Вы закрыли гараж!"), Garage[i][gLock] = 1;
					else SendClientMessage(playerid, -1, "Вы открыли гараж!"), Garage[i][gLock] = 0;
					UpdateGarage(i);
					return true;
				}
			case 3:
				{
					if(!GetPlayerGarage(playerid)) return SendClientMessage(playerid, -1, "У Вас нет гаража!");
					if(i != GetPVarInt(playerid,"PlayerGarage")) return SendClientMessage(playerid, -1, "Это не ваш гараж!");
					format(str, sizeof(str), "{FFFFFF}Вы хотите продать гараж государству за {2E9AFE}%d {FFFFFF}рублей?", Garage[i][gPrice]/2), ShowPlayerDialog(playerid, D_GAR+3, DIALOG_STYLE_MSGBOX, "Вопрос", str, "Да", "Нет");
				}
			case 4:
				{
					if(!GetPlayerGarage(playerid)) return SendClientMessage(playerid, -1, "У Вас нет гаража!");
					if(i != GetPVarInt(playerid,"PlayerGarage")) return SendClientMessage(playerid, -1, "Это не ваш гараж!");
					if(Garage[i][gUL] == 0) return ShowPlayerDialog(playerid, D_GAR+5, DIALOG_STYLE_LIST, "Улучшения для гаража", "1. Магнитофон [1000 руб.]", "Купить", "Отмена");
					else if(Garage[i][gUL] == 1) return ShowPlayerDialog(playerid, D_GAR+5, DIALOG_STYLE_LIST, "Улучшения для гаража", "1. Магнитофон [КУПЛЕНО]\n2. Набор инструментов [10000 руб.]", "Купить", "Отмена");
					else if(Garage[i][gUL] == 2) return SendClientMessage(playerid, -1, "Все улучшения приобретены!");
				}
			case 5:
				{
					if(!GetPlayerGarage(playerid)) return SendClientMessage(playerid, -1, "У Вас нет гаража!");
					if(i != GetPVarInt(playerid,"PlayerGarage")) return SendClientMessage(playerid, -1, "Это не ваш гараж!");
					if(IsPlayerInRangeOfPoint(playerid, 10.0, Garage[i][gX2], Garage[i][gY2], Garage[i][gZ2]))
					{
						if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "Вы должны быть за рулем транпорта!");
						new carid = GetPlayerVehicleID(playerid), id = i;
						SetVehiclePos(carid, Garage[id][gX3], Garage[id][gY3], Garage[id][gZ3]), SetVehicleZAngle(carid, Garage[id][gR3]);
						SetVehicleVirtualWorld(carid, 0), SetPlayerVirtualWorld(playerid, 0);
						SetPlayerInterior(playerid, 0), LinkVehicleToInterior(carid, 0);
						PutPlayerInVeh(playerid, carid, 0);
						SendClientMessage(playerid, -1, "Вы выехали из гаража!");
						StopAudioStreamForPlayer(playerid);
						UpdateGarage(i);
						DeletePVar(playerid,#PG_id);
					}
				}
			}
			return true;
		}
	case D_GAR+2:
		{
			if(!response) return 1;
			return ShowPlayerDialog(playerid, D_GAR+1, DIALOG_STYLE_LIST, "Панель управления", "1. Купить гараж\n2. Просмотр информации о гараже\n3. Закрыть / открыть гараж\n4. Продажа гаража государству\n5. Покупка улучшений для гаража\n6. Выехать из гаража", "Выбрать", "Отмена");
		}
	case D_GAR+3:
		{
			new i = GetPVarInt(playerid,#PG_id);
			if(!response) return SendClientMessage(playerid, -1, "Вы отказались продавать гараж!");
			Garage[i][gUL] = 0, strmid(Garage[i][gOwner], "None", 0, strlen("None"));
			GivePlayerMoney(playerid, Garage[i][gPrice]/2);
			PlayerInfo[playerid][pCash] += Garage[i][gPrice]/2;
			SendClientMessage(playerid, -1, "Вы успешно продали гараж государству!");
			UpdateGarage(i);
			DeletePVar(playerid, "PlayerGarage");
			return true;
		}
	case D_GAR+5:
		{
			if(!response) return false;
			new i = GetPlayerVirtualWorld(playerid);
			switch(listitem)
			{
			case 0:
				{
					if(Garage[i][gUL] > 0) return SendClientMessage(playerid, -1, "Это улучшение уже куплено!");
					if(PlayerInfo[playerid][pCash] < 1000) return SendClientMessage(playerid, -1, "Недостаточно средств для покупки улучшения!");
					PlayerInfo[playerid][pCash] -= 1000;
					GivePlayerMoney(playerid, -1000), SendClientMessage(playerid, -1, "Вы приобрели данное улучшение!");
					Garage[i][gUL]++;
					UpdateGarage(i);
				}
			case 1:
				{
					if(Garage[i][gUL] > 1) return SendClientMessage(playerid, -1, "Это улучшение уже куплено!");
					if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, -1, "Недостаточно средств для покупки улучшения!");
					PlayerInfo[playerid][pCash] -= 10000;
					GivePlayerMoney(playerid, -10000), SendClientMessage(playerid, -1, "Вы приобрели данное улучшение! Теперь вы сможете чинить транспорт в гараже (/repaircar)");
					Garage[i][gUL]++;
					UpdateGarage(i);
				}
			}
			return true;
		}
	case D_GAR+6:
		{
			if(!response) return false;
			new i = GetPVarInt(playerid, "GAR_ID"), Float:POS[4];
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, D_GAR+7, DIALOG_STYLE_INPUT, "Изменение цены", "{ffffff}Введите новую цену для гаража:", "Далее", "Отмена");
			case 1: ShowPlayerDialog(playerid, D_GAR+8, DIALOG_STYLE_MSGBOX, "Предупреждение", "{ffffff}Вы уверены, что хотите продать гараж государству?", "Да", "Нет");
			case 2: ShowPlayerDialog(playerid, D_GAR+9, DIALOG_STYLE_INPUT, "Изменение владельца", "{ffffff}Введите ник нового владельца:", "Далее", "Отмена");
			case 3:
				{
					if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "Вы должны быть за рулем!");
					new carid = GetPlayerVehicleID(playerid);
					GetVehiclePos(carid, POS[0], POS[1], POS[2]), GetVehicleZAngle(carid, POS[3]);
					Garage[i][gX3] = POS[0], Garage[i][gY3] = POS[1], Garage[i][gZ3] = POS[2], Garage[i][gR3] = POS[3];
					SendClientMessage(playerid, -1, "Теперь при выезде из гаража транспорт будет появляться на этом месте!");
					UpdateGarage(i);
				}
			case 4:
				{
					if(Garage[i][gLock] == 0) return SendClientMessage(playerid, -1, "Вы закрыли гараж!"), Garage[i][gLock] = 1;
					else SendClientMessage(playerid, -1, "Вы открыли гараж!"), Garage[i][gLock] = 0;
					UpdateGarage(i);
				}
			}
			return true;
		}
	case D_GAR+7:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, D_GAR+7, DIALOG_STYLE_INPUT, "Изменение цены", "Введите новую цену для гаража:", "Далее", "Отмена");
			new price = strval(inputtext), i = GetPVarInt(playerid, "GAR_ID");
			if(price < 1) return ShowPlayerDialog(playerid, D_GAR+7, DIALOG_STYLE_INPUT, "Изменение цены", "Введите новую цену для гаража:", "Далее", "Отмена");
			Garage[i][gPrice] = price, SendClientMessage(playerid, -1, "Стоимость гаража изменена!"), UpdateGarage(i);
			return true;
		}
	case D_GAR+8:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "GAR_ID");
			if(!strcmp(Garage[i][gOwner],"None",true)) return SendClientMessage(playerid, -1, "Гараж и так продается!");
			strmid(Garage[i][gOwner], "None", 0, strlen("None"), 24);
			SendClientMessage(playerid, -1, "Вы успешно продали гараж!");
			UpdateGarage(i);
			return true;
		}
	case D_GAR+9:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "GAR_ID");
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, D_GAR+9, DIALOG_STYLE_INPUT, "Изменение владельца", "{ffffff}Введите ник нового владельца:", "Далее", "Отмена");
			strmid(Garage[i][gOwner], inputtext, 0, strlen(inputtext), 24);
			SendClientMessage(playerid, -1, "Вы успешно изменили владельца!");
			UpdateGarage(i);
			return true;
		}

		// flat system (NEW)
	case 8003:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid,#P_IdKv);
			switch(listitem)
			{
			case 0:
				{
					if(KGet(playerid)) return SendClientMessage(playerid, -1, "У вас уже есть квартира.");
					ShowPlayerDialog(playerid, 8008, 0, "{2E9AFE}Подтверждение покупки", "{FFFFFF}Вы точно хотите купить квартиру?\n\n{bbbbbb}- При продаже вам вернется 50% от стоимости.\n- При выселении вам ничего не вернется.", "Да", "Нет");
				}
			case 1:
				{
					if(!KGet(playerid)) return SendClientMessage(playerid, -1, "У Вас нет квартиры");
					if(i != GetPVarInt(playerid,"Kvart")) return SendClientMessage(playerid, -1, "Это не Ваша квартира");
					ShowPlayerDialog(playerid, 8009, 0, "{2E9AFE}Подтверждение продажи", "{FFFFFF}Вы точно хотите продать квартиру?\n\n{bbbbbb}- При продаже вам вернется 50% от стоимости.", "Да", "Нет");
				}
			case 2:
				{
					if(!KGet(playerid)) return SendClientMessage(playerid, -1, "У Вас нет квартиры");
					if(i != GetPVarInt(playerid,"Kvart")) return SendClientMessage(playerid, -1, "Это не Ваша квартира");
					ShowPlayerDialog(playerid, 8010, 2, "{2E9AFE}Квартплата", "{808080}1. {FFFFFF}Остаток\n{808080}2. {FFFFFF}На час\n{808080}3. {FFFFFF}На 5 часов\n{808080}4. {FFFFFF}На сутки\n{808080}5. {FFFFFF}На 3 суток\n{808080}6. {FFFFFF}На неделю", "Перевести", "Отмена");
				}
			case 3:
				{
					if(!KGet(playerid)) return SendClientMessage(playerid, -1, "У Вас нет квартиры");
					if(i != GetPVarInt(playerid,"Kvart")) return SendClientMessage(playerid, -1, "Это не ваша квартира");
					if(FlatInfo[i][lock] == 0) FlatInfo[i][lock] = 1, SendClientMessage(playerid, -1, "Дверь вашей квартиры была закрыта.");
					else FlatInfo[i][lock] = 0, SendClientMessage(playerid, 0xFFa500AA, "{FFFFFF}Дверь вашей квартиры была открыта.");
					updatekvar(i);
				}
			case 4:
				{
					if(!KGet(playerid)) return SendClientMessage(playerid, -1, "У вас нет квартиры.");
					if(i != GetPVarInt(playerid,"Kvart")) return SendClientMessage(playerid, -1, "Это не ваша квартира.");
					new lockkkk[8], string[128];
					if(FlatInfo[i][lock] == 1) lockkkk = "Закрыт";
					else lockkkk = "Открыт";

					//
					format(string,128,"{2E9AFE}Дверной замок: {FFFFFF}%s\n",lockkkk);
					ShowPlayerDialog(playerid,9999,DIALOG_STYLE_MSGBOX,"{2E9AFE}Информация",string,"Ок","");
				}
			}
		}
	case 8008:
		{
			if(!response) return true;
			new i = GetPVarInt(playerid,#P_IdKv);
			if(!strcmp(FlatInfo[i][vladelec],"None",true))
			{
				if(KGet(playerid)) return SendClientMessage(playerid, -1, "У вас уже есть квартира.");
				if(PlayerInfo[playerid][pLevel] < FlatInfo[i][lvl])
				{
					SFCM(playerid, -1, "У вас недостаточный уровен, нужен: %i", FlatInfo[i][lvl]);
					return 1;
				}
				if(PlayerInfo[playerid][pCash] < FlatInfo[i][cena]) return SendClientMessage(playerid, -1, "Недостаточно денег на счету");
				strmid(FlatInfo[i][vladelec], NamePlayer[playerid], 0, strlen(NamePlayer[playerid]), 24);
				SendClientMessage(playerid, 0xFfa500AA, "Поздравляем с покупкой!");
				SendClientMessage(playerid, 0xFfa500AA, "Стоимость квартплаты: 200 рублей в час.");
				SendClientMessage(playerid, 0xFF0000AA, "Внимание! {FFFFFF}Вас могут выселить, если квартира не будет оплачена вовремя.");
				PlayerInfo[playerid][pCash] -= FlatInfo[i][cena]; GivePlayerMoney(playerid, -FlatInfo[i][cena]);
				PlayerInfo[playerid][pSpawnP] = 4;
				mysql_function(MySQLGo,200,"UPDATE `accounts` SET `pSpawnP` = '4' WHERE `id` = '%i'",false,"","", PlayerInfo[playerid][pID]);
				FlatInfo[i][lock] = 0;
				FlatInfo[i][plata] = 200;
				KGet(playerid);
				updatekvar(i);
			}
		}
	case 8009:
		{
			if(!response) return true;
			new i = GetPVarInt(playerid,#P_IdKv);
			if(!KGet(playerid)) return SendClientMessage(playerid, -1, "У вас нет квартиры.");
			if(GetPVarInt(playerid,"Kvart") != i) return SendClientMessage(playerid, -1, "Это не ваша квартира.");
			strmid(FlatInfo[i][vladelec], "None", 0, strlen("None"), 5);
			FlatInfo[i][lock] = 0;
			FlatInfo[i][plata] = 0;
			DeletePVar(playerid,"Kvart");
			PlayerInfo[playerid][pCash] += FlatInfo[i][cena]/2; GivePlayerMoney(playerid, FlatInfo[i][cena]/2);
			SendClientMessage(playerid, 0xFfa500AA, "{2E9AFE}Квартира успешно продана, {FFFFFF}50 {2E9AFE}процентов стоимости перечислены на ваш счет.");
			SetPPos(playerid,FlatInfo[i][pXpic],FlatInfo[i][pYpic],FlatInfo[i][pZpic]);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, FlatInfo[i][kworld]);
			updatekvar(i);
			PlayerInfo[playerid][pSpawnP] = 0;
			mysql_function(MySQLGo,200,"UPDATE `accounts` SET `pSpawnP` = '4' WHERE `id` = '%i'",false,"","", PlayerInfo[playerid][pID]);

			//
			new query[256];
			format(query,sizeof(query),"UPDATE `flat` SET `vladelec` = 'None', `lock` = '0', `plata` = '0' WHERE `kid` = '%i'",FlatInfo[i][kid]);
			mysql_tquery(MySQLGo, query);
		}
	case 8010:
		{
			if(!response) return true;
			new i = GetPVarInt(playerid,#P_IdKv), dengi;
			if(!KGet(playerid)) return SendClientMessage(playerid, -1, "У вас нет квартиры.");
			if(GetPVarInt(playerid,"Kvart") != i) return SendClientMessage(playerid, -1, "Это не ваша квартира.");
			switch(listitem)
			{
			case 0:
				{
					SFCM(playerid, -1, "{2E9AFE}Оплата на: {FFFFFF}%i дней.",FlatInfo[i][plata]/4800);
					SFCM(playerid, -1, "{2E9AFE}На вашем счету: {FFFFFF}%i рублей.",FlatInfo[i][plata]);
				}
			case 1: dengi = 200;
			case 2: dengi = 1000;
			case 3: dengi = 4800;
			case 4: dengi = 14400;
			case 5: dengi = 33600;
			}
			if(FlatInfo[i][plata] > 35000) return SendClientMessage(playerid,-1,"На вашем балансе уже достаточно денег.");
			if(PlayerInfo[playerid][pCash] < dengi) return SendClientMessage(playerid, -1, "Недостаточно денег на банковском счету.");
			FlatInfo[i][plata] += dengi;
			PlayerInfo[playerid][pCash] -= dengi; GivePlayerMoney(playerid, -dengi);
			SendClientMessage(playerid, 0xFFa500AA, "Вы пополнили счет аренды квартиры.");
			updatekvar(i);
		}

		// tuning
	case 8595:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:	ShowPlayerDialog(playerid, 8596, DIALOG_STYLE_LIST, "{808080}Тюнинг-меню - установка закиси азота.", "{2E9AFE}1. {FFFFFF}Запас на x2\n{2E9AFE}2. {FFFFFF}Запас на x5\n{2E9AFE}3. {FFFFFF}Запас на x10", "Далее", "Отмена");
			case 1:	ShowPlayerDialog(playerid, 8597, DIALOG_STYLE_LIST, "{808080}Тюнинг-меню - установка дисков.", "{2E9AFE}1. {FFFFFF}Shadow\n{2E9AFE}2. {FFFFFF}Mega\n{2E9AFE}3. {FFFFFF}Wires\n{2E9AFE}4. {FFFFFF}Classic\n{2E9AFE}5. {FFFFFF}Twist\n{2E9AFE}6. {FFFFFF}Grove\n{2E9AFE}7. {FFFFFF}Atomic\n{2E9AFE}8. {FFFFFF}Dollar\n{2E9AFE}9. {FFFFFF}Базовый комплект", "Далее", "Отмена");
			case 2: {
					ShowPlayerDialog(playerid, 8601, DIALOG_STYLE_MSGBOX,"{808080}Тюнинг-меню - установка гидравлики","{2E9AFE}Вы точно хотите установить гидравлику на автомобиль?","Да","Нет");
					return 1;
				}
			case 3:
				{
					ShowPlayerDialog(playerid, 8129, DIALOG_STYLE_MSGBOX,"{808080}Тюнинг-меню - демонтаж гидравлики","{2E9AFE}Подтвердите демонтаж гидравлики на автомобиле.","Да","Нет");
				}
			}
		}
	case 8129:
		{
			if(!response) return TuneDialog(playerid);
			new h = GetPVarInt(playerid,#P_TuneCar_ID);
			new id_car = GetVehicleIdxByID(h);
			if(id_car != -1)
			{
				aData[id_car][aGydra] = 0;			
				mysql_function(MySQLGo, 200, "UPDATE `vehicles` SET `Gydra` = '%i' WHERE `Owner` = '%s'", false, "", "", aData[id_car][aGydra], NamePlayer[playerid]);
			}
			RemoveVehicleComponent(h,1087);
			TuneDialog(playerid);
			SendClientMessage(playerid, COLOR_GREEN, "Вы успешно демонтировали гидравлику.");
			return 1;
		}
	case 8601:
		{
			if(!response) return TuneDialog(playerid);
			new h = GetPVarInt(playerid,#P_TuneCar_ID);			
			new id_car = GetVehicleIdxByID(h);
			if(id_car != -1)
			{
				aData[id_car][aGydra] = 1087;			
				mysql_function(MySQLGo, 200, "UPDATE `vehicles` SET `Gydra` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aGydra], NamePlayer[playerid]);
			}
			AddVehicleComponent(h,1087);
			TuneDialog(playerid);
			SendClientMessage(playerid, COLOR_GREEN, "Вы успешно установили гидравлику.");
			return 1;
		}
	case 8596:
		{
			if(!response) return TuneDialog(playerid);
			new h = GetPVarInt(playerid,#P_TuneCar_ID);
			new id_car = GetVehicleIdxByID(h);			
			switch(listitem)
			{
			case 0:
				{
					if(id_car != -1)
					{
						aData[id_car][aNitro] = 1008;					
						mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Nitro` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aNitro], NamePlayer[playerid]);
					}
					AddVehicleComponent(h,1008);
					SendClientMessage(playerid, COLOR_GREEN, #Вы установили NITRO с запасом x2.);
					return 1;
				}
			case 1:
				{
					if(id_car != -1)
					{
						aData[id_car][aNitro] = 1009;					
						mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Nitro` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aNitro], NamePlayer[playerid]);
					}
					AddVehicleComponent(h,1009);
					SendClientMessage(playerid, COLOR_GREEN, #Вы установили NITRO с запасом x5.);
					return 1;
				}
			case 2:
				{
					if(id_car != -1)
					{
						aData[id_car][aNitro] = 1010;					
						mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Nitro` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aNitro], NamePlayer[playerid]);
					}
					AddVehicleComponent(h,1010);
					SendClientMessage(playerid, COLOR_GREEN, #Вы установили NITRO с запасом x10.);
					return 1;
				}
			}
			TuneDialog(playerid);
		}
	case 8597:
		{
			if(!response) return TuneDialog(playerid);
			new h = GetPVarInt(playerid,#P_TuneCar_ID);
			new id_car = GetVehicleIdxByID(h);	
			switch(listitem)
			{
			case 0:
				{
					if(id_car != -1)
					{
						aData[id_car][aWheels] = 1073;					
						mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Wheels` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aWheels], NamePlayer[playerid]);
					}
					AddVehicleComponent(h,1073);
					SendClientMessage(playerid, COLOR_GREEN, #Вы установили новые диски Shadow.);
					return 1;
				}
			case 1:
				{
					if(id_car != -1)
					{
						aData[id_car][aWheels] = 1074;					
						mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Wheels` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aWheels], NamePlayer[playerid]);
					}
					AddVehicleComponent(h,1074);
					SendClientMessage(playerid, COLOR_GREEN, #Вы установили новые диски Mega.);
					return 1;
				}
			case 2:
				{
					if(id_car != -1)
					{
						aData[id_car][aWheels] = 1076;					
						mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Wheels` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aWheels], NamePlayer[playerid]);
					}
					AddVehicleComponent(h,1076);
					SendClientMessage(playerid, COLOR_GREEN, #Вы установили новые диски Wires.);
					return 1;
				}
			case 3:
				{
					if(id_car != -1)
					{
						aData[id_car][aWheels] = 1077;					
						mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Wheels` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aWheels], NamePlayer[playerid]);
					}
					AddVehicleComponent(h,1077);
					SendClientMessage(playerid, COLOR_GREEN, #Вы установили новые диски Classic.);
					return 1;
				}
			case 4:
				{
					if(id_car != -1)
					{
						aData[id_car][aWheels] = 1078;					
						mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Wheels` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aWheels], NamePlayer[playerid]);
					}
					AddVehicleComponent(h,1078);
					SendClientMessage(playerid, COLOR_GREEN, #Вы установили новые диски Twist.);
					return 1;
				}
			case 5:
				{
					if(id_car != -1)
					{
						aData[id_car][aWheels] = 1081;					
						mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Wheels` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aWheels], NamePlayer[playerid]);
					}
					AddVehicleComponent(h,1081);
					SendClientMessage(playerid, COLOR_GREEN, #Вы установили новые диски Grove.);
					return 1;
				}
			case 6:
				{
					if(id_car != -1)
					{
						aData[id_car][aWheels] = 1085;					
						mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Wheels` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aWheels], NamePlayer[playerid]);
					}
					AddVehicleComponent(h,1085);
					SendClientMessage(playerid, COLOR_GREEN, #Вы установили новые диски Atomic.);
					return 1;
				}
			case 7:
				{
					if(id_car != -1)
					{
						aData[id_car][aWheels] = 1083;					
						mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Wheels` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aWheels], NamePlayer[playerid]);
					}
					AddVehicleComponent(h,1083);
					SendClientMessage(playerid, COLOR_GREEN, #Вы установили новые диски Dollar.);
					return 1;
				}
			case 8:
				{
					new id = GetVehicleComponentInSlot(h,7);
					if(id == 0) return SendClientMessage(playerid, -1, "На данном авто уже установлен базовый комплект дисков!");
					if(id_car != -1)
					{
						aData[id_car][aWheels] = 0;					
						mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Wheels` = '%i' WHERE `Owner` = '%s'",false,"","", aData[id_car][aWheels], NamePlayer[playerid]);
					}
					RemoveVehicleComponent(h,id);
					SendClientMessage(playerid, COLOR_GREEN, #Вы установили Базовый комплект дисков.);
					return 1;
				}
			}
			return 1;
		}

		//
	case 1550:
		{
			new string[128];
			if(!response) return true;
			switch(listitem)
			{
			case 0: format(string, 128,"{FFFFFF}Вы можете снять с карточки до %d рублей.\n\n{FFFFFF}Введите сумму:", PlayerInfo[playerid][pAccount]), ShowPlayerDialog(playerid, 1551, DIALOG_STYLE_INPUT, "Снятие со счёта банковской карты.", string, "Снять", "Отмена");
			case 1: ShowPlayerDialog(playerid, 15552, DIALOG_STYLE_INPUT, "Пополнение баланса карты.", "{FFFFFF}Для пополнения баланса карты введите желаемую сумму пополнения.\n\nВведите сумму:", "Положить", "Отмена");
			case 2: format(string, 128,"{FFFFFF}Текущий баланс на карточке - %d рублей.", PlayerInfo[playerid][pAccount]), ShowPlayerDialog(playerid, 9299, DIALOG_STYLE_MSGBOX, "Баланс карты.", string, "Закрыть", "");
			case 3: ShowPlayerDialog(playerid, 1552, DIALOG_STYLE_INPUT, "Пополнение счёта мобильного телефона.", "{FFFFFF}Введите номер телефона, на который вы хотите положить деньги.", "Пополнить", "Отмена");
			case 4: OnPlayerCommandText(playerid, "/tcoplata");
			case 5:
				{
					if(!PlayerInfo[@p][pNewHouse]) return SCM(@p,-1,"У вас нет дома!");
					SPD(@p,1245,DIALOG_STYLE_LIST,"Оплата коммунальных услуг","{ffffff}1. 1 день\n2. 3 дня\n3. 1 неделя\n4. 2 недели","Выбор","Отмена");
				}
			case 6: SPD(@p,1261,DIALOG_STYLE_LIST,"Управление счетом организации","{808080}1. {FFFFFF}Проверить баланс\n{808080}2. {FFFFFF}Снять со счета\n{808080}3. {FFFFFF}Положить на счет","Выбор","Отмена");
			}
		}
	case 1551:
		{
			if(!response) return true;
			new string[128];
			for(new b = 0; b < sizeof(Atm); b++)
			{
				if(PlayerToPoint(3.0, playerid, Atm[b][atmX], Atm[b][atmY], Atm[b][atmZ]) && Atm[b][atmOwned] == 1)
				{
					if(!strlen(inputtext)) return format(string, 128,"{FFFFFF}Вы можете снять с карты до %d рублей.\n\n{FFFFFF}Введите сумму:", PlayerInfo[playerid][pAccount]), ShowPlayerDialog(playerid, 1551, DIALOG_STYLE_INPUT, "Снятие со счёта!", string, "Снять", "Отмена");
					new money = strval(inputtext);
					new plus = floatround((money / 100) * 2);
					if(PlayerInfo[playerid][pAccount] < (money+plus)) return SendClientMessage(playerid,COLOR_GRAD1,"На карте нет такой суммы!");
					if(money < 0) return 1;
					PlayerInfo[playerid][pCash] += money;
					PlayerInfo[playerid][pAccount] -= (money+plus);
					GivePlayerMoney(playerid, money);
					PlayerPlaySound(playerid,1052,0.0,0.0,0.0);					
					Atm[b][atmMoney] += plus;
					format(string,sizeof(string),"Вы успешно сняли с карты %d рублей. Комиссия: 2 процента %d рублей. Баланс карты: %d рублей",money,plus,PlayerInfo[playerid][pAccount]);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
					UpdateAtm(b);
				}
			}
			return 1;
		}
	case 15552:
		{
			if(!response) return true;
			new string[128];
			for(new b = 0; b < sizeof(Atm); b++)
			{
				if(PlayerToPoint(3.0, playerid, Atm[b][atmX], Atm[b][atmY], Atm[b][atmZ]) && Atm[b][atmOwned] == 1)
				{
					if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 15552, DIALOG_STYLE_INPUT, "Положить на счёт!", "{FFFFFF}Для пополнения баланса карты введите желаемую сумму пополнения.\n\nВведите сумму:", "Положить", "Отмена");
					if(PlayerInfo[playerid][pCash] < strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"У вас нет такой суммы!");
					if(strval(inputtext) < 0) return 1;
					PlayerInfo[playerid][pCash] -= strval(inputtext);
					PlayerInfo[playerid][pAccount] += strval(inputtext);
					GivePlayerMoney(playerid, strval(inputtext));
					PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
					new plus = floatround((strval(inputtext) / 100) * 10);
					Atm[b][atmMoney] += plus;
					format(string,sizeof(string),"Вы успешно положили на карту %d рублей. Комиссия: 10 процентов. Баланс карты: %d рублей",strval(inputtext), PlayerInfo[playerid][pAccount]), SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
					UpdateAtm(b);
				}
			}
			return 1;
		}
	case 20001:
		{
			if(!response)
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
			OnPlayerCommandText(playerid,"/buycar");
		}
	case 8023:
		{
			new carid = GetPlayerVehicleID(playerid);
			GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
			if(!response) return true;
			switch(listitem)
			{
			case 0: OnPlayerCommandText(playerid,"/engine");
			case 1:
				{
					if(lights == 0) SetVehicleParamsEx(carid,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
					else SetVehicleParamsEx(carid,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
				}
			case 2: {
					if(carid < 1000)	OnPlayerCommandText(playerid,"/lock");
					else
					{
						if(doors)SetVehicleParamsEx(carid,engine,lights,alarm,0,bonnet,boot,objective);
						else SetVehicleParamsEx(carid,engine,lights,alarm,1,bonnet,boot,objective);
					}
				}
			case 3:
				{
					if(bonnet == 0) SetVehicleParamsEx(carid,engine,lights,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
					else SetVehicleParamsEx(carid,engine,lights,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
				}
			case 4:
				{
					if(boot == 0) SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_ON,objective);
					else SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_OFF,objective);
				}
			case 5: OnPlayerCommandText(playerid,"/sb");
			case 6: OnPlayerCommandText(playerid,"/park");
			}
		}
	case 125:
		{
			if(!response) return true;
			SetPlayerSkin(playerid,27);
			switch(random(2))
			{
			case 0:SetPlayerCheckpoint(@p,-2162.0549,-525.4449,39.3283,2.0);
			case 1:SetPlayerCheckpoint(@p,-2155.7593,-498.4414,37.9468,2.0);
			case 2:SetPlayerCheckpoint(@p,-2134.4932,-518.0827,39.4268,2.0);
			}
			SetPlayerAttachedObject(playerid, 0 ,341, 6,0,0,0.0,0.0,0);
			SetPVarInt(@p,#P_JobLess_On,1);
			SendClientMessage(playerid,COLOR_WHITE,"Вы вышли на смену. Отправляйтесь за бревнами!");
			return true;
		}
	case 1603:
		{
			if(!response) return true;
			new cashdeposit = strval(inputtext);
			if(cashdeposit > PlayerInfo[playerid][pCash]) return SendClientMessage(playerid, COLOR_RED, "[Ошибка]:{FFFFFF} У вас нет таких денег!"), ShowPlayerDialog(playerid,1603,DIALOG_STYLE_INPUT,"{08A9FA}Казино `Фортуна`","{FFFFFF}Минимальная ставка: {F5EE09}1000 рублей\n{FFFFFF}Максимальная ставка: {F5EE09}500.000 рублей\n{6CF509}Желаем удачи!","OK","Закрыть");
			if(cashdeposit < 1000 || cashdeposit > 500000) return SendClientMessage(playerid, COLOR_RED, "[Ошибка]:{FFFFFF} Ставка должна быть не менее 1000 рублей и не более 500000 рублей"), ShowPlayerDialog(playerid,1603,DIALOG_STYLE_INPUT,"{08A9FA}Казино `Фортуна`","{FFFFFF}Минимальная ставка: {F5EE09}1000 рублей\n{FFFFFF}Максимальная ставка: {F5EE09}500.000 рублей\n{6CF509}Желаем удачи!","OK","Закрыть");
			TogglePlayerControllable(playerid, 0);
			SendClientMessage(playerid, -1, "Ваша ставка принята, ожидайте...");
			PlayerInfo[playerid][pCash] -= cashdeposit;
			GivePlayerMoney(playerid,-cashdeposit);
			pAvtomat[playerid] = cashdeposit;
			SetTimerEx("IgroAvtomat", 5000 , false, "i", playerid);
			return 1;
		}
	case 126:
		{
			new string[128];
			if(!response) return true;
			RemovePlayerAttachedObject(playerid, 0);
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
			if(PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1) SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
			if(PlayerInfo[playerid][pMember] == 0 || PlayerInfo[playerid][pLeader] == 0) SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
			PlayerInfo[playerid][pCash] += gpvi(@p,#P_JobLess_Br)*50;
			GivePlayerMoney(playerid, gpvi(@p,#P_JobLess_Br)*50);
			format(string, sizeof(string), "Вы закончили работу, ваша зарплата составляет: {A41C1C}%d{FFFFFF} рублей.", gpvi(@p,#P_JobLess_Br)*50), SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "Вы принесли {A41C1C}%d{FFFFFF} связок(ки) бревен.",gpvi(@p,#P_JobLess_Br)), SendClientMessage(playerid, COLOR_WHITE, string);
			DeletePVar(@p,#P_JobLess_Br);
			DeletePVar(@p,#P_JobLess_On);
			DeletePVar(@p,#P_JobLess_St);
			DisablePlayerCheckpoint(@p);
			return true;
		}
	case 127:
		{
			if(!response) return true;
			switch(GetPVarInt(playerid,#Mus_Job))
			{
			case 0:
				{
					SetPVarInt(playerid,#Mus_Job,1);
					PlayerInfo[@p][pJob] = 22;
					SetPlayerSkin(playerid,27);
					SendClientMessage(playerid,-1,"{FFFFFF}Вы успешно устроились водителем мусоровоза. Возьмите автомобиль и приступайте к работе!");
					return 1;
				}
			case 1:
				{
					SetVehicleToRespawn(GetPVarInt(playerid,#Mus_Car));
					new summ = GetPVarInt(playerid,#Mus_Count) * Mus_Dm;
					new str1[128];
					format(str1,sizeof(str1),"Рабочий день водителя мусоровоза завершен! Заработано: %d рублей.",summ);
					SendClientMessage(playerid,COLOR_GREEN,str1);
					PlayerInfo[playerid][pCash] += summ;
					GivePlayerMoney(playerid,summ);
					DeletePVar(playerid,#Mus_Act);
					DeletePVar(playerid,#Mus_Car);
					DeletePVar(playerid,#Mus_Count);
					DeletePVar(playerid,#Mus_Start);
					DeletePVar(playerid,#Mus_Job);
					PlayerInfo[@p][pJob] = 0;
					SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
					return 1;
				}
			}
		}
	case 128:
		{
			if(!response) return true;
			new frak = -1;
			switch(PlayerInfo[playerid][pMember])
			{
			case 1:frak = 0;
			case 4:frak = 1;
			case 6:frak = 2;
			case 19:frak = 3;
			}
			if(frak == -1) return SendClientMessage(playerid,COLOR_LIGHTRED,#Произошла критическая ошибка профиля! Обратитесь к Администратору);
			SetPVarInt(playerid,#Idx_frak,frak);
			printf("frak = %d, listitem = %d",frak,listitem);
			switch(listitem)
			{
			case 0:
				{
					if(GetPVarInt(playerid,#P_Jobs) == 0)
					{
						new itt = frak_r_info[frak][0][kols_itt];
						new str[114*MAX_ITEMS_S];
						for(new i = 0; i < itt; i++)
						{
							format(str,sizeof(str),"%s{ffffff}- %s\n",str,frak_r_info[frak][i][name_s]);
						}
						ShowPlayerDialog(playerid,129,DIALOG_STYLE_LIST,"Рабочая форма",str,"Выбор","Отмена");
						return 1;
					}
					else
					{
						SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
						ResetPlayerWeapons(playerid);
						if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
						if(IsPlayerAttachedObjectSlotUsed(playerid,0)) RemovePlayerAttachedObject(playerid,0);						
						SetPlayerArmour(playerid,0.0);
						DeletePVar(playerid,#P_Jobs);
						SendClientMessage(playerid,COLOR_LIGHTBLUE,#Рабочий день завершен.);
						return 1;
					}
				}
			case 1:
				{
					if(GetPVarInt(playerid,#P_Jobs) == 0) return SendClientMessage(playerid,COLOR_GRAD1,#Для того чтобы взять боекомплект выйдите на смену!);
					GetWeaponList(playerid,frak);
					return 1;
				}
			}
		}
	case 129:
		{
			if(!response) return true;
			new itt = listitem;
			new fr = GetPVarInt(playerid,#Idx_frak);
			if(frak_r_info[fr][itt][rang] > PlayerInfo[playerid][pRank]) return SendClientMessage(playerid,COLOR_GRAD1,#Форма не соответсвует вашей должности);
			SetPlayerSkin(playerid,frak_r_info[fr][itt][id0]);
			PlayerInfo[playerid][pChar] = frak_r_info[fr][itt][id0];
			SetPVarInt(playerid,#P_Jobs,1);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,#Рабочий день начат.);
			return 1;
		}
	case 130:
		{
			if(!response) return true;
			new itt = listitem;
			new fr = GetPVarInt(playerid,#Idx_frak);
			if(!strcmp(frak_g_info[fr][itt][name_s],"Бронежилет.",true))
			SetPlayerArmour(playerid,100.0);
			else
			GivePlayerWeapon(playerid,frak_g_info[fr][itt][id0],frak_g_info[fr][itt][rang]);
			static const dlg_str[] = "Выдано: {D0C412}%s";
			new str[sizeof(dlg_str)-2+90];
			format(str,sizeof(str),dlg_str,frak_g_info[fr][itt][name_s]);
			SendClientMessage(playerid,COLOR_GREEN,str);
			return GetWeaponList(playerid,fr);
		}
	case 131:
		{
			if(!response) return true;
			if(GetPVarInt(playerid,#J_Lift) == listitem+1) return SendClientMessage(playerid,COLOR_GRAD1,#Вы и так на этом этаже!);
			new id_pod = GetPVarInt(playerid,#J_PodID);
			new ej = listitem+1;
			if(listitem == 0) Hide_Mon(playerid,PodInfo[id_pod][pWorld],1);
			else Hide_Mon(playerid,PodInfo[id_pod][pWorld]+(ej*100),ej);
		}
	case RADIO:
		{
			new Float:xr,Float:yr,Float:zr, sbelt[100], carid = GetPlayerVehicleID(playerid); GetPlayerPos(playerid,xr,yr,zr);
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					for(new i=0; i<MAX_PLAYERS; i++)
					{
						if(GetPlayerVehicleID(i) == carid)
						{
							if(GetPlayerState(i) == PLAYER_STATE_PASSENGER || GetPlayerState(i) == PLAYER_STATE_DRIVER)
							{	
								PlayAudioStreamForPlayer(i, "http://www.zaycev.fm:9001/rnb/ZaycevFM(128)", xr,yr,zr, float(5000), true);
								strmid(CarRadio[carid], "http://www.zaycev.fm:9001/rnb/ZaycevFM(128)", 0, strlen("http://www.zaycev.fm:9001/rnb/ZaycevFM(128)"));
								
							}
						}
					}
					format(sbelt, sizeof(sbelt), "* %s включил в автомобиле радиостанцию «Zaycev FM»", NamePlayer[playerid]);
					ProxDetector(15.0, playerid, sbelt, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				}
			case 1:
				{
					for(new i=0; i<MAX_PLAYERS; i++)
					{
						if(GetPlayerVehicleID(i) == carid)
						{
							if(GetPlayerState(i) == PLAYER_STATE_PASSENGER || GetPlayerState(i) == PLAYER_STATE_DRIVER) 
							{
								PlayAudioStreamForPlayer(i, "http://s3.radioheart.ru:8043/RH376", xr,yr,zr, float(5000), true);
								strmid(CarRadio[carid], "http://s3.radioheart.ru:8043/RH376", 0, strlen("http://s3.radioheart.ru:8043/RH376"));
							}
						}
					}
					format(sbelt, sizeof(sbelt), "* %s включил в автомобиле радиостанцию «Европа+»", NamePlayer[playerid]);
					ProxDetector(15.0, playerid, sbelt, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				}
			case 2:
				{
					for(new i=0; i<MAX_PLAYERS; i++)
					{
						if(GetPlayerVehicleID(i) == carid)
						{
							if(GetPlayerState(i) == PLAYER_STATE_PASSENGER || GetPlayerState(i) == PLAYER_STATE_DRIVER) 
							{
								PlayAudioStreamForPlayer(i, "http://radiorecord.fm/m3u/rr320-28kbps.m3u", xr,yr,zr, float(5000), true);
								strmid(CarRadio[carid], "http://radiorecord.fm/m3u/rr320-28kbps.m3u", 0, strlen("http://radiorecord.fm/m3u/rr320-28kbps.m3u"));
							}
						}
					}
					format(sbelt, sizeof(sbelt), "* %s включил в автомобиле радиостанцию «Radio Record»", NamePlayer[playerid]);
					ProxDetector(15.0, playerid, sbelt, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				}
			case 3:
				{
					for(new i=0; i<MAX_PLAYERS; i++)
					{
						if(GetPlayerVehicleID(i) == carid)
						{
							if(GetPlayerState(i) == PLAYER_STATE_PASSENGER || GetPlayerState(i) == PLAYER_STATE_DRIVER) 
							{
								PlayAudioStreamForPlayer(i, "http://stream02.media.rambler.ru/auto128.mp3", xr,yr,zr, float(5000), true);
								strmid(CarRadio[carid],"http://stream02.media.rambler.ru/auto128.mp3" , 0, strlen("http://stream02.media.rambler.ru/auto128.mp3"));
							}
						}
					}
					format(sbelt, sizeof(sbelt), "* %s включил в автомобиле радиостанцию «Авторадио»", NamePlayer[playerid]);
					ProxDetector(15.0, playerid, sbelt, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				}
			case 4:
				{
					for(new i=0; i<MAX_PLAYERS; i++)
					{
						if(GetPlayerVehicleID(i) == carid)
						{
							if(GetPlayerState(i) == PLAYER_STATE_PASSENGER || GetPlayerState(i) == PLAYER_STATE_DRIVER) 
							{
								PlayAudioStreamForPlayer(i, "http://radiopotok.ru/f/m3u/station_2.m3u", xr,yr,zr, float(5000), true);
								strmid(CarRadio[carid],"http://radiopotok.ru/f/m3u/station_2.m3u" , 0, strlen("http://radiopotok.ru/f/m3u/station_2.m3u"));
							}
						}
					}
					format(sbelt, sizeof(sbelt), "* %s включил в автомобиле радиостанцию «Радио шансон»", NamePlayer[playerid]);
					ProxDetector(15.0, playerid, sbelt, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				}
			case 5:
				{
					for(new i=0; i<MAX_PLAYERS; i++)
					{
						if(GetPlayerVehicleID(i) == carid)
						{
							if(GetPlayerState(i) == PLAYER_STATE_PASSENGER || GetPlayerState(i) == PLAYER_STATE_DRIVER) 
							{
								PlayAudioStreamForPlayer(i, "http://radiopotok.ru/f/m3u/station_33.m3u", xr,yr,zr, float(5000), true);
								strmid(CarRadio[carid],"http://radiopotok.ru/f/m3u/station_33.m3u", 0, strlen("http://radiopotok.ru/f/m3u/station_33.m3u"));
							}
						}
					}
					format(sbelt, sizeof(sbelt), "* %s включил в автомобиле радиостанцию «Наше радио»", NamePlayer[playerid]);
					ProxDetector(15.0, playerid, sbelt, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				}
			case 6:
				{
					for(new i=0; i<MAX_PLAYERS; i++)
					{
						if(GetPlayerVehicleID(i) == carid)
						{
							if(GetPlayerState(i) == PLAYER_STATE_PASSENGER || GetPlayerState(i) == PLAYER_STATE_DRIVER) 
							{
								StopAudioStreamForPlayer(i);
								CarRadio[carid] = "";
							}
						}
					}
					format(sbelt, sizeof(sbelt), "* %s выключил радиостанцию в автомобиле.", NamePlayer[playerid]);
					ProxDetector(15.0, playerid, sbelt, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				}
			}
			return 1;
		}
	case 9413:
		{
			new string[64];
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					foreach(new i:Player)
					{
						if(PlayerInfo[i][pNotLic] == 1) format(string, 64, "Сотрудник нотариальной конторы: %s[%d]. Номер телефона: ", NamePlayer[i], i, PlayerInfo[i][pPnumber]), SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
			case 1: OnPlayerCommandText(playerid,"/leaders");
			case 2: OnPlayerCommandText(playerid,"/admins");
			}
		}
	case 9536:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0) return SendClientMessage(playerid,-1, "Вы не можете устроиться на работу шахтёра!");
			if(GetPVarInt(playerid, "jobshaxta") == 0)
			{
				SetPVarInt(playerid,"jobshaxta", 1), SetPVarInt(playerid,"moneyshaxta", 0), SetPVarInt(playerid,"oldskinshaxta", GetPlayerSkin(playerid)), SetPVarInt(playerid,"Nesti", 0), SetPVarInt(playerid,"Proverka", 0);
				SetPlayerSkin(playerid, 260);
				SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
				SendClientMessage(playerid,0xFFFFFFFF,"Вы успешно начали смену! Найдите место добычи руды!");
				return true;
			}
			else
			{
				DisablePlayerCheckpoint(playerid);
				ApplyAnimation(playerid,"PED", "IDLE_tired", 4.1, 0, 1, 1, 0, 1);
				SetPlayerSkin(playerid, GetPVarInt(playerid,"oldskinshaxta"));
				SFCM(playerid, -1, "Вы закончили смену и заработали {2E9AFE}%i {FFFFFF}рублей. Приходите еще!", GetPVarInt(playerid,"moneyshaxta"));
				PlayerInfo[playerid][pCash] += GetPVarInt(playerid,"moneyshaxta"), GivePlayerMoney(playerid, GetPVarInt(playerid,"moneyshaxta"));
				DeletePVar(playerid,"jobshaxta"), DeletePVar(playerid,"moneyshaxta"), DeletePVar(playerid,"oldskinshaxta"), DeletePVar(playerid,"Nesti"), DeletePVar(playerid,"Proverka");
				RemovePlayerAttachedObject(playerid,4), RemovePlayerAttachedObject(playerid,3);
				return true;
			}
		}
	case 9535:
		{
			if(!response) return 1;
			if(GetPVarInt(playerid, "jobgruz") == 0)
			{
				SetPVarInt(playerid,"oldskin", GetPlayerSkin(playerid));
				SetPVarInt(playerid,"loader", 1), SetPVarInt(playerid,"jobgruz", 1), SetPVarInt(playerid,"moneygruz", 0);
				SetPlayerCheckpoint(playerid, -2373.1421,283.9664,23.7266, 2.0);
				//gruz = CreatePickup(1279, 2, -2373.1421,283.9664,23.7266, 0);
				SetPlayerSkin(playerid, 42);
				SendClientMessage(playerid, -1, "Вы успешно вышли на смену, приступайте к работе.");
				return 1;
			}
			else if(GetPVarInt(playerid, "jobgruz") == 1)
			{
				PlayerInfo[playerid][pCash] += GetPVarInt(playerid,"moneygruz"), GivePlayerMoney(playerid, GetPVarInt(playerid,"moneygruz"));
				SFCM(playerid, -1, "Вы закончили смену и заработали {2E9AFE}%i {FFFFFF}рублей.", GetPVarInt(playerid,"moneygruz"));
				SetPlayerSkin(playerid, GetPVarInt(playerid,"oldskin"));
				DisablePlayerCheckpoint(@p);
				DeletePVar(playerid,"loader"), DeletePVar(playerid,"oldskin"), DeletePVar(playerid,"moneygruz"), DeletePVar(playerid,"jobgruz");
			}
		}
	case 9800:
		{
			if(!response) return 1;
			new atmid = PlayerInfo[playerid][pAtm];
			if(atmid == 255) return SendClientMessage(playerid, -1, "Вы не владеете казино!");
			switch(listitem)
			{
			case 0: if(atmid >= 0) return PrintAtm(playerid, atmid);
			case 1: OnPlayerCommandText(playerid,"/atmlock");
			case 2: ShowPlayerDialog(playerid, 9801, DIALOG_STYLE_INPUT, "Снять со счета", "{FFFFFF}Введите сумму которую вы хотите снять:", "Выбрать", "Отмена");
			case 3: ShowPlayerDialog(playerid, 9802, DIALOG_STYLE_INPUT, "Положить на счет", "{FFFFFF}Введите сумму которую вы хотите внести:", "Выбрать", "Отмена");
			case 4: OnPlayerCommandText(playerid,"/atmsell");
			}
		}
	case 9801:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return SendClientMessage(playerid, -1, "Вводите текст цифрами!");
			new str[128];
			format(str, 128, "/getatmmoney %i", strval(inputtext));
			OnPlayerCommandText(playerid, str);
		}
	case 9802:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return SendClientMessage(playerid, -1, "Вводите текст цифрами!");
			new str[128];
			format(str, 128, "/setatmmoney %i", strval(inputtext));
			OnPlayerCommandText(playerid, str);
		}
	case 9600:
		{
			if(!response) return 1;
			new larekid = PlayerInfo[playerid][pLarek];
			if(larekid == 255) return SendClientMessage(playerid, -1, "Вы не владеете ларьком!");
			switch(listitem)
			{
			case 0: if(larekid >= 0) return PrintLarek(playerid, larekid);
			case 1: OnPlayerCommandText(playerid,"/lareklock");
			case 2: ShowPlayerDialog(playerid, 9601, DIALOG_STYLE_INPUT, "Снять со счета", "{FFFFFF}Введите сумму которую вы хотите снять:", "Выбрать", "Отмена");
			case 3: ShowPlayerDialog(playerid, 9602, DIALOG_STYLE_INPUT, "Положить на счет", "{FFFFFF}Введите сумму которую вы хотите внести:", "Выбрать", "Отмена");
			case 4: ShowPlayerDialog(playerid, 9603, DIALOG_STYLE_INPUT, "Покупка продуктов", "{FFFFFF}Введите количество продуктов которое вы хотите приобрести\n\n{bbbbbb}Пример: 1 продукт равен 2 рублям, 500*2 = 1000 рублей за 500 продуктов:", "Выбрать", "Отмена");
			case 5: OnPlayerCommandText(playerid,"/lareksell");
			}
		}
	case 9603:
		{
			if(!response) return 1;
			new products = strval(inputtext);
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 9603, DIALOG_STYLE_INPUT, "Покупка продуктов", "{FFFFFF}Введите количество продуктов которое вы хотите приобрести\n\n{bbbbbb}Пример: 1 продукт равен 2 рублям, 500*2 = 1000 рублей за 500 продуктов:", "Выбрать", "Отмена");
			if(products < 50 || products > 50000)
			{
				SendClientMessage(playerid, -1, "Кол-во продуктов от 50 до 50000.");
				return ShowPlayerDialog(playerid, 9603, DIALOG_STYLE_INPUT, "Покупка продуктов", "{FFFFFF}Введите количество продуктов которое вы хотите приобрести\n\n{bbbbbb}Пример: 1 продукт равен 2 рублям, 500*2 = 1000 рублей за 500 продуктов:", "Выбрать", "Отмена");
			}
			if(PlayerInfo[playerid][pCash] < products*2) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
			if(LarekInfo[PlayerInfo[playerid][pLarek]][larProds] > 50000) return SendClientMessage(playerid, -1, "Склад заполнен.");
			PlayerInfo[playerid][pCash] -= products*2, GivePlayerMoney(playerid, -products*2);
			LarekInfo[PlayerInfo[playerid][pLarek]][larProds] += products;
			UpdateLarek(PlayerInfo[playerid][pLarek]);
			SFCM(playerid, 0x7DCE1CAA, "Вы купили {FFFFFF}%i {7DCE1C}продуктов, на сумму: {FFFFFF}%i {7DCE1C}рублей. Остаток на счете: {FFFFFF}%i {7DCE1C}рублей", products, products*2, PlayerInfo[playerid][pCash]);
		}
	case 9604:
		{
			if(!response) return 1;
			new products = strval(inputtext);
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 9604, DIALOG_STYLE_INPUT, "Покупка продуктов", "{FFFFFF}Введите количество продуктов которое вы хотите приобрести\n\n{bbbbbb}Пример: 1 продукт равен 2 рублям, 500*2 = 1000 рублей за 500 продуктов:", "Выбрать", "Отмена");
			if(products < 50 || products > 50000)
			{
				SendClientMessage(playerid, -1, "Кол-во продуктов от 50 до 50000.");
				return ShowPlayerDialog(playerid, 9604, DIALOG_STYLE_INPUT, "Покупка продуктов", "{FFFFFF}Введите количество продуктов которое вы хотите приобрести\n\n{bbbbbb}Пример: 1 продукт равен 2 рублям, 500*2 = 1000 рублей за 500 продуктов:", "Выбрать", "Отмена");
			}
			if(PlayerInfo[playerid][pCash] < products*2) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
			new idx = GetFuelIdx(PlayerInfo[playerid][pPbiskey]);
			if(FuelsInfo[idx][sbProducts] > 50000) return SendClientMessage(playerid, -1, "Склад заполнен.");
			PlayerInfo[playerid][pCash] -= products*2, GivePlayerMoney(playerid, -products*2);
			FuelsInfo[idx][sbProducts] += products;
			OnPropUpdate(idx);
			SFCM(playerid, 0x7DCE1CAA, "Вы купили {FFFFFF}%i {7DCE1C}продуктов, на сумму: {FFFFFF}%i {7DCE1C}рублей. Остаток на счете: {FFFFFF}%i {7DCE1C}рублей", products, products*2, PlayerInfo[playerid][pCash]);
		}
	case 9601:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return SendClientMessage(playerid, -1, "Вводите текст цифрами!");
			new str[128];
			format(str, 128, "/getlarekmoney %i", strval(inputtext));
			OnPlayerCommandText(playerid, str);
		}
	case 9602:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return SendClientMessage(playerid, -1, "Вводите текст цифрами!");
			new str[128];
			format(str, 128, "/setlarekmoney %i", strval(inputtext));
			OnPlayerCommandText(playerid, str);
		}
	case 9357:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][pPbiskey] == 255) return SendClientMessage(playerid, -1, "Вы не владеете бизнесом!");
			switch(listitem)
			{
			case 0:PrintFuelsInfo(playerid,GetFuelIdx(PlayerInfo[playerid][pPbiskey]));
			case 1:OnPlayerCommandText(playerid,"/lockfuel");
			case 2:ShowPlayerDialog(playerid, 9358, DIALOG_STYLE_INPUT, "Снять со счета", "{FFFFFF}Введите сумму которую вы хотите снять:", "Выбрать", "Отмена");
			case 3:ShowPlayerDialog(playerid, 9359, DIALOG_STYLE_INPUT, "Положить на счет", "{FFFFFF}Введите сумму которую вы хотите внести:", "Выбрать", "Отмена");
			case 4:ShowPlayerDialog(playerid, 9360, DIALOG_STYLE_INPUT, "Цена бизнеса", "{FFFFFF}Введите новую стоимость бизнеса:", "Выбрать", "Отмена");
			case 5:ShowPlayerDialog(playerid, 9604, DIALOG_STYLE_INPUT, "Покупка продуктов", "{FFFFFF}Введите количество продуктов которое вы хотите купить\n\n{bbbbbb}Пример: 1 продукт равен 2 рублям, 500*2 = 1000 рублей за 500 продуктов:", "Выбрать", "Отмена");
			case 6:ShowPlayerDialog(playerid,1235,DIALOG_STYLE_INPUT,"Название бизнеса","Введите новое название бизнеса\n{ff0000}Недопускается использование спец.символов!","Далее","Отмена");
			case 7:OnPlayerCommandText(playerid,"/sellfuel");
			}
		}		
	case 1235:
		{
			if(!response) return 1;
			new j = GetFuelIdx(PlayerInfo[playerid][pPbiskey]);
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1235,DIALOG_STYLE_INPUT,"Название бизнеса","Введите новое название бизнеса\n{ff0000}Недопускается использование спец.символов!\nМаксимальная длинна 64 символа","Далее","Отмена");
			if(strlen(inputtext) >= 64) return ShowPlayerDialog(playerid,1235,DIALOG_STYLE_INPUT,"Название бизнеса","Введите новое название бизнеса\n{ff0000}Недопускается использование спец.символов!\nМаксимальная длинна 64 символа","Далее","Отмена");
			strmid(FuelsInfo[j][sbMessage],inputtext,0,strlen(inputtext),strlen(inputtext)+1);
			OnPropUpdate(j);
			static const str0[] = "{FFFFFF}Заправка: {2E9AFE}%s\n{FFFFFF}Владелец: {2E9AFE}%s\n{FFFFFF}Цена бензина: {2E9AFE}%d {FFFFFF}рублей за литр\n\n{bbbbbb}Для заправки автомобиля введите: /fill";
			new str[sizeof(str0)+MAX_PLAYER_NAME+64+6];
			format(str,sizeof(str),str0,FuelsInfo[j][sbMessage], FuelsInfo[j][sbOwner], FuelsInfo[j][sbPriceProd]);
			UpdateDynamic3DTextLabelText(FuelsInfo[j][sbLabel], -1, str);
			SendClientMessage(playerid,-1,"Название изменено.");
			return 1;
		}
	case 9358:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return SendClientMessage(playerid, -1, "Вводите текст цифрами!");
			new str[128];
			format(str, 128, "/getfuel %i", strval(inputtext));
			OnPlayerCommandText(playerid, str);
		}
	case 9359:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return SendClientMessage(playerid, -1, "Вводите текст цифрами!");
			new str[128];
			format(str, 128, "/setfuel %i", strval(inputtext));
			OnPlayerCommandText(playerid, str);
		}
	case 9360:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return SendClientMessage(playerid, -1, "Вводите текст цифрами!");
			new str[128];
			format(str, 128, "/cenafuel %i", strval(inputtext));
			OnPlayerCommandText(playerid, str);
		}
	case 9623:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: OnPlayerCommandText(playerid,"/stats");
			case 1: OnPlayerCommandText(playerid,"/help");
			case 2: ShowPlayerDialog(playerid, 9976, DIALOG_STYLE_LIST, "{2E9AFE}Связь с администрацией", "{808080}1. {FFFFFF}Задать вопрос помощникам по игре.\n{808080}2. {FFFFFF}Отправить жалобу администрации.", "Выбрать", "«");
			case 3: OnPlayerCommandText(playerid,"/donate");
			case 4: ShowPlayerDialog(playerid, 2323, DIALOG_STYLE_LIST, "{2E9AFE}Настройки безопасности", "{808080}1. {FFFFFF}Сменить пароль\n{808080}2. {FFFFFF}Информация", "Выбрать", "Назад");
			case 5: OnPlayerCommandText(playerid,"/inv");
			case 6: 
				{
					static const str0[] = "{808080}1.{FFFFFF} Настройки стиля ходьбы.\n{808080}2.{FFFFFF} Настройки стиля разговора.\n{808080}3.{FFFFFF} Выключение/включение ников игроков. %s\n{808080}4.{FFFFFF} Отключение/включение спидометра в автомобиле. %s";
					new str[sizeof(str0)+14+14+14];
					format(str,sizeof(str),str0,GetPVarInt(playerid,#P_NameTags) ? ("{ff0000}[OFF]"):("{00ff00}[ON]"),GetPVarInt(playerid,#P_Speed_On) ? ("{ff0000}[OFF]"):("{00ff00}[ON]"));
					ShowPlayerDialog(playerid, 1224, DIALOG_STYLE_LIST,"{2E9AFE}Настройки персонажа", str,"Выбор","Отмена");
				}
			case 7: OnPlayerCommandText(playerid,"/online111");
			}
		}
	case 9976:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, 9987, DIALOG_STYLE_INPUT,"{2E9AFE}Задать вопрос помощникам","{FFFFFF}Вы собираетесь задать вопрос помощникам по игре.\n\nПожалуйста не грубите.\nОписывайте ситуацию четко и ясно.","Скрыть","Назад");
			case 1: ShowPlayerDialog(playerid,100,DIALOG_STYLE_INPUT,"{2E9AFE}Связь с администрацией","{FFFFFF}Вы собираетесь подать жалобу администрации.\n\nПожалуйста не грубите.\nОписывайте ситуацию четко и ясно.","Скрыть","Назад");
			}
		}
	case 2323:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,9231,DIALOG_STYLE_INPUT,"{2E9AFE}Смена пароля","{FFFFFF}Чтобы не подвергнуть ваш аккаунт взлому, рекомедуем придумать сложный пароль.\nПароль должен содержать буквы латинского алфавита и символы.","Сменить","<< Назад");
			case 1: ShowPlayerDialog(playerid,2324,DIALOG_STYLE_MSGBOX,"{2E9AFE}Информация","{FFFFFF}Рекомендуем использовать сложный пароль, содержащий набор букв и цифр.\n- Никогда не разглашайте свой пароль кому-либо .\n- Не используйте свой пароль на сторонних серверах, это может вызвать взлом вашего игрового аккаунта.","Ок","");
			}
		}
	case 9231:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,9231,DIALOG_STYLE_INPUT,"{2E9AFE}Смена пароля","{FFFFFF}Чтобы не подвергнуть ваш аккаунт взлому, рекомендуем использовать сложный пароль.\nСодержащий набор букв и цифр.","Сменить","<< Назад");
			new string[144];
			strmid(PlayerInfo[playerid][pKey], inputtext, 0, sizeof(string), 255);
			format(string, sizeof(string), "Ваш новый пароль: {FFFFFF}%s{2E9AFE}", inputtext), SendClientMessage(playerid, COLOR_GREEN, string);

			//
			new query[128];
			format(query,sizeof(query),"UPDATE `accounts` SET `pKey` = '%s' WHERE `id` = '%d'",inputtext,PlayerInfo[playerid][pID]);
			mysql_tquery(MySQLGo, query);
			return 1;
		}
	case 9987:
		{
			if(!response) return OnPlayerCommandText(playerid,"/mn");
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT,"{FF6F00}Связь с администрацией","{FFFFFF}Вы собираетесь задать вопрос / подать жалобу администрации / помощникам по игре.\n\nПожалуйста, не грубите, и соблюдайте адекватность.\nОписывайте жалобу / вопрос, четко и ясно.","Скрыть","Назад");
			if(PlayerInfo[playerid][pMutedTime] > 0) return 1;
			if(strfind(inputtext, "можно лидерку?", true) != -1 || strfind(inputtext, "можно лидерку", true) != -1 || strfind(inputtext, "Можно лидерку?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник: Конечно, заполните заявление на форуме.");
			else if(strfind(inputtext, "можно админку?", true) != -1 || strfind(inputtext, "можно админку", true) != -1 || strfind(inputtext, "Можно админку?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник по игре: К сожалению, админ-права нужно заработать");
			else if(strfind(inputtext, "что такое рп?", true) != -1 || strfind(inputtext, "Что такое рп", true) != -1 || strfind(inputtext, "Что такое РП?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник по игре: Role Play - Игра по ролям, отыгровка своей роли!");
			else if(strfind(inputtext, "что такое мг?", true) != -1 || strfind(inputtext, "Что такое мг", true) != -1 || strfind(inputtext, "Что такое МГ?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник по игре: MetaGaming - Использование внеролевой информации [OOC] в [IC]");
			else if(strfind(inputtext, "что такое дм?", true) != -1 || strfind(inputtext, "Что такое дм", true) != -1 || strfind(inputtext, "Что такое ДМ?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник по игре: DM - Убийство игроков без причины.");
			else if(strfind(inputtext, "что такое ск?", true) != -1 || strfind(inputtext, "Что такое ск", true) != -1 || strfind(inputtext, "Что такое СК?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник по игре: SK - Убийство на месте появления.");
			else if(strfind(inputtext, "что такое тк?", true) != -1 || strfind(inputtext, "Что такое тк", true) != -1 || strfind(inputtext, "Что такое ТК?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник по игре: TK - Нанесения телесных повреждений дружественному юниту.");
			if(GetPVarInt(playerid, "anti_flood_report") > gettime()) return SendClientMessage(playerid, -1,"• {AC0000}[Ошибка] {ffffff}Писать в репорт можно один раз в минуту.");
			new string[128];
			format(string, 128, "{2E9AFE}Вопрос от {CCFF00}%s[%d]: {2E9AFE}%s", NamePlayer[playerid], playerid, (inputtext));
			SendAdmHelpMessage(0xF57600FF, string);
			SendClientMessage(playerid,COLOR_GREEN,"Ожидайте, в ближайшее время Вам ответит помощник по игре.");
			SetPVarInt(playerid,"anti_flood_report",gettime()+60);
			return 1;
		}
	case 2314:
		{
			if(!response) return 1;
			if(GetCop(playerid) == 0) return SendClientMessage(playerid, COLOR_GRAD2, "Только для сотрудников СЭ");
			new trailer = GetPVarInt(playerid,"shtraf1");
			new id_car = GetVehicleIdxByID(trailer);
			if(id_car == -1) return SCM(@p,-1,"Это авто нельзя арестовать!");
			if(aData[id_car][aFrak] || aData[id_car][aJobs]) return SendClientMessage(playerid, COLOR_GRAD2, "На штраф стоянку можно поставить только личный транспорт");
			if(!strlen(inputtext) || strlen(inputtext) >= 32) return ShowPlayerDialog(playerid,2314,1,"Арест транспорта","Ошибка: максимум 32 символа\nВведите причину ареста транспорта:","Ок","Отмена");
			if(aData[id_car][aArrest] == 1) return SendClientMessage(playerid, COLOR_GRAD2, "Транспорт уже на штрафстоянке");
			ArestCar(playerid, trailer, inputtext);
			SetVehicleVirtualWorld(trailer, 10);
			SendClientMessage(playerid, COLOR_GRAD2, "Вы успешно закрепили транспорт на штрафстоянке");
			return 1;
		}
	case 100:
		{
			if(!response) return OnPlayerCommandText(playerid,"/mn");
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT,"{FF6F00}Связь с администрацией","{FFFFFF}Вы собираетесь задать вопрос / подать жалобу администрации / помощникам по игре.\n\nПожалуйста, не грубите, и соблюдайте адекватность.\nОписывайте жалобу / вопрос, четко и ясно.","Скрыть","Назад");
			if(PlayerInfo[playerid][pMutedTime] > 0) return 1;
			if(strfind(inputtext, "можно лидерку?", true) != -1 || strfind(inputtext, "можно лидерку", true) != -1 || strfind(inputtext, "Можно лидерку?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник: Конечно, заполните заявление на форуме.");
			else if(strfind(inputtext, "можно админку?", true) != -1 || strfind(inputtext, "можно админку", true) != -1 || strfind(inputtext, "Можно админку?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник по игре: К сожалению, админ-права нужно заработать");
			else if(strfind(inputtext, "что такое рп?", true) != -1 || strfind(inputtext, "Что такое рп", true) != -1 || strfind(inputtext, "Что такое РП?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник по игре: Role Play - Игра по ролям, отыгровка своей роли!");
			else if(strfind(inputtext, "что такое мг?", true) != -1 || strfind(inputtext, "Что такое мг", true) != -1 || strfind(inputtext, "Что такое МГ?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник по игре: MetaGaming - Использование внеролевой информации [OOC] в [IC]");
			else if(strfind(inputtext, "что такое дм?", true) != -1 || strfind(inputtext, "Что такое дм", true) != -1 || strfind(inputtext, "Что такое ДМ?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник по игре: DM - Убийство игроков без причины.");
			else if(strfind(inputtext, "что такое ск?", true) != -1 || strfind(inputtext, "Что такое ск", true) != -1 || strfind(inputtext, "Что такое СК?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник по игре: SK - Убийство на месте появления.");
			else if(strfind(inputtext, "что такое тк?", true) != -1 || strfind(inputtext, "Что такое тк", true) != -1 || strfind(inputtext, "Что такое ТК?", true) != -1) return SendClientMessage(playerid, 0xff4f00ff, "БОТ Помощник по игре: TK - Нанесения телесных повреждений дружественному юниту.");
			if(GetPVarInt(playerid, "anti_flood_report") > gettime()) return SendClientMessage(playerid, -1,"• {AC0000}[Ошибка] {ffffff}Писать в репорт можно один раз в минуту.");
			new string[128];
			format(string, 128, "Жалоба от %s[%d]: {FFCD00}%s", NamePlayer[playerid], playerid, (inputtext)), AllVidem(0xff4f00ff, string, 1);
			SendClientMessage(playerid,COLOR_GREEN,"Ожидайте, в ближайшее время Вам ответит администратор сервера.");
			SetPVarInt(playerid,"anti_flood_report",gettime()+60);
			return 1;
		}
	case 277:
		{
			if(!response) return 1;
			if(GetPlayerMoney(playerid) < 2500) return SendClientMessage(playerid,COLOR_RED,"Продавец: У Вас нет 2500 рублей, вынуждены Вам отказать.");
			PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid)-2500;
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"Продавец: выбирай любой велосипед на парковке! Удачи на дорогах!"); GivePlayerMoney(playerid,-2500); verent[playerid] = 1;
		}
	case 5228:
		{
			if(!response) return SendClientMessage(playerid,COLOR_RED, "[INFO] Вы отказались от работы доставщика пиццы.");
			if(PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0) return SendClientMessage(playerid,-1,"Вы не можете устроиться доставщиком пиццы");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы устроились на работу! Чтобы уволиться, введите /quitjob "), SendClientMessage(playerid, COLOR_LIGHTBLUE, "Скоро вы получите ваш первый заказ!");
			PlayerInfo[playerid][pJob] = 30; pizzadone[playerid] = 1;
			return true;
		}
	case 1488:
		{
			new id[2], dialogname[50];
			id[0] = GetPVarInt(playerid, "DOGOVOR1"), id[1] = GetPVarInt(playerid, "DOGOVOR2");
			if(!response)
			{
				SendClientMessage(playerid, -1, "{b4b5b7}Вы отказались от проведения сделки.");
				SendClientMessage(id[0], -1, "{b4b5b7}Нотариус отказался от проведения сделки.");
				SendClientMessage(id[1], -1, "{b4b5b7}Нотариус отказался от проведения сделки.");
				return true;
			}
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[id[0]][pCKey] == 0)
					{
						SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У игрока нет личного транспорта.");
						format(dialogname, sizeof(dialogname), "Что отдаёт игрок 1 - %s(%d)", NamePlayer[id[0]], id[0]), ShowPlayerDialog(playerid, 1488, DIALOG_STYLE_LIST, dialogname, "Транспорт", "Далее", "Отмена");
						return true;
					}
					else
					{
						SetPVarInt(playerid, "SDELKA1", 1);
						format(dialogname, sizeof(dialogname), "Что отдаёт игрок 2 - %s(%d)", NamePlayer[id[1]], id[1]), ShowPlayerDialog(playerid, 1489, DIALOG_STYLE_LIST, dialogname, "Имущество", "Далее", "Отмена");
					}
				}
			case 1:
				{
					if(PlayerInfo[id[0]][pPbiskey] == 0)
					{
						SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У игрока нет бизнеса.");
						format(dialogname, sizeof(dialogname), "Что отдаёт игрок 1 - %s(%d)", NamePlayer[id[0]], id[0]), ShowPlayerDialog(playerid, 1488, DIALOG_STYLE_LIST, dialogname, "Имущество", "Далее", "Отмена");
						return true;
					}
					else
					{
						SetPVarInt(playerid, "SDELKA1", 2);
						format(dialogname, sizeof(dialogname), "Что отдаёт игрок 2 - %s(%d)", NamePlayer[id[1]], id[1]), ShowPlayerDialog(playerid, 1489, DIALOG_STYLE_LIST, dialogname, "Имущество", "Далее", "Отмена");
					}
				}
			case 2:
				{
					if(PlayerInfo[id[0]][pNewHouse] == 0)
					{
						SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У игрока нет дома.");
						format(dialogname, sizeof(dialogname), "Что отдаёт игрок 1 - %s(%d)", NamePlayer[id[0]], id[0]), ShowPlayerDialog(playerid, 1488, DIALOG_STYLE_LIST, dialogname, "Имущество", "Далее", "Отмена");
						return true;
					}
					else
					{
						SetPVarInt(playerid, "SDELKA1", 3);
						format(dialogname, sizeof(dialogname), "Что отдаёт игрок 2 - %s(%d)", NamePlayer[id[1]], id[1]), ShowPlayerDialog(playerid, 1489, DIALOG_STYLE_LIST, dialogname, "Имущество", "Далее", "Отмена");
					}
				}
			case 3:
				{
					if(PlayerInfo[id[0]][pFlatKey] == 0)
					{
						SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У игрока нет квартиры.");
						format(dialogname, sizeof(dialogname), "Что отдаёт игрок 1 - %s(%d)", NamePlayer[id[0]], id[0]), ShowPlayerDialog(playerid, 1488, DIALOG_STYLE_LIST, dialogname, "Имущество", "Далее", "Отмена");
						return true;
					}
					else
					{
						SetPVarInt(playerid, "SDELKA1", 4);
						format(dialogname, sizeof(dialogname), "Что отдаёт игрок 2 - %s(%d)", NamePlayer[id[1]], id[1]), ShowPlayerDialog(playerid, 1489, DIALOG_STYLE_LIST, dialogname, "Имущество", "Далее", "Отмена");
					}
				}
			}
			return true;
		}
	case 1489:
		{
			new id[2], dnum = random(1000000)+10000, ttext[30], dtext[30], dformat[256];
			new dialogname[50];
			id[0] = GetPVarInt(playerid, "DOGOVOR1"), id[1] = GetPVarInt(playerid, "DOGOVOR2");
			if(!response) return SendClientMessage(playerid, -1, "{b4b5b7}Вы отказались от проведения сделки."), SendClientMessage(id[0], -1, "{b4b5b7}Нотариус отказался от проведения сделки."), SendClientMessage(id[1], -1, "{b4b5b7}Нотариус отказался от проведения сделки.");
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[id[1]][pCKey] == 0)
					{
						SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У игрока нет личного транспорта.");
						format(dialogname, sizeof(dialogname), "Что отдаёт игрок 2 - %s(%d)", NamePlayer[id[1]], id[1]), ShowPlayerDialog(playerid, 1489, DIALOG_STYLE_LIST, dialogname, "Имущество", "Далее", "Отмена");
						return true;
					}
					else { SetPVarInt(playerid, "SDELKA2", 1);}
				}
			case 1:
				{
					if(PlayerInfo[id[1]][pPbiskey] == 0)
					{
						SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У игрока нет бизнеса.");
						format(dialogname, sizeof(dialogname), "Что отдаёт игрок 2 - %s(%d)", NamePlayer[id[1]], id[1]), ShowPlayerDialog(playerid, 1489, DIALOG_STYLE_LIST, dialogname, "Имущество", "Далее", "Отмена");
						return true;
					}
					else { SetPVarInt(playerid, "SDELKA2", 2);}
				}
			case 2:
				{
					if(PlayerInfo[id[1]][pNewHouse] == 0)
					{
						SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У игрока нет дома.");
						format(dialogname, sizeof(dialogname), "Что отдаёт игрок 2 - %s(%d)", NamePlayer[id[1]], id[1]), ShowPlayerDialog(playerid, 1489, DIALOG_STYLE_LIST, dialogname, "Имущество", "Далее", "Отмена");
						return true;
					}
					else { SetPVarInt(playerid, "SDELKA2", 3);}
				}
			case 3:
				{
					if(PlayerInfo[id[1]][pFlatKey] == 0)
					{
						SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У игрока нет квартиры.");
						format(dialogname, sizeof(dialogname), "Что отдаёт игрок 2 - %s(%d)", NamePlayer[id[1]], id[1]), ShowPlayerDialog(playerid, 1489, DIALOG_STYLE_LIST, dialogname, "Имущество", "Далее", "Отмена");
						return true;
					}
					else
					{
						SetPVarInt(playerid, "SDELKA2", 4);
					}
				}
			}
			switch(GetPVarInt(playerid, "SDELKA1"))
			{
			case 1: { ttext = "Автомобиль"; SetPVarInt(playerid, "SDELKAID1", PlayerInfo[id[0]][pCKey]); }
			case 2: { ttext = "Бизнес"; SetPVarInt(playerid, "SDELKAID1", PlayerInfo[id[0]][pPbiskey]); }
			case 3: { ttext = "Частный дом"; SetPVarInt(playerid, "SDELKAID1", PlayerInfo[id[0]][pNewHouse]); }
			case 4: { ttext = "Квартира"; SetPVarInt(playerid, "SDELKAID1", PlayerInfo[id[0]][pFlatKey]); }
			}
			switch(GetPVarInt(playerid, "SDELKA2"))
			{
			case 1: { dtext = "Автомобиль"; SetPVarInt(playerid, "SDELKAID2", PlayerInfo[id[1]][pCKey]); }
			case 2: { dtext = "Бизнес"; SetPVarInt(playerid, "SDELKAID2", PlayerInfo[id[1]][pPbiskey]); }
			case 3: { dtext = "Частный дом"; SetPVarInt(playerid, "SDELKAID2", PlayerInfo[id[1]][pNewHouse]); }
			case 4: { dtext = "Квартира"; SetPVarInt(playerid, "SDELKAID2", PlayerInfo[id[1]][pFlatKey]); }
			}
			format(dformat, sizeof(dformat), "{ffffff}\tДоговор обмена №{00ff00} %d{ffffff}\
			\n\n\t\tСторона 1:\n%s\nПредмет обмена: %s(№%d)\
			\n\n\t\tСторона 2:\
			\n%s\nПредмет обмена: %s(№%d)",
			dnum, NamePlayer[id[0]], ttext, GetPVarInt(playerid, "SDELKAID1"), NamePlayer[id[1]], dtext, GetPVarInt(playerid, "SDELKAID2"));
			ShowPlayerDialog(playerid, 1490, DIALOG_STYLE_MSGBOX, "Подтверждение договора обмена!", dformat, "Далее", "Отмена");
			return true;
		}
	case 1490:
		{
			new id[2], dnum = random(1000000)+10000, ttext[30], dtext[30], dformat[256];
			id[0] = GetPVarInt(playerid, "DOGOVOR1"), id[1] = GetPVarInt(playerid, "DOGOVOR2");
			if(!response)
			{
				SendClientMessage(playerid, -1, "{b4b5b7}Вы отказались от проведения сделки.");
				SendClientMessage(id[0], -1, "{b4b5b7}Нотариус отказался от проведения сделки.");
				SendClientMessage(id[1], -1, "{b4b5b7}Нотариус отказался от проведения сделки.");
				return true;
			}
			switch(GetPVarInt(playerid, "SDELKA1"))
			{
			case 1: { ttext = "Автомобиль"; SetPVarInt(playerid, "SDELKAID1", PlayerInfo[id[0]][pCKey]), SetPVarInt(playerid, "SDELKATYPE1", 1); }
			case 2: { ttext = "Бизнес"; SetPVarInt(playerid, "SDELKAID1", PlayerInfo[id[0]][pPbiskey]), SetPVarInt(playerid, "SDELKATYPE1", 2); }
			case 3: { ttext = "Частный дом"; SetPVarInt(playerid, "SDELKAID1", PlayerInfo[id[0]][pNewHouse]), SetPVarInt(playerid, "SDELKATYPE1", 3); }
			case 4: { ttext = "Квартира"; SetPVarInt(playerid, "SDELKAID1", PlayerInfo[id[0]][pFlatKey]), SetPVarInt(playerid, "SDELKATYPE1", 4); }
			}
			switch(GetPVarInt(playerid, "SDELKA2"))
			{
			case 1: { dtext = "Автомобиль"; SetPVarInt(playerid, "SDELKAID2", PlayerInfo[id[1]][pCKey]), SetPVarInt(playerid, "SDELKATYPE2", 1); }
			case 2: { dtext = "Бизнес"; SetPVarInt(playerid, "SDELKAID2", PlayerInfo[id[1]][pPbiskey]), SetPVarInt(playerid, "SDELKATYPE2", 2); }
			case 3: { dtext = "Частный дом"; SetPVarInt(playerid, "SDELKAID2", PlayerInfo[id[1]][pNewHouse]), SetPVarInt(playerid, "SDELKATYPE2", 3); }
			case 4: { dtext = "Квартира"; SetPVarInt(playerid, "SDELKAID2", PlayerInfo[id[1]][pFlatKey]), SetPVarInt(playerid, "SDELKATYPE2", 4); }
			}
			format(dformat, sizeof(dformat), "{ffffff}\tДоговор обмена №{00ff00} %d{ffffff}\
			\n\n\t\tСторона 1:\n%s\nПредмет обмена: %s(№%d)\
			\n\n\t\tСторона 2:\n%s\
			\nПредмет обмена: %s(№%d)",
			dnum, NamePlayer[id[0]], ttext, GetPVarInt(playerid, "SDELKAID1"), NamePlayer[id[1]], dtext, GetPVarInt(playerid, "SDELKAID2"));
			ShowPlayerDialog(id[0], 1491, DIALOG_STYLE_MSGBOX, "Подтверждение договора обмена!", dformat, "Принять", "Отмена");
			ShowPlayerDialog(id[1], 1491, DIALOG_STYLE_MSGBOX, "Подтверждение договора обмена!", dformat, "Принять", "Отмена");
			SendClientMessage(id[0], COLOR_LIGHTRED, "Внимательно изучите предложенный договор!");
			SendClientMessage(id[1], COLOR_LIGHTRED, "Внимательно изучите предложенный договор!");
			SetPVarInt(id[0], "NOTARIUSID", playerid), SetPVarInt(id[1], "NOTARIUSID", playerid);
			return true;
		}
	case 1491:
		{
			new notid = GetPVarInt(playerid, "NOTARIUSID"), player2, fstr[128], id[2];
			if(GetPVarInt(notid, "DOGOVOR1") == playerid) player2 = GetPVarInt(notid, "DOGOVOR2");
			else player2 = GetPVarInt(notid, "DOGOVOR1");
			id[0] = playerid, id[1] = player2;
			SetPVarInt(notid, "DOGOVORACC", 1);
			if(!response)
			{
				format(fstr, sizeof(fstr), "%s отказался от условий договора!", NamePlayer[playerid]), SendClientMessage(playerid, 0x00ff00ff, fstr);
				SendClientMessage(notid, 0xff0000ff, fstr);
				SendClientMessage(player2, 0xff0000ff, fstr);
				return true;
			}
			format(fstr, sizeof(fstr), "%s принял условия договора!", NamePlayer[playerid]), SendClientMessage(playerid, 0x00ff00ff, fstr), SendClientMessage(notid, 0x00ff00ff, fstr);
			SendClientMessage(player2, 0x00ff00ff, fstr);
			switch(GetPVarInt(notid, "DOGOVORACC"))
			{
			case 1:
				{
					SetPVarInt(notid, "DOGOVORACC", 2);
					new prop[2], type[2], id_car[2];
					type[0] = GetPVarInt(notid, "SDELKATYPE1");
					type[1] = GetPVarInt(notid, "SDELKATYPE2");
					if(type[0] == 1)
					{
						prop[0] = PlayerInfo[id[0]][pCKey];
						id_car[0] = GetVehicleIdxByKey(PlayerInfo[id[0]][pCKey]);
						switch(type[1])
						{
						case 1:
							{
								if(GetPVarInt(playerid, #ID2) == playerid) return 1;
								prop[1] = PlayerInfo[id[1]][pCKey];
								id_car[1] = GetVehicleIdxByKey(PlayerInfo[id[1]][pCKey]);
								PlayerInfo[id[0]][pCKey] = prop[1]; //тот кто открыл диалог
								PlayerInfo[id[1]][pCKey] = prop[0];

								strmid(aData[id_car[0]][aOwner], NamePlayer[id[1]], 0, strlen(NamePlayer[id[1]]));
								strmid(aData[id_car[1]][aOwner], NamePlayer[id[0]], 0, strlen(NamePlayer[id[0]]));
								mysql_function(MySQLGo, 200, "UPDATE `vehicles` SET `Owner` = '%s' WHERE `Owner` = '%s'", false, "", "", NamePlayer[id[1]], NamePlayer[id[0]]);
								mysql_function(MySQLGo, 200, "UPDATE `vehicles` SET `Owner` = '%s' WHERE `Owner` = '%s'", false, "", "", NamePlayer[id[0]], NamePlayer[id[1]]);
								SetPVarInt(id[1], #ID2, id[1]);
								format(glob_str,sizeof(glob_str),"[Obmen-Log]: %s и %s успешно обменялись имуществом. Нотариус: %s", NamePlayer[id[0]], NamePlayer[id[1]], NamePlayer[notid]);
								SendAdminMessage(COLOR_GRAD1,glob_str);
								print(glob_str);
							}
						case 2:
							{
								prop[1] = PlayerInfo[id[1]][pPbiskey];
								PlayerInfo[id[0]][pPbiskey] = prop[1];
								PlayerInfo[id[0]][pCKey] = 0;
								PlayerInfo[id[1]][pCKey] = prop[0];
							}
						case 3:
							{
								prop[1] = PlayerInfo[id[1]][pNewHouse];
								PlayerInfo[id[0]][pNewHouse] = prop[1];
								PlayerInfo[id[0]][pCKey] = 0;
								PlayerInfo[id[1]][pCKey] = prop[0];
							}
						case 4:
							{
								prop[1] = PlayerInfo[id[1]][pFlatKey];
								PlayerInfo[id[0]][pFlatKey] = prop[1];
								PlayerInfo[id[0]][pCKey] = 0;
								PlayerInfo[id[1]][pCKey] = prop[0];
							}
						}
					}
					if(type[0] == 2)
					{
						prop[0] = PlayerInfo[id[0]][pPbiskey];
						switch(type[1])
						{
						case 1: { prop[1] = PlayerInfo[id[1]][pCKey]; PlayerInfo[id[0]][pPbiskey] = prop[1]; PlayerInfo[id[0]][pPbiskey] = 255; PlayerInfo[id[1]][pPbiskey] = prop[0]; }
						case 2: { prop[1] = PlayerInfo[id[1]][pPbiskey]; PlayerInfo[id[0]][pPbiskey] = prop[1]; PlayerInfo[id[1]][pPbiskey] = prop[0]; }
						case 3: { prop[1] = PlayerInfo[id[1]][pNewHouse]; PlayerInfo[id[0]][pNewHouse] = prop[1]; PlayerInfo[id[0]][pPbiskey] = 255; PlayerInfo[id[1]][pPbiskey] = prop[0]; }
						case 4: { prop[1] = PlayerInfo[id[1]][pFlatKey]; PlayerInfo[id[0]][pFlatKey] = prop[1]; PlayerInfo[id[0]][pPbiskey] = 255; PlayerInfo[id[1]][pPbiskey] = prop[0]; }
						}
					}
					if(type[0] == 3)
					{
						prop[0] = PlayerInfo[id[0]][pNewHouse];
						switch(type[1])
						{
						case 1: { prop[1] = PlayerInfo[id[1]][pCKey]; PlayerInfo[id[0]][pNewHouse] = prop[1]; PlayerInfo[id[0]][pCKey] = 0; PlayerInfo[id[1]][pNewHouse] = prop[0]; }
						case 2: { prop[1] = PlayerInfo[id[1]][pPbiskey]; PlayerInfo[id[0]][pPbiskey] = prop[1]; PlayerInfo[id[0]][pNewHouse] = 0; PlayerInfo[id[1]][pNewHouse] = prop[0]; }
						case 3: { prop[1] = PlayerInfo[id[1]][pNewHouse]; PlayerInfo[id[0]][pNewHouse] = prop[1]; PlayerInfo[id[1]][pNewHouse] = prop[0]; }
						case 4: { prop[1] = PlayerInfo[id[1]][pFlatKey]; PlayerInfo[id[0]][pFlatKey] = prop[1]; PlayerInfo[id[0]][pNewHouse] = 0; PlayerInfo[id[1]][pNewHouse] = prop[0]; }
						}
					}
					if(type[0] == 4)
					{
						prop[0] = PlayerInfo[id[0]][pFlatKey];
						switch(type[1])
						{
						case 1: { prop[1] = PlayerInfo[id[1]][pCKey]; PlayerInfo[id[0]][pFlatKey] = prop[1]; PlayerInfo[id[0]][pFlatKey] = 0; PlayerInfo[id[1]][pFlatKey] = prop[0]; }
						case 2: { prop[1] = PlayerInfo[id[1]][pPbiskey]; PlayerInfo[id[0]][pPbiskey] = prop[1]; PlayerInfo[id[0]][pFlatKey] = 0; PlayerInfo[id[1]][pFlatKey] = prop[0]; }
						case 3: { prop[1] = PlayerInfo[id[1]][pNewHouse]; PlayerInfo[id[0]][pNewHouse] = prop[1]; PlayerInfo[id[0]][pFlatKey] = 0; PlayerInfo[id[1]][pFlatKey] = prop[0]; }
						case 4: { prop[1] = PlayerInfo[id[1]][pFlatKey]; PlayerInfo[id[0]][pFlatKey] = prop[1]; PlayerInfo[id[1]][pFlatKey] = prop[0]; }
						}
					}

				}
			default: return false;
			}
			return true;
		}
	case 17798:
		{
			if(!response) return nowbiz[playerid] =- 1;
			if(!PlayerInfo[playerid][pPasport]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет паспорта! Получите его в паспортном столе!(Воспользуйтесь GPS навигатором)");
			if(BizInfo[nowbiz[playerid]][sale]) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнес уже куплен");
			if(PlayerInfo[playerid][pBiz] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "У вас уже есть бизнес!");
			if(PlayerInfo[playerid][pCash] < BizInfo[nowbiz[playerid]][stoim]) return SendClientMessage(playerid, COLOR_GRAD1, "У вас недостаточно денег!");
			if(PlayerInfo[playerid][pLevel] < BizInfo[nowbiz[playerid]][lvl]) return SendClientMessage(playerid, COLOR_GRAD1, "У вас недостаточный уровень!");

			PlayerInfo[playerid][pCash] -= BizInfo[nowbiz[playerid]][stoim];
			GivePlayerMoney(playerid, -BizInfo[nowbiz[playerid]][stoim]);
			BizInfo[nowbiz[playerid]][sale] = 1;
			PlayerInfo[playerid][pBiz] = nowbiz[playerid];
			strmid(BizInfo[nowbiz[playerid]][owner],NamePlayer[playerid],0,strlen(NamePlayer[playerid]));
			DestroyPickup(Bizpic);
			Bizpic = CreatePickup(1239,1,BizInfo[nowbiz[playerid]][HOx],BizInfo[nowbiz[playerid]][HOy],BizInfo[nowbiz[playerid]][HOz]);
			OnNewBizUpdate(nowbiz[playerid]);
			SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем! Вы успешно приобрели этот бизнес!");
			nowbiz[playerid] = -1;
			SavePlayer(playerid);
			UpdatePlayerData(@p,"pCash",PlayerInfo[playerid][pCash]);
			UpdatePlayerData(@p,"pPbiskey",PlayerInfo[playerid][pBiz]);
			return 1;
		}
	case 17799:
		{
			if(!response) return 1;
			SendClientMessage(playerid, COLOR_GREY, "/sellbiz - продать бизнес!"), SendClientMessage(playerid, COLOR_GREY, "/bizbank - внести деньги на счет бизнеса!"), SendClientMessage(playerid, COLOR_GREY, "/bizwithdraw - забрать деньги со счета!");
		}
	case 9066:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 9066, 1, "{2aa2c8}Оффлайн{ffffff} Снять","Введите имя игрока которого хотите снять", "Снять", "");
			new query[128];
			mysql_format(MySQLGo, query, sizeof(query), "SELECT `id` FROM `accounts` WHERE `pNickname` = '%s'", inputtext);
			mysql_tquery(MySQLGo, query, "unleaderplayer", "ds", playerid, inputtext);
			return 1;
		}
	case 221:
		{
			if(!response) return 1;
			for(new i = 0; i < 4; i++)
			{
				TextDrawShowForPlayer(@p,td_magskin[i]);
				if(i < 2) PlayerTextDrawShow(@p,ptd_magskin[i][@p]);
				SelectTextDraw(@p,0x0000FFAA);
			}
			TogglePlayerControllable(@p,0);
			spvi(@p,#P_Skin,1);
			SetPPos(@p,-1771.0931,1784.5750,2376.9829);
			SetPlayerFacingAngle(@p,136.8938);
			SetPlayerCameraPos(playerid, -1773.2584, 1782.0804, 2377.6704);
			SetPlayerCameraLookAt(playerid, -1772.5808, 1782.8115, 2377.4905);
			SetPlayerVirtualWorld(@p,@p+1);
			return 1;
		}
	case 2315:
		{
			if(!response) return 1;
			new vehicleidd = GetPVarInt(playerid, "shtraf");
			new id_car = GetVehicleIdxByID(vehicleidd);
			UnArestCar(vehicleidd);
			//new carsid = GetPlayerVehicleID(playerid);
			SendClientMessage(playerid, COLOR_GRAD2, "Вы успешно вытащили автомобиль со штраф-стоянки");
			SetVehicleVirtualWorld(vehicleidd, 0);
			SetVehiclePos(vehicleidd, aData[id_car][aPos][0], aData[id_car][aPos][1], aData[id_car][aPos][2]);
			SetVehicleZAngle(vehicleidd, aData[id_car][aPos][3]);
			SaveVehicle(id_car);
			foreach(new i:Player)
			{
				if(!strcmp(aData[id_car][aOwner], NamePlayer[i], true))
				{
					SendClientMessage(i, COLOR_GRAD1, #Ваш автомобиль был освобожден со штраф-стоянки);
					SendClientMessage(i, COLOR_GRAD1, #Используйте /car чтобы припарковать его снова (обязательно).);
					break;
				}
			}
			DeletePVar(playerid, "shtraf");
			return 1;
		}
	case 1552:
		{
			if(!response) return nomerpop[playerid] = -1, nomerpopsumma[playerid] = -1;
			nomerpop[playerid] = strval(inputtext);
			new string[128];
			format(string,sizeof(string),"{FFFFFF}Номер телефона: %d. Введите сумму пополнения.", nomerpop[playerid]);
			ShowPlayerDialog(playerid, 1553, DIALOG_STYLE_INPUT, "Пополнение мобильного телефона!", string, "Пополнить", "Отмена");
			return 1;
		}
	case 1553:
		{
			if(!response) return nomerpop[playerid] = -1, nomerpopsumma[playerid] = -1;
			nomerpopsumma[playerid] = strval(inputtext);
			if(PlayerInfo[playerid][pCash] < nomerpopsumma[playerid]) return nomerpop[playerid] = -1, nomerpopsumma[playerid] = -1, SendClientMessage(playerid,COLOR_GRAD1,"У Вас недостаточно денег!");
			if(nomerpopsumma[playerid] < 0) return 1;
			foreach(new i:Player)
			{
				if(PlayerInfo[i][pPnumber] == nomerpop[playerid])
				{
					new string[128];
					PlayerInfo[i][pTA] += nomerpopsumma[playerid]; PlayerInfo[playerid][pCash]-=nomerpopsumma[playerid]; GivePlayerMoney(playerid,-nomerpopsumma[playerid]);
					format(string,sizeof(string),"Счет вашего мобильного телефона пополнен на %d рублей.",nomerpopsumma[playerid]), SendClientMessage(i,COLOR_YELLOW,string);
					format(string,sizeof(string),"Вы пополнили счёт мобильного телефона. Номер: %d. Сумма: %d.",nomerpop[playerid],nomerpopsumma[playerid]), SendClientMessage(playerid,COLOR_YELLOW,string);
					PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
					nomerpop[playerid] = -1, nomerpopsumma[playerid] = -1;
					return 1;
				}
				else nomerpop[playerid] = -1, nomerpopsumma[playerid] = -1, SendClientMessage(playerid,COLOR_GRAD1,"Неизвестный номер!");
			}
		}
	case 40:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,4000,DIALOG_STYLE_LIST,"Общественные места","{808080}1. {FFFFFF}Нотариальная контора.\n{808080}2. {FFFFFF}ОГИБДД России г. Нижегородск.\n{808080}3. {FFFFFF}УМВД России по Арзамасскому району.\n{808080}4. {FFFFFF}Городская Клиническая Больница №3.\n{808080}5. {FFFFFF}Автошкола РОСТО (ДОСААФ).\n{808080}6. {FFFFFF}СВПЧ №31.\n{808080}7. {FFFFFF}Магазин одежды.\n{808080}8. {FFFFFF}Автодром ГИБДД.\n{808080}9. {FFFFFF}Автосалон г. Арзамас.\n{808080}10. {FFFFFF}Штраф-стоянка.\n{808080}11. {FFFFFF}Магазин 24/7.","Принять","Отмена");
			case 1: ShowPlayerDialog(playerid,4001,DIALOG_STYLE_LIST,"Список работ","{808080}1. {FFFFFF}Работа лесоруба.\n{808080}2. {FFFFFF}Таксомоторный парк №3 (работа водителя такси).\n{808080}3. {FFFFFF}Работа грузчика.\n{808080}4. {FFFFFF}Работа шахтёра.\n{808080}5. {FFFFFF}Работа дальнобойщика.\n{808080}6. {FFFFFF}Работа водителя мусоровоза.","Принять","Отмена");
			case 2:
				{
					ShowPlayerDialog(@p,4002,DIALOG_STYLE_LIST,"Поиск ближащей(-го) места","{808080}1. {ffffff}Ближайшая АЗС.\n{808080}2. {ffffff}Ближайший банкомат.\n{808080}3. {ffffff}Ближайший ларёк.","Далее","Отмена");
				}
			case 3:
				{
					SPD(@p,1255,DIALOG_STYLE_LIST,"Развлекательные места","{808080}1. {ffffff}Бар 'Койот'.\n{808080}2. {ffffff}Казино 'Роза Ветров'.\n{808080}3. {ffffff}Городоской парк им. Горького.\n{808080}4. {ffffff}Развлекательный клуб 'Alliance'.","Далее","Отмена");
				}
			case 4:
				{
					gpspoint[playerid] = 0;
					DisablePlayerCheckpoint(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFF33}GPS: {FFFFFF}Система навигации отключена.");
				}
			}
		}
	case 4002:
		{
			if(!response) return true;
			new c,Float:min1;
			min1 = 10000000000.0, c = -1;
			switch (listitem)
			{
			case 0:
				{
					new Float:Dis[MAX_FUELS];
					for(new i = 0; i < sizeof(FuelsInfo); i++)
					{
						if(FuelsInfo[i][sbEntranceX] != 0.0)
						{
							Dis[i] = GetPlayerDistanceFromPoint(@p,FuelsInfo[i][sbEntranceX],FuelsInfo[i][sbEntranceY],FuelsInfo[i][sbEntranceZ]);	
							if(Dis[i] != 0.0)
							{
								if(Dis[i] < min1) min1 = Dis[i],c = i;
							}							
						}						
					}
					if(c == -1) return SendClientMessage(@p,COLOR_GRAD1,#Не найдено.);
					SetPlayerCheckpoint(playerid,FuelsInfo[c][sbEntranceX],FuelsInfo[c][sbEntranceY],FuelsInfo[c][sbEntranceZ],5);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте.");
					gpspoint[playerid] = 1;
				}
			case 1:
				{
					new Float:Dis[MAX_ATM];
					for(new i = 0; i < sizeof(Atm); i++)
					{
						if(Atm[i][atmX] != 0.0)
						{
							Dis[i] = GetPlayerDistanceFromPoint(@p,Atm[i][atmX],Atm[i][atmY],Atm[i][atmZ]);	
							if(Dis[i] != 0.0)
							{
								if(Dis[i] < min1) min1 = Dis[i],c = i;
							}							
						}						
					}
					if(c == -1) return SendClientMessage(@p,COLOR_GRAD1,#Не найдено.);
					SetPlayerCheckpoint(playerid,Atm[c][atmX],Atm[c][atmY],Atm[c][atmZ],5);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте.");
					gpspoint[playerid] = 1;
				}
			case 2:
				{
					new Float:Dis[MAX_LAREK];
					for(new i = 0; i < sizeof(LarekInfo); i++)
					{
						if(LarekInfo[i][larX] != 0.0)
						{
							Dis[i] = GetPlayerDistanceFromPoint(@p,LarekInfo[i][larX],LarekInfo[i][larY],LarekInfo[i][larZ]);	
							if(Dis[i] != 0.0)
							{
								if(Dis[i] < min1) min1 = Dis[i],c = i;
							}							
						}						
					}
					if(c == -1) return SendClientMessage(@p,COLOR_GRAD1,#Не найдено.);
					SetPlayerCheckpoint(playerid,LarekInfo[c][larX],LarekInfo[c][larY],LarekInfo[c][larZ],5);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте.");
					gpspoint[playerid] = 1;
				}
			}
		}
	case 4000:
		{
			if(!response) return true;
			switch (listitem)
			{
			case 0: SetPlayerCheckpoint(playerid,-206.9199,627.9102,12.0010,5), SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 1: SetPlayerCheckpoint(playerid,-2363.3948,1886.9205,53.2306,5), SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 2: SetPlayerCheckpoint(playerid,-389.4874,846.2351,12.1417,5), SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 3: SetPlayerCheckpoint(playerid,663.4720,774.2294,12.0009,5), SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 4: SetPlayerCheckpoint(playerid,-31.7931,920.0790,12.0000,5), SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
            case 5: SetPlayerCheckpoint(playerid,127.5700,1273.0646,12.0004,5), SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 6: SetPlayerCheckpoint(playerid,157.8287,694.9214,11.8233,5), SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 7: SetPlayerCheckpoint(playerid,441.3755,612.2718,12.0000,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 8: SetPlayerCheckpoint(playerid,381.7019,1679.8450,12.0638,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 9: SetPlayerCheckpoint(playerid,-92.4036,330.4625,12.0010,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 10: SetPlayerCheckpoint(playerid,743.0764,800.2290,12.0000,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			}
		}
	case 4001:
		{
			if(!response) return true;
			switch (listitem)
			{
			case 0: SetPlayerCheckpoint(playerid,-2153.6045,-515.4457,39.2057,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 1: SetPlayerCheckpoint(playerid,-368.0843,1024.8829,12.1494,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 2: SetPlayerCheckpoint(playerid,-2385.3152,296.8420,23.8169,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 3: SetPlayerCheckpoint(playerid,-1052.2958,2143.3904,38.0322,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 4: SetPlayerCheckpoint(playerid,-870.7646,1191.5887,10.4889,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			case 5: SetPlayerCheckpoint(playerid,110.7075,1666.1342,12.0000,5), SendClientMessage(playerid,COLOR_LIGHTBLUE,"{FFFF33}GPS: {FFFFFF}Местоположение объекта отображается {CC0000}красным {FFFFFF}на вашей мини-карте."), gpspoint[playerid] = 1;
			}
		}
	case 1500:
		{
			new string[128];
			if(!response) return true;
			switch(listitem)
			{
			case 0: format(string,sizeof(string),"Вы можете внести на счёт до %d рублей.\r\nВведите сумму.", PlayerInfo[playerid][pCash]), ShowPlayerDialog(playerid, 1502, DIALOG_STYLE_INPUT, "Пополнение счёта!", string, "Положить", "Отмена");
			case 1: format(string,sizeof(string),"Вы можете снять со счёта до %d рублей.\r\nВведите сумму.", PlayerInfo[playerid][pAccount]), ShowPlayerDialog(playerid, 1501, DIALOG_STYLE_INPUT, "Снятие со счёта!", string, "Снять", "Отмена");
			case 2:
				{
					if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid,COLOR_GRAD1,"Переводы в банке запрещены до 3 уровня!");
					format(string,sizeof(string),"Вы можете перевести на счёт другому человеку до %d рублей.\r\nВведите сумму для перевода", PlayerInfo[playerid][pAccount]), ShowPlayerDialog(playerid, 1503, DIALOG_STYLE_INPUT, "Перевод на счёт!", string, "Далее", "Отмена");
				}
			}
		}
	case 1501:
		{
			new string[128];
			if(!response) return true;
			if(PlayerInfo[playerid][pAccount] < strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"Недостаточно денег на счету!");
			if(strval(inputtext) < 1) return 1;
			PlayerInfo[playerid][pCash] += strval(inputtext); PlayerInfo[playerid][pAccount] -= strval(inputtext); GivePlayerMoney(playerid,strval(inputtext));
			format(string,sizeof(string),"Вы успешно сняли со счёта %d рублей.",strval(inputtext)), SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
			PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
			return true;
		}
	case 1502:
		{
			new string[128];
			if(!response) return true;
			if(PlayerInfo[playerid][pCash] < strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"У вас недостаточно денег наличными!");
			if(strval(inputtext) < 1) return 1;
			PlayerInfo[playerid][pCash] -= strval(inputtext); PlayerInfo[playerid][pAccount] += strval(inputtext); GivePlayerMoney(playerid,-strval(inputtext));
			format(string,sizeof(string),"Вы успешно внесли на счёт %d рублей.",strval(inputtext)), SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
			PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
			return true;
		}
	case 1503:
		{
			if(!response) return summaperevod[playerid] = 0, idperevod[playerid] = -1;
			if(PlayerInfo[playerid][pAccount] < strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"Недостаточно денег на счету!");
			if(strval(inputtext) < 1 || strval(inputtext) > 1000000) return 1;
			summaperevod[playerid] = strval(inputtext);
			ShowPlayerDialog(playerid,1504,DIALOG_STYLE_INPUT,"ID игрока","Введите id игрока, которому хотите перевести сумму","Далее","Отмена");
		}
	case 1504:
		{
			new string[64];
			if(!response) return summaperevod[playerid] = 0, idperevod[playerid] = -1;
			new plid = strval(inputtext);
			if(!strlen(inputtext)) return SendClientMessage(playerid,-1,"Введите ID игрока!");
			if(!IsPlayerConnected(plid) || playerid == plid) return SendClientMessage(playerid,-1,"Игрок не в сети/Игрок не авторизован.");
			idperevod[playerid] = plid;

			//
			format(string,sizeof(string),"Сумма перевода: %d\r\nКому: %s (ID: %d)",summaperevod[playerid],NamePlayer[plid],plid);
			ShowPlayerDialog(playerid,1505,DIALOG_STYLE_MSGBOX,"Проверьте данные",string,"Перевести","Отмена");
		}
	case 1505:
		{
			new string[128], id = idperevod[playerid];
			if(!response) return summaperevod[playerid] = 0, idperevod[playerid] = -1;
			if(summaperevod[playerid] < 1) return 1;
			PlayerInfo[id][pAccount] += summaperevod[playerid];
			PlayerInfo[playerid][pAccount] -= summaperevod[playerid];

			//
			format(string,sizeof(string),"Вы перевели %d рублей игроку %s на счёт в банке.",summaperevod[playerid],NamePlayer[id]), SendClientMessage(playerid,COLOR_GRAD1,string);
			format(string,sizeof(string),"Игрок %s перевёл вам %d рублей на счёт в банке.",NamePlayer[playerid],summaperevod[playerid]), SendClientMessage(id,COLOR_GRAD1,string);
			summaperevod[playerid] = 0, idperevod[playerid] = -1;
		}
	case 8712:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][pDm] < 450) return SendClientMessage(playerid, 0xFF0000FF, "Недостаточно донат-очков.");
			if(strlen(inputtext) != 6) return SendClientMessage(playerid, 0xFF0000FF, "Неверный формат номера телефона. (1)");
			if(checkCarNumberPlate(inputtext))
			{
				new query[128];
				mysql_format(MySQLGo, query, sizeof(query), "SELECT * FROM `vehicles` WHERE `Num` = '%s'", inputtext);
				mysql_tquery(MySQLGo, query, "checkcarnumber", "ds", playerid, inputtext);
				return true;
			}
			else return SendClientMessage(playerid, 0xFF0000FF, "Неверный формат номера телефона.");
		}
	case 8711:
		{
			if(!response) return 1;
			if(strval(inputtext) < 1000 || strval(inputtext) > 999999) return SendClientMessage(playerid, 0xFF0000FF, "Неверный формат номера телефона.");
			new price;
			if(strlen(inputtext) == 4) price = 300;
			else if(strlen(inputtext) == 5) price = 250;
			else if(strlen(inputtext) == 6) price = 200;
			else return SendClientMessage(playerid, 0xFF0000FF, "Неверный формат номера телефона.");
			if(PlayerInfo[playerid][pDm] < price) return SendClientMessage(playerid, 0xFF0000FF, "Недостаточно донат-очков.");
			new query[128];
			mysql_format(MySQLGo, query, sizeof(query), "SELECT `id` FROM `accounts` WHERE `pPnumber` = %d;", strval(inputtext));
			mysql_tquery(MySQLGo, query, "checkphonenumber", "ddd", playerid, strval(inputtext), price);
		}
	case 8812:
		{
			if(!response) return 1;
			if(strval(inputtext) < 1 || strval(inputtext) > 1000000) return ShowPlayerDialog(playerid,8812,DIALOG_STYLE_INPUT,"Обмен донат-очков","{FFFFFF}Введите сумму ДО, которую вы хотите обменять на игровую валюту.\n- За одно донат-очко вы получите 1.000 рублей.\n\n","Обменять","Назад");
			if(PlayerInfo[playerid][pDm] < strval(inputtext)) return ShowPlayerDialog(playerid,8812,DIALOG_STYLE_INPUT,"Обмен Donate Money","{FFFFFF}Введите сумму ДО, которую вы хотите обменять на игровую валюту.\n- За одно донат-очко вы получите 1.000 рублей.\n\n","Обменять","Назад");
			PlayerInfo[playerid][pDm] -= strval(inputtext); PlayerInfo[playerid][pCash]+=strval(inputtext)*1000; GivePlayerMoney(playerid, strval(inputtext)*1000);
			format(format_string, 128, "На ваш счет зачислено: {2E9AFE}%iр", strval(inputtext)*1000);
			SendClientMessage(playerid, -1, format_string);
		}
	case 432:
		{
			if(!response) return SendClientMessage(playerid, 0xFF0000FF, "Вы отказались от покупки.");			
			spvi(@p,#P_IDX_Dcar,listitem);
			SPD(@p,435,DIALOG_STYLE_LIST,"Выбор цвета авто","{ffffff}1. Белый\n2. Серый\n3. Бежевый\n4. Черный","Выбор","Отмена");
			return 1;
		}
	case 433:
		{
			if(!response) return OnPlayerCommandText(playerid, "/donate");
			if(PlayerInfo[playerid][pDm] < 200) return SendClientMessage(playerid, 0xFF0000FF, "Недостаточно донат-очков.");
			if(PlayerInfo[playerid][pDonateRank] > 0) return SendClientMessage(playerid, 0xFF0000FF, "У вас уже имеется VIP статус.");
			PlayerInfo[playerid][pDm] -= 200; PlayerInfo[playerid][pDonateRank] = 1;
			SendClientMessage(playerid,0x00FF66AA,"Вы приобрели VIP статус. за 200 донат-очков. Благодарим Вас за помощь нашему проекту!");
		}
	case 435:
		{
			if(!response) return OnPlayerCommandText(playerid, "/donate");
			switch(listitem)
			{
				case 0:spvi(@p,#P_Color_Dcar,1);
				case 1:spvi(@p,#P_Color_Dcar,29);
				case 2:spvi(@p,#P_Color_Dcar,69);
				case 3:spvi(@p,#P_Color_Dcar,0);			
			}
			glob_str = "";
			format(glob_str,sizeof(glob_str),"Вы действительно хотите приобрести этот автомобиль?\n\nНазвание машины: %s\nID машины: %d\nСтоимость: %d ДО\n\nВНИМАНИЕ!!! Убедитесь, что вы находитесь на ровной поверхности, т. к. авто будет создано прямо под вами!",DCAR_I[gpvi(@p,#P_IDX_Dcar)][mod_name],DCAR_I[gpvi(@p,#P_IDX_Dcar)][mod_id],DCAR_I[gpvi(@p,#P_IDX_Dcar)][mod_price]);
			ShowPlayerDialog(playerid,434,DIALOG_STYLE_MSGBOX,"Покупка машины",glob_str,"Купить","Отмена");
			glob_str = "";
			return 1;
		}
	case 434:
		{
			if(!response) return OnPlayerCommandText(playerid, "/donate");
			if(PlayerInfo[playerid][pCKey]) return SendClientMessage(playerid, COLOR_GREY, "У вас уже имеется личный транспорт.");
			new j = gpvi(@p,#P_IDX_Dcar);
			if(PlayerInfo[playerid][pDm] < DCAR_I[j][mod_price]) return SendClientMessage(playerid, 0xFF0000FF, "Недостаточно донат-очков.");
			PlayerInfo[playerid][pDm] -= DCAR_I[j][mod_price];
			for(new i = 0; i < sizeof aData; i++)
			{
				if(aData[i][aKey]) continue;
				GetPlayerPos(playerid, aData[i][aPos][0], aData[i][aPos][1], aData[i][aPos][2]);
				GetPlayerFacingAngle(playerid, aData[i][aPos][3]);

				aData[i][aModel] = DCAR_I[j][mod_id];
				aData[i][aColor1] = gpvi(@p,#P_Color_Dcar);
				aData[i][aColor2] = gpvi(@p,#P_Color_Dcar);
				aData[i][aPrice] = 0;
				aData[i][aLock] = 0;
				aData[i][aMigPos][0] = 0;
				aData[i][aMigPos][1] = 0;
				aData[i][aMigPos][2] = 0;
				aData[i][aMigPos][3] = 0;
				aData[i][aMigPos][4] = 0;
				aData[i][aMigPos][5] = 0;
				aData[i][aMiglo] = 0;
				aData[i][aArrest] = 0;
				aData[i][aFuel] = 60;
				aData[i][aWorld] = GetPlayerVirtualWorld(playerid);
				aData[i][aInt] = GetPlayerInterior(playerid);
				aData[i][aFrak] = 0;
				aData[i][aJobs] = 0;
				strmid(aData[i][aPArrest], "Nones", 0, 128, 128);
				format(aData[i][aPArrestName], 32, "Nones");
				strmid(aData[i][aNumber], "ТРАНЗИТ", 0, strlen("ТРАНЗИТ"));				
				strmid(aData[i][aOwner], NamePlayer[@p], 0, strlen(NamePlayer[@p]));
				aData[i][aOwned] = 1;
				SendClientMessage(playerid, COLOR_GREY, "{808080}Вы успешно приобрели данное транспортное средство. Не забудьте перепарковать ваш автомобиль...");
				SendClientMessage(playerid, COLOR_GREY, "{808080}...  с помощью команды {FFFFFF}'/car'{808080}, чтобы его не эвакуировали на штраф-стоянку.");
				SendClientMessage(playerid, COLOR_GREY, "{808080}Для того, чтобы ознакомиться с командами, связанными с т/с, воспользуйтесь командой {FFFFFF}'/help'{808080}.");
				TogglePlayerControllable(playerid, 1);				
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				aData[i][aCarid] = CreateVehicle(aData[i][aModel], aData[i][aPos][0]+1.0, aData[i][aPos][1]+1.0, aData[i][aPos][2], aData[i][aPos][3], aData[i][aColor1], aData[i][aColor2], 600000);
				SetVehicleVirtualWorld(aData[i][aCarid], aData[i][aWorld]);
				LinkVehicleToInterior(aData[i][aCarid], aData[i][aInt]);
				aData[i][aNumPlate] = CreateDynamic3DTextLabel("{ffffff}БЕЗ НОМЕРОВ", COLOR_YELLOW, 0.0, 0.0, 1.2, 15.0, INVALID_PLAYER_ID, aData[i][aCarid], 0);
				glob_str = "";
				mysql_format(MySQLGo,glob_str,sizeof(glob_str),"INSERT INTO `vehicles` (`Model`) VALUES ('%d')",aData[i][aModel]);
				new Cache:p = mysql_query(MySQLGo,glob_str);			
				aData[i][aKey] = cache_insert_id();
				PlayerInfo[playerid][pCKey] = aData[i][aKey];
				cache_delete(p, MySQLGo);
				LockCar(aData[i][aCarid]);
				UpdatePlayerData(@p,"pCKey",PlayerInfo[playerid][pCKey]);
				UpdatePlayerData(@p,"pDm",PlayerInfo[playerid][pDm]);
				glob_str = "";
				SaveVehicle(i);
				break;
			}
			glob_str = "";
			format(glob_str,sizeof(glob_str),"Вы приобрели %s. Не забудьте припарковать его!",DCAR_I[j][mod_name]);
			SCM(@p,0x00FF66AA,glob_str);
			DeletePVar(@p,#P_IDX_Dcar);
			return 1;
		}
	case 449:
		{
			if(!response) return OnPlayerCommandText(playerid, "/donate");
			if(PlayerInfo[playerid][pCKey] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет личного транспорта.");
			new id_car = GetVehicleIdxByKey(PlayerInfo[playerid][pCKey]);
			if(aData[id_car][aMiglo] == 1) return SendClientMessage(playerid, COLOR_GREY, "На данном автомобиле уже установлена мигалка.");
			if(PlayerInfo[playerid][pDm] < 750) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно донат-очков.");
			aData[id_car][aMiglo] = 1;
			PlayerInfo[playerid][pDm] -= 750;
			SendClientMessage(playerid, 0x00FF66AA, "Вы приобрели мигалку на ваш автомобиль за 750 донат-очков.");
			mysql_function(MySQLGo, 300, "UPDATE `vehicles` SET `Miglo` = '1' WHERE `Owner` = '%s'",false,"","", NamePlayer[playerid]);
		}
	case 1830:
		{
			if(!response) return OnPlayerCommandText(playerid, "/cancel ticket");
			new stringersr[650];
			new years, months, days, hours, minutes, seconds, data[128],
			money = GetPVarInt(playerid, "MoneyShtraf");
			getdate(years, months, days);
			gettime(hours, minutes, seconds);
			format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);
			printf(ReasonShtraf[playerid]);
			mysql_format(MySQLGo, stringersr, 650, "INSERT INTO `tickets` (`MoneyPlayer`,`NickName`,`Date`,`Reason`) VALUES ('%d','%s','%s','%e')", money, NamePlayer[playerid], data, ReasonShtraf[playerid]);
			mysql_tquery(MySQLGo, stringersr);
			printf(stringersr);
			// Удаляем ПВАР
			DeletePVar(playerid,"MoneyShtraf");
			SendClientMessage(playerid, -1, "Вы можете оплатить штраф в любом банкомате города.");
		}
	case 1832:
		{
			if(!response) return OnPlayerCommandText(playerid, "/cancel to");
			OnPlayerCommandText(playerid, "/accept to");
		}
	case 700:
		{
			if(!response) return 1;
			new string[128];
			switch(listitem)
			{
			case 0: format(string, sizeof(string), "На вашем счете %d рублей.",PlayerInfo[playerid][pAccount]), ShowPlayerDialog(playerid,701,0,"Баланс",string,"Чек","Назад");
			case 1: format(string, sizeof(string), "Введите сумму для снятия (максимум %d рублей):",PlayerInfo[playerid][pAccount]), ShowPlayerDialog(playerid,702,1,"Снятие со счета",string,"Снять","Назад");
			case 2:
				{
					if(PlayerInfo[playerid][pCard] < 1) return SendClientMessage(playerid, 0xFFFFFFFF, "У вас должна быть банковская карта.");
					ShowPlayerDialog(playerid,703,1,"Баланс","Введите сумму для пополнения:","Пополнить","Назад");
				}
			case 3:
				{
					if(!PlayerInfo[@p][pNewHouse]) return SCM(@p,-1,"У вас нет дома!");
					SPD(@p,1245,DIALOG_STYLE_LIST,"Оплата коммунальных услуг","{ffffff}1. 1 день\n2. 3 дня\n3. 1 неделя\n4. 2 недели","Выбор","Отмена");
				}
			}
		}
	case 701:
		{
			if(!response) return 1;
			new string[128];
			format(string, sizeof(string), "На вашем счете %d рублей.",PlayerInfo[playerid][pAccount]), SendClientMessage(playerid, 0xFFFFFFFF, string);
			format(string, sizeof(string), "Баланс\nСнять со счета\nПополнить счет (Необходима банковская карта)\nОплата коммунальных услуг"), ShowPlayerDialog(playerid,700,2,"Банкомат",string,"Дальше","Отмена");
		}
	case 702:
		{
			new string[128];
			if(!response) return 1;
			new cashdeposit = strval(inputtext);
			if(PlayerInfo[playerid][pAccount] < cashdeposit || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GRAD2, "У вас недостаточно денег!");
			PlayerInfo[playerid][pCash] += cashdeposit; GivePlayerMoney(playerid,cashdeposit); PlayerInfo[playerid][pAccount] -= cashdeposit;
			format(string, sizeof(string), "Вы сняли %d рублей с вашего счета. Остаток: %d рублей ", cashdeposit,PlayerInfo[playerid][pAccount]), SendClientMessage(playerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "Баланс\nСнять со счета\nПополнить счет (Необходима банковская карта)\nОплата коммунальных услуг"), ShowPlayerDialog(playerid,700,2,"Банкомат",string,"Дальше","Отмена");
		}
	case 703:
		{
			new string[128];
			if(!response) return 1;
			new cashdeposit = strval(inputtext);
			if(PlayerInfo[playerid][pCash] < cashdeposit || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GRAD2, "У вас нет столько денег!");
			PlayerInfo[playerid][pCash] -= cashdeposit; GivePlayerMoney(playerid, -cashdeposit); PlayerInfo[playerid][pAccount] += cashdeposit;
			SendClientMessage(playerid, COLOR_GRAD6, "|__________ БАНКОВСКАЯ ИНФОРМАЦИЯ __________|");
			format(string, sizeof(string), "  Старый баланс: %d рублей", PlayerInfo[playerid][pAccount]), SendClientMessage(playerid, -1, string);
			format(string, sizeof(string), "  Депозит: %d рублей",cashdeposit), SendClientMessage(playerid, -1, string);
			format(string, sizeof(string), "  Новый баланс: %d рублей", PlayerInfo[playerid][pAccount]), SendClientMessage(playerid, -1, string);
			SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
			format(string, sizeof(string), "Баланс\nСнять со счета\nПополнить счет (Необходима банковская карта)\nОплатить штраф"), ShowPlayerDialog(playerid,700,2,"Банкомат",string,"Дальше","Отмена");
		}
	case 5555:
		{
			if(!response) return 1;
			new mobakk = strval(inputtext), string[128];
			if(mobakk < 1 || mobakk > 1000) return SendClientMessage(playerid, COLOR_GREY, "Сумма платежа должна составлять не менее 1р и не более 1000 рублей");
			if(PlayerInfo[playerid][pTA] >= 1000) return 1;SendClientMessage(playerid, COLOR_GREY, "На вашем лицевом счёте уже достаточно денег");
			if(PlayerInfo[playerid][pCash] < mobakk) return SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег");
			PlayerInfo[playerid][pCash] -= mobakk; GivePlayerMoney(playerid, -mobakk); PlayerInfo[playerid][pTA] += mobakk;
			SendClientMessage(playerid, -1, "|___________________ ЧЕК _________________|");
			format(string, sizeof(string), "Старый баланс %d рублей", PlayerInfo[playerid][pTA]-mobakk), SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "Вы внесли %d рублей", mobakk), SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "Новый баланс %d рублей", PlayerInfo[playerid][pTA]+mobakk), SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, -1, "|-----------------------------------------|");
		}
	case 53:
		{
			if(!response) return 1;
			new string[128];
			PyxiTime[playerid] = 10; OnWeapon[playerid] = 1;
			GiveWeapon(playerid, 24, 500); GiveWeapon(playerid, 41, 9999); GiveWeapon(playerid, 29, 500); GiveWeapon(playerid, 30, 1); GiveWeapon(playerid, 3, 1);
			ServerGivePlayerHealth(playerid, 100); SetPlayerArmour(playerid, 100);
			format(string, sizeof(string), "* %s взял служебный боекомплект.", NamePlayer[playerid]);
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	case 8:
		{
			if(!response) return 1;
			new string[128];
			PyxiTime[playerid] = 10; OnWeapon[playerid] = 1;
			GiveWeapon(playerid, 24, 500); GiveWeapon(playerid, 41, 9999); GiveWeapon(playerid, 29, 500); GiveWeapon(playerid, 30, 1); GiveWeapon(playerid, 3, 1);
			ServerGivePlayerHealth(playerid, 100); SetPlayerArmour(playerid, 100);
			format(string, sizeof(string), "* %s взял служебный боекомплект.", NamePlayer[playerid]);
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	case 51:
		{
			if(!response) return 1;
			new string[128];
			PyxiTime[playerid] = 10; OnWeapon[playerid] = 1;
			GiveWeapon(playerid, 6, 1); GiveWeapon(playerid, 15, 1); GiveWeapon(playerid, 9, 1); GiveWeapon(playerid, 42, 9999); GiveWeapon(playerid, 42, 9999);
			ServerGivePlayerHealth(playerid, 100); SetPlayerArmour(playerid, 100);
			format(string, sizeof(string), "* %s взял служебный боекомплект.", NamePlayer[playerid]);
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	case 345:
		{
			if(!response) return 1;
			new string[128];
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pRank] < 4) return SendClientMessage(playerid,COLOR_GREY,"Боекомплект доступен только для агентов ФСБ!");
					PyxiTime[playerid] = 10; OnWeapon[playerid] = 1;
					GiveWeapon(playerid, 24, 40); GiveWeapon(playerid, 41, 100); GiveWeapon(playerid, 3, 1);
					ServerGivePlayerHealth(playerid, 100); SetPlayerArmour(playerid, 100);
					format(string, sizeof(string), "* %s взял служебный боекомплект.", NamePlayer[playerid]);
					ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 1:
				{
					if(PlayerInfo[playerid][pRank] < 5 && PlayerInfo[playerid][pRank] > 8) return SendClientMessage(playerid,COLOR_GREY,"Боекомплект доступен только для младшего состава ФСБ!");
					PyxiTime[playerid] = 10; OnWeapon[playerid] = 1;
					GiveWeapon(playerid, 24, 160); GiveWeapon(playerid, 41, 250); GiveWeapon(playerid, 29, 200); GiveWeapon(playerid, 30, 80); GiveWeapon(playerid, 3, 1);
					ServerGivePlayerHealth(playerid, 100); SetPlayerArmour(playerid, 100);
					format(string, sizeof(string), "* %s взял служебный боекомплект.", NamePlayer[playerid]);
					ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 2:
				{
					if(PlayerInfo[playerid][pRank] < 9) return SendClientMessage(playerid,COLOR_GREY,"Боекомплект доступен только для старшего состава ФСБ!");
					PyxiTime[playerid] = 10; OnWeapon[playerid] = 1;
					GiveWeapon(playerid, 24, 200); GiveWeapon(playerid, 41, 300); GiveWeapon(playerid, 29, 250); GiveWeapon(playerid, 30, 150); GiveWeapon(playerid, 34, 15); GiveWeapon(playerid, 3, 1);
					ServerGivePlayerHealth(playerid, 100); SetPlayerArmour(playerid, 100);
					format(string, sizeof(string), "* %s взял служебный боекомплект.", NamePlayer[playerid]);
					ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	case 346:
		{
			if(!response) return 1;
			new string[128];
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,COLOR_GREY,"Боекомплект доступен только для солдат!");
					PyxiTime[playerid] = 10; OnWeapon[playerid] = 1;
					GiveWeapon(playerid, 30, 40); GiveWeapon(playerid, 22, 100);
					ServerGivePlayerHealth(playerid, 100); SetPlayerArmour(playerid, 100);
					format(string, sizeof(string), "* %s взял служебный боекомплект.", NamePlayer[playerid]);
					ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 1:
				{
					if(PlayerInfo[playerid][pRank] < 9) return SendClientMessage(playerid,COLOR_GREY,"Боекомплект доступен только для офицерского состава!");
					PyxiTime[playerid] = 10; OnWeapon[playerid] = 1;
					GiveWeapon(playerid, 24, 160); GiveWeapon(playerid, 34, 250); GiveWeapon(playerid, 30, 200); GiveWeapon(playerid, 27, 80); GiveWeapon(playerid, 16, 1);
					ServerGivePlayerHealth(playerid, 100); SetPlayerArmour(playerid, 100);
					format(string, sizeof(string), "* %s взял служебный боекомплект.", NamePlayer[playerid]);
					ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	case 10:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pGunLic] < 1) return SendClientMessage(playerid,COLOR_GREY,"У вас нет лицензии на оружие!");
					if(eGetPlayerMoney(playerid) < 2500) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GiveWeapon(playerid, 24, 25);
					PlayerInfo[playerid][pCash] -= 2500; GivePlayerMoney(playerid, -2500);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили пистолет 'Макарова' и 25 патрон к нему.");
				}
			case 1:
				{
					if(PlayerInfo[playerid][pGunLic] < 1) return SendClientMessage(playerid,COLOR_GREY,"У вас нет лицензии на оружие!");
					if(eGetPlayerMoney(playerid) < 5000) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GiveWeapon(playerid, 24, 60);
					PlayerInfo[playerid][pCash] -= 5000; GivePlayerMoney(playerid, -5000);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили пистолет 'Макарова' и 60 патрон к нему.");
				}
			case 2:
				{
					if(PlayerInfo[playerid][pGunLic] < 1) return SendClientMessage(playerid,COLOR_GREY,"У вас нет лицензии на оружие!");
					if(eGetPlayerMoney(playerid) < 2100) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GiveWeapon(playerid, 23, 25);
					PlayerInfo[playerid][pCash] -= 2100; GivePlayerMoney(playerid, -2100);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили пистолет 'Colt' с глушителем и 25 патрон к нему.");
				}
			case 3:
				{
					if(PlayerInfo[playerid][pGunLic] < 1) return SendClientMessage(playerid,COLOR_GREY,"У вас нет лицензии на оружие!");
					if(eGetPlayerMoney(playerid) < 4200) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GiveWeapon(playerid, 23, 60);
					PlayerInfo[playerid][pCash] -= 4200; GivePlayerMoney(playerid, -4200);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили пистолет 'Colt' с глушителем и 60 патрон к нему.");
				}
			case 4:
				{
					if(PlayerInfo[playerid][pGunLic] < 1) return SendClientMessage(playerid,COLOR_GREY,"У вас нет лицензии на оружие!");
					if(eGetPlayerMoney(playerid) < 4000) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GiveWeapon(playerid, 25, 16);
					PlayerInfo[playerid][pCash] -= 4000; GivePlayerMoney(playerid, -4000);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили двуствольное ружьё и 16 патрон к нему.");
				}
			case 5:
				{
					if(PlayerInfo[playerid][pGunLic] < 1) return SendClientMessage(playerid,COLOR_GREY,"У вас нет лицензии на оружие!");
					if(eGetPlayerMoney(playerid) < 8000) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GiveWeapon(playerid, 25, 40);
					PlayerInfo[playerid][pCash] -= 8000; GivePlayerMoney(playerid, -8000);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили двуствольное ружьё и 40 патрон к нему.");
				}
			case 6:
				{
					if(PlayerInfo[playerid][pGunLic] < 1) return SendClientMessage(playerid,COLOR_GREY,"У вас нет лицензии на оружие!");
					if(eGetPlayerMoney(playerid) < 4500) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GiveWeapon(playerid, 29, 45);
					PlayerInfo[playerid][pCash] -= 4500; GivePlayerMoney(playerid, -4500);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили автомат 'АКС-74У' и 45 патрон к нему.");
				}
			case 7:
				{
					if(PlayerInfo[playerid][pGunLic] < 1) return SendClientMessage(playerid,COLOR_GREY,"У вас нет лицензии на оружие!");
					if(eGetPlayerMoney(playerid) < 9000) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GiveWeapon(playerid, 29, 100);
					PlayerInfo[playerid][pCash] -= 9000; GivePlayerMoney(playerid, -9000);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили автомат 'АКС-74У' и 100 патрон к нему.");
				}
			}
		}
	case 52:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][pSatiety] >= 99) return SendClientMessage(playerid,COLOR_LIGHTBLUE,#Вы не голодны!);
			for(new h = 0; h < sizeof(LarekInfo); h++)
			{
				if(PlayerToPoint(5, playerid,LarekInfo[h][larX], LarekInfo[h][larY], LarekInfo[h][larZ]) && LarekInfo[h][larOwned] == 1)
				{
					switch(listitem)//ttt
					{
					case 0:
						{
							if(PlayerInfo[playerid][pCash] < 120) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
							if(LarekInfo[h][larProds] < 5) return SendClientMessage(playerid, -1, "В ларьке недостаточно продуктов.");
							PlayerInfo[playerid][pCash] -= 120; GivePlayerMoney(playerid, - 120);
							if(PlayerInfo[playerid][pSatiety] >= 100) PlayerInfo[playerid][pSatiety] = 100;
							else PlayerInfo[playerid][pSatiety] += 10;
							SetPlayerProgressBarValue(playerid, pbar_sat, float(PlayerInfo[playerid][pSatiety]));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы съели шаверму в лаваше. Уровень сытости вашего персонажа пополнен!");
							ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);			                
							LarekInfo[h][larProds] -= 5, LarekInfo[h][larMoney] += 120;
							UpdateLarek(h);
						}
					case 1:
						{
							if(PlayerInfo[playerid][pCash] < 50) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
							if(LarekInfo[h][larProds] < 50) return SendClientMessage(playerid, -1, "В ларьке недостаточно продуктов.");
							PlayerInfo[playerid][pCash] -= 50; GivePlayerMoney(playerid, - 50);
							if(PlayerInfo[playerid][pSatiety] >= 100) PlayerInfo[playerid][pSatiety] = 100;
							else PlayerInfo[playerid][pSatiety] += 40;
							SetPlayerProgressBarValue(playerid, pbar_sat, float(PlayerInfo[playerid][pSatiety]));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы съели хот-дог. Уровень сытости вашего персонажа пополнен!");
							ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
							LarekInfo[h][larProds] -= 50, LarekInfo[h][larMoney] += 50;
							UpdateLarek(h);
						}
					case 2:
						{
							if(PlayerInfo[playerid][pCash] < 90) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
							if(LarekInfo[h][larProds] < 10) return SendClientMessage(playerid, -1, "В ларьке недостаточно продуктов.");
							PlayerInfo[playerid][pCash] -= 90; GivePlayerMoney(playerid, - 90);
							ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
							if(PlayerInfo[playerid][pSatiety] >= 100) PlayerInfo[playerid][pSatiety] = 100;
							else PlayerInfo[playerid][pSatiety] += 55;
							SetPlayerProgressBarValue(playerid, pbar_sat, float(PlayerInfo[playerid][pSatiety]));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы съели двойной хот-дог. Уровень сытости вашего персонажа пополнен!");
							LarekInfo[h][larProds] -= 10, LarekInfo[h][larMoney] += 90;
							UpdateLarek(h);
						}
					case 3:
						{
							if(PlayerInfo[playerid][pCash] < 55) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
							if(LarekInfo[h][larProds] < 5) return SendClientMessage(playerid, -1, "В ларьке недостаточно продуктов.");
							PlayerInfo[playerid][pCash] -= 55; GivePlayerMoney(playerid, - 55);
							ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
							if(PlayerInfo[playerid][pSatiety] >= 100) PlayerInfo[playerid][pSatiety] = 100;
							else PlayerInfo[playerid][pSatiety] += 10;
							SetPlayerProgressBarValue(playerid, pbar_sat, float(PlayerInfo[playerid][pSatiety]));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы выпили напиток Coca-Cola. Уровень сытости вашего персонажа пополнен!");
							LarekInfo[h][larProds] -= 5, LarekInfo[h][larMoney] += 55;
							UpdateLarek(h);
						}
					case 4:
						{
							if(PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
							if(LarekInfo[h][larProds] < 20) return SendClientMessage(playerid, -1, "В ларьке недостаточно продуктов.");
							PlayerInfo[playerid][pCash] -= 10; GivePlayerMoney(playerid, - 10);
							if(PlayerInfo[playerid][pSatiety] >= 100) PlayerInfo[playerid][pSatiety] = 100;
							else PlayerInfo[playerid][pSatiety] += 15;
							SetPlayerProgressBarValue(playerid, pbar_sat, float(PlayerInfo[playerid][pSatiety]));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы выпили стаканчик кофе. Уровень сытости вашего персонажа пополнен!");
							ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
							LarekInfo[h][larProds] -= 20, LarekInfo[h][larMoney] += 10;
							UpdateLarek(h);
						}
					case 5:
						{
							if(PlayerInfo[playerid][pCash] < 80) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
							if(LarekInfo[h][larProds] < 5) return SendClientMessage(playerid, -1, "В ларьке недостаточно продуктов.");
							PlayerInfo[playerid][pCash] -= 80; GivePlayerMoney(playerid, - 80);
							if(PlayerInfo[playerid][pSatiety] >= 100) PlayerInfo[playerid][pSatiety] = 100;
							else PlayerInfo[playerid][pSatiety] += 25;
							SetPlayerProgressBarValue(playerid, pbar_sat, float(PlayerInfo[playerid][pSatiety]));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы съели пирожок с вишней. Уровень сытости вашего персонажа пополнен!");
							ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
							LarekInfo[h][larProds] -= 5, LarekInfo[h][larMoney] += 80;
							UpdateLarek(h);
						}
					case 6:
						{
							if(PlayerInfo[playerid][pCash] < 70) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
							if(LarekInfo[h][larProds] < 30) return SendClientMessage(playerid, -1, "В ларьке недостаточно продуктов.");
							PlayerInfo[playerid][pCash] -= 70; GivePlayerMoney(playerid, - 70);
							if(PlayerInfo[playerid][pSatiety] >= 100) PlayerInfo[playerid][pSatiety] = 100;
							else PlayerInfo[playerid][pSatiety] += 30;
							SetPlayerProgressBarValue(playerid, pbar_sat, float(PlayerInfo[playerid][pSatiety]));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы съели кусок пиццы. Уровень сытости вашего персонажа пополнен!");
							ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
							LarekInfo[h][larProds] -= 30, LarekInfo[h][larMoney] += 70;
							UpdateLarek(h);
						}
					case 7:
						{
							if(PlayerInfo[playerid][pCash] < 70) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
							if(LarekInfo[h][larProds] < 10) return SendClientMessage(playerid, -1, "В ларьке недостаточно продуктов.");
							PlayerInfo[playerid][pCash] -= 70; GivePlayerMoney(playerid, - 70);
							if(PlayerInfo[playerid][pSatiety] >= 100) PlayerInfo[playerid][pSatiety] = 100;
							else PlayerInfo[playerid][pSatiety] += 35;
							SetPlayerProgressBarValue(playerid, pbar_sat, float(PlayerInfo[playerid][pSatiety]));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы съели пирожок с яблоком. Уровень сытости вашего персонажа пополнен!");
							ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
							LarekInfo[h][larProds] -= 10, LarekInfo[h][larMoney] += 70;
							UpdateLarek(h);
						}
					case 8:
						{
							if(PlayerInfo[playerid][pCash] < 30) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
							if(LarekInfo[h][larProds] < 20) return SendClientMessage(playerid, -1, "В ларьке недостаточно продуктов.");
							PlayerInfo[playerid][pCash] -= 30; GivePlayerMoney(playerid, - 30);
							if(PlayerInfo[playerid][pSatiety] >= 100) PlayerInfo[playerid][pSatiety] = 100;
							else PlayerInfo[playerid][pSatiety] += 20;
							SetPlayerProgressBarValue(playerid, pbar_sat, float(PlayerInfo[playerid][pSatiety]));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы съели шоколадный батончик Twix. Уровень сытости вашего персонажа пополнен!");
							ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
							LarekInfo[h][larProds] -= 20, LarekInfo[h][larMoney] += 30;
							UpdateLarek(h);
						}
					}
				}
			}
		}
	case 12:
		{
			if(!response) return 1;
			new string[128];
			switch(listitem)
			{
			case 0:
				{
					GiveWeapon(playerid, 24, 20); GiveWeapon(playerid, 5, 1); ServerGivePlayerHealth(playerid, 100);
					format(string,sizeof(string), "* %s взял набор студента.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 1:
				{
					GiveWeapon(playerid, 24, 20); GiveWeapon(playerid, 29, 50); GiveWeapon(playerid, 5, 1); ServerGivePlayerHealth(playerid, 100);
					format(string, sizeof(string), "* %s взял лёгкий набор.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 2:
				{
					GiveWeapon(playerid, 24, 20); GiveWeapon(playerid, 29, 50); GiveWeapon(playerid, 31, 50); GiveWeapon(playerid, 5, 1); ServerGivePlayerHealth(playerid, 100);
					format(string, sizeof(string), "* %s взял средний набор.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 3:
				{
					GiveWeapon(playerid, 24, 20); GiveWeapon(playerid, 29, 100); GiveWeapon(playerid, 31, 100); GiveWeapon(playerid, 5, 1); ServerGivePlayerHealth(playerid, 100);
					format(string, sizeof(string), "* %s взял тяжёлый набор.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 4:
				{
					GiveWeapon(playerid, 24, 30); GiveWeapon(playerid, 29, 150); GiveWeapon(playerid, 31, 150); GiveWeapon(playerid, 5, 1); ServerGivePlayerHealth(playerid, 100);
					format(string, sizeof(string), "* %s взял набор головореза.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	case 13:
		{
			if(!response) return 1;
			new string[128];
			switch(listitem)
			{
			case 0:
				{
					GiveWeapon(playerid, 4, 1); ServerGivePlayerHealth(playerid, 100);
					format(string, sizeof(string), "* %s взял охотничий нож со склада.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 1:
				{
					GiveWeapon(playerid, 24, 20); ServerGivePlayerHealth(playerid, 100);
					format(string, sizeof(string), "* %s взял Desert Eagle со склада.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 2:
				{
					GiveWeapon(playerid, 25, 20); ServerGivePlayerHealth(playerid, 100);
					format(string, sizeof(string), "* %s взял ShotGun со склада.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 3:
				{
					GiveWeapon(playerid, 29, 20); ServerGivePlayerHealth(playerid, 100);
					format(string, sizeof(string), "* %s взял MP5 со склада.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 4:
				{
					GiveWeapon(playerid, 30, 30); ServerGivePlayerHealth(playerid, 100);
					format(string, sizeof(string), "* %s взял AK47 головореза.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 5:
				{
					GiveWeapon(playerid, 31, 30); ServerGivePlayerHealth(playerid, 100);
					format(string, sizeof(string), "* %s взял M4 головореза.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 6:
				{
					GiveWeapon(playerid, 33, 30); ServerGivePlayerHealth(playerid, 100);
					format(string, sizeof(string), "* %s взял Rifle головореза.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			case 7:
				{
					GiveWeapon(playerid, 34, 30); ServerGivePlayerHealth(playerid, 100);
					format(string, sizeof(string), "* %s взял Sniper головореза.", NamePlayer[playerid]), ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	case 21:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: GiveWeapon(playerid, 10, 1);
			case 1: GiveWeapon(playerid, 11, 1);
			case 2: GiveWeapon(playerid, 12, 1);
			case 3: GiveWeapon(playerid, 13, 1);
			case 4: GiveWeapon(playerid, 14, 1);
			}
		}
	case 9:
		{
			if(!response) return 1;
			new string[128];
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,91,2,"Справочная тел. 09(Работы)","Детектив\nАдвокат\nПроститутка\nНаркодиллер\nАвтоугонщик\nРазнощик газет\nМеханик\nТелохранитель\nОружейный диллер\nВодитель автобуса\nДальнобойщик\nУборщик улиц","Дальше","Отмена");
			case 1: ShowPlayerDialog(playerid,92,2,"Справочная тел. 09(Работы)","Такси\nАвтобус\nМедик\nМеханик","Дальше","Отмена");
			case 2:
				{
					SendClientMessage(playerid, COLOR_WHITE, "Лицензеры онлайн:");
					for(new k = 0; k < MAX_PLAYERS; k++)
					{
						if(!IsPlayerConnected(k)) continue;
						if(PlayerInfo[k][pMember] == 11 || PlayerInfo[k][pLeader] == 11) format(string, sizeof(string), "Лицензер: %s ", NamePlayer[k]), SendClientMessage(playerid, COLOR_YELLOW, string);
					}
					return 1;
				}
			case 3:
				{
					new ttext[64];
					SendClientMessage(playerid, 0x808000AA, "Список лидеров онлайн:");
					foreach(new i:Player)
					{
						if(!IsPlayerConnected(i) || PlayerInfo[i][pLeader] < 0) continue;
						switch(PlayerInfo[i][pLeader])
						{
						case 1: ttext = "ОГИБДД";
						case 2: ttext = "ФСБ";
						case 3: ttext = "Армия";
						case 4: ttext = "Скорая Помощь";
						case 5: ttext = "Арзамасовская братва";
						case 6: ttext = "Полиция";
						case 7: ttext = "Администрация";
						case 8: ttext = "Киллеры";
						case 9: ttext = "СМИ";
						case 10: ttext = "Таксомоторный парк №3";
						case 11: ttext = "Автошкола РОСТО (ДОСААФ)";
						case 12: ttext = "Стритрейсеры";
						case 13: ttext = "Доки";
						case 14: ttext = "Южная братва";
						case 15: ttext = "ООО 'Нижстрой'";
						case 16: ttext = "East Side Ballas";
						case 17: ttext = "Flaming Cobra";
						case 18: ttext = "Триада";
						case 19: ttext = "МЧС";
						case 20: ttext = "Горковская ОПГ";
						case 21: ttext = "The NewGeneration Mafia";
						case 22: ttext = "Admins Gangs";
						}
						format(string, sizeof(string), "%s Фракция: %s", NamePlayer[i], ttext), SendClientMessage(playerid, 0xF5DEB3AA, string);
					}
					return 1;
				}
			case 4:
				{
					new teamnumber;
					if(PlayerInfo[playerid][pLeader] != 0) teamnumber = PlayerInfo[playerid][pLeader];
					else if(PlayerInfo[playerid][pMember] != 0) teamnumber = PlayerInfo[playerid][pMember];

					//
					SendClientMessage(playerid, 0x808000AA, "Свои:");
					foreach(new i:Player)
					{
						if(!IsPlayerConnected(i)) continue;
						format(string, sizeof(string), "");
						if(PlayerInfo[i][pLeader] == teamnumber) format(string, sizeof(string), "%s (Лидер)", NamePlayer[i]);
						if(PlayerInfo[i][pMember] == teamnumber) format(string, sizeof(string), "%s, Ранг: %d.",NamePlayer[i], PlayerInfo[i][pRank]);
						if(strlen(string) > 1) SendClientMessage(playerid, 0xF5DEB3AA, string);
					}
					return 1;
				}
			}
		}
	case 91:
		{
			if(!response) return 1;
			SendClientMessage(playerid, 0x808000AA, "Местоположение работодателя указано на карте");
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid,1480.9803,-1769.8817,18.79580,5.0);
			case 1: SetPlayerCheckpoint(playerid,1480.9803,-1769.8817,18.79580,5.0);
			case 2: SetPlayerCheckpoint(playerid,2421.5200,-1221.7500,25.3998,5.0);
			case 3: SetPlayerCheckpoint(playerid,2166.3772,-1675.3829,16.0859,5.0);
			case 4: SetPlayerCheckpoint(playerid,1109.3318,-1796.3042,17.5938,5.0);
			case 5: SetPlayerCheckpoint(playerid,648.5021,-1360.8267,14.5888,5.0);
			case 6: SetPlayerCheckpoint(playerid,-1932.3859,276.2117,42.0391,5.0);
			case 7: SetPlayerCheckpoint(playerid,2226.1716,-1718.1792,14.5165,5.0);
			case 8: SetPlayerCheckpoint(playerid,1366.4325,-1275.2096,14.5469,5.0);
			case 9: SetPlayerCheckpoint(playerid,531.7930,-1292.4044,18.2422,5.0);
			case 10: SetPlayerCheckpoint(playerid,766.0804,14.5133,1001.7004,5.0);
			case 11: SetPlayerCheckpoint(playerid,1154.2208,-1770.8203,17.5992,5.0);
			case 12: SetPlayerCheckpoint(playerid,-77.7288,-1136.3896,2.0781,5.0);
			case 13: SetPlayerCheckpoint(playerid,1611.5129,-1893.6997,13.5469,5.0);
			case 14: SetPlayerCheckpoint(playerid,-382.6660,-1426.5121,26.2410,5.0);
			}
		}
	case 999:
		{
			if(!response) return 1;
			new jobtext[30], string[128];
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pOtkRabota1] > 0) return SendClientMessage(playerid,COLOR_WHITE," К сожалению, вы нам не подходите!");
					jobtext = "Инкасатором";
					GettingJob[playerid] = 1;
				}
			case 1:
				{
					if(PlayerInfo[playerid][pOtkRabota2] > 0) return SendClientMessage(playerid,COLOR_WHITE," К сожалению, вы нам не подходите!");
					jobtext = "Адвокатом";
					GettingJob[playerid] = 2;
				}
			case 2:
				{
					if(PlayerInfo[playerid][pOtkRabota3] > 0) return SendClientMessage(playerid,COLOR_WHITE," К сожалению, вы нам не подходите!");
					jobtext = "Проституткой";
					GettingJob[playerid] = 3;
				}
			case 3:
				{
					if(PlayerInfo[playerid][pOtkRabota7] > 0) return SendClientMessage(playerid,COLOR_WHITE," К сожалению, вы нам не подходите!");
					jobtext = "Автомехаником";
					GettingJob[playerid] = 7;
				}
			case 4:
				{
					if(PlayerInfo[playerid][pOtkRabota8] > 0) return SendClientMessage(playerid,COLOR_WHITE," К сожалению, вы нам не подходите!");
					jobtext = "Телохранителем";
					GettingJob[playerid] = 8;
				}
			case 5:
				{
					if(PlayerInfo[playerid][pOtkRabota12] > 0) return SendClientMessage(playerid,COLOR_WHITE," К сожалению, вы нам не подходите!");
					jobtext = "Боксером";
					GettingJob[playerid] = 12;
				}
			case 6:
				{
					if(PlayerInfo[playerid][pOtkRabota14] > 0) return SendClientMessage(playerid,COLOR_WHITE," К сожалению, вы нам не подходите!");
					jobtext = "Водителем автобуса";
					GettingJob[playerid] = 14;
				}
			case 7:
				{
					if(PlayerInfo[playerid][pOtkRabota15] > 0) return SendClientMessage(playerid,COLOR_WHITE," К сожалению, вы нам не подходите!");
					jobtext = "Почтальоном";
					GettingJob[playerid] = 15;
				}
			case 8:
				{
					if(PlayerInfo[playerid][pOtkRabota16] > 0) return SendClientMessage(playerid,COLOR_WHITE," К сожалению, вы нам не подходите!");
					jobtext = "Дальнобойщиком";
					GettingJob[playerid] = 16;
				}
			case 9:
				{
					if(PlayerInfo[playerid][pOtkRabota22] > 0) return SendClientMessage(playerid,COLOR_WHITE," К сожалению, вы нам не подходите!");
					jobtext = "Доставщиком пиццы";
					GettingJob[playerid] = 22;
				}
			case 10:
				{
					if(PlayerInfo[playerid][pOtkRabota24] > 0) return SendClientMessage(playerid,COLOR_WHITE," К сожалению, вы нам не подходите!");
					jobtext = "Страховым агентом";
					GettingJob[playerid] = 24;
				}
			}
			format(string,sizeof(string),"{FFFFFF}Вы можете стать %s и заключить 5ти часовой контракт.\nЕсли вы заключите контракт, то чтобы уйти, \nвы будете обязаны отработать 5 часов.\n\n{2E9AFE}Вы принимаете эти условия?",jobtext);
			ShowPlayerDialog(playerid,35,DIALOG_STYLE_MSGBOX,"Вы уверены?",string,"Да","Нет");
			return 1;
		}
	case 1000:
		{
			if(!response) return 1;
			if(GettingJob[playerid] > 0)
			{
				if(GettingJob[playerid] == 16 && !PlayerInfo[playerid][pKatC]) return SendClientMessage(playerid,-1,#Для устройства на данную работу нужны права категории С.);
				if(GettingJob[@p] == 9 && !(PlayerInfo[@p][pMember] == 15 || PlayerInfo[@p][pLeader] == 15)) return SCM(@p,-1,"Доступно только для Арзамасовской братвы!");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы устроились на работу! Чтобы уволиться, введите /quitjob "), SendClientMessage(playerid, COLOR_LIGHTBLUE, "Для помощи по данной работе введите /help.");
				PlayerInfo[playerid][pJob] = GettingJob[playerid];
				GettingJob[playerid] = 0;
			}
			return 1;
		}
		
	case 99:
		{
			if(!response) return 1;
			if(Gotos[playerid] == 0)
			{
				switch(listitem)
				{
				case 0: { SetPPos(playerid, -2041.1198,-85.8675,35.3203), SetPlayerInterior(playerid,0); }
				case 1: { SetPPos(playerid, 2223.9595,-1147.4235,25.8095), SetPlayerInterior(playerid,0); }
				case 2: { SetPPos(playerid, 2626.8020,1996.6038,10.8203), SetPlayerInterior(playerid,0); }
				case 3: { SetPPos(playerid, 264.2318,77.8592,1004.6830), SetPlayerInterior(playerid,0); }
				case 4: { SetPPos(playerid, -1336.3948,466.9529,7.1875), SetPlayerInterior(playerid,0); }
				case 5: { SetPPos(playerid, 271.7886,1859.3013,8.7578), SetPlayerInterior(playerid,0); }
				case 6: { SetPPos(playerid, 1463.1394,-1017.5176,25.4240), SetPlayerInterior(playerid,0); }
				case 7: { SetPPos(playerid, -2659.1533,1410.2878,910.1703), SetPlayerInterior(playerid,0); }
				case 8: { SetPPos(playerid, 476.1017,-14.9692,1003.6953), SetPlayerInterior(playerid,0); }
				case 9: { SetPPos(playerid, 1752.2485,-2544.1772,13.5469), SetPlayerInterior(playerid,0); }
				case 10: { SetPPos(playerid, -1280.1223,-168.8073,14.1484), SetPlayerInterior(playerid,0); }
				case 11: { SetPPos(playerid, 1432.9432,1463.2916,10.8203), SetPlayerInterior(playerid,0); }
				}
			}
		}
	case 24://24/7
		{
			new string[128];
			if(!response) return 1;
			if(!PlayerToPoint(100, playerid,740.1365,801.2755,12.0256)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в магазине.");				
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pPhoneBook]) return SendClientMessage(playerid,-1,#У вас уже есть телефонная книга);
					if(eGetPlayerMoney(playerid) < 150) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					if(PlayerInfo[playerid][pTraderPerk] > 0)
					{
						new skill = 150 / 100; new price = (skill)*(PlayerInfo[playerid][pTraderPerk]); new payout = 150 - price;
						format(string, sizeof(string), "~r~-%dp", payout), GameTextForPlayer(playerid, string, 5000, 1);
						GivePlayerMoney(playerid,- payout);
						PlayerInfo[playerid][pCash]-= 150;
					}
					else GameTextForPlayer(playerid, "~r~-150р", 5000, 1), GivePlayerMoney(playerid,-150),PlayerInfo[playerid][pCash]-= 150;

					//
					PlayerInfo[playerid][pPhoneBook] = 1;
					format(string, sizeof(string), "Вы купили телефонную книгу. Теперь вы сможете смотреть номера игроков."), SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					SendClientMessage(playerid, COLOR_WHITE, "Используйте: /number [id], чтобы узнать телефонный номер игрока.");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				/*case 2:
				{
					if(eGetPlayerMoney(playerid) < 180) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					if(PlayerInfo[playerid][pClock] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть часы!");
					PlayerInfo[playerid][pClock] += 1;
					GameTextForPlayer(playerid, "~r~-180р", 5000, 1), GivePlayerMoney(playerid, - 180);
					format(string, sizeof(string), "Вы приобрели наручные часы!"), SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					SendClientMessage(playerid, COLOR_WHITE, "Введите /time чтобы посмотреть время.");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}*/

				/*case 4:
				{
					if(eGetPlayerMoney(playerid) < 260) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					PlayerInfo[playerid][pFuel] = 20; GivePlayerMoney(playerid, - 260); GameTextForPlayer(playerid, "~r~-260p", 5000, 1);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы приобрели 20ти литровую канистру с бензином.");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}*/
			case 1:
				{
					if(eGetPlayerMoney(playerid) < 550) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GivePlayerMoney(playerid, - 550); GiveWeapon(playerid,43, 25); GameTextForPlayer(playerid, "~r~-550p", 5000, 1);
					PlayerInfo[playerid][pCash]-= 550;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы приобрели фотоаппарат.");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
			case 2:
				{
					if(eGetPlayerMoney(playerid) < 1000) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GivePlayerMoney(playerid, - 1000); GiveWeapon(playerid,42, 100); GameTextForPlayer(playerid, "~r~-1000p", 5000, 1);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы приобрели огнетушитель.");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pCash]-= 1000;
				}
			case 3:
				{
					if(eGetPlayerMoney(playerid) < 700) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GivePlayerMoney(playerid, - 700); GiveWeapon(playerid,5, 1); GameTextForPlayer(playerid, "~r~-700p", 5000, 1);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы приобрели бейсбольную биту.");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pCash]-= 700;
				}
			case 4:
				{
					if(eGetPlayerMoney(playerid) < 1000) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid,-1,#Для покупки данного предмета необходим 3 уровень!);
					GivePlayerMoney(playerid, - 1000); GiveWeapon(playerid,41, 100); GameTextForPlayer(playerid, "~r~-1000p", 5000, 1);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы приобрели перцовый балончик.");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pCash]-= 1000;
				}
			case 5:
				{
					if(eGetPlayerMoney(playerid) < 300) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					if(PlayerInfo[playerid][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете зарегистрировать SIM-карту без паспорта!");
					if(PlayerInfo[playerid][pPnumber] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже SIM-карта!");
					GameTextForPlayer(playerid, "~r~-300p", 5000, 1), GivePlayerMoney(playerid, -300);
					//
					new randphone = 100000 + random(899999);
					PlayerInfo[playerid][pPnumber] = randphone;
					format(string, sizeof(string), "Вы купили SIM карту. Ваш нoмep телефона: %d.", randphone), SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pCash]-= 300;
				}
			case 6:
				{
					if(PlayerInfo[playerid][pRadio1][0]) return SendClientMessage(playerid,-1,#У вас уже есть рация);
					if(eGetPlayerMoney(playerid) < 5000) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GameTextForPlayer(playerid, "~r~-5000p", 5000, 1), GivePlayerMoney(playerid, -5000);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы приобрели рацию (( /ra для использования )).");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pRadio1][0] = 1;
					PlayerInfo[playerid][pRadio1][1] = 0;
					PlayerInfo[playerid][pCash]-= 5000;
				}
			case 7:
				{
					if(PlayerInfo[playerid][pAptechka] > 3) return SendClientMessage(playerid,-1,"Нельзя купить более 3-х штук");
					if(eGetPlayerMoney(playerid) < 1000) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GameTextForPlayer(playerid, "~r~-1000 рублей", 5000, 1), GivePlayerMoney(playerid, -1000);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы приобрели аптечку (( /inv -> Предметы для использования )).");
					PlayerInfo[playerid][pAptechka]++;
					PlayerInfo[playerid][pCash]-= 1000;
				}
			case 8:
				{
					if(PlayerInfo[playerid][pFill][0]) return SendClientMessage(playerid,-1,#У вас уже есть канистра с бензином);
					if(eGetPlayerMoney(playerid) < 600) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GameTextForPlayer(playerid, "~r~-600р", 5000, 1), GivePlayerMoney(playerid, -600);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы приобрели канистру с бензином (( /inv -> Предметы для использования )).");
					PlayerInfo[playerid][pFill][0] = 1;
					PlayerInfo[playerid][pFill][1] = 10;
					PlayerInfo[playerid][pCash]-= 600;
				}
			case 9:
				{
					if(PlayerInfo[playerid][pMask]) return SendClientMessage(playerid,-1,#У вас уже есть маска);
					if(eGetPlayerMoney(playerid) < 1000) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GameTextForPlayer(playerid, "~r~-1000 рублей", 5000, 1), GivePlayerMoney(playerid, -1000);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы приобрели маску (( /inv -> Предметы для использования )).");
					PlayerInfo[playerid][pMask] = 1;
					PlayerInfo[playerid][pCash]-= 1000;
				}
			case 10:
				{
					if(PlayerInfo[playerid][pMFon]) return SendClientMessage(playerid,-1,#У вас уже есть магнитофон);
					if(eGetPlayerMoney(playerid) < 1000) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
					GameTextForPlayer(playerid, "~r~-1000 рублей", 5000, 1), GivePlayerMoney(playerid, -1000);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы приобрели магнитофон (( /inv -> Предметы для использования )).");
					PlayerInfo[playerid][pMFon] = 1;
					PlayerInfo[playerid][pCash]-= 1000;
				}
			}
			SaveItems_Tp(_,playerid,3);
		}
		
	case 50:
		{
			if(!response) return 1;
			new Float:health, napitok[30];
			if(PlayerDrunk[playerid] > 10) return 1;
			switch(listitem)
			{
			case 0:
				{
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					GivePlayerMoney(playerid, - 6);
					if(PlayerInfo[playerid][pAlcoZavisimost] == 0)
					{
						PlayerMayAlco[playerid] += 350;
						if(PlayerMayAlco[playerid] >= 1000) PlayerInfo[playerid][pAlcoZavisimost] = 1, PlayerInfo[playerid][pAlcoLomka] = 400;
					}
					else PlayerInfo[playerid][pAlcoLomka] += 400, SetPlayerDrunkLevel(playerid,0);

					//
					PlayerDrunk[playerid] += 2;
					if(PlayerDrunk[playerid] >= 2) return SendClientMessage(playerid, COLOR_RED, "Вы выпили! Не садитесь за руль!");
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 15; ServerGivePlayerHealth(playerid, health + hp); }
						else ServerGivePlayerHealth(playerid, health + 15.0);
					}
					napitok = "Пиво";
				}
			case 1:
				{
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					GivePlayerMoney(playerid, - 10);
					if(PlayerInfo[playerid][pAlcoZavisimost] == 0)
					{
						PlayerMayAlco[playerid] += 350;
						if(PlayerMayAlco[playerid] >= 1000) PlayerInfo[playerid][pAlcoZavisimost] = 1, PlayerInfo[playerid][pAlcoLomka] = 400;
					}
					else PlayerInfo[playerid][pAlcoLomka] += 400, SetPlayerDrunkLevel(playerid,0);

					//
					PlayerDrunk[playerid] += 3;
					if(PlayerDrunk[playerid] >= 3) return SendClientMessage(playerid, COLOR_RED, "Вы выпили! Не садитесь за руль!");
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 25; ServerGivePlayerHealth(playerid, health + hp); }
						else { ServerGivePlayerHealth(playerid, health + 25.0); }
					}
					napitok = "Водка";
				}
			case 2:
				{
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					GivePlayerMoney(playerid, - 25);
					if(PlayerInfo[playerid][pAlcoZavisimost] == 0)
					{
						PlayerMayAlco[playerid] += 350;
						if(PlayerMayAlco[playerid] >= 1000) PlayerInfo[playerid][pAlcoZavisimost] = 1, PlayerInfo[playerid][pAlcoLomka] = 400;
					}
					else PlayerInfo[playerid][pAlcoLomka] += 400, SetPlayerDrunkLevel(playerid,0);

					//
					PlayerDrunk[playerid] += 2;
					if(PlayerDrunk[playerid] >= 2) return SendClientMessage(playerid, COLOR_RED, "Вы выпили! Не садитесь за руль!");
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 25; ServerGivePlayerHealth(playerid, health + hp); }
						else { ServerGivePlayerHealth(playerid, health + 25.0); }
					}
					napitok = "Коктейль";
				}
			case 3:
				{
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					GivePlayerMoney(playerid, - 10);
					if(PlayerInfo[playerid][pAlcoZavisimost] == 0)
					{
						PlayerMayAlco[playerid] += 350;
						if(PlayerMayAlco[playerid] >= 1000) PlayerInfo[playerid][pAlcoZavisimost] = 1, PlayerInfo[playerid][pAlcoLomka] = 400;
					}
					else PlayerInfo[playerid][pAlcoLomka] += 400, SetPlayerDrunkLevel(playerid,0);

					//
					PlayerDrunk[playerid] += 6;
					if(PlayerDrunk[playerid] >= 6) return SendClientMessage(playerid, COLOR_RED, "Вы выпили! Не садитесь за руль!");
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 27; ServerGivePlayerHealth(playerid, health + hp); }
						else ServerGivePlayerHealth(playerid, health + 27.0);
					}
					napitok = "Виски";
				}
			case 4:
				{
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
					GivePlayerMoney(playerid, - 2);
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; ServerGivePlayerHealth(playerid, health + hp); }
						else ServerGivePlayerHealth(playerid, health + 5.0);
					}
					napitok = "Молоко";
				}
			case 5:
				{
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
					GivePlayerMoney(playerid, - 2);
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; ServerGivePlayerHealth(playerid, health + hp); }
						else ServerGivePlayerHealth(playerid, health + 2.5);
					}
					napitok = "Кола";
				}
			case 6:
				{
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
					GivePlayerMoney(playerid, - 2);
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; ServerGivePlayerHealth(playerid, health + hp); }
						else ServerGivePlayerHealth(playerid, health + 1.5);
					}
					napitok = "Вода";
				}
			}
			new string[128];
			format(string, sizeof(string), "* %s пьёт %s", NamePlayer[playerid] ,napitok);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0);
		}
	case 5253:
		{
			SetPVarInt(playerid, "EPLAYER", response);
			if(!response)
			{
				//SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], 489.5985,1107.3766,12.8234, 1.0, -1, -1, -1, -1, -1, -1);
				SpawnPlayer(playerid);
			}
			SpawnPlayer(playerid);
			return 1;
		}
	case 5254:
		{
			new dformat[600];
			if(!response) return 1;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,5254,DIALOG_STYLE_INPUT,"{08A9FA}Info","{FFFFFF}Введите гос.номер машины о которой хотите узнать информацию:","OK","Закрыть");
			for(new car = 0; car < MAX_VEHICLES; car++)
			{
				if(!aData[car][aKey]) continue;
				if(!strlen(aData[car][aNumber])) continue;
				if(!strcmp(aData[car][aNumber],inputtext,true))
				{
					format(dformat, 600, "{FFFFFF}ID: {2E9AFE}%d\n{FFFFFF}Номер: {2E9AFE}%s\n{FFFFFF}Марка автомобиля: {2E9AFE}%s\n{FFFFFF}Владелец: {2E9AFE}%s\n{FFFFFF}Эвакуировано: {2E9AFE}%s\n{FFFFFF}Эвакуировал: {2E9AFE}%s\n{FFFFFF}Причина: {2E9AFE}%s", aData[car][aCarid], aData[car][aNumber], VehiclesName[aData[car][aModel]-400], aData[car][aOwner], aData[car][aArrest] ? ("Да") : ("Нет"), aData[car][aPArrestName], aData[car][aPArrest]);
					ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "Информация о т/с.", dformat, "Принять", "Закрыть");
					return 1;
				}
			}
			return SendClientMessage(playerid, -1, "Введен неверный номер автомобиля.");
		}
	case 1:
		{
			if(!response) return KickEx(playerid);
			new query[200];
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i]) {case 'А'..'Я', 'а'..'я', '=', ' ': return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"{FF0000}Ошибка!","{FF0000}Пароль может состоять только из латинских букв и цифр.","Повтор","");}
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD,"{2E9AFE}Авторизация аккаунта","{FFFFFF}Добро пожаловать на Trusty Roleplay\nВаш аккаунт{0099FF} зарегистрирован{FFFFFF}, введите Ваш пароль в окно ниже.\n\n{808080}Информация:\n\n- Если вы забыли свой пароль, вы можете восстановить его на сайте er-project.ru","Войти","Отмена");
			if(strcmp(UserKey[playerid],inputtext,true))
			{
				if(GetPVarInt(playerid, "wrongPass") > 2) return KickEx(playerid);
				format(format_string, 128, "{D95A41}Внимание! Вы ввели неверный пароль!\n          У вас осталось (%d) попытки",3-GetPVarInt(playerid, "wrongPass")), ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"{D95A41}Ошибка!",format_string,"Повтор","Выйти");
				return SetPVarInt(playerid, "wrongPass", GetPVarInt(playerid, "wrongPass")+1);
			}
			else {
				if(IsPlayerOnBanList(playerid)) return 1;
				format(query, 200, "SELECT * FROM `accounts` WHERE `pNickname` = '%s' LIMIT 1", NamePlayer[playerid]);
				mysql_tquery(MySQLGo, query, "LoginCallback", "i", playerid);
			}
		}
	case 3:
		{
			if(response) PlayerInfo[playerid][pSex] = 1;
			else PlayerInfo[playerid][pSex] = 2;
			PlayerInfo[playerid][pOrigin] = 1;
			gPlayerLogged[playerid] = 1;
			SetPVarInt(playerid,"RegSkinSelect",1);
			TogglePlayerControllable(playerid, 0);
			SpawnPlayer(playerid);			
		}
	case 2:
		{
			if(!response) return KickEx(playerid);
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i]) {case 'А'..'Я', 'а'..'я', '=', ' ': return ShowPlayerDialog(playerid,2,DIALOG_STYLE_MSGBOX,"{00ff00}Ошибка!","{00ff00}Пароль может состоять только из латинских букв и цифр.","Повтор","");}
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{2E9AFE}Регистрация | Пароль","{FFFFFF}Введите будущий пароль для вашего аккаунта.\nОн будет запрашиваться при каждом подключении к серверу.\n\n {2E9AFE}Примечания:\n- Пароль должен быть сложным (Пример: g5rQ08QQDRdzd45a1).\n- Пароль должен состоять из цифр и букв.\n- Максимальная длина пароля от 6 до 15 символов.\n\n{2E9AFE}Восстановить пароль вы всегда можете через сайт: {2E9AFE}er-project.ru","Готово","Выйти");
			if(5 <= strlen(inputtext) >= 16) return ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{2E9AFE}Регистрация | Пароль","{FFFFFF}Введите будущий пароль для вашего аккаунта.\nОн будет запрашиваться при каждом подключении к серверу.\n\n {2E9AFE}Примечания:\n- Пароль должен быть сложным (Пример: g5rQ08QQDRdzd45a1).\n- Пароль должен состоять из цифр и букв.\n- Максимальная длина пароля от 6 до 15 символов.\n\n{2E9AFE}Восстановить пароль вы всегда можете через сайт: {2E9AFE}er-project.ru","Готово","Выйти");
			mysql_escape_string(inputtext, UserKey[playerid], MySQLGo, 64);
			ShowPlayerDialog(playerid,5,1,"{2E9AFE}Регистрация | Почта","{ffffff}Введите ваш действующий электронный адрес:\n\n{2E9AFE}Подсказка: Для надежности аккаунта используйте сервис Gmail.Ru","Далее","Назад");
		}
	case 5:
		{
			if(!response) return KickEx(playerid);
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i]) {case 'А'..'Я', 'а'..'я', '=', ' ': return ShowPlayerDialog(playerid,5,1,"{96e300}Регистрация | Почта","{ffffff}Введите ваш действующий электронный адрес:\n\n{bbbbbb}Подсказка: Для надежности аккаунта используйте сервис Mail.Ru\n\n{ff0000}Некорректный адрес электронной почты","Далее","Назад");}
			new sabaka;
			for(new i = strlen(inputtext); i != 0; --i)
			{
				switch(inputtext[i])
				{
				case '@': sabaka++;
				}
			}
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,5,1,"{96e300}Регистрация | Почта","{ffffff}Введите ваш действующий электронный адрес:\n\n{bbbbbb}Подсказка: Для надежности аккаунта используйте сервис mail.ru\n\n{ff0000}Некорректный адрес электронной почты","Далее","Назад");
			if(IsTextInvalid(inputtext)) return ShowPlayerDialog(playerid,5,1,"{96e300}Регистрация | Почта","{ffffff}Введите ваш действующий электронный адрес:\n\n{bbbbbb}Подсказка: Для надежности аккаунта используйте сервис mail.ru\n\n{ff0000}Некорректный адрес электронной почты","Далее","Назад");
			if(!sabaka) return ShowPlayerDialog(playerid,5,1,"{96e300}Регистрация | Почта","{ffffff}Введите ваш действующий электронный адрес:\n\n{bbbbbb}Подсказка: Для надежности аккаунта используйте сервис mail.ru\n\n{ff0000}Некорректный адрес электронной почты","Далее","Назад");
			glob_str = "";
			mysql_format(MySQLGo,glob_str,sizeof(glob_str),"SELECT `id` FROM `accounts` WHERE `pEmail` = '%e'",inputtext);
			new Cache:p = mysql_query(MySQLGo,glob_str);
			glob_str = "";
			if(cache_num_rows()) return ShowPlayerDialog(playerid,5,1,"{96e300}Регистрация | Почта","{ffffff}Введите ваш действующий электронный адрес:\n\n{bbbbbb}Подсказка: Для надежности аккаунта используйте сервис mail.ru\n\n{ff0000}Данный почтовый адрес уже указан в качестве регистрационного\nдля другого аккаунта. Укажите другой адрес!","Далее","Назад");
			cache_delete(p);
			mysql_escape_string(inputtext, UserMail[playerid], MySQLGo, 64);
			ShowPlayerDialog(@p,1229,DIALOG_STYLE_INPUT,"{2E9AFE}Реферальная система.","{FFFFFF}Введите никнейм игрока, пригласившего Вас на сервер.\nПо достижению Вами определенного уровня, он получит вознаграждение.","Далее","Пропустить");
			
		}
	case 1229:
		{
			if(!response) return ShowPlayerDialog(playerid,3,DIALOG_STYLE_MSGBOX,"{2E9AFE}Выбор пола вашего будущего персонажа","{FFFFFF}Пожалуйста, выберите пол вашего будущего персонажа.","Мужчина","Женщина");
			if(!strlen(inputtext)) return ShowPlayerDialog(@p,1229,DIALOG_STYLE_INPUT,"{2E9AFE}Реферальная система.","{FFFFFF}Введите никнейм игрока, пригласившего Вас на сервер.\nПо достижению Вами определенного уровня, он получит вознаграждение.\n\n{ff0000}Некорректное имя пользователя","Далее","Пропустить");
			if(IsTextInvalid(inputtext)) return ShowPlayerDialog(@p,1229,DIALOG_STYLE_INPUT,"{2E9AFE}Реферальная система.","{FFFFFF}Введите никнейм игрока, пригласившего Вас на сервер.\nПо достижению Вами определенного уровня, он получит вознаграждение.\n\n{ff0000}Некорректное имя пользователя","Далее","Пропустить");
			if(strfind(inputtext, "_", true) == -1) return ShowPlayerDialog(@p,1229,DIALOG_STYLE_INPUT,"{2E9AFE}Реферальная система.","{FFFFFF}Введите никнейм игрока, пригласившего Вас на сервер.\nПо достижению Вами определенного уровня, он получит вознаграждение.\n\n{ff0000}Некорректное имя пользователя","Далее","Пропустить");
			new str[76];
			mysql_format(MySQLGo,str,sizeof(str),"SELECT `id` FROM `accounts` WHERE `pNickname` = '%e'",inputtext);
			new Cache:p = mysql_query(MySQLGo,str);
			if(!cache_num_rows()) return ShowPlayerDialog(@p,1229,DIALOG_STYLE_INPUT,"{2E9AFE}Реферальная система.","{FFFFFF}Введите никнейм игрока, пригласившего Вас на сервер.\nПо достижению Вами определенного уровня, он получит вознаграждение.\n\n{ff0000}Пользователь c данным никнеймом не найден.","Далее","Пропустить");
			cache_delete(p);
			strmid(PlayerInfo[@p][pRef], inputtext, 0, strlen(inputtext));
			ShowPlayerDialog(playerid,3,DIALOG_STYLE_MSGBOX,"{2E9AFE}Выбор пола вашего будущего персонажа","{FFFFFF}Пожалуйста, выберите пол вашего будущего персонажа.","Мужчина","Женщина");
		}
	}
	return 1;
}
stock IsTextInvalid(text[])
{
	if(strfind(text, "'", true) != -1) return 1;
	if(strfind(text, "=", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	if(strfind(text, ",", true) != -1) return 1;
	if(strfind(text, "`", true) != -1) return 1;
	if(strfind(text, ";", true) != -1) return 1;
	if(strfind(text, "|", true) != -1) return 1;
	return 0;
}
publics: ClearCK(ck)
{
	strmid(CKInfo[ck][cSendername], "нет", 0, strlen("нет"));
	strmid(CKInfo[ck][cGiveplayer], "нет", 0, strlen("нет"));
	CKInfo[ck][cUsed] = 0;
	SaveCK();
	return 1;
}
publics: ClearMarriage(playerid)
{
	strmid(PlayerInfo[playerid][pMarriedTo], "Нет", 0, strlen("Нет"));
	PlayerInfo[playerid][pMarried] = 0;
	return 1;
}
publics: ClearCrime(playerid)
{
	strmid(PlayerCrime[playerid][pBplayer], "********", 0, strlen("********"));
	strmid(PlayerCrime[playerid][pVictim], "********", 0, strlen("********"));
	strmid(PlayerCrime[playerid][pAccusing], "********", 0, strlen("********"));
	strmid(PlayerCrime[playerid][pAccusedof], "********", 0, strlen("********"));
	return 1;
}
publics: Lotto(number)
{
	new JackpotFallen = 0, string[128];
	format(string, sizeof(string), "Lotery: Сегодня выиграшный номер {2E9AFE}%d.", number), OOCOff(COLOR_WHITE, string);
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || PlayerInfo[i][pLottoNr] < 0) continue;
		if(PlayerInfo[i][pLottoNr] == number)
		{
			JackpotFallen = 1; ConsumingMoney[i] = 1;
			format(string, sizeof(string), "Lotery: %s выиграл Jackpot, его билет номер p%d .", NamePlayer[i], Jackpot), OOCOff(COLOR_WHITE, string);
			format(string, sizeof(string), "Вы выиграли %dр лотерею.", Jackpot), SendClientMessage(i, COLOR_YELLOW, string);
			GivePlayerMoney(i, Jackpot);
		}
		else SendClientMessage(i, COLOR_LIGHTBLUE, "Вы не выиграли сейчас, может повезёт потом.");
		PlayerInfo[i][pLottoNr] = 0;
	}
	if(JackpotFallen)
	{
		new rand = random(125000); rand += 15789;
		format(string, sizeof(string), "Lotery: Назначен новый JackPot: {2E9AFE}%dр.", Jackpot), OOCOff(COLOR_WHITE, string);
		Jackpot = rand;
		SaveStuff();
	}
	else
	{
		new rand = random(15000); rand += 2158;
		format(string, sizeof(string), "Lotery: Jackpot был поднят {2E9AFE}%dр.", Jackpot), OOCOff(COLOR_WHITE, string);
		Jackpot += rand;
		SaveStuff();
	}
	return 1;
}
public OnPlayerDisconnect(playerid, reason)
{
	// Сохранение
	SavePlayer(playerid);
	for(new i = 0; i < M_CINFO; i++)
	{
		if(!strcmp(NamePlayer[@p], PCI[i][c_name], true))
		{
			PCI[i][c_id] = -1;
			break;
		}
	}
	if(GetPVarType(@p,"cdo") && gpvi(playerid,"cdo") != -1)
	{
		Delete3DTextLabel(CDOText[gpvi(playerid,"cdo")]);
		DeletePVar(playerid,"cdo");
	}
	KillTimer(GetPVarInt(playerid,#P_Tick_Timer));
	SetVehicleToRespawn(GetPVarInt(playerid,#Mus_Car));
	if(gpvi(@p,#P_JobLess_On))
	{
		KillTimer(gpvi(@p,#P_JobLess_Timer));
		DisablePlayerCheckpoint(@p);
		RemovePlayerAttachedObject(@p,0);
		DeletePVar(@p,#P_JobLess_Br);
		DeletePVar(@p,#P_JobLess_On);
		DeletePVar(@p,#P_JobLess_St);
		DeletePVar(@p,#P_JobLess_Tick);
		DeletePVar(@p,#P_JobLess_Timer);
	}
	if(GetPVarInt(@p,#P_Taxi_On))
	{
		Taxi_DrvEx(@p);
	}
	if(GetPVarInt(@p,#P_Taxi_Drive))
	{
		//g - driver id
		new g = GetPVarInt(@p,#P_Taxi_IDDriver);
		SCM(g,COLOR_LIGHTBLUE,#Пассажир вышел из вашего такси.);
		static const str1[] = "Заработано: {00ff00}%d {33CCFF}рублей";
		new str2[sizeof(str1)+11];
		format(str2,sizeof(str2),str1,GetPVarInt(g,#P_Taxi_Summ));
		SCM(g,COLOR_LIGHTBLUE,str2);
		PlayerInfo[g][pCash] += GetPVarInt(g,#P_Taxi_Summ);
		GivePlayerMoney(g,GetPVarInt(g,#P_Taxi_Summ));		
		PlayerTextDrawHide(g,taxi_info[g]);
		TextDrawHideForPlayer(g,taxi_fon);
		DeletePVar(g,#P_Taxi_Summ);
		//@p - пассажир
		TextDrawHideForPlayer(@p,taxi_fon);
		PlayerTextDrawHide(@p,taxi_info[@p]);		
		DeletePVar(@p,#P_Taxi_Drive);//статус пассажира		
		DeletePVar(g,#P_Taxi_IDPass);//ид пассажира		
		DeletePVar(@p,#P_Taxi_Km);//км пассажира
		DeletePVar(@p,#P_Taxi_KM_Int);//км окргуленные пассажира
		DeletePVar(g,#P_Taxi_State);//статус такси
		DisablePlayerCheckpoint(g);
		if(GetPVarInt(g,#P_Taxi_Type) == 2)
		{
			static const str0[] = "--{00ff00}Свободное {FFFF00}такси--\nЦена за километр: {00ff00}%d {FFFF00}рублей.";
			new str[sizeof(str0)+4];
			format(str,sizeof(str),str0,GetPVarInt(g,#P_Taxi_Tar));
			UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(g,#P_Taxi_Text3d), COLOR_YELLOW, str);
		}
		else if(GetPVarInt(g,#P_Taxi_Type) == 1)
		{
			static const str0[] = "--{00ff00}Свободное {FFFF00}такси--\nОплата: Договорная.";
			UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(g,#P_Taxi_Text3d), COLOR_YELLOW, str0);
		}
	}
	if(reason != 2)
	{
		new Float:Pos[MAX_PLAYERS][3], stringer[600]; GetPlayerPos(playerid, Pos[playerid][0], Pos[playerid][1], Pos[playerid][2]);
		format(stringer, 600, "UPDATE `accounts` SET `EPLAYER` = '%f,%f,%f,%i,%i,%i,%i,%i' WHERE `pNickname` = '%s' LIMIT 1",Pos[playerid][0], Pos[playerid][1], Pos[playerid][2], GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),gettime()+300,GetPVarInt(playerid,#P_Jobs),GetPVarInt(playerid,#P_Kpz), NamePlayer[playerid]);
		mysql_tquery(MySQLGo, stringer, "", "");
	}
	if(GetPVarInt(playerid,#P_MFon_On)) Stop_MFon(playerid);
	if(PlayerInfo[playerid][pCKey])
	{
		new id_car = GetVehicleIdxByKey(PlayerInfo[playerid][pCKey]);
		if(id_car != -1)
		mysql_function(MySQLGo,200,"UPDATE `vehicles` SET `Milleage` = '%.1f' WHERE `Owner` = '%s'",false,"","", aData[id_car][aMilleage], NamePlayer[playerid]);
	}
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `isOnline` = '1001' WHERE `pNickname` = '%s'",false,"","",NamePlayer[@p]);
	// Обнуления
	if(PlayerTextFormat[playerid][0] == 1) Delete3DTextLabel(Player3DTextDo[playerid]), PlayerTextFormat[playerid][0] = 0;
	if(PlayerTextFormat[playerid][1] == 1) Delete3DTextLabel(Player3DText[playerid]), PlayerTextFormat[playerid][1] = 0;
	if(GetPVarInt(playerid,#P_Konvoiren))
	{
		new p = GetPVarInt(playerid,#P_Konv_ID);
		DeletePVar(p,#P_Konvoir);
		DeletePVar(playerid,#P_Konvoiren);
		DeletePVar(p,#P_Konv_ID);
		DeletePVar(playerid,#P_Konv_ID);
		KillTimer(GetPVarInt(playerid,#P_Konv_Tim));
		TogglePlayerControllable(playerid,1);
		SendClientMessage(p,COLOR_GRAD1,#Конвоируемый скрылся!);
	}
	else if(GetPVarInt(playerid,#P_Konvoir))
	{
		new p = GetPVarInt(playerid,#P_Konv_ID);
		DeletePVar(playerid,#P_Konvoir);
		DeletePVar(p,#P_Konvoiren);
		DeletePVar(playerid,#P_Konv_ID);
		DeletePVar(p,#P_Konv_ID);
		KillTimer(GetPVarInt(p,#P_Konv_Tim));
		TogglePlayerControllable(p,1);
		SendClientMessage(p,COLOR_GRAD1,#Конвой окончен!);
	}
	if(PlayerInfo[playerid][pJob] == 11) Medics -= 1;
	if(PlayerInfo[playerid][pJob] == 7) Mechanics -= 1;
	if(PlayerPaintballing[playerid] != 0) PaintballPlayers--;
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999) TransportMoney[TransportDriver[playerid]] += TransportCost[playerid], TransportTime[TransportDriver[playerid]] = 0, TransportCost[TransportDriver[playerid]] = 0;
	verent[playerid] = 0; numplayers--; oplayers--; PlayerInfo[playerid][pAdjustable] = 1;
	for(new pInfo:I;I<pInfo;++I) PlayerInfo[playerid][I]=0;
	return 1;
}
public SetPlayerSpawn(playerid)
{
	//SetPlayerToTeamColor(playerid);
	new rand;
	if(PlayerPaintballing[playerid] != 0)
	{
		ResetWeapons(playerid);
		GiveWeapon(playerid, 29, 999);
		rand = random(sizeof(PaintballSpawns));
		SetPPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
		Frez(playerid);
		return 1;
	}
	if(GetPVarInt(playerid,"EPLAYER"))
	{
		if(GetPVarInt(playerid,"e_job") > 0)	SetPVarInt(playerid,#P_Jobs,1);
		if(PlayerInfo[playerid][pChar] > 0 && GetPVarInt(playerid,#P_Jobs) == 1) SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		SetPPos(playerid,GetPVarFloat(playerid,"e_X"),GetPVarFloat(playerid,"e_Y"),GetPVarFloat(playerid,"e_Z"));
		SetPlayerInterior(playerid,GetPVarInt(playerid,"e_Int"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"e_Virt"));

		DeletePVar(playerid,"e_X"); DeletePVar(playerid,"e_Y"); DeletePVar(playerid,"e_Z");
		DeletePVar(playerid,"e_Int"); DeletePVar(playerid,"e_Virt"); DeletePVar(playerid, "e_time");
		DeletePVar(playerid,"EPLAYER");
		return 1;
	}
	if(PlayerInfo[playerid][pJailed] == 1)
	{
		SetPlayerInterior(playerid, 0);
		SetPPos(playerid,-1801.5328,-2835.1184,14.2163);
		SendClientMessage(playerid, COLOR_LIGHTRED, "Вы не досидели свой тюремный срок.");
		Frez(playerid);
		return 1;
	}
	if(PlayerInfo[playerid][pJailed] == 2)
	{
		SetPlayerInterior(playerid, 0);
		SetPPos(playerid,268.5777,1857.9351,9.8133);
		SetPlayerWorldBounds(playerid, 337.5694,101.5826,1940.9759,1798.7453);
		Frez(playerid);
		return 1;
	}
	if(PlayerInfo[playerid][pCKey] > 0)
	{
		if(PlayerInfo[playerid][pSpawnP] == 1)
		{
			SetPPos(playerid,-214.7046,2372.8638,-30.9847);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"Kvart"));
			Frez(playerid);
		}
	}
	if(PlayerInfo[playerid][pNewHouse] > 0 || PlayerInfo[playerid][pRentHouse] > 0)
	{
		if(PlayerInfo[playerid][pSpawnP] == 1)
		{
			new j;
			if(PlayerInfo[playerid][pNewHouse] > 0) j = GetHouseIdx(PlayerInfo[playerid][pNewHouse]);
			else j = GetHouseIdx(PlayerInfo[playerid][pRentHouse]);
			SetPPos(playerid,House[j][Ex],House[j][Ey],House[j][Ez]);
			PlayerInfo[playerid][pInt] = House[j][int];
			SetPlayerInterior(playerid,House[j][int]);
			SetPlayerFacingAngle(playerid,House[j][Ea]);
			SetPVarInt(@p,#P_House_Id,j);
			SetCameraBehindPlayer(playerid);
			Frez(playerid);
			return 1;
		}
	}
	PyxiTime[playerid] = 15;
	new frak;
	if(PlayerInfo[playerid][pLeader] > 0) frak = PlayerInfo[playerid][pLeader];
	else frak = PlayerInfo[playerid][pMember];
	switch(frak)
	{
	case 1:
		{
			SetPPos(playerid, -309.4652,1163.8525,579.0159);
			SetPlayerFacingAngle(playerid, 58.4377);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			OnWeapon[playerid] = 0;
			Frez(playerid);
		}
	case 2:
		{
			SetPPos(playerid, 2393.2197,-1821.0171,19.0850);
			SetPlayerFacingAngle(playerid,218.7218);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			OnWeapon[playerid] = 0;
			Frez(playerid);
		}
	case 3:
		{
			SetPlayerInterior(playerid, 0);
			SetPPos(playerid, -439.2968,-401.4348,1.1100);
			SetPlayerFacingAngle(playerid,178.6384);
			PlayerInfo[playerid][pInt] = 0;
			OnWeapon[playerid] = 0;
			Frez(playerid);
		}
	case 4:
		{
			SetPlayerInterior(playerid, 0);
			SetPPos(playerid, 711.1393,1428.6732,451.1259);
			SetPlayerFacingAngle(playerid,270.0645);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 5:
		{
			SetPlayerInterior(playerid, 0);
			SetPPos(playerid, -831.0303,1896.3359,454.1959);
			SetPlayerFacingAngle(playerid,181.1684);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 6:
		{
			SetPPos(playerid, -101.7243,1486.5132,451.7260);
			SetPlayerFacingAngle(playerid, 177.2321);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			OnWeapon[playerid] = 0;
			Frez(playerid);
		}
	case 7:
		{
			SetPlayerInterior(playerid, 0);
			SetPPos(playerid, -253.1442,1068.7479,452.2100);
			SetPlayerFacingAngle(playerid,182.7936);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 8:
		{
			SetPPos(playerid, 18.3366,2448.7148,-49.8841);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 9:
		{
			SetPPos(playerid, 18.3366,2448.7148,-49.8841);
			SetPlayerFacingAngle(playerid,359.0966);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 10:
		{
			SetPPos(playerid, 2562.1663,-2026.8545,21.9934);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 11:
		{
			SetPPos(playerid, 2148.1223,-2212.8608,23.1703);
			SetPlayerFacingAngle(playerid, 81.5603);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 12:
		{
			SetPPos(playerid, 310.9543,380.6921,12.2885);
			SetPlayerFacingAngle(playerid,330.2822);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 13:
		{
			SetPPos(playerid, -2227.3511,261.5214,24.5571);
			SetPlayerFacingAngle(playerid,357.8666);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 14:
		{
			SetPPos(playerid, 2132.1414,-1803.4575,19.9157);
			SetPlayerFacingAngle(playerid,0.2893);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 15:
		{
			SetPPos(playerid, 1454.3752,422.2101,-60.1141);
			SetPlayerFacingAngle(playerid,22.6394);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 16:
		{
			SetPPos(playerid, 256.5083,680.0598,12.0000);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 17:
		{
			SetPPos(playerid, 1727.4215,1672.3317,451.3359);
			SetPlayerFacingAngle(playerid,233.3318);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 18:
		{
			SetPlayerInterior(playerid, 0);
			SetPPos(playerid, 1754.8108,2252.7498,15.8608);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 19:
		{
			SetPPos(playerid, 326.9364,1811.4545,-41.8600);
			SetPlayerFacingAngle(playerid,281.4778);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 20:
		{
			SetPPos(playerid, 1765.0071,-2272.2244,11.0060);
			SetPlayerInterior(playerid,0);
			GiveWeapon(playerid, 22, 500);
			GiveWeapon(playerid, 30, 500);
			ServerGivePlayerHealth(playerid, 100);
			ServerGivePlayerArmour(playerid, 100);
			PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	case 21:
		{
			SetPlayerInterior(playerid, 0);
			SetPPos(playerid, 2795.2698,-2576.8738,11.5845);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	default:
		{
			SetPPos(playerid,489.5985,1107.3766,12.8234);
			SetPlayerFacingAngle(playerid, 357.7847);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			Frez(playerid);
		}
	}
	if(PlayerInfo[playerid][pMember] == 0) SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
	
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	//
	new string[128], Float:px,Float:py,Float:pz; GetPlayerPos(playerid, px, py, pz);

	//
	ClearCrime(playerid);
	ResetWeapons(playerid);
	if(GetPVarInt(playerid,#P_MFon_On)) Stop_MFon(playerid);
	PlayerHealth[playerid] = 100; HealthTime[playerid] = 15; PlayerInfo[playerid][pLocal] = 255;
	if(gpvi(@p,#P_JobLess_On))
	{
		KillTimer(gpvi(@p,#P_JobLess_Timer));
		DisablePlayerCheckpoint(@p);
		RemovePlayerAttachedObject(@p,0);
		DeletePVar(@p,#P_JobLess_Br);
		DeletePVar(@p,#P_JobLess_On);
		DeletePVar(@p,#P_JobLess_St);
		DeletePVar(@p,#P_JobLess_Tick);
		DeletePVar(@p,#P_JobLess_Timer);
	}
	if(GetPVarInt(@p,#P_Taxi_On))
	{
		Taxi_DrvEx(@p);
	}
	if(GetPVarInt(playerid, "jobgruz") == 1)
	{
		DisablePlayerCheckpoint(@p);
		DeletePVar(playerid,"loader"), DeletePVar(playerid,"oldskin"), DeletePVar(playerid,"moneygruz"), DeletePVar(playerid,"jobgruz");
	}
	if(GetPVarInt(@p,#P_Taxi_Drive))
	{
		//g - driver id
		new g = GetPVarInt(@p,#P_Taxi_IDDriver);
		SCM(g,COLOR_LIGHTBLUE,#Пассажир вышел из вашего такси.);
		//@p - пассажир
		static const str1[] = "Заработано: {00ff00}%d {33CCFF}рублей";
		new str2[sizeof(str1)+11];
		format(str2,sizeof(str2),str1,GetPVarInt(g,#P_Taxi_Summ));
		SCM(g,COLOR_LIGHTBLUE,str2);
		PlayerInfo[g][pCash] += GetPVarInt(g,#P_Taxi_Summ);
		GivePlayerMoney(g,GetPVarInt(g,#P_Taxi_Summ));		
		PlayerTextDrawHide(g,taxi_info[g]);
		TextDrawHideForPlayer(g,taxi_fon);
		DeletePVar(g,#P_Taxi_Summ);
		TextDrawHideForPlayer(@p,taxi_fon);
		PlayerTextDrawHide(@p,taxi_info[@p]);		
		DeletePVar(@p,#P_Taxi_Drive);//статус пассажира		
		DeletePVar(g,#P_Taxi_IDPass);//ид пассажира		
		DeletePVar(@p,#P_Taxi_Km);//км пассажира
		DeletePVar(@p,#P_Taxi_KM_Int);//км окргуленные пассажира
		DeletePVar(g,#P_Taxi_State);//статус такси
		DisablePlayerCheckpoint(g);
		if(GetPVarInt(g,#P_Taxi_Type) == 2)
		{
			static const str0[] = "--{00ff00}Свободное {FFFF00}такси--\nЦена за километр: {00ff00}%d {FFFF00}рублей.";
			new str[sizeof(str0)+4];
			format(str,sizeof(str),str0,GetPVarInt(g,#P_Taxi_Tar));
			UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(g,#P_Taxi_Text3d), COLOR_YELLOW, str);
		}
		else if(GetPVarInt(g,#P_Taxi_Type) == 1)
		{
			static const str0[] = "--{00ff00}Свободное {FFFF00}такси--\nОплата: Договорная.";
			UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(g,#P_Taxi_Text3d), COLOR_YELLOW, str0);
		}
	}
	if(GetPVarInt(playerid,#P_Konvoiren))
	{
		new p = GetPVarInt(playerid,#P_Konv_ID);
		DeletePVar(p,#P_Konvoir);
		DeletePVar(playerid,#P_Konvoiren);
		DeletePVar(p,#P_Konv_ID);
		DeletePVar(playerid,#P_Konv_ID);
		KillTimer(GetPVarInt(playerid,#P_Konv_Tim));
		TogglePlayerControllable(playerid,1);
		SendClientMessage(p,COLOR_GRAD1,#Конвоируемый скрылся!);
	}
	else if(GetPVarInt(playerid,#P_Konvoir))
	{
		new p = GetPVarInt(playerid,#P_Konv_ID);
		DeletePVar(playerid,#P_Konvoir);
		DeletePVar(p,#P_Konvoiren);
		DeletePVar(playerid,#P_Konv_ID);
		DeletePVar(p,#P_Konv_ID);
		KillTimer(GetPVarInt(p,#P_Konv_Tim));
		TogglePlayerControllable(p,1);
		SendClientMessage(p,COLOR_GRAD1,#Конвой окончен!);
	}
	//
	if(GetPVarInt(playerid,#Mus_Job) == 1 && GetPVarInt(playerid,#Mus_Start) == 1)
	{
		SetVehicleToRespawn(GetPVarInt(playerid,#Mus_Car));
		new summ = GetPVarInt(playerid,#Mus_Count) * Mus_Dm;
		new str1[46];
		format(str1,sizeof(str1),"Рабочий день завершен! Заработано: %d рублей.",summ);
		SendClientMessage(playerid,COLOR_GREEN,str1);
		PlayerInfo[playerid][pCash] += summ;
		GivePlayerMoney(playerid,summ);
		DeletePVar(playerid,#Mus_Act);
		DeletePVar(playerid,#Mus_Car);
		DeletePVar(playerid,#Mus_Count);
		DeletePVar(playerid,#Mus_Start);
		DeletePVar(playerid,#Mus_Job);
		PlayerInfo[@p][pJob] = 0;
		SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
	}
	if(PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pWantedPoints] == 0)
	{
		if(killerid != INVALID_PLAYER_ID)
		{
			if(!HospitalTime[playerid])
			{
				if(PlayerInfo[playerid][pDonateRank] > 0) HospitalTime[playerid] = 150;
				else HospitalTime[playerid] = 300;
			}
		}
	}

	//
	if(killerid != INVALID_PLAYER_ID)
	{
		if(!IsACop(killerid))
		{
			SendClientMessage(killerid, COLOR_LIGHTRED,"Вы совершили преступление: убийство гражданского!");
			format(string,sizeof(string), "Внимание! Совершено преступление (убийство гражданского)! Подозреваемый: %s. Сообщил: %s", NamePlayer[killerid], NamePlayer[playerid]);
			SendTeamPoliceMessage(TEAM_BLUE_COLOR,string);
			PlayerInfo[killerid][pWantedPoints] +=1; PlayerInfo[killerid][pCrimes] +=1;
			SetPlayerWantedLevel(killerid,WantedLevel[killerid] += 1);
			new years, months, days, data[128], hours, minutes, tmpsecond; getdate(years, months, days); gettime(hours, minutes, tmpsecond);
			format(data, 128, "%02d/%02d/%04d %s%d:%s%d", days, months, years, (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes);
			new querys[700];
			mysql_format(MySQLGo, querys, 700, "INSERT INTO `suspects` (`Name`,`Date`,`Reason`,`GivePlayer`) VALUES ('%s','%s','убийство гражданского','%s')", NamePlayer[killerid], data, NamePlayer[playerid]);
			mysql_tquery(MySQLGo, querys);
		}
	
		if(killerid != INVALID_PLAYER_ID)
		{
			//
			if(PlayerInfo[playerid][pWantedPoints] > 0)
			{
				if(IsACop(killerid))
				{
					if(PlayerInfo[playerid][pWantedPoints] == 1) PlayerInfo[playerid][pJailTime] = 200;
					if(PlayerInfo[playerid][pWantedPoints] == 2) PlayerInfo[playerid][pJailTime] = 400;
					if(PlayerInfo[playerid][pWantedPoints] == 3) PlayerInfo[playerid][pJailTime] = 650;
					if(PlayerInfo[playerid][pWantedPoints] == 4) PlayerInfo[playerid][pJailTime] = 800;
					if(PlayerInfo[playerid][pWantedPoints] == 5) PlayerInfo[playerid][pJailTime] = 1200;
					if(PlayerInfo[playerid][pWantedPoints] == 6) PlayerInfo[playerid][pJailTime] = 1800;

					//
					SetPlayerInterior(playerid, 0);
					SetPPos(playerid,-1801.5328,-2835.1184,14.2163);
					ClearCrime(playerid);
					WantedLevel[playerid] = 0;
					SetPlayerWantedLevel(playerid, 0);
					PlayerInfo[playerid][pJailed] = 1; PlayerInfo[playerid][pArrested] += 1; WantedPoints[playerid] = 0; PlayerInfo[playerid][pWantedPoints] = 0; WantedLevel[playerid] = 0; WantLawyer[playerid] = 1;
					SendClientMessage(playerid,COLOR_LIGHTRED,"Вы были ранены представителем власти. Вы были доставлены в тюрьму!");
					SendClientMessage(killerid,COLOR_LIGHTBLUE,"Вы ранили нарушителя с 1 уровнем розыска. Он был доставлен в тюрьму!");
				}
			}
		}
	}

	//
	if(reason == 38) format(string, 128, "Внимание! %s[%d] только что убил игрока с минигана, проверьте его.",NamePlayer[killerid],killerid), ABroadCast(COLOR_YELLOW,string,1);

	//
	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11) DisablePlayerCheckpoint(playerid), gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;

	//
	new caller = Mobile[playerid];
	if(caller != 255)
	{
		if(caller < 255) CellTime[caller] = 0; CellTime[playerid] = 0; Mobile[caller] = 255;
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}

	//
	if(PlayerPaintballing[playerid] != 0)
	{
		PlayerPaintballKills[killerid] ++;
		if(PlayerPaintballKills[killerid] > PaintballWinnerKills)
		{
			PaintballWinnerKills = PlayerPaintballKills[killerid];
			foreach(new i:Player)
			{
				if(PlayerPaintballing[i] != 0) format(string, sizeof(string), "%s вместе с главой %d убиты.",NamePlayer[killerid],PaintballWinnerKills), SendClientMessage(i, COLOR_WHITE, string);
			}
		}
		return 1;
	}
	return 1;
}


public OnPlayerSpawn(playerid)
{
	//
	new hour, minute; gettime(hour, minute);
	if(!uptime) SetPlayerTime(playerid,hour,minute);
	if(!gPlayerLogged[playerid]) 
	{
		SCM(@p,COLOR_LIGHTRED,"Для игры необходимо авторизоваться на сервере!");
		KickEx(@p);
		return 0;
	}
	SetPlayerColor(playerid,0xffffff00);
	//
	StopAudioStreamForPlayer(playerid);
	InitLockDoors(playerid);
	SetWeaponNew(playerid);
	//
	TextDrawShowForPlayer(playerid,txtTimeDisp);

	TextDrawHideForPlayer(playerid, Polosa[0]);
	TextDrawHideForPlayer(playerid, Polosa[1]);
	
	PreloadAnimLibs(playerid);
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"CRIB");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"JST_BUISNESS");
	PreloadAnimLib(playerid,"PED");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"SNM");
	//
	Masked[playerid] = 0;
	//
	if(GetPVarInt(playerid,"RegSkinSelect") == 1)
	{
		TogglePlayerControllable(playerid, 0);
		SetPPos(playerid, 201.6470,-12.1220,1001.2078);
		SetPlayerFacingAngle(playerid, 109.7525);
		SetPlayerCameraPos(playerid, 198.6470,-12.1220,1001.2078);
		SetPlayerCameraLookAt(playerid, 201.6470,-12.1220,1001.2078);
		SetPlayerInterior(playerid, 5);
		SetPlayerVirtualWorld(playerid, playerid+1);
		for(new i = 0; i < 8; i++) PlayerTextDrawShow(@p,ptd_skin[i][@p]);		
		SelectTextDraw(@p, 0xFFFF00FF);
		PlayerTextDrawColor(playerid, ptd_skin[1][playerid], 0x00000000);
		for(new i = 1; i < 7; i++)
		{
			if(i == 1) continue;
			PlayerTextDrawColor(playerid, ptd_skin[i][playerid], -1);
		}
		switch(PlayerInfo[playerid][pSex])
		{
		case 2://Женщина
			{
				SetPlayerSkin(playerid, RegFemaleSkins[0]);
				PlayerInfo[playerid][pModel] = RegFemaleSkins[0];				
			}
		default://Мужчина
			{
				SetPlayerSkin(playerid, RegMaleSkins[0]);
				PlayerInfo[playerid][pModel] = RegMaleSkins[0];
			}
		}
		glob_str = "";
		format(glob_str,sizeof(glob_str),"ID: %d",PlayerInfo[playerid][pModel]);
		PlayerTextDrawSetString(@p,ptd_skin[0][@p],glob_str);
		glob_str = "";	
		//SetPlayerSkin(playerid, 24);
		//ShowMenuForPlayer(regskinselects, playerid);
		return true;
	}

	//
	if(HospitalTime[playerid] > 0)
	{
		new string[128];
		SetPlayerInterior(playerid, 0);
		SetPPos(playerid,2448.5161,-1715.3229,29.5444);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerHealth(playerid, 100);
		SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		format(string,sizeof(string),"Вы попали в больницу. Время до выписки %d секунд(ы).",HospitalTime[playerid]), SendClientMessage(playerid, 0xFF6347AA, string);
		Frez(playerid);
		return true;
	}
	if(PlayerInfo[playerid][pChar] > 0 && GetPVarInt(playerid,#P_Jobs) == 1) SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	else SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
	if(GetPVarInt(@p,#P_Spec_Off))
	{
		SetPlayerPos(@p,GetPVarFloat(@p,#P_Spec_X),GetPVarFloat(@p,#P_Spec_Y),GetPVarFloat(@p,#P_Spec_Z));
		SetPlayerFacingAngle(@p, GetPVarFloat(@p,#P_Spec_A));
		SetPlayerInterior(@p,GetPVarInt(@p,#P_Spec_Int));
		PlayerInfo[@p][pInt] = GetPVarInt(@p,#P_Spec_Int);
		SetPlayerVirtualWorld(@p,GetPVarInt(@p,#P_Spec_VW));
		DeletePVar(@p,#P_Spec_Off);
		DeletePVar(@p,#P_Spec_X);
		DeletePVar(@p,#P_Spec_Y);
		DeletePVar(@p,#P_Spec_Z);
		DeletePVar(@p,#P_Spec_A);
		DeletePVar(@p,#P_Spec_Int);
		DeletePVar(@p,#P_Spec_VW);
		Frez(@p);
		return 1;
	}
	//
	SetPlayerSpawn(playerid);
	//SetPlayerToTeamColor(playerid);
	PlayerFixRadio(playerid);

	//
	for(new i = 0; i < sizeof(Turfs); i++) GangZoneShowForPlayer(playerid, i, TurfInfo[i][zColor]);
	return 1;
}

publics: OnPlayerFracColor(playerid)
{
	if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1)
	{
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 1)
			{
				SetPlayerMarkerForPlayer(playerid,i,COLOR_LIGHTBLUE);
				SetPlayerMarkerForPlayer(i,playerid,COLOR_LIGHTBLUE);
			}
		}
	}
	return 1;
}
public OnPlayerEnterRaceCheckpoint(@p)
{
	if(gpvi(@p,"AutoExam") && IsPlayerInAnyVehicle(@p) && !gpvi(@p,#P_AutoEx))
	{
		new slot = GetPVarInt(playerid,"LessonSlot");
		if(slot >= (AUTO_CP_COUNT-1)) return SetPlayerRaceCheckpoint(playerid,1, AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], 0.0, 0.0, 0.0, 5.0),spvi(@p,#P_AutoEx,1);
		SetPlayerRaceCheckpoint(playerid,0, AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], AutoCP[slot+1][0], AutoCP[slot+1][1], AutoCP[slot+1][2], 5.0);
		SetPVarInt(playerid,"LessonSlot", slot + 1);
		return 1;
	}
	if(gpvi(@p,"AutoExam") && IsPlayerInAnyVehicle(@p) && gpvi(@p,#P_AutoEx))
	{
		if(GetPVarInt(playerid,"Category") == 1) PlayerInfo[playerid][pKategA] = 1, SendClientMessage(playerid,-1,"Поздравляем, вы успешно получили справку категории A. (/showash)");
		if(GetPVarInt(playerid,"Category") == 2) PlayerInfo[playerid][pKategB] = 1, SendClientMessage(playerid,-1,"Поздравляем, вы успешно получили справку категории B. (/showash)");
		if(GetPVarInt(playerid,"Category") == 3) PlayerInfo[playerid][pKategC] = 1, SendClientMessage(playerid,-1,"Поздравляем, вы успешно получили справку категории C. (/showash)");
		if(GetPVarInt(playerid,"Category") == 4) PlayerInfo[playerid][pKategD] = 1, SendClientMessage(playerid,-1,"Поздравляем, вы успешно получили справку категории D. (/showash)");
		DeletePVar(@p,"AutoExam");
		DeletePVar(@p,"Category");
		DeletePVar(@p,#P_AutoEx);
		//DisablePlayerCheckpoint(@p);
		DisablePlayerRaceCheckpoint(@p);
		SetVehicleToRespawn(GetPlayerVehicleID(@p));
		return 1;
	}
	return 1;
	
}
public OnPlayerEnterCheckpoint(playerid)
{
	if(FindCar[playerid] == 1) return DisablePlayerCheckpoint(playerid), FindCar[playerid] = 0;
	if(gpspoint[playerid] == 1) return DisablePlayerCheckpoint(playerid), gpspoint[playerid] = 0;
	if(GetPVarInt(@p,#P_JobLess_On) && !GetPVarInt(@p,#P_JobLess_St))
	{
		//пилим
		spvi(@p,#P_JobLess_Timer,SetTimerEx("J_Less", 1000, false, "d", @p));
		TogglePlayerControllable(playerid, false);
		SCM(@p,-1,"Вы начали пилить дерево, ожидайте...");
	}
	if(GetPVarInt(@p,#P_JobLess_On) && GetPVarInt(@p,#P_JobLess_St))
	{
		//относим
		DisablePlayerCheckpoint(@p);
		DeletePVar(@p,#P_JobLess_St);
		RemovePlayerAttachedObject(@p, 0);
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);		
		ApplyAnimation(playerid,"CARRY","putdwn",4.1,0,1,1,1,1);
		SendClientMessage(playerid,COLOR_WHITE,"{2E9AFE}Вы успешно принесли бревна на склад");
		ClearAnimations(@p);
		spvi(@p,#P_JobLess_Br,gpvi(@p,#P_JobLess_Br)+1);
		TogglePlayerControllable(playerid,true);
		switch(random(2))
		{
		case 0:SetPlayerCheckpoint(@p,-2162.0549,-525.4449,39.3283,2.0);
		case 1:SetPlayerCheckpoint(@p,-2155.7593,-498.4414,37.9468,2.0);
		case 2:SetPlayerCheckpoint(@p,-2134.4932,-518.0827,39.4268,2.0);
		}
		SCM(@p,COLOR_WHITE,"{2E9AFE}Отправляйтесь за следующей партией бревен!");
		SetPlayerAttachedObject(playerid, 0 ,341, 6,0,0,0.0,0.0,0);
	}
	if(GetPVarInt(playerid, "jobgruz") && GetPVarInt(playerid,"loader") == 1)
	{
		if(GetPVarInt(playerid, "antifloodpick") > gettime()) return 1;
		SetPVarInt(playerid, "antifloodpick", gettime() + 5);
		ApplyAnimation(playerid,"CARRY","liftup",4.0,0,0,0,1,1,1);
		SetTimerEx("TakeBag",1000,false,"d",playerid);
	}
	if(GetPVarInt(playerid, "jobgruz") && GetPVarInt(playerid,"loader") == 2)
	{
		SetPVarInt(playerid, "moneygruz", GetPVarInt(playerid,"moneygruz") + getmoney);
		SFCM(playerid, -1, "Вы принесли {2E9AFE}1 {FFFFFF}коробку, и получили за нее {2E9AFE}20 {FFFFFF}рублей. Всего заработано: {2E9AFE}%i рублей.", GetPVarInt(playerid,"moneygruz"));
		ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,0,0,1,1,1);
		SetTimerEx("PutBag",1000,false,"d",playerid);
		//return 1;
	}
	if(GetPVarInt(@p,#P_Taxi_On) && GetPVarInt(@p,#P_Taxi_State) == 2)
	{
		//@p - водитель
		//g - пассажир
		new g = GetPVarInt(@p,#P_Taxi_IDPass);
		SCM(@p,COLOR_LIGHTBLUE,#Вы достигли место назначения);
		SCM(g,COLOR_LIGHTBLUE,#Вы достигли место назначения);
		RemovePlayerFromVehicle(g);
		TogglePlayerControllable(g,1);
		TextDrawHideForPlayer(g,taxi_fon);
		PlayerTextDrawHide(g,taxi_info[g]);		
		DeletePVar(g,#P_Taxi_Drive);//статус пассажира		
		DeletePVar(@p,#P_Taxi_IDPass);//ид пассажира		
		DeletePVar(g,#P_Taxi_Km);//км пассажира
		DeletePVar(g,#P_Taxi_KM_Int);//км окргуленные пассажира
		DeletePVar(@p,#P_Taxi_State);//статус такси
		DisablePlayerCheckpoint(@p);
		static const str1[] = "Заработано: {00ff00}%d {33CCFF}рублей";
		new str2[sizeof(str1)+11];
		format(str2,sizeof(str2),str1,GetPVarInt(@p,#P_Taxi_Summ));
		SCM(@p,COLOR_LIGHTBLUE,str2);
		PlayerInfo[@p][pCash] += GetPVarInt(@p,#P_Taxi_Summ);
		GivePlayerMoney(@p,GetPVarInt(@p,#P_Taxi_Summ));		
		PlayerTextDrawHide(@p,taxi_info[@p]);
		TextDrawHideForPlayer(@p,taxi_fon);
		DeletePVar(@p,#P_Taxi_Summ);
		if(GetPVarInt(@p,#P_Taxi_Type) == 2)
		{
			static const str0[] = "--{00ff00}Свободное {FFFF00}такси--\nЦена за километр: {00ff00}%d {FFFF00}рублей.";
			new str[sizeof(str0)+4];
			format(str,sizeof(str),str0,GetPVarInt(@p,#P_Taxi_Tar));
			UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(@p,#P_Taxi_Text3d), COLOR_YELLOW, str);
		}
		else if(GetPVarInt(@p,#P_Taxi_Type) == 1)
		{
			static const str0[] = "--{00ff00}Свободное {FFFF00}такси--\nОплата: Договорная.";
			UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(@p,#P_Taxi_Text3d), COLOR_YELLOW, str0);
		}
		
	}
	if(GetPVarInt(playerid,#P_Dal) && DalOnReis[playerid] && IsPlayerInAnyVehicle(@p))
	{
		if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Вы должны прицепить трейлер!");
		SetTimerEx("@Load", 1000, false, "i",playerid);//repeat
		TogglePlayerControllable(playerid,0);
		return 1;
	}
	if(GetPVarInt(playerid,#P_Dal) == 2 && DalOnReis[playerid] && IsPlayerInAnyVehicle(@p))
	{
		if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Вы должны прицепить трейлер!");
		PlayerInfo[playerid][pCash] += 5000, GivePlayerMoney(playerid, 5000);
		new tral = GetVehicleTrailer(GetPlayerVehicleID(playerid));
		DetachTrailerFromVehicle(tral);
		SetVehicleToRespawn(tral);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		SendClientMessage(playerid,COLOR_GRAD1,"Рейс завершен. Зарплата 5 000 рублей.");
		DeletePVar(playerid,#P_Dal);
		DalOnReis[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
		return 1;		
	}
	if(GetPVarInt(playerid,#Mus_Job) == 1 && GetPVarInt(playerid,#Mus_Start) == 1 && GetPVarInt(playerid,#Mus_Act) == 0)
	{
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid,COLOR_CGREEN3d,"Пожалуйста подождите, идет загрузка...");
		SetTimerEx("@Mus_Load",1000*10,false,"d",playerid);
	}
	if(GetPVarInt(playerid,#Mus_Job) == 1 && GetPVarInt(playerid,#Mus_Start) == 1 && GetPVarInt(playerid,#Mus_Act) == 1)
	{
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid,COLOR_CGREEN3d,"Загрузка успешно завершена!");
		new count = GetPVarInt(playerid,#Mus_Count);
		SetPVarInt(playerid,#Mus_Count,count+1);
		SetPVarInt(playerid,#Mus_Act,0);
		if(GetPVarInt(playerid,#Mus_Count) >= 10)
		{
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"Кузов мусоровоза заполнен! Отправляйтесь на место разгрузки!");
			SetPVarInt(playerid,#Mus_Act,2);
			SetPlayerCheckpoint(playerid,116.1819,1676.7673,11.9800,7.0);
			return 1;
		}
		new p = random(10);
		while(p == GetPVarInt(playerid,#Mus_Idx))
		{
			p = random(10);
		}
		new str2[14];
		format(str2,sizeof(str2),"Собрано %d/10 точек сбора мусора.",GetPVarInt(playerid,#Mus_Count));
		SendClientMessage(playerid,COLOR_CGREEN3d,str2);
		SetPVarInt(playerid,#Mus_Idx,p);
		SetPlayerCheckpoint(playerid,mus_pos[p][0],mus_pos[p][1],mus_pos[p][2],7.0);
		SendClientMessage(playerid,COLOR_CGREEN3d,"Отправляйтесь к следующей точке загрузки!");
	}
	if(GetPVarInt(playerid,#Mus_Job) == 1 && GetPVarInt(playerid,#Mus_Start) == 1 && GetPVarInt(playerid,#Mus_Act) == 2)
	{
		new summ = GetPVarInt(playerid,#Mus_Count) * Mus_Dm;
		new str1[23];
		format(str1,sizeof(str1),"Заработано: %d  рублей.",summ);
		SendClientMessage(playerid,COLOR_GREEN,str1);
		PlayerInfo[playerid][pCash] += summ;
		GivePlayerMoney(playerid,summ);
		DeletePVar(playerid,#Mus_Act);
		DeletePVar(playerid,#Mus_Count);
		DeletePVar(playerid,#Mus_Start);
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid,COLOR_GREEN,"Для того, чтобы закончить рабочий день, отправляйтесь на метку.");
		SendClientMessage(playerid,COLOR_GREEN,"Для того, чтобы начать рейс, введите /musstart");
		return 1;
	}
	if(PlayerInfo[playerid][pJob]==14&&onbusreis[playerid]==1)
	{
		if(chekpointm4c)
		{
			DisablePlayerCheckpoint(playerid);
			DestroyObject(pojarobj);
			SetTimer("OnPlayerPojar",5000,0);
			SendClientMessage(playerid,0x03c03cFF,"Вы успешно погасили пожар");
		}
	}
	if(GetPVarInt(playerid,"Nesti") == 1)
	{
		SetPVarInt(playerid, "moneyshaxta", GetPVarInt(playerid,"moneyshaxta") + 80);
		DisablePlayerCheckpoint(playerid); RemovePlayerAttachedObject(playerid, 4);
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
		SFCM(playerid, -1, "Вы принесли руду на склад и получили за нее {2E9AFE}80 {FFFFFF}рублей. Всего заработано: {2E9AFE}%i рублей.", GetPVarInt(playerid,"moneyshaxta"));
		SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
		SetPVarInt(playerid,"Nesti", 0), SetPVarInt(playerid,"Proverka", 0);
		return true;
	}
	if(PlayerToPoint(5.0, playerid, 159.6780,588.8723,12.0000))
	{
		DisablePlayerCheckpoint(playerid);
		switch(random(13))
		{
		case 0: SetPlayerCheckpoint(playerid,292.8092,1025.3960,12.0000,5.0);
		case 1: SetPlayerCheckpoint(playerid,398.6903,967.8626,12.0000,5.0);
		case 2: SetPlayerCheckpoint(playerid,2323.3618,-2554.4272,21.7855,5.0);
		case 3: SetPlayerCheckpoint(playerid,2409.1833,-2477.3904,21.9417,5.0);
		case 4: SetPlayerCheckpoint(playerid,2369.0527,-2198.3645,21.9750,5.0);
		case 5: SetPlayerCheckpoint(playerid,2071.4126,-2329.2729,21.9430,5.0);
		case 6: SetPlayerCheckpoint(playerid,2649.0676,-2246.1348,21.9689,5.0);
		case 7: SetPlayerCheckpoint(playerid,2510.1484,-2495.1880,22.0041,5.0);
		case 8: SetPlayerCheckpoint(playerid,322.4554,806.1564,12.0010,5.0);
		case 9: SetPlayerCheckpoint(playerid,115.9671,1068.2086,12.0000,5.0);
		case 10: SetPlayerCheckpoint(playerid,-2267.8857,-1709.4207,10.0525,5.0);
		case 11: SetPlayerCheckpoint(playerid,-2382.4778,243.0995,19.0921,5.0);
		case 12: SetPlayerCheckpoint(playerid,-2109.7498,6.2474,27.1786,5.0);
		}
		SendClientMessage(playerid,-1,"Вы забрали пиццу, отправляйтесь по следующему адресу");
		pizzapoint[playerid] = true;
		return 1;
	}
	if(PlayerToPoint(4.0, playerid, 292.8092,1025.3960,12.0000) || PlayerToPoint(4.0, playerid, 398.6903,967.8626,12.0000) || PlayerToPoint(4.0, playerid, 2323.3618,-2554.4272,21.7855))
	{
		DisablePlayerCheckpoint(playerid);
		PlayerInfo[playerid][pCash] += 2500;
		SendClientMessage(playerid,-1,"Вы успешно выполнили заказ."); SendClientMessage(playerid,-1,"Следующий заказ вы получите позже.");
		pizzadone[playerid] = 1; pizzapoint[playerid] = false;
		return 1;
	}
	if(PlayerToPoint(4.0, playerid, 2409.1833,-2477.3904,21.9417) || PlayerToPoint(4.0, playerid, 2369.0527,-2198.3645,21.9750) || PlayerToPoint(4.0, playerid, 2071.4126,-2329.2729,21.9430))
	{
		DisablePlayerCheckpoint(playerid);
		PlayerInfo[playerid][pCash] += 2500;
		SendClientMessage(playerid,-1,"Вы успешно выполнили заказ."); SendClientMessage(playerid,-1,"Следующий заказ вы получите позже.");
		pizzadone[playerid] = 1; pizzapoint[playerid] = false;
		return 1;
	}
	if(PlayerToPoint(4.0, playerid, 2649.0676,-2246.1348,21.9689) || PlayerToPoint(4.0, playerid, 2510.1484,-2495.1880,22.0041) || PlayerToPoint(4.0, playerid, 322.4554,806.1564,12.0010))
	{
		DisablePlayerCheckpoint(playerid);
		PlayerInfo[playerid][pCash] += 2500;
		SendClientMessage(playerid,-1,"Вы успешно выполнили заказ."); SendClientMessage(playerid,-1,"Следующий заказ вы получите позже.");
		pizzadone[playerid] = 1; pizzapoint[playerid] = false;
		return 1;
	}
	if(PlayerToPoint(4.0, playerid, 115.9671,1068.2086,12.0000) || PlayerToPoint(4.0, playerid, -2267.8857,-1709.4207,10.0525))
	{
		DisablePlayerCheckpoint(playerid);
		PlayerInfo[playerid][pCash] += 2500;
		SendClientMessage(playerid,-1,"Вы успешно выполнили заказ."); SendClientMessage(playerid,-1,"Следующий заказ вы получите позже.");
		pizzadone[playerid] = 1; pizzapoint[playerid] = false;
		return 1;
	}
	if(PlayerToPoint(4.0, playerid, -2382.4778,243.0995,19.0921) || PlayerToPoint(4.0, playerid, -2109.7498,6.2474,27.1786))
	{
		DisablePlayerCheckpoint(playerid);
		PlayerInfo[playerid][pCash] += 2500;
		SendClientMessage(playerid,-1,"Вы успешно выполнили заказ."); SendClientMessage(playerid,-1,"Следующий заказ вы получите позже.");
		pizzadone[playerid] = 1; pizzapoint[playerid] = false;
		return 1;
	}

	//
	if(GettingJob[playerid] == 14 && nowpoint[playerid]==0)
	{
		new string[128];
		format(string, sizeof(string), "[Водитель %s] Остановка: Автошкола. Следующая остановка: Роговичи", NamePlayer[playerid]);
		ProxDetector(15.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,2634.364990,1215.170776,22.305330,5.0);
		nowpoint[playerid]++;
		return 1;
	}
	if(GettingJob[playerid] == 14 && nowpoint[playerid]==1)
	{
		new string[128];
		format(string, sizeof(string), "[Водитель %s] Остановка: Роговичи. Следующая остановка: Банк", NamePlayer[playerid]);
		ProxDetector(15.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,2385.512695,-1882.360961,21.813499,5.0);
		nowpoint[playerid]++;
		return 1;
	}
	if(GettingJob[playerid] == 14 && nowpoint[playerid]==2)
	{
		new string[128];
		format(string, sizeof(string), "[Водитель %s] Остановка: Банк. Следующая остановка: Клуб", NamePlayer[playerid]);
		ProxDetector(15.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,2561.029296,-2161.999267,21.821468,5.0);
		nowpoint[playerid]++;
		return 1;
	}
	if(GettingJob[playerid] == 14 && nowpoint[playerid]==3)
	{
		new string[128];
		format(string, sizeof(string), "[Водитель %s] Остановка: Клуб. Следующая остановка: Роговичи", NamePlayer[playerid]);
		ProxDetector(15.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,2637.301025,1237.771972,22.089076,5.0);
		nowpoint[playerid]++;
		return 1;
	}
	if(GettingJob[playerid] == 14 && nowpoint[playerid]==4)
	{
		new string[128];
		format(string, sizeof(string), "[Водитель %s] Остановка: Роговичи. Следующая остановка: Автошкола", NamePlayer[playerid]);
		ProxDetector(15.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,1892.281250,2252.624023,15.952562,5.0);
		nowpoint[playerid]++;
		return 1;
	}
	if(GettingJob[playerid] == 14 && nowpoint[playerid]==5)
	{
		new string[128];
		format(string, sizeof(string), "[Водитель %s] Остановка: Автошкола. Следующая остановка: Арзамас", NamePlayer[playerid]);
		ProxDetector(15.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,192.699951,801.721008,12.001000,5.0);
		nowpoint[playerid]++;
		return 1;
	}
	if(GettingJob[playerid] == 14 && nowpoint[playerid]==6)
	{
		new string[128];
		format(string, sizeof(string), "[Водитель %s] Остановка: Арзамас. Следующая остановка: ФСБ", NamePlayer[playerid]);
		ProxDetector(15.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,-332.867553,550.236389,12.626000,5.0);
		nowpoint[playerid]++;
		return 1;
	}
	if(GettingJob[playerid] == 14 && nowpoint[playerid]==7)
	{
		new string[128];
		format(string, sizeof(string), "[Водитель %s] Остановка: Новостройки. Следующая остановка: Конечная", NamePlayer[playerid]);
		ProxDetector(15.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,1776.1619,2258.3953,15.7517,5.0);
		nowpoint[playerid]++;
		return 1;
	}	//
	if(PlayerIsSweeping[playerid] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			new carid = GetPlayerVehicleID(playerid);
			new string[128];
			if(IsASweeper(carid))
			{
				new cashes = (random(35-10)+10);
				PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~g~%dp ~w~ѓOЂAB‡EмO K €AЊP‡AЏE",cashes);
				GameTextForPlayer(playerid, string, 5000, 1);
				DisablePlayerCheckpoint(playerid);
				PlayerInfo[playerid][pPayCheck] += cashes * 5;
				new randomss = random(sizeof(gSweeperPoints));
				SetPlayerCheckpoint(playerid, gSweeperPoints[randomss][0], gSweeperPoints[randomss][1], gSweeperPoints[randomss][2], 5.0);
			}
		}
		return 1;
	}

	//
	if(FarmerVar[playerid] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			new string[128];
			new carid = GetPlayerVehicleID(playerid);
			new cash = (random(70-20)+20);
			if(IsAHarvest(carid))
			{
				switch(FarmerPickup[playerid][0])
				{
				case 0:
					{
						SetPlayerCheckpoint(playerid, -205.9348,-1332.2749,10.4056, 5.0);
						if(JustStarted[playerid] != 0) JustStarted[playerid] = 0;
					}
				case 1:
					{
						SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
						if(JustStarted[playerid] != 0) JustStarted[playerid] = 0;
					}
				case 2:
					{
						if(JustStarted[playerid] != 1)
						{
							PlayerInfo[playerid][pPayCheck] += cash * 5;
							format(string, sizeof(string), "~w~Added to your paycheck~n~~g~p%d",cash), GameTextForPlayer(playerid, string, 5000, 1);
						}
						else JustStarted[playerid] = 0;
						SetPlayerCheckpoint(playerid, -548.5396,-1329.0653,19.6210, 5.0);
					}
				case 3:
					{
						SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
						if(JustStarted[playerid] != 0) JustStarted[playerid] = 0;
					}
				case 4:
					{
						if(JustStarted[playerid] != 1)
						{
							PlayerInfo[playerid][pPayCheck] += cash * 5;
							format(string, sizeof(string), "~w~љOЂAB‡EмO K €APЊ‡AЏE~n~~g~p%d",cash), GameTextForPlayer(playerid, string, 5000, 1);
						}
						else JustStarted[playerid] = 0;
						SetPlayerCheckpoint(playerid, -370.9486,-1281.1089,29.8698, 5.0);
					}
				case 5:
					{
						SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
						if(JustStarted[playerid] != 0) JustStarted[playerid] = 0;
					}
				case 6:
					{
						if(JustStarted[playerid] != 1)
						{
							PlayerInfo[playerid][pPayCheck] += cash * 5;
							format(string, sizeof(string), "~w~љOЂAB‡EмO K €APЊ‡AЏE~n~~g~p%d",cash), GameTextForPlayer(playerid, string, 5000, 1);
						}
						else JustStarted[playerid] = 0;
						SetPlayerCheckpoint(playerid, -258.3272,-1387.9211,10.1292, 5.0);
					}
				case 7:
					{
						SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
						if(JustStarted[playerid] != 0) JustStarted[playerid] = 0;
					}
				case 8:
					{
						if(JustStarted[playerid] != 1)
						{
							PlayerInfo[playerid][pPayCheck] += cash * 5;
							format(string, sizeof(string), "~w~љOЂAB‡EмO K €APЊ‡AЏE~n~~g~p%d",cash), GameTextForPlayer(playerid, string, 5000, 1);
						}
						else JustStarted[playerid] = 0;
						SetPlayerCheckpoint(playerid, -288.8517,-1385.0117,9.8957, 5.0);
					}
				case 9:
					{
						SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
						if(JustStarted[playerid] != 0) JustStarted[playerid] = 0;
					}
				case 10:
					{
						if(JustStarted[playerid] != 1)
						{
							PlayerInfo[playerid][pPayCheck] += cash * 5;
							format(string, sizeof(string), "~w~љOЂAB‡EмO K €APЊ‡AЏE~n~~g~p%d",cash), GameTextForPlayer(playerid, string, 5000, 1);
						}
						else JustStarted[playerid] = 0;
						SetPlayerCheckpoint(playerid, -283.1325,-1338.2822,7.4280, 5.0);
					}
				case 11:
					{
						SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
						if(JustStarted[playerid] != 0) JustStarted[playerid] = 0;
					}
				case 12:
					{
						if(JustStarted[playerid] != 1)
						{
							PlayerInfo[playerid][pPayCheck] += cash * 5;
							format(string, sizeof(string), "~w~љOЂAB‡EмO K €APЊ‡AЏE~n~~g~p%d",cash), GameTextForPlayer(playerid, string, 5000, 1);
						}
						else JustStarted[playerid] = 0;
						SetPlayerCheckpoint(playerid, -224.5992,-1509.1902,7.4473, 5.0);
					}
				case 13:
					{
						SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
						if(JustStarted[playerid] != 0) JustStarted[playerid] = 0;
					}
				case 14:
					{
						if(JustStarted[playerid] != 1)
						{
							PlayerInfo[playerid][pPayCheck] += cash * 5;
							format(string, sizeof(string), "~w~љOЂAB‡EмO K €APЊ‡AЏE~n~~g~p%d",cash), GameTextForPlayer(playerid, string, 5000, 1);
						}
						else JustStarted[playerid] = 0;
						SetPlayerCheckpoint(playerid, -247.2859,-1528.8744,6.5904, 5.0);
					}
				case 15:
					{
						SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
						if(JustStarted[playerid] != 0) JustStarted[playerid] = 0;
					}
				case 16:
					{
						if(JustStarted[playerid] != 1)
						{
							PlayerInfo[playerid][pPayCheck] += cash * 5;
							format(string, sizeof(string), "~w~љOЂAB‡EмO K €APЊ‡AЏE~n~~g~p%d",cash), GameTextForPlayer(playerid, string, 5000, 1);
						}
						else JustStarted[playerid] = 0;
						SetPlayerCheckpoint(playerid, -283.9610,-1549.7180,6.4975, 5.0);
					}
				case 17:
					{
						SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
						if(JustStarted[playerid] != 0) JustStarted[playerid] = 0;
					}
				case 18:
					{
						if(JustStarted[playerid] != 1)
						{
							PlayerInfo[playerid][pPayCheck] += cash * 5;
							format(string, sizeof(string), "~w~љOЂAB‡EмO K €APЊ‡AЏE~n~~g~p%d",cash), GameTextForPlayer(playerid, string, 5000, 1);
						}
						else JustStarted[playerid] = 0;
						SetPlayerCheckpoint(playerid, -431.6107,-1334.0961,28.6561, 5.0);
					}
				case 19:
					{
						SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
						if(JustStarted[playerid] != 0) JustStarted[playerid] = 0;
					}
				case 20:
					{
						if(JustStarted[playerid] != 1)
						{
							PlayerInfo[playerid][pPayCheck] += cash * 5;
							format(string, sizeof(string), "~w~љOЂAB‡EмO K €APЊ‡AЏE~n~~g~p%d",cash), GameTextForPlayer(playerid, string, 5000, 1);
						}
						else JustStarted[playerid] = 0;
						SetPlayerCheckpoint(playerid, -476.4104,-1391.6769,20.4733, 5.0);
					}
				case 21:
					{
						SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
						if(JustStarted[playerid] != 0) JustStarted[playerid] = 0;
					}
				case 22:
					{
						DisablePlayerCheckpoint(playerid);
						TogglePlayerControllable(playerid, 0);
						GameTextForPlayer(playerid, "~w~BBEѓ…ЏE /exit ЌЏOЂ‘ B‘‡E€Џ… …€ KO–ЂA†мA~n~~r~—OмYC 100p", 5000, 1);
						GivePlayerMoney(playerid, 100);
					}
				}
				FarmerPickup[playerid][0]++;
				PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			}
		}
		return 1;
	}
	return 1;
}

//
public OnRconCommand(cmd[]) return 1;
public OnObjectMoved(objectid) return 1;
public OnPlayerObjectMoved(playerid, objectid) return 1;

//
public OnPlayerPickUpPickup(playerid, pickupid)
{
	forPod(i)
	{
		if(IsPlayerInRangeOfPoint(playerid,1.0,PodInfo[i][pPos][0],PodInfo[i][pPos][1],PodInfo[i][pPos][2]))
		{
			GameTextForPlayer(playerid,"~h~~h~~h~~w~PRESS ~k~~SNEAK_ABOUT~ ~g~TO ENTER",1000,1);
			break;
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0,PodInfo[i][pPos][3],PodInfo[i][pPos][4],PodInfo[i][pPos][5]))
		{
			GameTextForPlayer(playerid,"~h~~h~~h~~w~PRESS ~k~~SNEAK_ABOUT~ ~r~TO EXIT",1000,1);
			break;
		}
	}
	if(pickupid == kazino1)
	{
		SetPlayerInterior(playerid, 0), SetPlayerVirtualWorld(playerid, 0), SetPPos(playerid, -126.8571,982.8818,12.1494);
		Frez(playerid);
	}
	if(pickupid == kazino2)
	{
		SetPlayerInterior(playerid, 0), SetPlayerVirtualWorld(playerid, 0), SetPPos(playerid, -187.0543,879.2101,2612.6399);
		Frez(playerid);
	}
	if(pickupid == francjobodej)
	{
		if(!GetPVarInt(@p,#P_JobLess_On)) ShowPlayerDialog(playerid,125,DIALOG_STYLE_MSGBOX,"Раздевалка лесорубов","{2E9AFE}Здравствуйте, мы предлагаем вам работу лесоруба.\n{2E9AFE}Хотите начать прямо сейчас?","Да","Нет");
		else ShowPlayerDialog(playerid,126,DIALOG_STYLE_MSGBOX,"Раздевалка лесорубов","{2E9AFE}Хотите завершить работу прямо сейчас и получить расчёт?","Да","Нет");
	}
	if(pickupid == mus_j)
	{
		if(GetPVarInt(playerid,#Mus_Job) == 0)
		ShowPlayerDialog(playerid,127,DIALOG_STYLE_MSGBOX,"Водитель мусоровоза","{2E9AFE}Здравствуйте, мы предлагаем вам работу водителя мусоровоза.\n{2E9AFE}Хотите начать прямо сейчас?","Да","Нет");
		else if(GetPVarInt(playerid,#Mus_Job) == 1)
		ShowPlayerDialog(playerid,127,DIALOG_STYLE_MSGBOX,"Водитель мусоровоза","{2E9AFE}Хотите завершить работу водителя мусоровоза и получить зарплату?","Да","Нет");
		return 1;
	}	
	if(pickupid == exitpick)
	{
		new i = GetPVarInt(playerid,#P_BizAcc_Idx);
		if(GetPVarInt(@p,#P_Acc_Prim))
		{
			DeletePVar(@p,#P_Acc_Prim);
			for(new j = 0; j < MAX_PLAYER_ATTACHED_OBJECTS; j++)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, j)) RemovePlayerAttachedObject(playerid, j);
			}
		}
		SetPlayerPos(playerid,AC[i][acEntX],AC[i][acEntY],AC[i][acEntZ]);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		Frez(playerid);
	}
	if(pickupid == gruzpick)
	{
		if(GetPVarInt(playerid, "antifloodpick") > gettime()) return 1;
		SetPVarInt(playerid, "antifloodpick", gettime() + 5);
		if(GetPVarInt(playerid, "jobgruz") == 0) return ShowPlayerDialog(playerid,9535,0,"{2E9AFE}Работа грузчика","{FFFFFF}Здравствуйте, мы предлагаем Вам работу грузчика.\n\n{bbbbbb}Задача: Брать коробки из одного места и перетаскивать в другое.\nВы согласны?","Да","Нет");
		else if(GetPVarInt(playerid, "jobgruz") == 1) return ShowPlayerDialog(playerid,9535,0,"{2E9AFE}Завершение работы","{FFFFFF}Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}
	if(pickupid == SahtaJob)
	{
		if(GetPVarInt(playerid, "antifloodpick") > gettime()) return 1;
		SetPVarInt(playerid, "antifloodpick", gettime() + 5);
		if(GetPVarInt(playerid, "jobshaxta") == 0) return ShowPlayerDialog(playerid,9536,0,"{2E9AFE}Работа шахтера","{FFFFFF}Здравствуйте, мы предлагаем Вам работу шахтера.\n\n{bbbbbb}Задача: Добывать руду и относить на склад.\nВы согласны?","Да","Нет");
		else if(GetPVarInt(playerid, "jobshaxta") == 1) return ShowPlayerDialog(playerid,9536,0,"{2E9AFE}Завершение работы","{FFFFFF}Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}
	if(pickupid == shaxta[0])
	{
		SetPlayerInterior(playerid, 0), SetPlayerVirtualWorld(playerid, 0), SetPPos(playerid, -1029.0906,1228.1248,3011.5601);
		Frez(playerid);
	}
	if(pickupid == shaxta[1])
	{
		SetPlayerInterior(playerid, 0), SetPlayerVirtualWorld(playerid, 0), SetPPos(playerid, -1042.2322,2199.7188,38.1216);
		Frez(playerid);
	}
	if(pickupid == pizzawork)
	{
		if(PlayerInfo[playerid][pJob] == 30) return SendClientMessage(playerid,-1,"Вы уже работаете пиццевозом!");
		ShowPlayerDialog(playerid,5228,DIALOG_STYLE_MSGBOX,"Работа развозчика пиццы","Вы действительно хотите устроиться на эту работу?","Да","Нет");
	}
	if(pickupid == dpsweapon)
	{
		if(PlayerInfo[playerid][pLeader] == 1 ||PlayerInfo[playerid][pMember] == 1)
		{
			GiveWeapon(playerid,12,1); GiveWeapon(playerid,3,1); GiveWeapon(playerid,24,500); GiveWeapon(playerid,29,500); GiveWeapon(playerid,41,9999); GiveWeapon(playerid,43,500);
			SetPlayerArmour(playerid, 100); SetPlayerHealth(playerid,100);
		}
	}
	if(pickupid == recordweapon)
	{
		if(PlayerInfo[playerid][pLeader] == 9 ||PlayerInfo[playerid][pMember] == 9) GiveWeapon(playerid,43,9999);
	}
	if(pickupid == armweapon1)
	{
		if(PlayerInfo[playerid][pLeader] == 3 ||PlayerInfo[playerid][pMember] == 3) GiveWeapon(playerid,31,25); SetPlayerArmour(playerid, 100); SetPlayerHealth(playerid, 100);
	}
	if(pickupid == gorweapon)
	{
		if(PlayerInfo[playerid][pLeader] == 15 ||PlayerInfo[playerid][pMember] == 15) SetPlayerHealth(playerid, 100); GiveWeapon(playerid,5,25); GiveWeapon(playerid,1,1);
	}
	if(pickupid == fsbweapon1)
	{
		if(PlayerInfo[playerid][pLeader] == 2 ||PlayerInfo[playerid][pMember] == 2)
		{
			GiveWeapon(playerid,3,1); GiveWeapon(playerid,24,500); GiveWeapon(playerid,29,500); GiveWeapon(playerid,30,500); GiveWeapon(playerid,41,9999);
			SetPlayerArmour(playerid, 100); SetPlayerHealth(playerid, 100);
		}
	}
	if(pickupid == mentweapon1)
	{
		if(PlayerInfo[playerid][pLeader] == 6 ||PlayerInfo[playerid][pMember] == 6)
		{
			GiveWeapon(playerid,3,1); GiveWeapon(playerid,24,500); GiveWeapon(playerid,29,500); GiveWeapon(playerid,41,9999);
			SetPlayerArmour(playerid, 100); SetPlayerHealth(playerid, 100);
		}
	}
	if(pickupid == m4sweapon)
	{
		if(PlayerInfo[playerid][pLeader] == 19 ||PlayerInfo[playerid][pMember] == 19)
		{
			GiveWeapon(playerid,42,9999); GiveWeapon(playerid,15,1); GiveWeapon(playerid,9,1);
			SetPlayerArmour(playerid, 100); SetPlayerHealth(playerid, 100);
		}
	}
	if(pickupid == chopweapon)
	{
		if(PlayerInfo[playerid][pLeader] == 17 ||PlayerInfo[playerid][pMember] == 17)
		{
			GiveWeapon(playerid,24,90); GiveWeapon(playerid,29,150); GiveWeapon(playerid,31,300);
			SetPlayerArmour(playerid, 100); SetPlayerHealth(playerid, 100);
		}
	}
	if(pickupid == enterdps)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-294.5278,1162.4293,579.0159);
		Frez(playerid);
	}
	if(pickupid == enteranashan)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-1498.7737,-296.6292,1762.7660);
		Frez(playerid);
	}
	if(pickupid == exitanashan)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-2429.4146,2757.3240,37.6663);
		Frez(playerid);
	}
	if(pickupid == enteromon)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,2568.7637, -2472.4668, 1202.0189);
		Frez(playerid);
	}
	if(pickupid == enteropg)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,1464.7811,418.4073,-60.1141);
		Frez(playerid);
	}
	if(pickupid == exitopg)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,363.4179,1089.1602,12.0500);
		Frez(playerid);
	}
	if(pickupid == exitomon) return SetPlayerInterior(playerid, 0), SetPPos(playerid,2568.3010,-2427.3008,24.8779);
	if(pickupid == enterban)
	{
		SetPlayerInterior(playerid, 0);
		SetPPos(playerid,1444.6630,417.5097,-60.1421);
		Frez(playerid);
	}
	if(pickupid == exitban)
	{
		SetPlayerInterior(playerid, 0);
		SetPPos(playerid,1450.2982,418.3522,-60.1141);
		Frez(playerid);
	}
	if(pickupid == enterkino)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,1725.8964,1663.9121,451.3359);
		Frez(playerid);
	}
	if(pickupid == exitkino)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-466.1913,949.5687,12.1753);
		Frez(playerid);
	}
	if(pickupid == enterpch)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,325.5780,1788.6991,-41.8600);
		Frez(playerid);
	}
	if(pickupid == exitpch)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,151.1192,1279.1388,12.0100);
		Frez(playerid);
	}
	if(pickupid == exitdps)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-2365.2224,1888.6116,53.2306);
		Frez(playerid);
	}
	if(pickupid == exitchop) return SetPlayerInterior(playerid, 0), SetPPos(playerid,-193.0162,626.1736,12.0010);
	if(pickupid == enterrzd)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,384.4998,1323.3678,-12.0269);
		Frez(playerid);
	}
	if(pickupid == exitrzd)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-2146.2583,-184.6639,25.8809);
		Frez(playerid);
	}
	if(pickupid == enterchop)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-239.0679,569.3251,5.0759);
		Frez(playerid);
	}
	if(pickupid == enterbomj)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-138.5873,958.4756,41.2041);
		Frez(playerid);
	}
	if(pickupid == exitbomj)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-141.3707,955.4262,38.9775);
		Frez(playerid);
	}
	if(pickupid == enterbol)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,687.2881,1397.2964,451.1259);
		Frez(playerid);
	}
	if(pickupid == exitbol)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,663.7869,774.0828,12.0009);
		Frez(playerid);
	}
	if(pickupid == gyvd5)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-99.8231,1477.6140,451.7260);
		Frez(playerid);
	}
	if(pickupid == gyvd6)
	{
		SetPlayerInterior(playerid, 0);
		SetPPos(playerid,-425.7550,819.4042,12.0059);
		Frez(playerid);
	}
	if(pickupid == enterritm)
	{
		SetPlayerInterior(playerid, 0);
		SetPPos(playerid,2166.9226,2821.3892,1716.2759);
		Frez(playerid);
	}
	if(pickupid == exitritm)
	{
		SetPlayerInterior(playerid, 0);
		SetPPos(playerid,-2239.3540,-119.8626,26.3259);
		Frez(playerid);
	}
	if(pickupid == entergyvd)
	{
		SetPlayerInterior(playerid, 0);
		SetPPos(playerid,583.4526, 1144.3960, 2502.0537);
		Frez(playerid);
	}
	if(pickupid == exitgyvd) return SetPlayerInterior(playerid, 0), SetPPos(playerid,2579.5400,-2416.0051,21.9888);
	if(pickupid == enterlic)
	{
		if(enterlicen == 1) return SendClientMessage(playerid,COLOR_RED,"Вход закрыт");
		SetPlayerInterior(playerid, 0), SetPPos(playerid,540.2086,477.4176,451.7959);
		Frez(playerid);
	}
	if(pickupid == exitlic)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-31.6968,919.5150,12.0000);
		Frez(playerid);
	}
	if(pickupid == entermag)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-1774.6464,1773.8219,2377.4160);
		Frez(playerid);
	}
	if(pickupid == exitmag) SetPlayerInterior(playerid, 0), SetPPos(playerid,157.6834,695.0486,11.8251);

	if(pickupid == bulka) return SetPlayerHealth(playerid, 100.0);
	if(pickupid == gop111)
	{
		if(PlayerInfo[playerid][pLeader] == 13 ||PlayerInfo[playerid][pMember] == 13)
		{
			SetPlayerHealth(playerid,100);
			GiveWeapon(playerid,1,5); GiveWeapon(playerid,3,5); GiveWeapon(playerid,5,5);
		}
	}
	if(pickupid == enters) return SetPlayerInterior(playerid, 0), SetPPos(playerid, -238.5925, 571.8348, 5.2152);
	if(pickupid == exits)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-286.5327,581.5006,12.1100);
		Frez(playerid);
	}
	if(pickupid == Skor111)
	{
		if(PlayerInfo[playerid][pLeader] == 4 ||PlayerInfo[playerid][pMember] == 4)
		{
			SetPlayerHealth(playerid,100);
			GiveWeapon(playerid,13,5);
		}
	}
	if(pickupid == enter1)
	{
		if(entermer == 1) return SendClientMessage(playerid,COLOR_RED,"Вход закрыт");
		SetPlayerInterior(playerid, 0), SetPPos(playerid, -261.8941,1066.9175,452.2100);//координаты, где появится игрок после того, как наступит на пикап входа в Мэрии
		Frez(playerid);
	}
	if(pickupid == exit1)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid,-193.0162,626.1736,12.0010);
		Frez(playerid);
	}
	if(pickupid == enter2)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid, -837.1300,1896.3774,454.1959);//координаты, где появится игрок после того, как наступит на пикап входа в АТП
		Frez(playerid);
	}
	if(pickupid == exit2)
	{
		SetPlayerInterior(playerid, 0), SetPPos(playerid, -362.4614,1024.9176,13.2432);//координаты, где появится игрок после того, как наступит на пикап выхода в АТП
		Frez(playerid);
	}
	if(pickupid == buyclother1)
	{
		ShowPlayerDialog(playerid,221,DIALOG_STYLE_MSGBOX,"Магазин одежды","{ffffff}Вы хотите перейти в меню выбора одежды?","Да","Нет");
		new Float:x,Float:y,Float:z; GetPlayerPos(playerid,x,y,z);
		SetPPos(playerid,x,y-1,z);
		return 1;
	}
	if(pickupid >= housepick[0] && pickupid <= housepick[1])
	{
		if(GetPVarType(@p,#P_House_Id))
		{
			new i = GetPVarInt(@p,#P_House_Id);
			SetPPos(playerid,House[i][SPx],House[i][SPy],House[i][SPz]);
			SetPlayerFacingAngle(playerid,House[i][SPr]);
			DeletePVar(@p,#P_House_Id);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			SetCameraBehindPlayer(playerid);
		}
		return 1;
	}
	for(new i=0;i<MAX_BIZ;i++)
	{
		if(BizInfo[i][HOx]!=0.0)
		{
			if(Bizpic==pickupid)
			{
				if(BizInfo[i][sale] == 0)
				{
					new strings[128];
					if(BizInfo[i][prodaja]==1)
					{
						format(strings,sizeof(strings),"ID Бизнеса: %d\r\nПродажа этого дома запрещена администратором!",i);
						ShowPlayerDialog(playerid,99999999999999,DIALOG_STYLE_MSGBOX,"Внимание!",strings,"Ясно","Понятно");
						return 1;
					}
					format(strings,sizeof(strings),"Стоимость бизнеса: %d\r\nНеобходимый уровень: %d",BizInfo[i][stoim],BizInfo[i][lvl]);
					ShowPlayerDialog(playerid,17798,DIALOG_STYLE_MSGBOX,"Покупка бизнеса",strings,"Купить","Отмена");
					nowbiz[playerid]=i;
					return 1;
				}
				if(BizInfo[i][sale]==1)
				{
					new strings[128];
					if(PlayerInfo[playerid][pBiz]==i)
					{
						format(strings,sizeof(strings),"ID бизнеса: %d\r\nВладелец бизнеса: %s\r\nНазвание бизнеса: Заправочная станция\nСообщение от владельца: %s",i, BizInfo[i][owner], BizInfo[i][messageb]);
						ShowPlayerDialog(playerid,17799,DIALOG_STYLE_MSGBOX,"Это ваш бизнес",strings,"Команды","Закрыть");
						return 1;
					}
					else
					{
						format(strings,sizeof(strings),"ID бизнеса: %d\r\nВладелец бизнеса: %s\r\nНазвание бизнеса: Заправочная станция\nСообщение от владельца: %s",i, BizInfo[i][owner], BizInfo[i][messageb]);
						ShowPlayerDialog(playerid,99999999999999,DIALOG_STYLE_MSGBOX,"Просмотр информации о бизнесе",strings,"Закрыть", "");
						return 1;
					}
				}
			}
		}
	}
	if(pickupid == gungang[1])
	{
		if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
		{
			if(OnWeapon[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже брали набор");
			ShowPlayerDialog(playerid,12,DIALOG_STYLE_LIST,"Боекомплект Доков:","Набор Студента [2000р]\nЛёгкий Набор [3000р]\nСредний Набор [4000р]\nТяжёлый Набор [5000р]\nНабор Головореза [6000р]","Взять","Отмена");
			return 1;
		}
	}
	if(pickupid == gungang[2])
	{
		if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
		{
			if(OnWeapon[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже брали набор");
			ShowPlayerDialog(playerid,12,DIALOG_STYLE_LIST,"Боекомплект Mara Salvatrucha 13:","Набор Студента [2000р]\nЛёгкий Набор [3000р]\nСредний Набор [4000р]\nТяжёлый Набор [5000]\nНабор Головореза [6000р]","Взять","Отмена");
			return 1;
		}
	}
	if(pickupid == gungang[3])
	{
		if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
		{
			if(OnWeapon[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже брали набор");
			ShowPlayerDialog(playerid,12,DIALOG_STYLE_LIST,"Боекомплект Гопников:","Набор Студента [2000р]\nЛёгкий Набор [3000р]\nСредний Набор [4000р]\nТяжёлый Набор [5000]\nНабор Головореза [6000р]","Взять","Отмена");
			return 1;
		}
	}
	if(pickupid == gungang[4])
	{
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
		{
			if(OnWeapon[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже брали набор");
			ShowPlayerDialog(playerid,12,DIALOG_STYLE_LIST,"Боекомплект East Side Ballas:","Набор Студента [2000р]\nЛёгкий Набор [3000р]\nСредний Набор [4000р]\nТяжёлый Набор [5000]\nНабор Головореза [6000р]","Взять","Отмена");
			return 1;
		}
	}
	if(pickupid == gungang[5])
	{
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
		{
			if(OnWeapon[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже брали набор");
			ShowPlayerDialog(playerid,12,DIALOG_STYLE_LIST,"Боекомплект МЧС:","Набор Студента [2000р]\nЛёгкий Набор [3000р]\nСредний Набор [4000р]\nТяжёлый Набор [5000]\nНабор Головореза [6000р]","Взять","Отмена");
			return 1;
		}
	}
	if(pickupid == lice)
	{
		SetPlayerVirtualWorld(playerid,1);//Виртуальный мир
		SetPlayerInterior(playerid, 15); // интерьера
		SetPPos(playerid,207.66317749023,-108.94110870361,1004.7842407227);//Координаты появления в интерьере
	}
	if(pickupid == lice2)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid,0);
		SetPPos(playerid, 1921.4262695313,2228.2744140625,15.378606796265);//Координаты появления на улице
	}
	if(pickupid == dps)//Вход
	{
		if(!(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1)) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не из ОГИБДД");
		if(PlayerInfo[playerid][pRank] <= 7) return SendClientMessage(playerid, COLOR_GRAD1, "Вы должны быть 8 рангом.");
		SetPlayerInterior(playerid, 0);
		SetPPos(playerid, 2397.5894,-1824.2959,32.5537);
	}
	if(pickupid == dps1)//Выход
	{
		if(!(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1)) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не из ОГИБДД");
		SetPlayerInterior(playerid, 0);
		SetPPos(playerid, 1796.7401,2109.1885,15.8616);
	}
	if(pickupid == gyvd5)
	{
		SetPlayerVirtualWorld(playerid,0);//Виртуальный мир
		SetPlayerInterior(playerid, 0); //ID интерьера
		SetPPos(playerid,-99.8231,1477.6140,451.7260);//Координаты появления в интерьере
		Frez(playerid);
	}
	if(pickupid == gyvd6)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid,0);
		SetPPos(playerid, -425.7550,819.4042,12.0059);//Координаты появления на улице
		Frez(playerid);
	}
	if(pickupid == meria)
	{
		SetPlayerVirtualWorld(playerid,0);//Виртуальный мир
		SetPlayerInterior(playerid, 18); //ID интерьера
		SetPPos(playerid,161.47055053711,-95.531311035156,1001.4520263672);//Координаты появления в интерьере
		Frez(playerid);
	}
	if(pickupid == meria2)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid,0);
		SetPPos(playerid, 345.4567,1633.0973,12.0000);//Координаты появления на улице
	}
	if(pickupid == gunhit)
	{
		if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
		{
			if(OnWeapon[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже брали набор!");
			ShowPlayerDialog(playerid,13,DIALOG_STYLE_LIST,"Боекомплект киллера","Нож [1000р]\nДигл [2100р]\nШотган [3000р]\nмп5 [2999р]\nак47 [4000р]\nм4 [4000р]\nRifle [5500р]\nСнайперская винтовка [6888р]","Взять","Отмена");
			return 1;
		}
	}
	if(pickupid == flathouse1[0]) // Квартирный Дом напротив Репортеров (Вход)
	{
		SetPPos(playerid, 972.3107,-8.6146,1001.1484);
		SetPlayerInterior(playerid, 3);
		PlayerInfo[playerid][pInt] = 3;
		SetPlayerVirtualWorld(playerid,1);
	}
	if(pickupid == flathouse1[1]) // Квартирный Дом напротив Репортеров (Выход)
	{
		SetPPos(playerid, -1966.0192,434.3174,35.1719);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid,0);
	}
	if(pickupid == flathouse2[0]) // Квартирный Дом напротив Небоскрёпа ЛС (Вход)
	{
		SetPPos(playerid, 972.3107,-8.6146,1001.1484);
		SetPlayerInterior(playerid, 3);
		PlayerInfo[playerid][pInt] = 3;
		SetPlayerVirtualWorld(playerid,2);
	}
	if(pickupid == flathouse2[1]) // Квартирный Дом напротив Небоскрёпа ЛС (Выход)
	{
		SetPPos(playerid, 329.7834,-1513.7047,36.0391);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid,0);
	}
	if(pickupid == flathouse3[0]) // Квартирный Дом у Банка ЛС (Вход)
	{
		SetPPos(playerid, 972.3107,-8.6146,1001.1484);
		SetPlayerInterior(playerid, 3);
		PlayerInfo[playerid][pInt] = 3;
		SetPlayerVirtualWorld(playerid,3);
	}
	if(pickupid == flathouse3[1]) // Квартирный Дом у Банка ЛС (Выход)
	{
		SetPPos(playerid, 1378.8137,-1088.7667,27.0466);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid,0);
	}
	return 1;
}
public OnPlayerExitedMenu(playerid)
{
	if(GetPlayerMenu(playerid) == sushimenu || GetPlayerMenu(playerid) == BuyProdMenu[1]) TogglePlayerControllable(playerid, 1);
	return 1;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
	if(GetPlayerMenu(playerid) == otherlang)
	{
		switch(row)
		{
		case 0: { OtherLang[playerid] = 0, GameTextForPlayer(playerid, "~w~ Language: Standart", 8000, 1); }
		case 1: { if(PlayerInfo[playerid][pLangEng] == 1) OtherLang[playerid] = 1, GameTextForPlayer(playerid, "~w~ Language: English", 8000, 1); }
		case 2: { if(PlayerInfo[playerid][pLangRus] == 1) OtherLang[playerid] = 2, GameTextForPlayer(playerid, "~w~ Language: Russian", 8000, 1); }
		case 3: { if(PlayerInfo[playerid][pLangJap] == 1) OtherLang[playerid] = 3, GameTextForPlayer(playerid, "~w~ Language: Japanese", 8000, 1); }
		case 4: { if(PlayerInfo[playerid][pLangFra] == 1) OtherLang[playerid] = 4, GameTextForPlayer(playerid, "~w~ Language: French", 8000, 1); }
		case 5: { if(PlayerInfo[playerid][pLangIta] == 1) OtherLang[playerid] = 5, GameTextForPlayer(playerid, "~w~ Language: Italian", 8000, 1); }
		}
	}
	if(GetPlayerMenu(playerid) == regskinselects)
	{
		switch(row)
		{
		case 0://Вперёд
			{
				TogglePlayerControllable(playerid, 0);
				switch(PlayerInfo[playerid][pSex])
				{
				case 2://Женщина
					{
						if(GetPVarInt(playerid,"regSelectedSkin") < 0)  SetPVarInt(playerid,"regSelectedSkin",sizeof(RegFemaleSkins)-1);
						if(GetPVarInt(playerid,"regSelectedSkin") >= sizeof(RegFemaleSkins)) SetPVarInt(playerid,"regSelectedSkin",0);
						SetPlayerSkin(playerid, RegFemaleSkins[GetPVarInt(playerid,"regSelectedSkin")]);
						PlayerInfo[playerid][pModel] = RegFemaleSkins[GetPVarInt(playerid,"regSelectedSkin")];
						SetPVarInt(playerid,"regSelectedSkin",GetPVarInt(playerid,"regSelectedSkin")+1);
					}
				default://Мужчина
					{
						if(GetPVarInt(playerid,"regSelectedSkin") < 0) SetPVarInt(playerid,"regSelectedSkin",sizeof(RegMaleSkins)-1);
						if(GetPVarInt(playerid,"regSelectedSkin") >= sizeof(RegMaleSkins)) SetPVarInt(playerid,"regSelectedSkin",0);
						SetPlayerSkin(playerid, RegMaleSkins[GetPVarInt(playerid,"regSelectedSkin")]);
						PlayerInfo[playerid][pModel] = RegMaleSkins[GetPVarInt(playerid,"regSelectedSkin")];
						printf("regSelectedSkin %d | GetPlayerSkin %d | pModel %d | RegMaleSkins %d",GetPVarInt(playerid,"regSelectedSkin"),GetPlayerSkin(playerid),PlayerInfo[playerid][pModel],RegMaleSkins[GetPVarInt(playerid,"regSelectedSkin")]);
						SetPVarInt(playerid,"regSelectedSkin",GetPVarInt(playerid,"regSelectedSkin")+1);
					}
				}
				ShowMenuForPlayer(regskinselects, playerid);
			}
		case 1://Назад
			{
				TogglePlayerControllable(playerid, 0);
				switch(PlayerInfo[playerid][pSex])
				{
				case 2://Женщина
					{
						if(GetPVarInt(playerid,"regSelectedSkin") >= sizeof(RegFemaleSkins)) SetPVarInt(playerid,"regSelectedSkin",0);
						if(GetPVarInt(playerid,"regSelectedSkin") < 0) SetPVarInt(playerid,"regSelectedSkin",sizeof(RegFemaleSkins)-1);
						SetPlayerSkin(playerid, RegFemaleSkins[GetPVarInt(playerid,"regSelectedSkin")]);
						PlayerInfo[playerid][pModel] = RegFemaleSkins[GetPVarInt(playerid,"regSelectedSkin")];
						SetPVarInt(playerid,"regSelectedSkin",GetPVarInt(playerid,"regSelectedSkin")-1);
					}
				default://Мужчина
					{
						if(GetPVarInt(playerid,"regSelectedSkin") >= sizeof(RegMaleSkins)) SetPVarInt(playerid,"regSelectedSkin",0);
						if(GetPVarInt(playerid,"regSelectedSkin") < 0) SetPVarInt(playerid,"regSelectedSkin",sizeof(RegMaleSkins)-1);
						SetPlayerSkin(playerid, RegMaleSkins[GetPVarInt(playerid,"regSelectedSkin")]);
						PlayerInfo[playerid][pModel] = RegMaleSkins[GetPVarInt(playerid,"regSelectedSkin")];
						printf("regSelectedSkin %d | GetPlayerSkin %d | pModel %d | RegMaleSkins %d",GetPVarInt(playerid,"regSelectedSkin"),GetPlayerSkin(playerid),PlayerInfo[playerid][pModel],RegMaleSkins[GetPVarInt(playerid,"regSelectedSkin")]);
						SetPVarInt(playerid,"regSelectedSkin",GetPVarInt(playerid,"regSelectedSkin")-1);
					}
				}
				ShowMenuForPlayer(regskinselects, playerid);
			}
		case 2://Выбрать
			{
				DeletePVar(playerid,"RegSkinSelect");

				//
				TutTime[playerid] = 0; PlayerInfo[playerid][pTut] = 1; gOoc[playerid] = 0; gNews[playerid] = 0; gFam[playerid] = 0; gPlayerLogged[playerid] = 1;
				PlayerInfo[playerid][pCash] = 25000; PlayerInfo[playerid][pLevel] = 1; PlayerInfo[playerid][pDm] = 0; PlayerInfo[playerid][pPasport] = 1; MedicBill[playerid] = 0; AfterTutorial[playerid] = 1;
				PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid); PlayerInfo[playerid][pSHealth] = 100.0; PlayerInfo[playerid][pHealth] = 100.0; PlayerInfo[playerid][pInt] = 0; PlayerInfo[playerid][pLocal] = 255; 
				PlayerInfo[playerid][pAccount] = 15000; PlayerInfo[playerid][pReg] = 1; GivePlayerMoney(playerid, 25000);
				printf("GetPlayerSkin %d | pModel %d ",GetPlayerSkin(playerid),PlayerInfo[playerid][pModel]);
				//
				RegisterPlayer(playerid);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				SetPlayerVirtualWorld(playerid, 0);
				SpawnPlayer(playerid);
			}
		}
	}
	if(GetPlayerMenu(playerid) == sushimenu)
	{
		new Float:health; GetPlayerHealth(playerid, health);
		switch(row)
		{
		case 0: //Saba
			{
				GivePlayerMoney(playerid, - 40);
				if(health < 60) ServerGivePlayerHealth(playerid, health + 40.0);
				else if(health < 70) ServerGivePlayerHealth(playerid, health + 30.0);
				else if(health < 80) ServerGivePlayerHealth(playerid, health + 20.0);
				else if(health < 90) ServerGivePlayerHealth(playerid, health + 10.0);
				else if(health < 95) ServerGivePlayerHealth(playerid, health + 5.0);
				TogglePlayerControllable(playerid, 1);
			}
		case 1: //Maguro
			{
				GivePlayerMoney(playerid, - 60);
				if(health < 70) ServerGivePlayerHealth(playerid, health + 30.0);
				else if(health < 80) ServerGivePlayerHealth(playerid, health + 20.0);
				else if(health < 90) ServerGivePlayerHealth(playerid, health + 10.0);
				else if(health < 95) ServerGivePlayerHealth(playerid, health + 5.0);
				TogglePlayerControllable(playerid, 1);
			}
		case 2: //Anago
			{
				GivePlayerMoney(playerid, - 30);
				if(health < 80) ServerGivePlayerHealth(playerid, health + 20.0);
				else if(health < 90) ServerGivePlayerHealth(playerid, health + 10.0);
				else if(health < 95) ServerGivePlayerHealth(playerid, health + 5.0);
				TogglePlayerControllable(playerid, 1);
			}
		case 3: //Ika
			{
				GivePlayerMoney(playerid, - 90);
				if(health < 30) ServerGivePlayerHealth(playerid, health + 70.0);
				else if(health < 40) ServerGivePlayerHealth(playerid, health + 60.0);
				else if(health < 50) ServerGivePlayerHealth(playerid, health + 50.0);
				else if(health < 60) ServerGivePlayerHealth(playerid, health + 40.0);
				else if(health < 70) ServerGivePlayerHealth(playerid, health + 30.0);
				else if(health < 80) ServerGivePlayerHealth(playerid, health + 20.0);
				else if(health < 90) ServerGivePlayerHealth(playerid, health + 10.0);
				else if(health < 95) ServerGivePlayerHealth(playerid, health + 5.0);
				TogglePlayerControllable(playerid, 1);
			}
		case 4: //Cake
			{
				GivePlayerMoney(playerid, - 10);
				if(health < 90) ServerGivePlayerHealth(playerid, health + 10.0);
				else if(health < 95) ServerGivePlayerHealth(playerid, health + 5.0);
				TogglePlayerControllable(playerid, 1);
			}
		case 5: // exit
			{
				HideMenuForPlayer(sushimenu, playerid);
				TogglePlayerControllable(playerid, 1);
			}
		}
	}
	return 1;
}
//==============================================================================
forward ShlakBaum();
forward dpsbaum();
forward ppsbaum();
forward baum();
forward avtbaum();
forward shbaum();

public OnPlayerStateChange(playerid,newstate,oldstate)
{
	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER)
	{
		if(GetPVarType(@p,#P_CarIdx)) DeletePVar(@p,#P_CarIdx);
		if(GetPVarInt(@p,#P_Taxi_Exit)) 
		{
			DeletePVar(@p,#P_Taxi_Exit);
			return 1;			
		}
		if(GetPVarInt(@p,#P_Taxi_On) && GetPVarInt(@p,#P_Taxi_State))
		{
			SendClientMessage(playerid, COLOR_RED, "У вас есть 10 секунд, чтобы вернуться в такси.");
			SetPVarInt(@p,#P_Taxi_Tick,10);
			SetPVarInt(@p,#P_Taxi_Timer,SetTimerEx("@Taxi", 1000, false, "i",@p));//repeat
		}
		else if(GetPVarInt(@p,#P_Taxi_On) && !GetPVarInt(@p,#P_Taxi_State))
		{
			SendClientMessage(playerid, COLOR_RED, "У вас есть 3 минуты, чтобы вернуться в такси.");
			SetPVarInt(@p,#P_Taxi_Tick,180);
			SetPVarInt(@p,#P_Taxi_Timer,SetTimerEx("@Taxi", 1000, false, "i",@p));//repeat
		}
		
	}
	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_PASSENGER)
	{
		if(GetPVarInt(@p,#P_Taxi_Drive))
		{
			//g - driver id
			new g = GetPVarInt(@p,#P_Taxi_IDDriver);
			SCM(g,COLOR_LIGHTBLUE,#Пассажир вышел из вашего такси.);
			//@p - пассажир
			static const str1[] = "Заработано: {00ff00}%d {33CCFF}рублей";
			new str2[sizeof(str1)+11];
			format(str2,sizeof(str2),str1,GetPVarInt(g,#P_Taxi_Summ));
			SCM(g,COLOR_LIGHTBLUE,str2);
			PlayerInfo[g][pCash] += GetPVarInt(g,#P_Taxi_Summ);
			GivePlayerMoney(g,GetPVarInt(g,#P_Taxi_Summ));		
			PlayerTextDrawHide(g,taxi_info[g]);
			TextDrawHideForPlayer(g,taxi_fon);
			DeletePVar(g,#P_Taxi_Summ);
			TextDrawHideForPlayer(@p,taxi_fon);
			PlayerTextDrawHide(@p,taxi_info[@p]);		
			DeletePVar(@p,#P_Taxi_Drive);//статус пассажира		
			DeletePVar(g,#P_Taxi_IDPass);//ид пассажира		
			DeletePVar(@p,#P_Taxi_Km);//км пассажира
			DeletePVar(@p,#P_Taxi_KM_Int);//км окргуленные пассажира
			DeletePVar(g,#P_Taxi_State);//статус такси
			DisablePlayerCheckpoint(g);
			if(GetPVarInt(g,#P_Taxi_Type) == 2)
			{
				static const str0[] = "--{00ff00}Свободное {FFFF00}такси--\nЦена за километр: {00ff00}%d {FFFF00}рублей.";
				new str[sizeof(str0)+4];
				format(str,sizeof(str),str0,GetPVarInt(g,#P_Taxi_Tar));
				UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(g,#P_Taxi_Text3d), COLOR_YELLOW, str);
			}
			else if(GetPVarInt(g,#P_Taxi_Type) == 1)
			{
				static const str0[] = "--{00ff00}Свободное {FFFF00}такси--\nОплата: Договорная.";
				UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(g,#P_Taxi_Text3d), COLOR_YELLOW, str0);
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		new carid = GetPlayerVehicleID(playerid);
		if(strlen(CarRadio[carid]))
		{
			PlayAudioStreamForPlayer(playerid, CarRadio[carid], 0.0, 0.0, 0.0, 20.0, 0);	
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		new lolid = GetPlayerVehicleID(playerid);
		if(IsKatA(lolid) && PlayerInfo[playerid][pKatA] == 0 && gpvi(@p,"Category") != 1) { prava[playerid] = 1, ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Информация","У вас нет водительских прав категории A.\n\n{FF4500}Для сдачи на права вам необходимо получить справку об окончании автошколы и прибыть с ней в отдел ГИБДД","Ok",""); }
		if(Isdalnob(lolid) && PlayerInfo[playerid][pKatC] == 0 && gpvi(@p,"Category") != 3) { prava[playerid] = 1, ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Информация","У вас нет водительских прав категории C.\n\n{FF4500}У вас нет водительских прав категории D.\n\n{FF4500}Для сдачи на права вам необходимо получить справку об окончании автошколы и прибыть с ней в отдел ГИБДД","Ok",""); }
		if(IsKatB(lolid) && PlayerInfo[playerid][pKatB] == 0 && gpvi(@p,"Category") != 2) { prava[playerid] = 1, ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Информация","У вас нет водительских прав категории B.\n\n{FF4500}У вас нет водительских прав категории B.\n\n{FF4500}Для сдачи на права вам необходимо получить справку об окончании автошколы и прибыть с ней в отдел ГИБДД","Ok",""); }
		if(IsKatC(lolid) && PlayerInfo[playerid][pKatC] == 0 && gpvi(@p,"Category") != 3) { prava[playerid] = 1, ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Информация","У вас нет водительских прав категории C.\n\n{FF4500}У вас нет водительских прав категории C.\n\n{FF4500}Для сдачи на права вам необходимо получить справку об окончании автошколы и прибыть с ней в отдел ГИБДД","Ok",""); }
		if(IsKatD(lolid) && PlayerInfo[playerid][pKatD] == 0 && gpvi(@p,"Category") != 4) { prava[playerid] = 1, ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Информация","У вас нет водительских прав категории D.\n\n{FF4500}У вас нет водительских прав категории D.\n\n{FF4500}Для сдачи на права вам необходимо получить справку об окончании автошколы и прибыть с ней в отдел ГИБДД","Ok",""); }
		if(CarEngine[lolid] == 0)
		{
			if(!IsAVelo(lolid) && !IsABike(lolid))
			{
				SendClientMessage(playerid,COLOR_PURPLE,"{FFFFFF}Чтобы завести/заглушить двигатель нажмите {2E9AFE}'N'{FFFFFF}. Меню автомобиля - {2E9AFE}'/car'.");
				SendClientMessage(playerid,COLOR_PURPLE,"{FFFFFF}Для включения радио в автомобиле нажмите {2E9AFE}'Y'{FFFFFF}.");
				SetPVarInt(playerid,"Seatbelt",0);
				new Float:car_hp;
				GetVehicleHealth(lolid,car_hp);
				SetPVarFloat(playerid,#P_Carhp,car_hp);
			}
		}
		if(IsAVelo(lolid) || IsABike(lolid))
		{
			GetVehicleParamsEx(lolid, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(lolid, 1, lights, alarm, doors, bonnet, boot, objective);
		}
		new carid = GetPlayerVehicleID(playerid);
		if(IsAVelo(lolid))
		{
			if(!CarEngine[carid])
			{
				GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(carid,VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
				CarEngine[carid] = 1;
			}
		}
		if(IsABike(lolid))
		{
			SendClientMessage(playerid,COLOR_PURPLE,"{FFFFFF}Чтобы завести/заглушить двигатель нажмите {2E9AFE}'N'{FFFFFF}. Меню мотоцикла/мопеда - {2E9AFE}'/car'.");
			SendClientMessage(playerid,COLOR_PURPLE,"{FFFFFF}Для включения радио в автомобиле нажмите {2E9AFE}'Y'{FFFFFF}.");
		}
	}
	if(newstate == 2)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new id_car = GetVehicleIdxByID(vehicleid);
		if(id_car == -1) return 1;
		spvi(@p,#P_CarIdx,id_car);
		if(id_car != -1 && aData[id_car][aKey] != PlayerInfo[playerid][pCKey] && !aData[id_car][aFrak] && !aData[id_car][aJobs])
		{
			spvi(@p,#P_CarIdx,id_car);
			if(aData[id_car][aOwned] == 0)
			{
				TogglePlayerControllable(playerid,0);
				new msgb[128];
				format(msgb,sizeof(msgb),"Эта машина продаётся. Стоимость: %d рублей", aData[id_car][aPrice]);
				/*SendClientMessage(playerid,COLOR_YELLOW,msgb);
				SendClientMessage(playerid,COLOR_YELLOW,"Используйте: /buycar, чтобы купить машину. Чтобы выйти, наберите /exits");*/
				ShowPlayerDialog(playerid, 20001, DIALOG_STYLE_MSGBOX,"{0066FF}Покупка автомобиля","{FFFFFF}Вы действительно хотите купить автомобиль?", "Купить", "Отмена");
				return 1;
			}
			else
			{
				new ex[128];
				format(ex,sizeof(ex),"Этот автомобиль куплен, владелец: %s", aData[id_car][aOwner]);
				SendClientMessage(playerid,COLOR_YELLOW,ex);
				if(PlayerInfo[playerid][pAdmin] <= 2)
				{
					if(PlayerInfo[playerid][peee] ==0)
					{
						RemovePlayerFromVehicle(playerid);
						TogglePlayerControllable(playerid, 1);
					}
				}
				return 1;
			}
		}
		if(id_car != -1 && aData[id_car][aKey] != PlayerInfo[playerid][pCKey] && aData[id_car][aFrak] && !aData[id_car][aJobs])
		{
			new frak = 0;
			if(PlayerInfo[@p][pLeader]) frak = PlayerInfo[@p][pLeader];
			else frak = PlayerInfo[@p][pMember];
			if(aData[id_car][aFrak] == 11 && gpvi(@p,"Category") /*|| aData[id_car][aFrak] == 11 && frak == 11*/)
			{
				if(IsKatA(vehicleid) && gpvi(@p,"Category") != 1) return SCM(@p,COLOR_GREY,"Этот автомобиль не вашей категории!"), RemovePlayerFromVehicle(@p);
				if(IsKatB(vehicleid) && gpvi(@p,"Category") != 2) return SCM(@p,COLOR_GREY,"Этот автомобиль не вашей категории!"), RemovePlayerFromVehicle(@p);
				if(IsKatC(vehicleid) && gpvi(@p,"Category") != 3) return SCM(@p,COLOR_GREY,"Этот автомобиль не вашей категории!"), RemovePlayerFromVehicle(@p);
				if(IsKatD(vehicleid) && gpvi(@p,"Category") != 4) return SCM(@p,COLOR_GREY,"Этот автомобиль не вашей категории!"), RemovePlayerFromVehicle(@p);
				if(GetPVarInt(playerid,"AutoExam"))
				{
					if(gpvi(@p,#P_AutoEx_Tim)) DeletePVar(@p,#P_AutoEx_Tim);
					else SCM(@p,-1,"Тестовое сообщение выводится при посадке в учебное авто");
					spvi(@p,#P_AutoEx_CarID,vehicleid);
					new slot = GetPVarInt(playerid,"LessonSlot");
					if(slot >= (AUTO_CP_COUNT-1)) return SetPlayerRaceCheckpoint(playerid,1, AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], 0.0, 0.0, 0.0, 5.0),spvi(@p,#P_AutoEx,1);
					SetPlayerRaceCheckpoint(@p,0,AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2],AutoCP[slot+1][0], AutoCP[slot+1][1], AutoCP[slot+1][2],5.0);
				}
				return 1;
			}
			if(aData[id_car][aFrak] != frak)
			{
				SCM(@p,COLOR_GRAD1,"У вас нет ключей от этого транспорта");
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			spvi(@p,#P_CarIdx,id_car);
		}
		if(id_car != -1 && aData[id_car][aKey] != PlayerInfo[playerid][pCKey] && !aData[id_car][aFrak] && aData[id_car][aJobs])
		{
			if(aData[id_car][aJobs] != PlayerInfo[@p][pJob])
			{
				SCM(@p,COLOR_GRAD1,"У вас нет ключей от этого транспорта");
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			switch(aData[id_car][aJobs])
			{
			case 3:
				{
					if(GetPVarType(@p,#P_Taxi_CarID))
					{
						if(GetPVarInt(@p,#P_Taxi_CarID) != vehicleid)
						{
							SendClientMessage(@p,-1,"Это не ваше такси.");
							RemovePlayerFromVehicle(playerid);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if(GetPVarType(@p,#P_Taxi_Timer))
					{
						KillTimer(GetPVarInt(@p,#P_Taxi_Timer));
						DeletePVar(@p,#P_Taxi_Timer);
						DeletePVar(@p,#P_Taxi_Tick);
						TextDrawHideForPlayer(@p,taxi_fon);
						PlayerTextDrawHide(@p,taxi_info[@p]);
						return 1;
					}
					if(GetPVarInt(@p,#P_Taxi_Off)) return SCM(@p,COLOR_LIGHTBLUE,"Чтобы начать работать введите: /tsetting");
					ShowPlayerDialog(@p,1230,DIALOG_STYLE_LIST,"{ffffff}Водитель такси","{808080}1. {ffffff}Оплата по таксометру (километры).\n{808080}2. {ffffff}Оплата по договорённости.","Выбор","Отмена");
				}
			case 22:
				{
					if(GetPVarInt(playerid,#Mus_Job) == 0)
					{
						SendClientMessage(playerid,-1,"Для начала нужно устроиться на работу водителем мусоровоза!");
						RemovePlayerFromVehicle(playerid);
						TogglePlayerControllable(playerid, 1);
						return 1;
					}
					else if(GetPVarInt(playerid,#Mus_Job) == 1 && GetPVarInt(playerid,#Mus_Start) == 1)
					{
						SendClientMessage(playerid,COLOR_RED,"Отправляйтесь на новую точку для загрузки!");
						SetPVarInt(playerid,#Mus_Time,-1);
						SetPVarInt(playerid,#Mus_Act,0);
						new p = random(10);
						while(p == GetPVarInt(playerid,#Mus_Idx))
						{
							p = random(10);
						}
						SetPVarInt(playerid,#Mus_Idx,p);
						SetPlayerCheckpoint(playerid,mus_pos[p][0],mus_pos[p][1],mus_pos[p][2],7.0);
						return 1;
					}
					else SendClientMessage(playerid,COLOR_GREEN,"[ИНФО]: Для начала работы водителя мусоровоза введите команду /musstart");
					return 1;
				}
			}
			spvi(@p,#P_CarIdx,id_car);
		}

	}
	new string[256];
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		StopAudioStreamForPlayer(playerid);
		RemovePlayerAttachedObject(playerid, 1);
	
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
			if(IsPlayerConnected(TransportDriver[playerid]))
			{
				TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
				TransportTime[TransportDriver[playerid]] = 0;
				TransportCost[TransportDriver[playerid]] = 0;
				format(string, sizeof(string), "Стоимость поездки составила %dр",TransportCost[playerid]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Стоимость поездки составила %dр",TransportCost[playerid]);
				SendClientMessage(TransportDriver[playerid], COLOR_LIGHTBLUE, string);
				GivePlayerMoney(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if(newstate == PLAYER_STATE_PASSENGER) // TAXI & BUSSES
	{
		new name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		new vehicleid = GetPlayerVehicleID(playerid);
		foreach(new i:Player)
		{
			if(IsPlayerConnected(i))
			{
				if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && GetPVarInt(i,#P_Taxi_On))
				{
					if(GetPVarInt(i,#P_Taxi_Type) == 1 && !GetPVarInt(i,#P_Taxi_State))
					{
						SendClientMessage(i,COLOR_LIGHTBLUE,"Пассажир сел в ваше такси. Используйте команду '/taxi [id]' пассажира.");
					}
					else if(GetPVarInt(i,#P_Taxi_Type) == 2 && !GetPVarInt(i,#P_Taxi_State))
					{
						if(eGetPlayerMoney(playerid) < GetPVarInt(i,#P_Taxi_Tar)) 
						{
							SendClientMessage(@p,COLOR_GRAD1,#У вас недостаточно денег для поездки на такси);
							RemovePlayerFromVehicle(playerid);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
						SendClientMessage(i,COLOR_LIGHTBLUE,"Пассажир сел в ваше такси. Используйте команду '/taxi [id]' пассажира.");
					}
					else 
					{
						SendClientMessage(@p,COLOR_GRAD1,#Это такси занято.);
						RemovePlayerFromVehicle(playerid);
						TogglePlayerControllable(playerid, 1);
						return 1;
					}
				}				
			}
		}
	}
	if(newstate == PLAYER_STATE_WASTED)
	{
		if(WantedLevel[playerid] >= 1)
		{
			new price = WantedLevel[playerid] * 5000;
			new count;
			foreach(new i:Player)
			{
				if(IsPlayerConnected(i))
				{
					if(CrimInRange(20.0, playerid,i))
					{
						count = 1;
						format(string, sizeof(string), "Вы убили преступника и получаете премию в размере %d рублей.", price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						ConsumingMoney[i] = 1;
						GivePlayerMoney(i, price);
						PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
					}
				}
			}
			//------------------------------------------------------------------------------
			if(count == 1)
			{
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pWantedDeaths] += 1;
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = (WantedLevel[playerid])*(600);
				format(string, sizeof(string), "Вы были убиты представителем власти. Теперь вы попали в тюрьму на %d секунд и заплатили штраф %d рублей.", PlayerInfo[playerid][pJailTime], price);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				WantedPoints[playerid] = 0;
				WantedLevel[playerid] = 0;
				SavePlayer(playerid);
			}
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT) prava[playerid] = 2;
	if(oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER) StopAudioStreamForPlayer(playerid);
	if(newstate == PLAYER_STATE_DRIVER)
	{
		new newcar = GetPlayerVehicleID(playerid);
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		if(IsAPlane(newcar))
		{
			if(!PlayerInfo[playerid][pFlyLic] && !TakingLesson[playerid]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет лицензии на управление воздушным транспортом! Вас могут оштрафовать!");
		}
		if(IsTrailerAttachedToVehicle(newcar)) return SendClientMessage(playerid, COLOR_WHITE, "Информация: Трейлер присоединен.");

		//---------------КОЛХОЗНИК==============================================-
		if(IsAHarvest(newcar))
		{
			if(PlayerInfo[playerid][pJob] == 19)
			{
				if(FarmerVar[playerid] == 0)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Команды: /startharvest, /stopharvest или /exit ");
					TogglePlayerControllable(playerid, 0);
				}
				else { }
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY,"У вас нет ключей от этого транспорта");
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
			}
		}
		if(GetPVarInt(@p,#P_Taxi_On) && GetPVarInt(@p,#P_Taxi_CarID) != newcar)
		{
			SendClientMessage(@p,-1,"Это не ваше такси.");
			SetPVarInt(@p,#P_Taxi_Exit,1);
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
			return 1;
		}
		///12345
		if(GetPVarInt(@p,#P_Taxi_On) && GetPVarInt(@p,#P_Taxi_CarID) != newcar)
		{
			SendClientMessage(@p,-1,"Это не ваше такси.");
			SetPVarInt(@p,#P_Taxi_Exit,1);
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
			return 1;
		}
	}
	if(newstate == PLAYER_STATE_SPAWNED)
	{
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1)) //the highest land point in sa = 526.8
		{
			SetPlayerSpawn(playerid);
		}
		if(WantedPoints[playerid] > 0)
		{
			new dstring[128];
			new wanted = WantedPoints[playerid];
			new diecash = 0;
			while(WantedPoints[playerid] > 0)
			{
				diecash += 500;
				WantedPoints[playerid] --;
			}
			format(dstring, sizeof(dstring), "Вы проиграли %d рублей и получили %d очков преследования.", diecash, wanted);
			SendClientMessage(playerid, COLOR_YELLOW, dstring);
			GivePlayerMoney(playerid, - diecash);
			PlayerInfo[playerid][pWantedDeaths] += 1;
		}
		if(PlayerOnMission[playerid] > 0)
		{
			GameTextForPlayer(playerid, "~r~Mission failed", 5000, 3);
			PlayerOnMission[playerid] = 0;
			PlayerInfo[playerid][pMissionNr] = 0;
		}
		WantedPoints[playerid] = 0;
		WantedLevel[playerid] = 0;
		if(PlayerInfo[playerid][pDonateRank] > 0) { ServerGivePlayerHealth(playerid, 100.0); }
		else { ServerGivePlayerHealth(playerid, 50.0+PlayerInfo[playerid][pSHealth]); }
		MedicBill[playerid] = 1;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		SafeTime[playerid] = 60;

	}
	return 1;
}
//==============================================================================
public HireCost(carid)
{
	switch (carid)
	{
	case 69:
		{
			return 90000; //bullit
		}
	case 70:
		{
			return 130000; //infurnus
		}
	case 71:
		{
			return 100000; //turismo
		}
	case 72:
		{
			return 80000;
		}
	case 73:
		{
			return 70000;
		}
	case 74:
		{
			return 60000;
		}
	}
	return 0;
}
//==============================================================================
public CarCheck()
{
	new string[256];
	for(new j = 0; j<MAX_PLAYERS; j++)
	{
		if(IsPlayerConnected(j))
		{
			SetVehicleParamsForPlayer(99, j, 0, 0);
			SetVehicleParamsForPlayer(100, j, 0, 0);
			SetVehicleParamsForPlayer(101, j, 0, 0);
			SetVehicleParamsForPlayer(102, j, 0, 0);
			SetVehicleParamsForPlayer(103, j, 0, 0);
			SetVehicleParamsForPlayer(104, j, 0, 0);
			SetVehicleParamsForPlayer(105, j, 0, 0);
			SetVehicleParamsForPlayer(106, j, 0, 0);
			SetVehicleParamsForPlayer(107, j, 0, 0);
			SetVehicleParamsForPlayer(108, j, 0, 0);
			SetVehicleParamsForPlayer(109, j, 0, 0);

			if(eGetPlayerMoney(j) < 0)
			{
				if(MoneyMessage[j]==0)
				{
					format(string, sizeof(string), "У вас долг, вы должны отдать сумму: %d рублей или сядете в тюрьму.", GetPlayerMoney(j));
					SendClientMessage(j, COLOR_LIGHTRED, string);
					MoneyMessage[j] = 1;
				}
			}
			else
			{
				MoneyMessage[j] = 0;
			}
		}
	}
	for(new c = 1; c < 254; c++)
	{
		foreach(new i:Player)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pJob] == 5)
				{
					SetVehicleParamsForPlayer(c, i, 0, 0);
				}
			}
		}
	}
	return 1;
}
//==============================================================================
public CarInit()
{
	for(new c = 1; c < 254; c++)
	{
		gLastDriver[c] = 299;
	}
	gLastDriver[301]=255;
	return 1;
}

public LockCar(carid)
{
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(carid,engine,lights,alarm,true,bonnet,boot,objective);
}

public UnLockCar(carid)
{
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(carid,engine,lights,alarm,false,bonnet,boot,objective);
}

public InitLockDoors(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		for(new c; c < MAX_VEHICLES; c++)
		{
			if(!aData[c][aKey]) continue;
			if(aData[c][aLock]) SetVehicleParamsForPlayer(aData[c][aCarid], playerid, 0, 1);
		}
	}
	return 1;
}
public OnPlayerRequestClass(playerid, classid)
{
	if(IsPlayerNPC(playerid)) return 1;	
	// Выбираем пароль с ника
	if(gPlayerLogged[playerid]) 
	{
		SpawnPlayer(@p);
		return 1;
	}
	//if(gpvi(@p,#P_reg_flood) > gettime()) return SCM(@p,-1,"Не флудите в чат!");
	new str[54+MAX_PLAYER_NAME];
	mysql_format(MySQLGo,str,sizeof(str),"SELECT `pKey` FROM `accounts` WHERE `pNickname` = '%e'",NamePlayer[playerid]);
	mysql_tquery(MySQLGo, str, "RegCheck", "d",@p);		
	return 1;
}
publics:RegCheck(@p)
{
	spvi(@p,#P_reg_flood,gettime()+5);
	new rows, fields;
	cache_get_data(rows, fields, MySQLGo);	
	PlayAudioStreamForPlayer(playerid, "http://er-project.ru/music/mc.mp3", 0.0, 0.0, 0.0, 50.0, 0);
	if(rows) 
	{
		cache_get_field_content(0, "pKey", UserKey[playerid], MySQLGo);
		ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD,"{2E9AFE}Авторизация аккаунта","{FFFFFF}Добро пожаловать на Trusty Roleplay\nВаш аккаунт{0099FF} зарегистрирован{FFFFFF}, введите Ваш пароль в окно ниже.\n\n{808080}Информация:\n\n- Если вы забыли свой пароль, вы можете восстановить его на сайте er-project.ru","Войти","Отмена");
		return 1;
	}
	else return ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{2E9AFE}Регистрация | Пароль","{FFFFFF}Введите будущий пароль для вашего аккаунта.\nОн будет запрашиваться при каждом подключении к серверу.\n\n {2E9AFE}Примечания:\n- Пароль должен быть сложным (Пример: g5rQ08QQDRdzd45a1)\n- Пароль должен состоять из цифр и букв\n- Максимальная длина пароля от 6 до 15 символов\n\n{bbbbbb}Восстановить пароль вы всегда можете через сайт: {2E9AFE}er-project.ru","Готово","Выйти");
}

public SetPlayerCriminal(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		PlayerInfo[playerid][pCrimes] += 1;
		new points = WantedPoints[playerid];
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new wlevel;
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason));
		GetPlayerName(playerid, turned, sizeof(turned));
		if(declare == 255)
		{
			format(turner, sizeof(turner), "Видеорегистратор");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner));
		}
		else
		{
			if(IsPlayerConnected(declare))
			{
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner));
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned));
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason));
			}
		}
		format(turnmes, sizeof(turnmes), "Вы совершили преступление (%s). Сообщил: %s.",reason,turner);
		SendClientMessage(playerid, COLOR_LIGHTRED, turnmes);
		new years, months, days, data[128], hours, minutes, tmpsecond; getdate(years, months, days); gettime(hours, minutes, tmpsecond);
		format(data, 128, "%02d/%02d/%04d %s%d:%s%d", days, months, years, (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes);
		new querys[700];
		mysql_format(MySQLGo, querys, 700, "INSERT INTO `suspects` (`Name`,`Date`,`Reason`,`GivePlayer`) VALUES ('%s','%s','%s','%s')", NamePlayer[playerid], data, reason, turner);
		mysql_tquery(MySQLGo, querys);
		if(points > 0)
		{
			new yesno;
			if(points == 3) { if(WantedLevel[playerid] != 1) { WantedLevel[playerid] = 1; wlevel = 1; yesno = 1; } }
			else if(points >= 4 && points <= 5)
			{
				if(WantedLevel[playerid] != 2)
				{
					WantedLevel[playerid] = 2;
					wlevel = 2;
					yesno = 1;
				}
			}
			else if(points >= 6 && points <= 7) { if(WantedLevel[playerid] != 3) { WantedLevel[playerid] = 3; wlevel = 3; yesno = 1; } }
			else if(points >= 8 && points <= 9) { if(WantedLevel[playerid] != 4) { WantedLevel[playerid] = 4; wlevel = 4; yesno = 1; } }
			else if(points >= 10 && points <= 11) { if(WantedLevel[playerid] != 5) { WantedLevel[playerid] = 5; wlevel = 5; yesno = 1; } }
			else if(points >= 12 && points <= 13) { if(WantedLevel[playerid] != 6) { WantedLevel[playerid] = 6; wlevel = 6; yesno = 1; } }
			else if(points >= 14) { if(WantedLevel[playerid] != 6) { WantedLevel[playerid] = 6; wlevel = 6; yesno = 1; } }
			if(yesno)
			{
				format(wantedmes, sizeof(wantedmes), "Текущий уровень розыска: %d", wlevel);
				SendClientMessage(playerid, COLOR_YELLOW, wantedmes);
				SetPlayerWantedLevel(playerid, wlevel);
				foreach(new i:Player)
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pMember] == 6||PlayerInfo[i][pLeader] == 1||PlayerInfo[i][pMember]==1||PlayerInfo[i][pLeader]==1||PlayerInfo[i][pMember] == 2||PlayerInfo[i][pLeader] == 2|| PlayerInfo[i][pMember] == 3|| PlayerInfo[i][pLeader] == 3)
						{
							format(cbjstore, sizeof(turnmes), "Внимание! Совершено преступление(%s). Подозреваемый: %s. Сообщил: %s.",reason,turned,turner);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
						}
					}
				}
			}
		}
	}//not connected
}
//==============================================================================
public RingToner()
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(RingTone[i] != 6 && RingTone[i] != 0 && RingTone[i] < 11)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1138, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 6)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 20)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
			}
		}
	}
	SetTimer("RingTonerRev", 1000, 0);
	return 1;
}
//==============================================================================
public RingTonerRev()
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(RingTone[i] != 5 && RingTone[i] != 0 && RingTone[i] < 10)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1137, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 5)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 19)
			{
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
				RingTone[i] = 0;
			}
		}
	}
	SetTimer("RingToner", 1000, 0);
	return 1;
}
//==============================================================================
public OtherTimer()
{
	new Float:maxspeed = 200;
	new plname[MAX_PLAYER_NAME];
	new string[256];
	//new Float:oldposx, Float:oldposy, Float:oldposz;
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
			if(GetPlayerState(i) == 1) CheckForWalkingTeleport(i); // IF THE PLAYER IS IN A TELEPORT ZONE, TELEPORT THEM
			if(GetPlayerState(i) == 2)
			{
				GetPlayerPos(i, TelePos[i][3], TelePos[i][4], TelePos[i][5]);
				if(TelePos[i][5] > 550.0)
				{
					TelePos[i][0] = 0.0;
					TelePos[i][1] = 0.0;
				}
				if(TelePos[i][0] != 0.0)
				{
					new Float:xdist = TelePos[i][3]-TelePos[i][0];
					new Float:ydist = TelePos[i][4]-TelePos[i][1];
					new Float:sqxdist = xdist*xdist;
					new Float:sqydist = ydist*ydist;
					new Float:distance = (sqxdist+sqydist)/31;
					if(gSpeedo[i] == 2)
					{
						if(distance <10)
						{
							format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph :   ~w~%.0f",distance);
						}
						if(distance > 10 && distance < 100)
						{
							format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph :  ~w~%.0f",distance);
						}
						if(distance > 100)
						{
							format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph : ~w~%.0f",distance);
						}
						GameTextForPlayer(i, string, 2000, 5);
					}
					//------------------------------------------------------------------------------
					if(GetPlayerSpeed(i) > maxspeed && PlayerInfo[i][pAdmin] < 13)
					{
						new tmpcar = GetPlayerVehicleID(i);
						if(!IsAPlane(tmpcar))
						{
							GetPlayerName(i, plname, sizeof(plname));
							format(string, 256, "Внимание!!! [id%d] %s %d км/ч (игрок движется очень быстро)!",i,plname,GetPlayerSpeed(i));
							ABroadCast(COLOR_YELLOW,string,1);
						}
					}
				}
				//------------------------------------------------------------------------------
				if(TelePos[i][5] < 550.0 && TelePos[i][3] != 0.0)
				{
					TelePos[i][0] = TelePos[i][3];
					TelePos[i][1] = TelePos[i][4];
				}
			}
			if(CellTime[i] > 0)
			{
				if(CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[i] != 255)
					{
						if(Mobile[Mobile[i]] == i)
						{
							CallCost[i] = CallCost[i]+callcost;
						}
					}
				}
				CellTime[i] = CellTime[i] +1;
				if(Mobile[i] != 255)
				{
					if(Mobile[Mobile[i]] == 255 && CellTime[i] == 5)
					{
						if(IsPlayerConnected(Mobile[i]))
						{
							new called[MAX_PLAYER_NAME];
							GetPlayerName(Mobile[i], called, sizeof(called));
							//format(string, sizeof(string), "У %s зазвонил телефон", called);
							RingTone[Mobile[i]] = 10;
							//ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				format(string, sizeof(string), "~g~Paџ™oўop oko®¤e®.~n~‹peЇ¬ paџ™oўopa: %d~n~CЈњca®o co c¤ё¦a: %d py—ћeќ",CallCost[i]);
				PlayerInfo[i][pTA] -= CallCost[i];
				GameTextForPlayer(i, string, 5000, 1);
				CallCost[i] = 0;
			}
			if(TransportTime[i] > 0)
			{//Taxi driver and passenger only
				if(TransportTime[i] >= 16)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
							TransportCost[i] += TransportValue[TransportDriver[i]];
							TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
				TransportTime[i] += 1;
				format(string, sizeof(string), "~r~%d ~w~: ~g~%dp",TransportTime[i],TransportCost[i]);
				GameTextForPlayer(i, string, 15000, 6);
			}
		}
	}
	return 1;
}

//===============================Ворота ГУВД====================================
public vorotagate()
{
	MoveObject(gatevorota,2445.6687, -1795.5292, 22.5050, 3.0);
	return 1;
}
public vorotagate1()
{
	MoveObject(gatevorota1,2406.7136, -1835.6161, 24.2535, 3.0);
	return 1;
}




//===============================Ворота Горьковской============================
public opggate()
{
	MoveObject (gateopg,438.06, 1080.40, 13.54, 3.0);
	return 1;
}



public SetPlayerUnjail()
{
	new plname[MAX_PLAYER_NAME];
	new string[256];
	//------------------------------------------------------------------------------

	//------------------------------------------------------------------------------
	if(PaintballPlayers >= 2 && PaintballRound != 1 && StartingPaintballRound != 1)
	{
		StartingPaintballRound = 1;
		SetTimer("PreparePaintball", 15000, 0);
	}
	//------------------------------------------------------------------------------
	foreach(new i:Player)
	{
		new Float:arm;
		GetPlayerArmour(i,arm);
		if(arm > 0 && !IsACop(i))
		{
			if(!IsPlayerNPC(i))
			{
				SetPlayerArmour(i,0);
				GetPlayerName(i,plname,sizeof(plname));
				format(string, sizeof(string), "Внимание! %s[%d] имеет броню, хотя он не сотрудник ПО. ", plname, i);
				ABroadCast(0xFFFF00FF,string,1);
			}
		}
		//------------------------------------------------------------------------------
		if(IsPlayerConnected(i))
		{
			new newcar = GetPlayerVehicleID(i);
			//	if(IsABike(newcar))
			{
				PlayerInfo[i][pForce] = PlayerInfo[i][pForce] + 1;
			}
			new level = PlayerInfo[i][pLevel];
			if(level >= 0 && level <= 2) { PlayerInfo[i][pPayCheck] += 1; }
			else if(level >= 3 && level <= 4) { PlayerInfo[i][pPayCheck] += 2; }
			else if(level >= 5 && level <= 6) { PlayerInfo[i][pPayCheck] += 3; }
			else if(level >= 7 && level <= 8) { PlayerInfo[i][pPayCheck] += 4; }
			else if(level >= 9 && level <= 10) { PlayerInfo[i][pPayCheck] += 5; }
			else if(level >= 11 && level <= 12) { PlayerInfo[i][pPayCheck] += 6; }
			else if(level >= 13 && level <= 14) { PlayerInfo[i][pPayCheck] += 7; }
			else if(level >= 15 && level <= 16) { PlayerInfo[i][pPayCheck] += 8; }
			else if(level >= 17 && level <= 18) { PlayerInfo[i][pPayCheck] += 9; }
			else if(level >= 19 && level <= 20) { PlayerInfo[i][pPayCheck] += 10; }
			else if(level >= 21) { PlayerInfo[i][pPayCheck] += 11; }
			//--------------------------[Анти-АФК]------------------------------------------
			new sendername[MAX_PLAYER_NAME];
			GetPlayerPos(i,AntiAFK[i][3],AntiAFK[i][4],AntiAFK[i][5]);
			if(PlayerInfo[i][pMutedTime] != 0)
			{
				PlayerInfo[i][pMutedTime] --;
				if(PlayerInfo[i][pMutedTime] == 0)
				{
					PlayerInfo[i][pMuted] = 0;
					SendClientMessage(i,COLOR_LIGHTBLUE,"Вы были автоматически разглушены.");
				}
			}
			if(prava[i] == 1 && TakingLesson[i] == 0)
			{
				if(GetPlayerDrunkLevel(i) < 30000) SetPlayerDrunkLevel(i, 50000);
				SetPlayerDrunkLevel (i, 50000);
			}
			if(prava[i] == 2) SetPlayerDrunkLevel(i, 0);
			if(HospitalTime[i] > 0)
			{
				HospitalTime[i]--;
				new mes[32];
				format(mes, 32, "~g~%d sec", HospitalTime[i]), GameTextForPlayer(i, mes, 5000, 3);
				if(!HospitalTime[i])
				{
					SendClientMessage(i,COLOR_LIGHTBLUE,"Вы здоровы, вас выписали из больницы!");
					SetPlayerInterior(i, 0);
					SetPlayerVirtualWorld(i, 0);
					SetPPos(i,663.7869,774.0828,12.0009);// ВСТАВИТЬ КООРДЫ СПАВНА ПРИ ВЫПИСКЕ
					TogglePlayerControllable(i, true);
					SetPlayerHealth(i,100);
				}
				UpdatePlayerData(i,"pHospitalTime",HospitalTime[i]);
			}
			if(PlayerInfo[i][pJailed] > 0)
			{
				if(PlayerInfo[i][pJailTime] > 0 && !GetPVarInt(i,#P_Kpz)) PlayerInfo[i][pJailTime]--;
				if(PlayerInfo[i][pJailTime] <= 0 && !GetPVarInt(i,#P_Kpz))
				{
					PlayerInfo[i][pJailTime] = 0;
					if(PlayerInfo[i][pJailed] == 1)
					{
						SetPlayerInterior(i, 0);
						SetPPos(i,-426.3545,813.8314,12.0059);// Место выхода из тюрьмы
					}

					//------------------------------------------------------------------------------
					else if(PlayerInfo[i][pJailed] == 2)
					{
						SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000); //Reset world to player
						SetPlayerInterior(i, 0);
						SetPPos(i, -426.3545,813.8314,12.0059);
					}
					PlayerInfo[i][pJailed] = 0;
					SendClientMessage(i, COLOR_GREEN,"Вы отсидели свой тюремный срок и теперь свободны.");
					//	format(string, sizeof(string), "~g~Freedom~n~~w~Try to be a better citizen");
					//	GameTextForPlayer(i, string, 5000, 1);
					ClearCrime(i);
					//SetPlayerToTeamColor(i);
				}
			}
			//------------------------------------------------------------------------------
			if(GetPlayerMoney(i) != eGetPlayerMoney(i))
			{
				ResetPlayerMoney(i);
				GivePlayerMoney(i,eGetPlayerMoney(i));
			}
			//------------------------------------------------------------------------------
			if(TryChat[i] > 0) TryChat[i] --;
			if(PyxiTime[i] > 0) PyxiTime[i] --;
			if(ArmourTime[i] > 0) ArmourTime[i] -=1;
			if(engine_start[i] >= 1) engine_start[i]++;
			if(engine_start[i] >= 5)
			{
				new carid = GetPlayerVehicleID(i);
				if(IsPlayerInVehicle(i, carid))
				{
					if(Engine[i] == 0)
					{
						engine_start[i]=0;
						EngineStart(i, carid);
					}
				}
			}
			//------------------------------------------------------------------------------
			if(PlayerMayNarco[i] > 0)
			{
				PlayerMayNarco[i] --;
			}
			if(PlayerMayAlco[i] > 0)
			{
				PlayerMayAlco[i] --;
			}
			//------------------------------------------------------------------------------
			else if(IsABMX(newcar))
			{
				if(GetPlayerState(i) != 2)
				{
					RemovePlayerFromVehicle(i);
				}
			}
			//------------------------------------------------------------------------------
			else if(IsAMoped(newcar))
			{
				if(GetPlayerState(i) != 2)
				{
					RemovePlayerFromVehicle(i);
				}
			}
			//------------------------------------------------------------------------------
			if(PlayerLomkaTime[i] > 0)
			{
				GetPlayerName(i,sendername,sizeof(sendername));
				PlayerLomkaTime[i] --;
				if(PlayerLomkaTime[i] == 0)
				{
					TogglePlayerControllable(i,1);
					ClearAnimations(i);
					format(string, sizeof(string), "* %s пришёл в себя", sendername);
					ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
			if(PlayerInfo[i][pNarcoLomka] > 0)
			{
				PlayerInfo[i][pNarcoLomka] --;
				if(PlayerLomkaTime[i] == 0)
				{
					GetPlayerName(i,sendername,sizeof(sendername));
					format(string, sizeof(string), "* У %s началась ломка", sendername);
					ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SendClientMessage(i,COLOR_LIGHTBLUE,"У тебя началась ломка, тебе нужно принять дозу");
					SetPlayerWeather(i, -68);
					PlayerInfo[i][pNarcoLomka] = 400;
				}
			}
			//------------------------------------------------------------------------------
			if(PlayerDobuvaet[i] > 0)
			{
				PlayerDobuvaet[i] --;
				if(!IsPlayerInRangeOfPoint(i,5, -1858.9983,-1651.4242,26.5427))//Поставь здесь координаты те же что и для /работа
				{
					SendClientMessage(i,COLOR_GREY,"Ты не можешь работать здесь!");
					TogglePlayerControllable(i,1);
					PlayerDobuvaet[i] = 0;
					ClearAnimations(i);
				}
				else if(PlayerDobuvaet[i] == 0)
				{
					TogglePlayerControllable(i,1);
					ClearAnimations(i);
					new zoloto = random(9);
					if(zoloto > 5)
					{
						SendClientMessage(i,COLOR_GREY,"Тебе не удалось ничего добыть!");
					}
					else
					{
						SendClientMessage(i,COLOR_LIGHTBLUE,"Вы добыли 1 грамм золота!");
						PlayerInfo[i][pZoloto] +=1;
						PlayerInfo[i][pRabotalLopatoy] +=1;
					}
				}
			}
			//------------------------------------------------------------------------------
			else if(IsAPlane(newcar))
			{
				if(PlayerInfo[i][pFlyLic] < 1 && GetPlayerState(i) == 2)
				{
					if(TakingLesson[i] == 1) { }
					else { RemovePlayerFromVehicle(i); }
				}
			}
			//------------------------------------------------------------------------------
			if(UsedFind[i] >= 1)
			{
				UsedFind[i] += 1;
				if(UsedFind[i] >= 120)
				{
					UsedFind[i] = 0;
				}
			}
			if(TutTime[i] >= 1)
			{
				TutTime[i] += 1;
				if(TutTime[i] == 3)
				{
					//SendClientMessage(i, COLOR_YELLOW," Добро пожаловать на сервер New MegaLife RolePlay!");
					SetPlayerInterior(i,0);
					EmptyMessages(i, 50);
					SendClientMessage(i, COLOR_RED, "|____Первоначальный этап.____|");
					SendClientMessage(i, COLOR_WHITE, "Как только закончится обучение - получите паспорт в паспортном столе Областной Администрации.");
					SendClientMessage(i, COLOR_WHITE, "Без документов Вы не сможете найти нормальную работу.");
					SendClientMessage(i, COLOR_WHITE, "В /gps Вы можете найти все основные места Нижегородской области.");
				}
				if(TutTime[i] == 6)
				{
					SendClientMessage(i, COLOR_RED, "|_______________ Нарушения._______________|");
					SendClientMessage(i, COLOR_WHITE, "Нарушение правил сервера Trusty Roleplay строго запрещено!");
					SendClientMessage(i, COLOR_WHITE, "Ознакомиться с правилами Вы можете на форуме проекта.");
					SendClientMessage(i, COLOR_WHITE, "Обо всех нарушениях игрового процесса оповещайте администрацию через /mn!");
					SendClientMessage(i, COLOR_WHITE, "Помните, незнание правил не освобождает вас от ответственности!");
				}
				else if(TutTime[i] == 9)
				{
					SendClientMessage(i, COLOR_RED, "|____ RP обучениe. ____|");
					SendClientMessage(i, COLOR_WHITE, "RP в переводе - RolePlay, Ролевая Игра.");
					SendClientMessage(i, COLOR_WHITE, "Когда Вы начнёте играть, Вы должны вжиться в роль.");
					SendClientMessage(i, COLOR_WHITE, "Представьте, что Вы приехали в новый город, где Вас никто не знает, Вы должны сами решить, как себя построить.");
					SendClientMessage(i, COLOR_WHITE, "Построить себя можно по разному, стать фельдшером или же инспектором ППС, ДПС, а может, Вы хотите пробиться на пост мэра? Вам никто не мешает!");
					SendClientMessage(i, COLOR_WHITE, "Создайте сами свою роль!");
				}
				else if(TutTime[i] == 12)
				{
					SendClientMessage(i, COLOR_WHITE, "Вы не можете подойти к любому человеку, прочитать его ник и сказать:");
					SendClientMessage(i, COLOR_WHITE, "- Maksim Bodrov, привет, что тут надо делать? (и т.д)");
					SendClientMessage(i, COLOR_WHITE, "Это будет nonRP, так-как по РП Вы не знаете как его зовут, пока не познакомитесь.");
					SendClientMessage(i, COLOR_WHITE, "По РП будет так:");
					SendClientMessage(i, COLOR_WHITE, "- Здравствуйте, не подскажите, где находится Областная Администрация? (пример).");
					SendClientMessage(i, COLOR_WHITE, "Если всё-таки вам надо спросить то, что не относится к RP, пишите в ( /b )");
					SendClientMessage(i, COLOR_WHITE, "На сервере присутствует большое колличество чатов.");
				}
				else if(TutTime[i] == 15)
				{
					SendClientMessage(i, COLOR_RED, "Сейчас мы вам поясним главные чаты.");
					SendClientMessage(i, COLOR_GREEN, "-----------------------------------");
					SendClientMessage(i, COLOR_YELLOW, "Пример: /me потянулся к карману, достал фотографию, после, протянул ее товарищу.");
					SendClientMessage(i, COLOR_YELLOW, "/do - Это некое действие или описание со стороны.");
					SendClientMessage(i, COLOR_YELLOW, "Пример: /do У площади большое скопление людей, по видимости это какой-то праздник.");
					SendClientMessage(i, COLOR_YELLOW, "/try - это отыгрыш попытки действия. Удачной или нет - решит рандомно.");
					SendClientMessage(i, COLOR_YELLOW, "Пример: /try открутить болт на колесе.");
					SendClientMessage(i, COLOR_YELLOW, "/todo - это отыгрыш действия с описанием.");
					SendClientMessage(i, COLOR_YELLOW, "Пример: /todo Вот пожалуйста*передавая журнал.");
					SendClientMessage(i, COLOR_GREEN, "-----------------------------------");
				}
				else if(TutTime[i] == 18)
				{
					SendClientMessage(i, COLOR_WHITE, "Спасибо за внимание!");
					SendClientMessage(i, COLOR_WHITE, "Мы надеемся, Вы прочитали правила и будете их соблюдать.");
					SendClientMessage(i, COLOR_GREEN, "Форум нашего сервера: er-project.ru/forum/");
					SendClientMessage(i, COLOR_GREEN, "Жалобы и вопросы, Вы можете отправить через /mn » Связь с администрацией");
					SendClientMessage(i, COLOR_WHITE, "Введение:");
					SendClientMessage(i, COLOR_WHITE, "Вы можете вызвать такиста, набрав номер 063 (/call 063) ежели дождаться частного такиста и попросить его подвезти вас.");
					SendClientMessage(i, COLOR_WHITE, "Первым делом, вы должны попасть в паспортный стол Областной Администрации и получить паспорт.");
					SendClientMessage(i, COLOR_WHITE, "Затем - отправляйтесь в Автошколу РОСТО (ДОСААФ) и сдайте экзамен на водительские права.");
					SendClientMessage(i, COLOR_WHITE, "Относитесь ко всем адекватно, так-же соблюдайте правила сервера!");
					SendClientMessage(i, COLOR_GREEN, "От лица всей администрации проекта Trusty Roleplay желаем вам приятной игры!");
				}
				else if(TutTime[i] == 21)
				{
					//
					TutTime[i] = 0; PlayerInfo[i][pTut] = 1;
					gOoc[i] = 0; gNews[i] = 0; gFam[i] = 0; gPlayerLogged[i] = 1;
					TogglePlayerControllable(i, 1);
					SetCameraBehindPlayer(i);
					MedicBill[i] = 0;
					AfterTutorial[i] = 1;
					SetTimerEx("UnsetAfterTutorial", 2500, false, "i", i);
					SetTimerEx("UnsetFirstSpawn", 5000, false, "i", i);

					//
					PlayerInfo[i][pCash] = 15000;
					PlayerInfo[i][pLevel] = 1;
					PlayerInfo[i][pDm] = 0;
					PlayerInfo[i][pPasport] = 1;
					PlayerInfo[i][pSHealth] = 100.0;
					PlayerInfo[i][pHealth] = 100.0;
					PlayerInfo[i][pPos_x] = 2246.6;
					PlayerInfo[i][pPos_y] = -1161.9;
					PlayerInfo[i][pPos_z] = 1029.7;
					PlayerInfo[i][pInt] = 0;
					PlayerInfo[i][pLocal] = 255;
					PlayerInfo[i][pPnumber] = 100000 + random(899999);
					PlayerInfo[i][pAccount] = 5000;
					PlayerInfo[i][pReg] = 1;
					GivePlayerMoney(i, 15000);

					//
					RegisterPlayer(i);
					SetPlayerSpawn(i);
				}
			}
			//==============================================================================
			if(StartingPaintballRound == 1 && AnnouncedPaintballRound == 0)
			{
				AnnouncedPaintballRound = 1;
				if(PlayerPaintballing[i] != 0)
				{
					SendClientMessage(i, COLOR_YELLOW, " Пейнтобольный матч начнётся через 15 секунд (Ожидание игроков).");
				}
			}
			if(FindTime[i] > 0)
			{
				if(FindTime[i] == FindTimePoints[i]) { FindTime[i] = 0; FindTimePoints[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~–APKEP УCЏAмO‹‡Eм", 2500, 1); }
				else
				{
					format(string, sizeof(string), "%d", FindTimePoints[i] - FindTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					FindTime[i] += 1;
				}
			}
			if(PlayerToPoint(20, i,296.9200,-111.0720,1001.5156))
			if(PlayerInfo[i][pMember] != 3 && PlayerInfo[i][pLeader] != 3 || PlayerInfo[i][pMember] != 2 && PlayerInfo[i][pLeader] != 2 || PlayerInfo[i][pMember] != 1 && PlayerInfo[i][pLeader] != 1)
			{//Ammunation 6 (Unprotected)
				GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
				SetPlayerInterior(i, 0);
				SetPPos(i,-1801.5328,-2835.1184,14.2163);
				PlayerInfo[i][pJailTime] = 100;
				PlayerInfo[i][pJailed] = 1;
			}
		}
	}
}
public ShowHelper(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[255];
		format(string,sizeof(string),"Работы\nСервисы\nЛицензеры он-лайн\nЛидеры он-лайн\nЧлены моей Банды/Фракции он-лайн");
		ShowPlayerDialog(playerid,9,2,"Справочная тел. 09",string,"Дальше","Отмена");
	}
}
//==============================================================================
//==============================================================================
stock ShowStats(playerid,targetid,flag)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new cash =  eGetPlayerMoney(targetid);
		new atext[20];
		glob_str = "";
		new string_last[150];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "Мужчина"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "Женщина"; }
		else { atext = "Пидар"; }
		new otext[20];
		if(PlayerInfo[targetid][pOrigin] == 1) { otext = "Нижегородск"; }
		else if(PlayerInfo[targetid][pOrigin] == 2) { otext = "Арзамас"; }
		else { otext = "Бездомный"; }	
		new frak = 0;
		if(PlayerInfo[targetid][pLeader] > 0) frak = PlayerInfo[targetid][pLeader];
		else frak = PlayerInfo[targetid][pMember];
		if(frak == -1) frak = 0;
		new rank = PlayerInfo[targetid][pRank];
		if(frak && !rank) rank = 1;
		if(frak && rank > 16) rank = 16;		
		new jtext[20];
		switch(PlayerInfo[targetid][pJob])
		{
			case 1: { jtext = "Детектив"; }
			case 2: { jtext = "Юрист"; }
			case 3: { jtext = "Водитель такси"; }
			case 4: { jtext = "Неизвестно."; }
			case 5: { jtext = "Автоугонщик"; }
			case 6: { jtext = "Репортёр новостей"; }
			case 7: { jtext = "Механик"; }
			case 8: { jtext = "Телохранитель"; }
			case 9: { jtext = "Оружейный диллер"; }
			case 10: { jtext = "Продавец машин"; }
			case 12: { jtext = "Боксёр"; }
			case 13: { jtext = "Оружейный диллер"; }
			case 14: { jtext = "Водитель автобуса"; }
			case 15: { jtext = "Бумажный мальчик"; }
			case 16: { jtext = "Дальнобойщик"; }
			case 17: { jtext = "Машинист трамвая"; }
			case 19: { jtext = "Фермер"; }
			case 21: { jtext = "Уборщик улиц"; }
			case 22: { jtext = "Водитель мусоровоза"; }
			case 30: { jtext = "Развозчик пиццы"; }
			default: { jtext = "Безработный"; }
		}
		new drank[20];
		if(PlayerInfo[targetid][pDonateRank] == 1) { drank = "Есть"; }
		else if(PlayerInfo[targetid][pDonateRank] >= 2) { drank = "Есть"; }
		else { drank = "Нет"; }
		//------------------------------------------------------------------------------
		new lotto[20];
		if(PlayerInfo[targetid][pVoennik] == 1) { lotto = "Есть"; }
		else if(PlayerInfo[targetid][pVoennik] == 0) { lotto = "Нет"; }
		else { lotto = "Нет"; }
		//------------------------------------------------------------------------------
		new married[20];
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
		new crimes = PlayerInfo[targetid][pCrimes];
		new arrests = PlayerInfo[targetid][pArrested];
		new drugs = PlayerInfo[targetid][pDrugs];
		new mats = PlayerInfo[targetid][pMats];
		new level = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pExp];
		new kills = PlayerInfo[targetid][pKills];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new donate = PlayerInfo[targetid][pDm];
		new account = PlayerInfo[targetid][pAccount];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		new warns = PlayerInfo[targetid][pWarns];
		if(flag) format(string_last,MAX_STR,"{FF0000}ID Аккаунта:\t\t%d\n",PlayerInfo[targetid][pID]),strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}Никнейм:\t\t%s\n",name);
		strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}Уровень:\t\t%i\n",level);
		strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}EXP:\t\t\t%d / %d час(ов)\n",exp,expamount);
		strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}Деньги:\t\t%d рублей\n",cash);//atext
		strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}Донат-очки:\t\t%d\n",donate);//atext
		strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}VIP:\t\t\t%s\n",drank);//atext
		strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}Банк:\t\t\t%d рублей\n",account);//atext
		strcat(glob_str,string_last);
		
		new domik;
		if(PlayerInfo[targetid][pNewHouse]) domik = PlayerInfo[targetid][pNewHouse];
		else domik = PlayerInfo[targetid][pRentHouse];
		if(domik) format(string_last,MAX_STR,"{FFFFFF}Жильё:\t\t\tДа (id: %d)\n",domik);//atext
		else format(string_last,MAX_STR,"{FFFFFF}Жильё:\t\t\tНет\n");//atext
		strcat(glob_str,string_last);
		
		if(KGet(targetid)) format(string_last,MAX_STR,"{FFFFFF}Квартира:\t\tДа (id: %d)\n",GetPVarInt(targetid,"Kvart"));//atext
		else format(string_last,MAX_STR,"{FFFFFF}Квартира:\t\tНет\n");//atext
		strcat(glob_str,string_last);
		
		if(PlayerInfo[targetid][pCKey])
		{
			new id_car = GetVehicleIdxByKey(PlayerInfo[targetid][pCKey]);
			if(id_car == -1) format(string_last,MAX_STR,"{FFFFFF}Автомобиль:\t\tНет\n");//atext
			else	format(string_last,MAX_STR,"{FFFFFF}Автомобиль:\t\tДа (id: %d)\n",aData[id_car][aCarid]);//atext			
		}
		else format(string_last,MAX_STR,"{FFFFFF}Автомобиль:\t\tНет\n");//atext
		strcat(glob_str,string_last);
		
		format(string_last,MAX_STR,"{FFFFFF}Предупреждения:\t%i\n",warns);
		strcat(glob_str,string_last);
		if(!pnumber) format(string_last,MAX_STR,"{FFFFFF}Номер телефона:\tОтсутствует\n");
		else format(string_last,MAX_STR,"{FFFFFF}Номер телефона:\t%i\n",pnumber);
		strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}Преступления:\t\t%i\n",crimes);
		strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}Военный билет:\t%s\n",lotto);
		strcat(glob_str,string_last);
		
		if(frak) format(string_last,MAX_STR,"{FFFFFF}Фракция:\t\t%s\n",FrakInfo[frak-1][0][rang]);
		else format(string_last,MAX_STR,"{FFFFFF}Фракция:\t\tГражданский\n");
		strcat(glob_str,string_last);
		if(frak) format(string_last,MAX_STR,"{FFFFFF}Должность:\t\t%s\n",FrakInfo[frak-1][rank][rang]);
		else format(string_last,MAX_STR,"{FFFFFF}Должность:\t\tНет\n");
		strcat(glob_str,string_last);
		
		format(string_last,MAX_STR,"{FFFFFF}Работа:\t\t\t%s\n",jtext);
		strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}Наркотики:\t\t%d\n",drugs);
		strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}Материалы:\t\t%d\n",mats);
		strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}Убийств:\t\t%d\n",kills);
		strcat(glob_str,string_last);
		format(string_last,MAX_STR,"{FFFFFF}Арестован:\t\t%d раз(а)\n",arrests);
		strcat(glob_str,string_last);
		if(flag)
		{
			format(string_last,MAX_STR,"{FF0000}RegIP:\t\t%s\n",PlayerInfo[targetid][pRegIp]);
			strcat(glob_str,string_last);
			format(string_last,MAX_STR,"{FF0000}IP:\t\t%s\n",PlayerInfo[targetid][pNowIp]);
			strcat(glob_str,string_last);
		}
		ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{2E9AFE}Статистика персонажа",glob_str,"Закрыть","");
		glob_str = "";
	}
}
stock SetPlayerToTeamColor(playerid)
{
	new frak;
	if(PlayerInfo[playerid][pLeader] > 0) frak = PlayerInfo[playerid][pLeader];
	else frak = PlayerInfo[playerid][pMember];
	if(frak > 0)	SetPlayerColor(playerid,FrakInfo[frak-1][0][Rcolor]); 
	else SetPlayerColor(playerid,COLOR_WHITE);

}
//==============================================================================
public GameModeInitExitFunc()
{
	new string[128];
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
			GameTextForPlayer(i, string, 4000, 5);
			SetPlayerCameraPos(i,1460.0, -1324.0, 287.2);//    координата камеры, где она стоит
			SetPlayerCameraLookAt(i,1374.5, -1291.1, 239.0);// куда камера смотрит, ее координата
			//	OnPlayerUpdate(i);
			SavePlayer(i);
			SaveVehicle(i);
			gPlayerLogged[i] = 0;
		}
	}
	SetTimer("GameModeExitFunc", 8000, 0);
	return 1;
}
//==============================================================================
public GameModeExitFunc()
{
	DestroyMenu(regskinselects);
	KillTimer(synctimer);
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(accountstimer);
	KillTimer(checkgastimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(stoppedvehtimer);
	KillTimer(turftimer);
	KillTimer(FireTimer);
	GameModeExit();
}
publics: SyncTime()
{
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		ghour = tmphour;
		PayDay();
		if(realtime)
		{
			SetWorldTime(tmphour);
		}
	}
}
//==============================================================================
/*public LoadBoxer()
{
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("logs/boxer.ini", io_read);
	if(file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Titel[TitelWins] = strval(arrCoords[0]);
		strmid(Titel[TitelName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
		Titel[TitelLoses] = strval(arrCoords[2]);
		fclose(file);
	}
	return 1;
}*/
//==============================================================================
public GetInitials(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		new name12[2][128];
		split(name, name12, '_');
		strmid(firstname[playerid], name12[0], 0, strlen(name12[0]), 255);
		strmid(secondname[playerid], name12[1], 0, strlen(name12[1]), 255);
		return 1;
	}
	return 0;
}
//==============================================================================
public SaveBoxer()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%s,%d");
	new File: file2 = fopen("logs/boxer.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}
//==============================================================================
public LoadStuff()
{
	new arrCoords[15][64];
	new strFromFile2[256];
	new File: file = fopen("logs/stuff.ini", io_read);
	if(file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		TaxValue = strval(arrCoords[2]);
		Security = strval(arrCoords[3]);
		Treasury = strval(arrCoords[4]);
		CopSal = strval(arrCoords[5]);
		FbiSal = strval(arrCoords[6]);
		NGSal = strval(arrCoords[7]);
		MedSal = strval(arrCoords[8]);
		SwatSal = strval(arrCoords[9]);
		ReportSal = strval(arrCoords[10]);
		PolSal = strval(arrCoords[11]);
		LicSal = strval(arrCoords[12]);
		NonJobSal = strval(arrCoords[13]);
		biztax = strval(arrCoords[14]);
		fclose(file);
	}
	/*if(Security == 0 || Security == 1)
		{
		}
		else
		{
			GameModeExit();
		}
	}
	else
	{
		GameModeExit();
	}*/
	return 1;
}
//==============================================================================
public SaveStuff()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d", Jackpot,Tax,TaxValue,Security,Treasury,CopSal,FbiSal,NGSal,MedSal,SwatSal,ReportSal,PolSal,LicSal,NonJobSal,biztax);
	new File: file2 = fopen("logs/stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}
//==============================================================================
public LoadTurfs()
{
	new arrCoords[6][64];
	new strFromFile2[256];
	new File: file = fopen("logs/turfs.cfg", io_read);
	if(file)
	{
		new idx;
		while(idx < sizeof(TurfInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(TurfInfo[idx][zOwner], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(TurfInfo[idx][zColor], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			TurfInfo[idx][zMinX] = floatstr(arrCoords[2]);
			TurfInfo[idx][zMinY] = floatstr(arrCoords[3]);
			TurfInfo[idx][zMaxX] = floatstr(arrCoords[4]);
			TurfInfo[idx][zMaxY] = floatstr(arrCoords[5]);
			//printf("Turf:%d Name: %s Owner:%s MinX:%f MinY:%f MinZ:%f MaxX:%f MaxY:%f MaxZ:%f\n",
			//idx,TurfInfo[idx][zName],TurfInfo[idx][zOwner],TurfInfo[idx][zMinX],TurfInfo[idx][zMinY],TurfInfo[idx][zMinZ],TurfInfo[idx][zMaxX],TurfInfo[idx][zMaxY],TurfInfo[idx][zMaxZ]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}
//==============================================================================
public SaveTurfs()
{
	new idx;
	new File: file2;
	while(idx < sizeof(TurfInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%f|%f|%f|%f|%f|%f\n",
		TurfInfo[idx][zOwner],
		TurfInfo[idx][zColor],
		TurfInfo[idx][zMinX],
		TurfInfo[idx][zMinY],
		TurfInfo[idx][zMaxX],
		TurfInfo[idx][zMaxY]);
		if(idx == 0)
		{
			file2 = fopen("logs/turfs.cfg", io_write);
		}
		else
		{
			file2 = fopen("logs/turfs.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
//==============================================================================
public LoadCK()
{
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("logs/ck.cfg", io_read);
	if(file)
	{
		new idx;
		while(idx < sizeof(CKInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(CKInfo[idx][cSendername], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(CKInfo[idx][cGiveplayer], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			CKInfo[idx][cUsed] = strval(arrCoords[2]);
			printf("CK:%d Taken: %d Sendername:%s Giveplayer: %s",
			idx,CKInfo[idx][cUsed],CKInfo[idx][cSendername],CKInfo[idx][cGiveplayer]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}
//==============================================================================
public SaveCK()
{
	new idx;
	new File: file2;
	while(idx < sizeof(CKInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%d\n",
		CKInfo[idx][cSendername],
		CKInfo[idx][cGiveplayer],
		CKInfo[idx][cUsed]);
		if(idx == 0)
		{
			file2 = fopen("logs/ck.cfg", io_write);
		}
		else
		{
			file2 = fopen("logs/ck.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public SaveAccounts()
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			//	OnPlayerUpdate(i);
			SavePlayer(i);
			if(PlayerInfo[i][pJob] > 0)
			{
				if(PlayerInfo[i][pContractTime] < 25)
				{
					PlayerInfo[i][pContractTime] ++;
				}
			}
		}
	}
}
//==============================================================================
public IsPlayerInTurf(playerid, turfid)
{
	if(IsPlayerConnected(playerid))
	{
		if(turfid == -1)
		{
			return 0;
		}
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid,x,y,z);
		if(x >= TurfInfo[turfid][zMinX] && x < TurfInfo[turfid][zMaxX] && y >= TurfInfo[turfid][zMinY] && y < TurfInfo[turfid][zMaxY])
		{
			return 1;
		}
	}
	return 0;
}
//==============================================================================
public GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}
//==============================================================================
public Production()
{
	new string[256];
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerDrunk[i] > 0) { PlayerDrunk[i] = 0; PlayerDrunkTime[i] = 0; SetPlayerDrunkLevel(i,0); SendClientMessage(i, COLOR_LIGHTBLUE, "Вы протрезвели! Теперь вы можете садиться за руль!"); }
			if(PlayerInfo[i][pPayDay] < 6) { PlayerInfo[i][pPayDay] += 1; } //+ 5 min to PayDay anti-abuse
			for(new k = 0; k < MAX_PLAYERS; k++)
			{
				if(IsPlayerConnected(k))
				{
					if(CrimInRange(80.0, i,k))
					{
					}
					else
					{
						WantedPoints[i] -= 3;
						if(WantedPoints[i] < 0) { WantedPoints[i] = 0; }
						new points = WantedPoints[i];
						new wlevel;
						if(points > 0)
						{
							new yesno;
							if(points == 3) { if(WantedLevel[i] != 1) { WantedLevel[i] = 1; wlevel = 1; yesno = 1; } }
							else if(points >= 4 && points <= 5) { if(WantedLevel[i] != 2) { WantedLevel[i] = 2; wlevel = 2; yesno = 1; } }
							else if(points >= 6 && points <= 7) { if(WantedLevel[i] != 3) { WantedLevel[i] = 3; wlevel = 3; yesno = 1; } }
							else if(points >= 8 && points <= 9) { if(WantedLevel[i] != 4) { WantedLevel[i] = 4; wlevel = 4; yesno = 1; } }
							else if(points >= 10 && points <= 11) { if(WantedLevel[i] != 5) { WantedLevel[i] = 5; wlevel = 5; yesno = 1; } }
							else if(points >= 12 && points <= 13) { if(WantedLevel[i] != 6) { WantedLevel[i] = 6; wlevel = 6; yesno = 1; } }
							else if(points >= 14) { if(WantedLevel[i] != 10) { WantedLevel[i] = 10; wlevel = 10; yesno = 1; } }
							else if(points <= 0) { if(WantedLevel[i] != 0) { ClearCrime(i); WantedLevel[i] = 0; wlevel = 0; yesno = 1;} }
							if(yesno)
							{
								format(string, sizeof(string), "Ваш уровень розыска: %d", wlevel);
								SendClientMessage(i, COLOR_YELLOW, string);
							}
						}
					}
				}
			}
		}
	}
}
public RemoveRoadblock(playerid)
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == 6 || PlayerInfo[i][pLeader] == 6)
			{
				DisablePlayerCheckpoint(i);
			}
		}
	}
	DestroyObject(PlayerInfo[playerid][pRoadblock]);
	PlayerInfo[playerid][pRoadblock] = 0;
	return 1;
}
/////////////////////////////////////////////////////////////////////////////////
stock CreateRoadblock(Object,Float:x,Float:y,Float:z,Float:Angle)
{
	for(new i = 0; i < sizeof(Roadblocks); i++)
	{
		if(Roadblocks[i][sCreated] == 0)
		{
			Roadblocks[i][sCreated] = 1;
			Roadblocks[i][sX] = x;
			Roadblocks[i][sY] = y;
			Roadblocks[i][sZ] = z-0.7;
			Roadblocks[i][sObject] = CreateObject(Object, x, y, z-0.9, 0, 0, Angle);
			return 1;
		}
	}
	return 0;
}
//==============================================================================
stock DeleteAllRoadblocks(playerid)
{
	for(new i = 0; i < sizeof(Roadblocks); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 100, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
		{
			if(Roadblocks[i][sCreated] == 1)
			{
				Roadblocks[i][sCreated] = 0;
				Roadblocks[i][sX] = 0.0;
				Roadblocks[i][sY] = 0.0;
				Roadblocks[i][sZ] = 0.0;
				DestroyObject(Roadblocks[i][sObject]);
			}
		}
	}
	return 0;
}
//==============================================================================
stock DeleteClosestRoadblock(playerid)
{
	for(new i = 0; i < sizeof(Roadblocks); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
		{
			if(Roadblocks[i][sCreated] == 1)
			{
				Roadblocks[i][sCreated] = 0;
				Roadblocks[i][sX] = 0.0;
				Roadblocks[i][sY] = 0.0;
				Roadblocks[i][sZ] = 0.0;
				DestroyObject(Roadblocks[i][sObject]);
				return 1;
			}
		}
	}
	return 0;
}
stock GetPlayerIDD(str[])
{
	foreach(new i:Player)
	{
		if(strcmp(NamePlayer[i], str, true, strlen(str)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}
stock GetKvart()
{
	for(new k = 1; k <= ALLKVARTIRI; k++)
	{
		if(!strcmp(FlatInfo[k][vladelec],"None",true)) continue;
		if(FlatInfo[k][plata] < 200)
		{
			if(GetPlayerIDD(FlatInfo[k][vladelec]) != INVALID_PLAYER_ID) SetPVarInt(GetPlayerIDD(FlatInfo[k][vladelec]), "GetKvart", 1);
			FlatInfo[k][lock] = 0;
			FlatInfo[k][plata] = 0;
			strmid(FlatInfo[k][vladelec], "None", 0, strlen("None"), 10);
			updatekvar(k);
		}
		else FlatInfo[k][plata]-= 200, updatekvar(k);
	}
	return true;
}
publics: PayDay()
{
	new string[128];
	GetKvart();
	new hours,minutes;
	gettime(hours,minutes,_);
	static const str0[] ="Текущее время на сервере: %02d:%02d";
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || PlayerInfo[i][pLevel] < 0) continue;
		if(MoneyMessage[i]==1)
		{
			SendClientMessage(i, COLOR_LIGHTRED, "Вы были не в состоянии оплатить свой долг и отправляетесь в тюрьму.");
			SetPlayerInterior(i, 0);
			SetPPos(i, -1801.5328,-2835.1184,14.2163);
			PlayerInfo[i][pJailed] = 1;
			ResetWeapons(i);
			WantedPoints[i] = 0;
			PlayerInfo[i][pJailTime] = 60;
			format(string, sizeof(string), "Вас посадили в тюрьму на %d секунд. Выплата невозможна.", PlayerInfo[i][pJailTime]);
			SendClientMessage(i, COLOR_LIGHTBLUE, string);
		}
		PlayerInfo[i][pRabotalLopatoy] = 0;
		new playername2[MAX_PLAYER_NAME]; GetPlayerName(i, playername2, sizeof(playername2));
		if(PlayerInfo[i][pOtkRabota1] > 0) PlayerInfo[i][pOtkRabota1] -- ;
		if(PlayerInfo[i][pOtkRabota2] > 0) PlayerInfo[i][pOtkRabota2] -- ;
		if(PlayerInfo[i][pOtkRabota3] > 0) PlayerInfo[i][pOtkRabota3] -- ;
		if(PlayerInfo[i][pOtkRabota7] > 0) PlayerInfo[i][pOtkRabota7] -- ;
		if(PlayerInfo[i][pOtkRabota8] > 0) PlayerInfo[i][pOtkRabota8] -- ;
		if(PlayerInfo[i][pOtkRabota12] > 0) PlayerInfo[i][pOtkRabota12] -- ;
		if(PlayerInfo[i][pOtkRabota14] > 0) PlayerInfo[i][pOtkRabota14] -- ;
		if(PlayerInfo[i][pOtkRabota15] > 0) PlayerInfo[i][pOtkRabota15] -- ;
		if(PlayerInfo[i][pOtkRabota16] > 0) PlayerInfo[i][pOtkRabota16] -- ;
		if(PlayerInfo[i][pOtkRabota22] > 0) PlayerInfo[i][pOtkRabota22] -- ;
		if(PlayerInfo[i][pOtkRabota24] > 0) PlayerInfo[i][pOtkRabota24] -- ;
		if(PlayerInfo[i][pPayDay] >= 5)
		{
			new bonus1 = PlayerInfo[i][pPayCheck] / 30;
			PlayerInfo[i][pPayCheck] += bonus1;
			if(PlayerInfo[i][pDonateRank] > 0)
			{
				new bonus = PlayerInfo[i][pPayCheck] / 10;
				PlayerInfo[i][pPayCheck] += bonus;
			}
		}
		ConsumingMoney[i] = 1;
		Treasury += Tax;
		format(string, sizeof(string),str0,hours,minutes);
		SendClientMessage(i, COLOR_WHITE,string);
		if(pdx2 == 1)
		{
			PlayerInfo[i][pExp]+=2;
			PlayerPlayMusic(i);
			SendClientMessage(i, COLOR_WHITE, "Вы получили два респекта за наигранный час к следующему уровню!");
			PlayerInfo[i][pConnectTime] += 2;
		}
		else{
			PlayerInfo[i][pExp]++;
			PlayerPlayMusic(i);
			SendClientMessage(i, COLOR_WHITE, "Вы получили один респект за наигранный час к следующему уровню!");
			PlayerInfo[i][pConnectTime] += 1;
		}
		PlayerInfo[i][pPayDay] = 0;
		PlayerInfo[i][pPayCheck] = 0;
		
		if(PlayerInfo[i][pExp] >= levelexp*(PlayerInfo[i][pLevel]+1))
		{
			PlayerInfo[i][pExp] = 0;
			PlayerInfo[i][pLevel]++;
			PlayerInfo[i][gPupgrade] +=2;
			format(string, sizeof(string), "Поздравляем! Вы автоматически перешли на %d уровень!", PlayerInfo[i][pLevel]);
			if(strlen(PlayerInfo[i][pRef]) &&  PlayerInfo[i][pLevel] == 3) CheckRef(i,50000);
			SendClientMessage(i, COLOR_LIGHTBLUE , string);
		}
		if(FarmerVar[i] == 0) FarmerPickup[i][0] = 0;
		if(PlayerInfo[i][pNeSdal] == 1) PlayerInfo[i][pNeSdal] = 0;
		if(PlayerInfo[i][pDonateRank] > 0)
		{
			PlayerInfo[i][pPayDayHad] += 1;
			if(PlayerInfo[i][pPayDayHad] >= 5) PlayerInfo[i][pExp] += 1, PlayerInfo[i][pPayDayHad] = 0;
		}
	}
	for(new i = 0; i < sizeof(AC); i++) AC[i][acTill2] = 0,SaveAcc(i);
	for(new i = 0; i < sizeof(House); i++)//оплата домов проверка аренды
	{
		if(!House[i][houseidd]) continue;
		if(!House[i][sale]) continue;
		format(string,sizeof(string),"SELECT `pNickname`,`rent_1` FROM `accounts` WHERE `pRentHouse` = '%d'",House[i][houseidd]);
		new Cache:p = mysql_query(MySQLGo,string);	
		if(cache_num_rows())
		{
			new name[MAX_PLAYER_NAME],tick;
			for(new k = 0; k < cache_num_rows(); k++)
			{
				cache_get_field_content(k, "pNickname", name, MySQLGo);
				tick = cache_get_field_content_int(k, "rent_1", MySQLGo);
				if(tick <= gettime())
				{
					format(string,sizeof(string),"UPDATE `accounts` SET `pRentHouse` = '0',`rent_0` = '0',`rent_1` = '0',`pStatus` = '3' WHERE `pNickname` = '%s'",name);
					mysql_tquery(MySQLGo,string);	
				}
			}
		}
		cache_delete(p);
		if(House[i][HBank] > 300)
		{
			new j = GetPlayerID(House[i][owner]);
			if(j != -1) SCM(j,COLOR_LIGHTGREEN,"Плата за электричество дома 300 рублей.");
			House[i][HBank] -= 300;
		}
		else 
		{
			foreach(new c:Player)
			{
				if(PlayerInfo[c][pRentHouse] == House[i][houseidd])
				{
					SCM(c,-1,"Дом который вы арендовали был продан за неуплату государству.");
					PlayerInfo[c][pRentHouse] = 0;
					PlayerInfo[c][pRent][0] = 0;
					PlayerInfo[c][pRent][1] = 0;
					UpdatePlayerData(c,"pRentHouse",PlayerInfo[c][pRentHouse]);
					UpdatePlayerData(c,"rent_0",PlayerInfo[c][pRent][0]);
					UpdatePlayerData(c,"rent_1",PlayerInfo[c][pRent][1]);
				}
			}
			new j = GetPlayerID(House[i][owner]);
			if(j != -1)
			{
				SCM(j,-1,"Ваш дом был продан за неуплату государству. Половина стоимости перечислена на ваш банковский счет.");
				PlayerInfo[j][pAccount] += House[i][stoim]/2;
				PlayerInfo[j][pNewHouse] = 0;
			}
			else 
			{
				format(string,sizeof(string),"SELECT `pNickname`,`rent_1`,`pCash` FROM `accounts` WHERE `pRentHouse` = '%d' OR `pNewHouse` = '%d'",House[i][houseidd],House[i][houseidd]);
				new Cache:p1 = mysql_query(MySQLGo,string);	
				if(cache_num_rows())
				{
					new name[MAX_PLAYER_NAME],tick[2];
					for(new k = 0; k < cache_num_rows(); k++)
					{
						cache_get_field_content(k, "pNickname", name, MySQLGo);
						tick[0] = cache_get_field_content_int(k, "rent_1", MySQLGo);
						tick[1] = cache_get_field_content_int(k, "pCash", MySQLGo);
						if(!tick[0])
						{
							mysql_format(MySQLGo,string,sizeof(string),"UPDATE `accounts` SET `pNewHouse` = '0',`pStatus` = '1',`pCash` = '%d' WHERE `pNickname` = '%s'",tick[1] + (House[i][stoim]/2),name);
							mysql_tquery(MySQLGo,string);
						}
						else
						{
							mysql_format(MySQLGo,string,sizeof(string),"UPDATE `accounts` SET `pRentHouse` = '0',`rent_0` = '0',`rent_1` = '0',`pStatus` = '2' WHERE `pNickname` = '%s'",name);
							mysql_tquery(MySQLGo,string);
						}
					}
				}
				cache_delete(p1);
			}
			House[i][sale] = 0;
			strmid(House[i][owner],"Продаётся",0,128,128);
			DestroyPickup(House[i][hPick]);
			DestroyDynamicMapIcon(House[i][hMIcon1]);
			House[i][hMIcon1] = CreateDynamicMapIcon(House[i][HOx],House[i][HOy],House[i][HOz],31,0);
			House[i][hPick] = CreatePickup(1273, 23, House[i][HOx],House[i][HOy],House[i][HOz],-1);
			SaveHouse(i);		
		}
	}
	SaveAccounts();
	return 1;
}
public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
		if(strsrc[i]==delimiter || i==strlen(strsrc)){
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}
stock RegisterPlayer(playerid)
{
	new querys[800];
	new playerRegIp[16];
	GetPlayerIp(playerid, playerRegIp, 16);
	PlayerInfo[playerid][pNowIp] = playerRegIp;
	//PlayerInfo[playerid][pPnumber] = 100000 + random(899999);
	if((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
	{
		PlayerInfo[playerid][pPos_x] = 1684.9;
		PlayerInfo[playerid][pPos_y] = -2244.5;
		PlayerInfo[playerid][pPos_z] = 13.5;
	}
	if(Spectate[playerid] != 255)
	{
		PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
		PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
		PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
		PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
		PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
	}	
	new y, m, d;
	getdate(y,m,d);	
	mysql_format(MySQLGo, querys, 700, "INSERT INTO `accounts` (`pNickname`,`pKey`,`pEmail`,`pReg`,`pTut`,`pCash`,`pLevel`,`pDM`,`pPasport`,`pModel`,`pChar`,`pPnumber`,`pAccount`,`pPos_x`,`pPos_y`, `pPos_z`,`pHealth`,`pSHealth`,`pSex`,`pOrigin`,`pRegIp`,`pRef`,`pRegData`) \
	VALUES ('%s','%s','%s','1','1','25000','1','0','1','%i','24','%d','5000','2246.6','-1161.9','1029.7','100.0','100.0','%i','%i','%s','%e','%02d.%02d.%04d')",
	NamePlayer[playerid], UserKey[playerid], UserMail[playerid], PlayerInfo[playerid][pModel],
	PlayerInfo[playerid][pPnumber], PlayerInfo[playerid][pSex], PlayerInfo[playerid][pOrigin],playerRegIp,PlayerInfo[playerid][pRef],d,m,y);
	mysql_tquery(MySQLGo, querys);
	if(mysql_errno()) return SendClientMessage(playerid, 0xFF0000AA, "Произошла ошибка при отправке запроса создания аккаунта. Обратитесь к Администрации"), KickEx(playerid);
	else 
	{	
		LoadPlayerData(playerid);
		PlayerInfo[giveplayerid][pPasport] = 1; 
		SendClientMessage(playerid, 0xFFFFFFAA, "{FFFFFF}Поздравляем Вас с успешной регистрацией. Желаем Вам приятной игры на {2E9AFE}Trusty RolePlay{FFFFFF}.");
		glob_str = "";
		mysql_format(MySQLGo,glob_str,sizeof(glob_str),"INSERT INTO `invent`(`name`) VALUES ('%e')",NamePlayer[@p]);
		mysql_tquery(MySQLGo,glob_str);
		glob_str = "";
	}
	return 1;
}
stock LoadPlayerData(playerid)
{
	if(IsPlayerNPC(playerid)) return 1;
	new str[49+MAX_PLAYER_NAME];
	mysql_format(MySQLGo,str,sizeof(str),"SELECT * FROM `accounts` WHERE `pNickname` = '%e'",NamePlayer[playerid]);
	new Cache:p = mysql_query(MySQLGo,str);
	if(!cache_num_rows()) return SCM(@p,-1,"произошла ошибка при загрузке данных");
	// content
	gPlayerLogged[playerid] = 1;
	cache_get_field_content(0, "pNickname", PlayerInfo[playerid][pNickname], MySQLGo, 128);
	cache_get_field_content(0, "pRegData", PlayerInfo[playerid][pRegData], MySQLGo, 64);
	cache_get_field_content(0, "pKey", PlayerInfo[playerid][pKey], MySQLGo, 128);
	cache_get_field_content(0, "pEmail", PlayerInfo[playerid][pEmail], MySQLGo, 128);
	cache_get_field_content(0, "pCarLic2", PlayerInfo[playerid][pCarLic2], MySQLGo, strlen(PlayerInfo[playerid][pCarLic2]));
	cache_get_field_content(0, "pCarLic21", PlayerInfo[playerid][pCarLic21], MySQLGo, strlen(PlayerInfo[playerid][pCarLic21]));
	cache_get_field_content(0, "pCarLic3", PlayerInfo[playerid][pCarLic3], MySQLGo, strlen(PlayerInfo[playerid][pCarLic3]));
	cache_get_field_content(0, "pUdost", PlayerInfo[playerid][pUdost1], MySQLGo, strlen(PlayerInfo[playerid][pUdost1]));
	cache_get_field_content(0, "pUdost", PlayerInfo[playerid][pUdost2], MySQLGo, strlen(PlayerInfo[playerid][pUdost2]));
	cache_get_field_content(0, "pCarLic4", PlayerInfo[playerid][pCarLic4], MySQLGo, strlen(PlayerInfo[playerid][pCarLic4]));
	cache_get_field_content(0, "pMK2", PlayerInfo[playerid][pMK2], MySQLGo, strlen(PlayerInfo[playerid][pMK2]));
	cache_get_field_content(0, "pMK3", PlayerInfo[playerid][pMK3], MySQLGo, strlen(PlayerInfo[playerid][pMK3]));
	cache_get_field_content(0, "pMK4", PlayerInfo[playerid][pMK4], MySQLGo, strlen(PlayerInfo[playerid][pMK4]));
	cache_get_field_content(0, "pMarriedTo", PlayerInfo[playerid][pMarriedTo], MySQLGo, strlen(PlayerInfo[playerid][pMarriedTo]));
	cache_get_field_content(0, "pRegIp", PlayerInfo[playerid][pRegIp], MySQLGo, 16);
	cache_get_field_content(0, "pRef", PlayerInfo[playerid][pRef], MySQLGo, strlen(PlayerInfo[playerid][pRef]));

	// int 
	PlayerInfo[playerid][pID] = cache_get_field_content_int(0, "id", MySQLGo);
	PlayerInfo[playerid][pReg] = cache_get_field_content_int(0, "pReg", MySQLGo);
	PlayerInfo[playerid][pBizAcc] = cache_get_field_content_int(0, "pBizAcc", MySQLGo);
	PlayerInfo[playerid][pTut] = cache_get_field_content_int(0, "pTut", MySQLGo);
	PlayerInfo[playerid][pCash] = cache_get_field_content_int(0, "pCash", MySQLGo);
	PlayerInfo[playerid][pLevel] = cache_get_field_content_int(0, "pLevel", MySQLGo);
	PlayerInfo[playerid][pDm] = cache_get_field_content_int(0, "pDm", MySQLGo);
	PlayerInfo[playerid][pPasport] = cache_get_field_content_int(0, "pPasport", MySQLGo);
	PlayerInfo[playerid][pChar] = cache_get_field_content_int(0, "pChar", MySQLGo);
	PlayerInfo[playerid][pModel] = cache_get_field_content_int(0, "pModel", MySQLGo);
	PlayerInfo[playerid][pPnumber] = cache_get_field_content_int(0, "pPnumber", MySQLGo);
	PlayerInfo[playerid][pAccount] = cache_get_field_content_int(0, "pAccount", MySQLGo);
	PlayerInfo[playerid][pAdmin] = cache_get_field_content_int(0, "pAdmin", MySQLGo);
	PlayerInfo[playerid][pLarek] = cache_get_field_content_int(0, "pLarek", MySQLGo);
	PlayerInfo[playerid][pCasino] = cache_get_field_content_int(0, "pCasino", MySQLGo);
	PlayerInfo[playerid][pAtm] = cache_get_field_content_int(0, "pAtm", MySQLGo);
	PlayerInfo[playerid][pVoennik] = cache_get_field_content_int(0, "pVoennik", MySQLGo);
	PlayerInfo[playerid][pMK] = cache_get_field_content_int(0, "pMed", MySQLGo);
	PlayerInfo[playerid][pDm] = cache_get_field_content_int(0, "pDm", MySQLGo);
	PlayerInfo[playerid][pWantedPoints] = cache_get_field_content_int(0, "pWantedPoints", MySQLGo);
	PlayerInfo[playerid][pHelper] = cache_get_field_content_int(0, "pHelper", MySQLGo);
	PlayerInfo[playerid][pUvp] = cache_get_field_content_int(0, "pUvp", MySQLGo);
	PlayerInfo[playerid][pForce] = cache_get_field_content_int(0, "pForce", MySQLGo);
	PlayerInfo[playerid][pDonateRank] = cache_get_field_content_int(0, "pDonateRank", MySQLGo);
	PlayerInfo[playerid][gPupgrade] = cache_get_field_content_int(0, "gPupgrade", MySQLGo);
	PlayerInfo[playerid][pConnectTime] = cache_get_field_content_int(0, "pConnectTime", MySQLGo);
	PlayerInfo[playerid][pSex] = cache_get_field_content_int(0, "pSex", MySQLGo);
	PlayerInfo[playerid][pOrigin] = cache_get_field_content_int(0, "pOrigin", MySQLGo);
	PlayerInfo[playerid][pNotLic] = cache_get_field_content_int(0, "pNotLic", MySQLGo);
	PlayerInfo[playerid][pLangEng] = cache_get_field_content_int(0, "pLangEng", MySQLGo);
	PlayerInfo[playerid][pLangJap] = cache_get_field_content_int(0, "pLangJap", MySQLGo);
	PlayerInfo[playerid][pLangIta] = cache_get_field_content_int(0, "pLangIta", MySQLGo);
	PlayerInfo[playerid][pLangRus] = cache_get_field_content_int(0, "pLangRus", MySQLGo);
	PlayerInfo[playerid][pLangFra] = cache_get_field_content_int(0, "pLangFra", MySQLGo);
	PlayerInfo[playerid][pNarcoZavisimost] = cache_get_field_content_int(0, "pNarcoZavisimost", MySQLGo);
	PlayerInfo[playerid][pAlcoZavisimost] = cache_get_field_content_int(0, "pAlcoZavisimost", MySQLGo);
	PlayerInfo[playerid][pNarcoLomka] = cache_get_field_content_int(0, "pNarcoLomka", MySQLGo);
	PlayerInfo[playerid][pAlcoLomka] = cache_get_field_content_int(0, "pAlcoLomka", MySQLGo);
	PlayerInfo[playerid][pCarLic] = cache_get_field_content_int(0, "pCarLic", MySQLGo);
	PlayerInfo[playerid][pUdost] = cache_get_field_content_int(0, "pUdost", MySQLGo);
	PlayerInfo[playerid][pCarLic5] = cache_get_field_content_int(0, "pCarLic5", MySQLGo);
	PlayerInfo[playerid][pCarLic1] = cache_get_field_content_int(0, "pCarLic1", MySQLGo);
	PlayerInfo[playerid][pMuted] = cache_get_field_content_int(0, "pMuted", MySQLGo);
	PlayerInfo[playerid][pExp] = cache_get_field_content_int(0, "pExp", MySQLGo);
	PlayerInfo[playerid][pOtkRabota1] = cache_get_field_content_int(0, "pOtkRabota1", MySQLGo);
	PlayerInfo[playerid][pOtkRabota2] = cache_get_field_content_int(0, "pOtkRabota2", MySQLGo);
	PlayerInfo[playerid][pOtkRabota3] = cache_get_field_content_int(0, "pOtkRabota3", MySQLGo);
	PlayerInfo[playerid][pOtkRabota7] = cache_get_field_content_int(0, "pOtkRabota7", MySQLGo);
	PlayerInfo[playerid][pOtkRabota8] = cache_get_field_content_int(0, "pOtkRabota8", MySQLGo);
	PlayerInfo[playerid][pOtkRabota12] = cache_get_field_content_int(0, "pOtkRabota12", MySQLGo);
	PlayerInfo[playerid][pOtkRabota14] = cache_get_field_content_int(0, "pOtkRabota14", MySQLGo);
	PlayerInfo[playerid][pOtkRabota15] = cache_get_field_content_int(0, "pOtkRabota15", MySQLGo);
	PlayerInfo[playerid][pOtkRabota16] = cache_get_field_content_int(0, "pOtkRabota16", MySQLGo);
	PlayerInfo[playerid][pOtkRabota22] = cache_get_field_content_int(0, "pOtkRabota22", MySQLGo);
	PlayerInfo[playerid][pOtkRabota24] = cache_get_field_content_int(0, "pOtkRabota24", MySQLGo);
	PlayerInfo[playerid][pCrimes] = cache_get_field_content_int(0, "pCrimes", MySQLGo);
	PlayerInfo[playerid][pKills] = cache_get_field_content_int(0, "pKills", MySQLGo);
	PlayerInfo[playerid][pKatA] = cache_get_field_content_int(0, "pKatA", MySQLGo);
	PlayerInfo[playerid][pKatB] = cache_get_field_content_int(0, "pKatB", MySQLGo);
	PlayerInfo[playerid][pKatC] = cache_get_field_content_int(0, "pKatC", MySQLGo);
	PlayerInfo[playerid][pKatD] = cache_get_field_content_int(0, "pKatD", MySQLGo);
	PlayerInfo[playerid][pKategA] = cache_get_field_content_int(0, "pKategA", MySQLGo);
	PlayerInfo[playerid][pKategB] = cache_get_field_content_int(0, "pKategB", MySQLGo);
	PlayerInfo[playerid][pKategC] = cache_get_field_content_int(0, "pKategC", MySQLGo);
	PlayerInfo[playerid][pKategD] = cache_get_field_content_int(0, "pKategD", MySQLGo);
	PlayerInfo[playerid][pDeaths] = cache_get_field_content_int(0, "pDeaths", MySQLGo);
	PlayerInfo[playerid][pArrested] = cache_get_field_content_int(0, "pArrested", MySQLGo);
	PlayerInfo[playerid][pWantedDeaths] = cache_get_field_content_int(0, "pWantedDeaths", MySQLGo);
	PlayerInfo[playerid][pPhoneBook] = cache_get_field_content_int(0, "pPhoneBook", MySQLGo);
	PlayerInfo[playerid][pLottoNr] = cache_get_field_content_int(0, "pLottoNr", MySQLGo);
	PlayerInfo[playerid][pJob] = cache_get_field_content_int(0, "pJob", MySQLGo);
	PlayerInfo[playerid][pPayCheck] = cache_get_field_content_int(0, "pPayCheck", MySQLGo);
	PlayerInfo[playerid][pHeadValue] = cache_get_field_content_int(0, "pHeadValue", MySQLGo);
	PlayerInfo[playerid][pJailed] = cache_get_field_content_int(0, "pJailed", MySQLGo);
	PlayerInfo[playerid][pJailTime] = cache_get_field_content_int(0, "pJailTime", MySQLGo);
	PlayerInfo[playerid][pMats] = cache_get_field_content_int(0, "pMats", MySQLGo);
	PlayerInfo[playerid][pDrugs] = cache_get_field_content_int(0, "pDrugs", MySQLGo);
	PlayerInfo[playerid][pLeader] = cache_get_field_content_int(0, "pLeader", MySQLGo);
	PlayerInfo[playerid][pMember] = cache_get_field_content_int(0, "pMember", MySQLGo);
	PlayerInfo[playerid][pRank] = cache_get_field_content_int(0, "pRank", MySQLGo);
	PlayerInfo[playerid][pDolj] = cache_get_field_content_int(0, "pDolj", MySQLGo);
	PlayerInfo[playerid][pChar] = cache_get_field_content_int(0, "pChar", MySQLGo);
	PlayerInfo[playerid][pContractTime] = cache_get_field_content_int(0, "pContractTime", MySQLGo);
	PlayerInfo[playerid][pDetSkill] = cache_get_field_content_int(0, "pDetSkill", MySQLGo);
	PlayerInfo[playerid][pPbiskey] = cache_get_field_content_int(0, "pPbiskey", MySQLGo);
	PlayerInfo[playerid][pNewsSkill] = cache_get_field_content_int(0, "pNewsSkill", MySQLGo);
	PlayerInfo[playerid][pDrugsSkill] = cache_get_field_content_int(0, "pDrugsSkill", MySQLGo);
	PlayerInfo[playerid][pPnumber] = cache_get_field_content_int(0, "pPnumber", MySQLGo);
	PlayerInfo[playerid][pModel] = cache_get_field_content_int(0, "pModel", MySQLGo);
	PlayerInfo[playerid][pFlyLic] = cache_get_field_content_int(0, "pFlyLic", MySQLGo);
	PlayerInfo[playerid][pGunLic] = cache_get_field_content_int(0, "pGunLic", MySQLGo);
	PlayerInfo[playerid][pCarTime] = cache_get_field_content_int(0, "pCarTime", MySQLGo);
	PlayerInfo[playerid][pPayDay] = cache_get_field_content_int(0, "pPayDay", MySQLGo);
	PlayerInfo[playerid][pPayDayHad] = cache_get_field_content_int(0, "pPayDayHad", MySQLGo);
	PlayerInfo[playerid][pCDPlayer] = cache_get_field_content_int(0, "pCDPlayer", MySQLGo);
	PlayerInfo[playerid][pWins] = cache_get_field_content_int(0, "pWins", MySQLGo);
	PlayerInfo[playerid][pLoses] = cache_get_field_content_int(0, "pLoses", MySQLGo);
	PlayerInfo[playerid][pAlcoholPerk] = cache_get_field_content_int(0, "pAlcoholPerk", MySQLGo);
	PlayerInfo[playerid][pDrugPerk] = cache_get_field_content_int(0, "pDrugPerk", MySQLGo);
	PlayerInfo[playerid][pMiserPerk] = cache_get_field_content_int(0, "pMiserPerk", MySQLGo);
	PlayerInfo[playerid][pPainPerk] = cache_get_field_content_int(0, "pPainPerk", MySQLGo);
	PlayerInfo[playerid][pTraderPerk] = cache_get_field_content_int(0, "pTraderPerk", MySQLGo);
	PlayerInfo[playerid][pMissionNr] = cache_get_field_content_int(0, "pMissionNr", MySQLGo);
	PlayerInfo[playerid][pWarns] = cache_get_field_content_int(0, "pWarns", MySQLGo);
	PlayerInfo[playerid][pAdjustable] = cache_get_field_content_int(0, "pAdjustable", MySQLGo);
	PlayerInfo[playerid][pFuel] = cache_get_field_content_int(0, "pFuel", MySQLGo);
	PlayerInfo[playerid][pMarried] = cache_get_field_content_int(0, "pMarried", MySQLGo);
	PlayerInfo[playerid][pTA] = cache_get_field_content_int(0, "pTA", MySQLGo);
	PlayerInfo[playerid][pRPD] = cache_get_field_content_int(0, "pRPD", MySQLGo);
	PlayerInfo[playerid][pCard] = cache_get_field_content_int(0, "pCard", MySQLGo);
	PlayerInfo[playerid][pClock] = cache_get_field_content_int(0, "pClock", MySQLGo);
	PlayerInfo[playerid][pGunSkill] = cache_get_field_content_int(0, "pGunSkill", MySQLGo);
	PlayerInfo[playerid][pMutedTime] = cache_get_field_content_int(0, "pMutedTime", MySQLGo);
	PlayerInfo[playerid][pRabotalLopatoy] = cache_get_field_content_int(0, "pRabotalLopatoy", MySQLGo);
	PlayerInfo[playerid][pZoloto] = cache_get_field_content_int(0, "pZoloto", MySQLGo);
	PlayerInfo[playerid][pRadio] = cache_get_field_content_int(0, "pRadio", MySQLGo);
	PlayerInfo[playerid][pRope] = cache_get_field_content_int(0, "pRope", MySQLGo);
	PlayerInfo[playerid][pNeSdal] = cache_get_field_content_int(0, "pNeSdal", MySQLGo);
	PlayerInfo[playerid][pFWarns] = cache_get_field_content_int(0, "pFWarns", MySQLGo);
	PlayerInfo[playerid][pRoliki] = cache_get_field_content_int(0, "pRoliki", MySQLGo);
	PlayerInfo[playerid][pSigs] = cache_get_field_content_int(0, "pSigs", MySQLGo);
	PlayerInfo[playerid][pCKey] = cache_get_field_content_int(0, "pCKey", MySQLGo);
	PlayerInfo[playerid][pSpawnP] = cache_get_field_content_int(0, "pSpawnP", MySQLGo);
	PlayerInfo[playerid][pNewHouse] = cache_get_field_content_int(0, "pNewHouse", MySQLGo);
	PlayerInfo[playerid][pRentHouse] = cache_get_field_content_int(0, "pRentHouse", MySQLGo);
	PlayerInfo[playerid][pSatiety] = cache_get_field_content_int(0, "pSatiety", MySQLGo);
	HospitalTime[playerid] = cache_get_field_content_int(0, "pHospitalTime", MySQLGo);

	// Оружие и патроны
	cache_get_field_content(0, "pGunAmmo", PlayerInfo[playerid][pAmmos], MySQLGo, 256);
	cache_get_field_content(0, "pGunID", PlayerInfo[playerid][pWeapons], MySQLGo, 256);

	sscanf(PlayerInfo[playerid][pWeapons], "p<,>a<i>[13]", PlayerInfo[playerid][pWeapon]);
	sscanf(PlayerInfo[playerid][pAmmos], "p<,>a<i>[13]", PlayerInfo[playerid][pAmmo]);

	// float
	PlayerInfo[playerid][pSHealth] = cache_get_field_content_float(0, "pSHealth", MySQLGo);
	PlayerInfo[playerid][pHealth] = cache_get_field_content_float(0, "pHealth", MySQLGo);
	PlayerInfo[playerid][pPos_x] = cache_get_field_content_float(0, "pPos_x", MySQLGo);
	PlayerInfo[playerid][pPos_y] = cache_get_field_content_float(0, "pPos_y", MySQLGo);
	PlayerInfo[playerid][pPos_z] = cache_get_field_content_float(0, "pPos_z", MySQLGo);
	cache_delete(p);
	pbar_sat = CreatePlayerProgressBar(playerid, 548.500000, 58.000000, 60.5, 4.2, 0x477AA5AA, 100.0,BAR_DIRECTION_RIGHT);
	SetPlayerProgressBarValue(playerid, pbar_sat, float(PlayerInfo[playerid][pSatiety]));
	ShowPlayerProgressBar(playerid,pbar_sat);
	new tick_timer = SetTimerEx("@Satiety", 1000, false, "i",playerid);
	SetPVarInt(playerid,#P_Tick_Timer,tick_timer);
	// next
	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	return true;
}
publics: LoginCallback(playerid)
{
	if(IsPlayerNPC(playerid)) return 1;
	new rows, fields;
	cache_get_data(rows, fields, MySQLGo);
	if(rows)
	{
		new string2[64], nowIp[16];
		GetPlayerIp(playerid, nowIp, 16);
		
		PlayerInfo[playerid][pNowIp] = nowIp;

		// content
		cache_get_field_content(0, "pNickname", PlayerInfo[playerid][pNickname], MySQLGo, 128);
		cache_get_field_content(0, "pRegData", PlayerInfo[playerid][pRegData], MySQLGo, 64);
		cache_get_field_content(0, "pKey", PlayerInfo[playerid][pKey], MySQLGo, 128);
		cache_get_field_content(0, "pEmail", PlayerInfo[playerid][pEmail], MySQLGo, 128);
		cache_get_field_content(0, "pCarLic2", PlayerInfo[playerid][pCarLic2], MySQLGo, strlen(PlayerInfo[playerid][pCarLic2]));
		cache_get_field_content(0, "pCarLic21", PlayerInfo[playerid][pCarLic21], MySQLGo, strlen(PlayerInfo[playerid][pCarLic21]));
		cache_get_field_content(0, "pCarLic3", PlayerInfo[playerid][pCarLic3], MySQLGo, strlen(PlayerInfo[playerid][pCarLic3]));
		cache_get_field_content(0, "pUdost", PlayerInfo[playerid][pUdost1], MySQLGo, strlen(PlayerInfo[playerid][pUdost1]));
		cache_get_field_content(0, "pUdost", PlayerInfo[playerid][pUdost2], MySQLGo, strlen(PlayerInfo[playerid][pUdost2]));
		cache_get_field_content(0, "pCarLic4", PlayerInfo[playerid][pCarLic4], MySQLGo, strlen(PlayerInfo[playerid][pCarLic4]));
		cache_get_field_content(0, "pMK2", PlayerInfo[playerid][pMK2], MySQLGo, strlen(PlayerInfo[playerid][pMK2]));
		cache_get_field_content(0, "pMK3", PlayerInfo[playerid][pMK3], MySQLGo, strlen(PlayerInfo[playerid][pMK3]));
		cache_get_field_content(0, "pMK4", PlayerInfo[playerid][pMK4], MySQLGo, strlen(PlayerInfo[playerid][pMK4]));
		cache_get_field_content(0, "pMarriedTo", PlayerInfo[playerid][pMarriedTo], MySQLGo, strlen(PlayerInfo[playerid][pMarriedTo]));
		cache_get_field_content(0, "pRegIp", PlayerInfo[playerid][pRegIp], MySQLGo, 16);
		cache_get_field_content(0, "pRef", PlayerInfo[playerid][pRef], MySQLGo, strlen(PlayerInfo[playerid][pRef]));

		// int
		PlayerInfo[playerid][pID] = cache_get_field_content_int(0, "id", MySQLGo);
		PlayerInfo[playerid][pRent][0] = cache_get_field_content_int(0, "rent_0", MySQLGo);
		PlayerInfo[playerid][pRent][1] = cache_get_field_content_int(0, "rent_1", MySQLGo);
		PlayerInfo[playerid][pStatus] = cache_get_field_content_int(0, "pStatus", MySQLGo);
		
		PlayerInfo[playerid][pReg] = cache_get_field_content_int(0, "pReg", MySQLGo);
		PlayerInfo[playerid][pBizAcc] = cache_get_field_content_int(0, "pBizAcc", MySQLGo);
		PlayerInfo[playerid][pTut] = cache_get_field_content_int(0, "pTut", MySQLGo);
		PlayerInfo[playerid][pCash] = cache_get_field_content_int(0, "pCash", MySQLGo);
		PlayerInfo[playerid][pLevel] = cache_get_field_content_int(0, "pLevel", MySQLGo);
		PlayerInfo[playerid][pDm] = cache_get_field_content_int(0, "pDm", MySQLGo);
		PlayerInfo[playerid][pPasport] = cache_get_field_content_int(0, "pPasport", MySQLGo);
		PlayerInfo[playerid][pChar] = cache_get_field_content_int(0, "pChar", MySQLGo);
		PlayerInfo[playerid][pModel] = cache_get_field_content_int(0, "pModel", MySQLGo);
		PlayerInfo[playerid][pPnumber] = cache_get_field_content_int(0, "pPnumber", MySQLGo);
		PlayerInfo[playerid][pAccount] = cache_get_field_content_int(0, "pAccount", MySQLGo);
		PlayerInfo[playerid][pAdmin] = cache_get_field_content_int(0, "pAdmin", MySQLGo);
		PlayerInfo[playerid][pLarek] = cache_get_field_content_int(0, "pLarek", MySQLGo);
		PlayerInfo[playerid][pCasino] = cache_get_field_content_int(0, "pCasino", MySQLGo);
		PlayerInfo[playerid][pAtm] = cache_get_field_content_int(0, "pAtm", MySQLGo);
		PlayerInfo[playerid][pVoennik] = cache_get_field_content_int(0, "pVoennik", MySQLGo);
		PlayerInfo[playerid][pMK] = cache_get_field_content_int(0, "pMed", MySQLGo);
		PlayerInfo[playerid][pDm] = cache_get_field_content_int(0, "pDm", MySQLGo);
		PlayerInfo[playerid][pWantedPoints] = cache_get_field_content_int(0, "pWantedPoints", MySQLGo);
		PlayerInfo[playerid][pHelper] = cache_get_field_content_int(0, "pHelper", MySQLGo);
		PlayerInfo[playerid][pUvp] = cache_get_field_content_int(0, "pUvp", MySQLGo);
		PlayerInfo[playerid][pForce] = cache_get_field_content_int(0, "pForce", MySQLGo);
		PlayerInfo[playerid][pDonateRank] = cache_get_field_content_int(0, "pDonateRank", MySQLGo);
		PlayerInfo[playerid][gPupgrade] = cache_get_field_content_int(0, "gPupgrade", MySQLGo);
		PlayerInfo[playerid][pConnectTime] = cache_get_field_content_int(0, "pConnectTime", MySQLGo);
		PlayerInfo[playerid][pSex] = cache_get_field_content_int(0, "pSex", MySQLGo);
		PlayerInfo[playerid][pOrigin] = cache_get_field_content_int(0, "pOrigin", MySQLGo);
		PlayerInfo[playerid][pNotLic] = cache_get_field_content_int(0, "pNotLic", MySQLGo);
		PlayerInfo[playerid][pLangEng] = cache_get_field_content_int(0, "pLangEng", MySQLGo);
		PlayerInfo[playerid][pLangJap] = cache_get_field_content_int(0, "pLangJap", MySQLGo);
		PlayerInfo[playerid][pLangIta] = cache_get_field_content_int(0, "pLangIta", MySQLGo);
		PlayerInfo[playerid][pLangRus] = cache_get_field_content_int(0, "pLangRus", MySQLGo);
		PlayerInfo[playerid][pLangFra] = cache_get_field_content_int(0, "pLangFra", MySQLGo);
		PlayerInfo[playerid][pNarcoZavisimost] = cache_get_field_content_int(0, "pNarcoZavisimost", MySQLGo);
		PlayerInfo[playerid][pAlcoZavisimost] = cache_get_field_content_int(0, "pAlcoZavisimost", MySQLGo);
		PlayerInfo[playerid][pNarcoLomka] = cache_get_field_content_int(0, "pNarcoLomka", MySQLGo);
		PlayerInfo[playerid][pAlcoLomka] = cache_get_field_content_int(0, "pAlcoLomka", MySQLGo);
		PlayerInfo[playerid][pCarLic] = cache_get_field_content_int(0, "pCarLic", MySQLGo);
		PlayerInfo[playerid][pCarLic5] = cache_get_field_content_int(0, "pCarLic5", MySQLGo);
		PlayerInfo[playerid][pCarLic1] = cache_get_field_content_int(0, "pCarLic1", MySQLGo);
		PlayerInfo[playerid][pMuted] = cache_get_field_content_int(0, "pMuted", MySQLGo);
		PlayerInfo[playerid][pExp] = cache_get_field_content_int(0, "pExp", MySQLGo);
		PlayerInfo[playerid][pOtkRabota1] = cache_get_field_content_int(0, "pOtkRabota1", MySQLGo);
		PlayerInfo[playerid][pOtkRabota2] = cache_get_field_content_int(0, "pOtkRabota2", MySQLGo);
		PlayerInfo[playerid][pOtkRabota3] = cache_get_field_content_int(0, "pOtkRabota3", MySQLGo);
		PlayerInfo[playerid][pOtkRabota7] = cache_get_field_content_int(0, "pOtkRabota7", MySQLGo);
		PlayerInfo[playerid][pOtkRabota8] = cache_get_field_content_int(0, "pOtkRabota8", MySQLGo);
		PlayerInfo[playerid][pOtkRabota12] = cache_get_field_content_int(0, "pOtkRabota12", MySQLGo);
		PlayerInfo[playerid][pOtkRabota14] = cache_get_field_content_int(0, "pOtkRabota14", MySQLGo);
		PlayerInfo[playerid][pOtkRabota15] = cache_get_field_content_int(0, "pOtkRabota15", MySQLGo);
		PlayerInfo[playerid][pOtkRabota16] = cache_get_field_content_int(0, "pOtkRabota16", MySQLGo);
		PlayerInfo[playerid][pOtkRabota22] = cache_get_field_content_int(0, "pOtkRabota22", MySQLGo);
		PlayerInfo[playerid][pOtkRabota24] = cache_get_field_content_int(0, "pOtkRabota24", MySQLGo);
		PlayerInfo[playerid][pCrimes] = cache_get_field_content_int(0, "pCrimes", MySQLGo);
		PlayerInfo[playerid][pKills] = cache_get_field_content_int(0, "pKills", MySQLGo);
		PlayerInfo[playerid][pKatA] = cache_get_field_content_int(0, "pKatA", MySQLGo);
		PlayerInfo[playerid][pKatB] = cache_get_field_content_int(0, "pKatB", MySQLGo);
		PlayerInfo[playerid][pKatC] = cache_get_field_content_int(0, "pKatC", MySQLGo);
		PlayerInfo[playerid][pKatD] = cache_get_field_content_int(0, "pKatD", MySQLGo);
		PlayerInfo[playerid][pKategA] = cache_get_field_content_int(0, "pKategA", MySQLGo);
		PlayerInfo[playerid][pKategB] = cache_get_field_content_int(0, "pKategB", MySQLGo);
		PlayerInfo[playerid][pKategC] = cache_get_field_content_int(0, "pKategC", MySQLGo);
		PlayerInfo[playerid][pKategD] = cache_get_field_content_int(0, "pKategD", MySQLGo);
		PlayerInfo[playerid][pDeaths] = cache_get_field_content_int(0, "pDeaths", MySQLGo);
		PlayerInfo[playerid][pArrested] = cache_get_field_content_int(0, "pArrested", MySQLGo);
		PlayerInfo[playerid][pWantedDeaths] = cache_get_field_content_int(0, "pWantedDeaths", MySQLGo);
		PlayerInfo[playerid][pPhoneBook] = cache_get_field_content_int(0, "pPhoneBook", MySQLGo);
		PlayerInfo[playerid][pLottoNr] = cache_get_field_content_int(0, "pLottoNr", MySQLGo);
		PlayerInfo[playerid][pJob] = cache_get_field_content_int(0, "pJob", MySQLGo);
		PlayerInfo[playerid][pPayCheck] = cache_get_field_content_int(0, "pPayCheck", MySQLGo);
		PlayerInfo[playerid][pHeadValue] = cache_get_field_content_int(0, "pHeadValue", MySQLGo);
		PlayerInfo[playerid][pJailed] = cache_get_field_content_int(0, "pJailed", MySQLGo);
		PlayerInfo[playerid][pJailTime] = cache_get_field_content_int(0, "pJailTime", MySQLGo);
		PlayerInfo[playerid][pMats] = cache_get_field_content_int(0, "pMats", MySQLGo);
		PlayerInfo[playerid][pDrugs] = cache_get_field_content_int(0, "pDrugs", MySQLGo);
		PlayerInfo[playerid][pLeader] = cache_get_field_content_int(0, "pLeader", MySQLGo);
		PlayerInfo[playerid][pMember] = cache_get_field_content_int(0, "pMember", MySQLGo);
		PlayerInfo[playerid][pRank] = cache_get_field_content_int(0, "pRank", MySQLGo);
		PlayerInfo[playerid][pDolj] = cache_get_field_content_int(0, "pDolj", MySQLGo);

		PlayerInfo[playerid][pContractTime] = cache_get_field_content_int(0, "pContractTime", MySQLGo);
		PlayerInfo[playerid][pDetSkill] = cache_get_field_content_int(0, "pDetSkill", MySQLGo);
		PlayerInfo[playerid][pPbiskey] = cache_get_field_content_int(0, "pPbiskey", MySQLGo);
		PlayerInfo[playerid][pNewsSkill] = cache_get_field_content_int(0, "pNewsSkill", MySQLGo);
		PlayerInfo[playerid][pDrugsSkill] = cache_get_field_content_int(0, "pDrugsSkill", MySQLGo);

		PlayerInfo[playerid][pFlyLic] = cache_get_field_content_int(0, "pFlyLic", MySQLGo);
		PlayerInfo[playerid][pGunLic] = cache_get_field_content_int(0, "pGunLic", MySQLGo);
		PlayerInfo[playerid][pCarTime] = cache_get_field_content_int(0, "pCarTime", MySQLGo);
		PlayerInfo[playerid][pPayDay] = cache_get_field_content_int(0, "pPayDay", MySQLGo);
		PlayerInfo[playerid][pPayDayHad] = cache_get_field_content_int(0, "pPayDayHad", MySQLGo);
		PlayerInfo[playerid][pCDPlayer] = cache_get_field_content_int(0, "pCDPlayer", MySQLGo);
		PlayerInfo[playerid][pWins] = cache_get_field_content_int(0, "pWins", MySQLGo);
		PlayerInfo[playerid][pLoses] = cache_get_field_content_int(0, "pLoses", MySQLGo);
		PlayerInfo[playerid][pAlcoholPerk] = cache_get_field_content_int(0, "pAlcoholPerk", MySQLGo);
		PlayerInfo[playerid][pDrugPerk] = cache_get_field_content_int(0, "pDrugPerk", MySQLGo);
		PlayerInfo[playerid][pMiserPerk] = cache_get_field_content_int(0, "pMiserPerk", MySQLGo);
		PlayerInfo[playerid][pPainPerk] = cache_get_field_content_int(0, "pPainPerk", MySQLGo);
		PlayerInfo[playerid][pTraderPerk] = cache_get_field_content_int(0, "pTraderPerk", MySQLGo);
		PlayerInfo[playerid][pMissionNr] = cache_get_field_content_int(0, "pMissionNr", MySQLGo);
		PlayerInfo[playerid][pWarns] = cache_get_field_content_int(0, "pWarns", MySQLGo);
		PlayerInfo[playerid][pAdjustable] = cache_get_field_content_int(0, "pAdjustable", MySQLGo);
		PlayerInfo[playerid][pFuel] = cache_get_field_content_int(0, "pFuel", MySQLGo);
		PlayerInfo[playerid][pMarried] = cache_get_field_content_int(0, "pMarried", MySQLGo);
		PlayerInfo[playerid][pTA] = cache_get_field_content_int(0, "pTA", MySQLGo);
		PlayerInfo[playerid][pRPD] = cache_get_field_content_int(0, "pRPD", MySQLGo);
		PlayerInfo[playerid][pCard] = cache_get_field_content_int(0, "pCard", MySQLGo);
		PlayerInfo[playerid][pClock] = cache_get_field_content_int(0, "pClock", MySQLGo);
		PlayerInfo[playerid][pGunSkill] = cache_get_field_content_int(0, "pGunSkill", MySQLGo);
		PlayerInfo[playerid][pMutedTime] = cache_get_field_content_int(0, "pMutedTime", MySQLGo);
		PlayerInfo[playerid][pRabotalLopatoy] = cache_get_field_content_int(0, "pRabotalLopatoy", MySQLGo);
		PlayerInfo[playerid][pZoloto] = cache_get_field_content_int(0, "pZoloto", MySQLGo);
		PlayerInfo[playerid][pRadio] = cache_get_field_content_int(0, "pRadio", MySQLGo);
		PlayerInfo[playerid][pRope] = cache_get_field_content_int(0, "pRope", MySQLGo);
		PlayerInfo[playerid][pNeSdal] = cache_get_field_content_int(0, "pNeSdal", MySQLGo);
		PlayerInfo[playerid][pFWarns] = cache_get_field_content_int(0, "pFWarns", MySQLGo);
		PlayerInfo[playerid][pRoliki] = cache_get_field_content_int(0, "pRoliki", MySQLGo);
		PlayerInfo[playerid][pSigs] = cache_get_field_content_int(0, "pSigs", MySQLGo);
		PlayerInfo[playerid][pCKey] = cache_get_field_content_int(0, "pCKey", MySQLGo);
		PlayerInfo[playerid][pSpawnP] = cache_get_field_content_int(0, "pSpawnP", MySQLGo);
		PlayerInfo[playerid][pNewHouse] = cache_get_field_content_int(0, "pNewHouse", MySQLGo);
		PlayerInfo[playerid][pRentHouse] = cache_get_field_content_int(0, "pRentHouse", MySQLGo);
		PlayerInfo[playerid][pSatiety] = cache_get_field_content_int(0, "pSatiety", MySQLGo);
		HospitalTime[playerid] = cache_get_field_content_int(0, "pHospitalTime", MySQLGo);

		// Оружие и патроны
		cache_get_field_content(0, "pGunAmmo", PlayerInfo[playerid][pAmmos], MySQLGo, 256);
		cache_get_field_content(0, "pGunID", PlayerInfo[playerid][pWeapons], MySQLGo, 256);

		sscanf(PlayerInfo[playerid][pWeapons], "p<,>a<i>[13]", PlayerInfo[playerid][pWeapon]);
		sscanf(PlayerInfo[playerid][pAmmos], "p<,>a<i>[13]", PlayerInfo[playerid][pAmmo]);
		glob_str = "";
		cache_get_field_content(0, "pAvtoP",glob_str,MySQLGo);
		sscanf(glob_str, "p<,>a<i>[4]", PlayerInfo[playerid][pAvtoP]);
		glob_str = "";
		
		// float
		PlayerInfo[playerid][pSHealth] = cache_get_field_content_float(0, "pSHealth", MySQLGo);
		PlayerInfo[playerid][pHealth] = cache_get_field_content_float(0, "pHealth", MySQLGo);
		PlayerInfo[playerid][pPos_x] = cache_get_field_content_float(0, "pPos_x", MySQLGo);
		PlayerInfo[playerid][pPos_y] = cache_get_field_content_float(0, "pPos_y", MySQLGo);
		PlayerInfo[playerid][pPos_z] = cache_get_field_content_float(0, "pPos_z", MySQLGo);
		pbar_sat = CreatePlayerProgressBar(playerid, 548.500000, 58.000000, 60.5, 4.2, 0x477AA5AA, 100.0,BAR_DIRECTION_RIGHT);
		SetPlayerProgressBarValue(playerid, pbar_sat, float(PlayerInfo[playerid][pSatiety]));
		ShowPlayerProgressBar(playerid,pbar_sat);
		new tick_timer = SetTimerEx("@Satiety", 1000, false, "i",playerid);
		SetPVarInt(playerid,#P_Tick_Timer,tick_timer);
		// Возвращение на позицию
		new str1[100+1];

		str1= "";
		cache_get_field_content(0,"EPLAYER",str1,MySQLGo,64);

		new Float:e_X, Float:e_Y, Float:e_Z, e_Virt, e_Int, e_time,e_job,e_kpz;
		sscanf(str1,"p<,>fffiiiii",e_X, e_Y, e_Z, e_Int, e_Virt, e_time,e_job,e_kpz);
		SetPVarFloat(playerid, "e_X", e_X);
		SetPVarFloat(playerid, "e_Y", e_Y);
		SetPVarFloat(playerid, "e_Z", e_Z);
		SetPVarInt(playerid, "e_Int", e_Int);
		SetPVarInt(playerid, "e_Virt", e_Virt);
		SetPVarInt(playerid, "e_time", e_time);
		SetPVarInt(playerid,"e_job",e_job);
		SetPVarInt(playerid,#P_Kpz,e_kpz);

		// next
		new queryr[200];
		format(queryr, 200, "UPDATE `accounts` SET `pLastIp` = '%s' WHERE `pNickname` = '%s';", nowIp, NamePlayer[playerid]);
		mysql_tquery(MySQLGo, queryr, "", "");
		
		mysql_format(MySQLGo,queryr,sizeof(queryr),"UPDATE `accounts` SET `isOnline` = '%i' WHERE `pNickname` = '%e'",playerid,NamePlayer[@p]);
		mysql_function_query(MySQLGo,queryr,false,"","");

		PlayerInfo[playerid][pCash] = eGetPlayerMoney(playerid);
		PlayerInfo[playerid][pAdjustable] = 0;
		ResetPlayerMoney(playerid);
		ConsumingMoney[playerid] = 1;
		@Invent(playerid);
		GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
		SendClientMessage(playerid, 0x2E9AFEAA, "{2E9AFE}Рады видеть Вас снова на Trusty RolePlay. Желаем вам приятной игры!");

		GetBan1(playerid);
		if(PlayerInfo[playerid][pReg] == 0)
		{
			PlayerInfo[playerid][pLevel] = 1;
			PlayerInfo[playerid][pDm] = 0;
			PlayerInfo[playerid][pPasport] = 1;
			PlayerInfo[playerid][pSHealth] = 100.0;
			PlayerInfo[playerid][pHealth] = 100.0;
			PlayerInfo[playerid][pPos_x] = 2246.6;
			PlayerInfo[playerid][pPos_y] = -1161.9;
			PlayerInfo[playerid][pPos_z] = 1029.7;
			PlayerInfo[playerid][pInt] = 0;
			PlayerInfo[playerid][pLocal] = 255;
			PlayerInfo[playerid][pAccount] = 15000;// кол-во денег в банке при респе
			PlayerInfo[playerid][pReg] = 1;
			GivePlayerMoney(playerid, 5000);// Начальные деньги игроков
		}
		if(PlayerInfo[playerid][pDonateRank] > 0) SendClientMessage(playerid, 0xFFCC00AA,"{FFCC00}Вы являетесь VIP игроком на сервере. Благодарим Вас за помощь нашему проекту!");
		if(PlayerInfo[playerid][pAdmin] > 0) format(string2, sizeof(string2), "{FFCC00}Вы вошли как администратор %d уровня.",PlayerInfo[playerid][pAdmin]), SendClientMessage(playerid, 0xFFCC00AA,string2);
		if(PlayerInfo[playerid][pHelper] > 0) format(string2, sizeof(string2), "{FFCC00}Вы являетесь помощником по игре на этом сервере."), SendClientMessage(playerid, 0xFFCC00AA,string2);
		//
		SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
		gPlayerLogged[playerid] = 1;
		switch(PlayerInfo[playerid][pStatus])
		{
		case 1:SCM(@p,COLOR_LIGHTRED,"Ваш дом был продан за неуплату государству. Половина стоимости перечислена на ваш банковский счет.");
		case 2:SCM(@p,COLOR_LIGHTRED,"Дом который вы арендовали был продан за неуплату государству.");
		case 3:SCM(@p,COLOR_LIGHTRED,"Вы были выселены по прчине окончания срока аренды");
		case 4:
			{
				SCM(@p,COLOR_LIGHTRED,"Дом который вы арендовали был продан владельцем.");
				format(queryr,sizeof(queryr),"Деньги в размере %d рублей были перечислены на ваш банковский счет.",PlayerInfo[@p][pRent][0]);
				SCM(@p,COLOR_LIGHTRED,queryr);
				PlayerInfo[@p][pAccount] += PlayerInfo[@p][pRent][0];
				PlayerInfo[@p][pRentHouse] = 0;
				PlayerInfo[@p][pRent][0] = 0;
				PlayerInfo[@p][pRent][1] = 0;	
				UpdatePlayerData(@p,"pRentHouse",PlayerInfo[@p][pRentHouse]);
				UpdatePlayerData(@p,"rent_0",PlayerInfo[@p][pRent][0]);
				UpdatePlayerData(@p,"rent_1",PlayerInfo[@p][pRent][1]);
			}
		}
		UpdatePlayerData(@p,"pStatus",0);
		PlayerInfo[playerid][pStatus] = 0;
		if(PlayerInfo[playerid][pRentHouse])
		{
			new days = floatround((PlayerInfo[playerid][pRent][1]-gettime())/U_Day);
			if(days) 
			{
				format(queryr,sizeof(queryr),"Вы арендуете дом. Напомнинаем вам, что до окончания срока аренды осталось %d дней(-я).",days);
				SCM(@p,COLOR_LIGHTGREEN,queryr);
				if(days < 3) SCM(@p,COLOR_LIGHTGREEN,"Для продления аренды подойдите к дому и введите команду /rent."),SetPVarInt(@p,#P_HArend,1);
			}
			else 
			{
				SCM(@p,COLOR_LIGHTGREEN,"Вы арендуете дом. Напомнинаем вам, что сегодня последний день аренды.");
				SCM(@p,COLOR_LIGHTGREEN,"Для продления аренды подойдите к дому и введите команду /rent.");
				SetPVarInt(@p,#P_HArend,1);
			}
		}	
		//
		if(GetPVarInt(playerid,"e_time") > gettime() && GetPVarFloat(playerid,"e_X") != 0.0 && GetPVarFloat(playerid,"e_Y") != 0.0 && GetPVarFloat(playerid,"e_Z") != 0.0) return ShowPlayerDialog(playerid, 5253, DIALOG_STYLE_MSGBOX, "{0099FF}Вернуться", "{FFFFFF}Вы вышли из игры менее 5-ти минут назад.\nВы можете вернуться на предыдущую позицию.\n\n{0099FF}Вернуться?", "Да", "Нет");
		else
		{
			//SetSpawnInfo(playerid, 1, PlayerInfo[playerid][pModel], 489.5985,1107.3766,12.8234, 1.0, -1, -1, -1, -1, -1, -1);
			SpawnPlayer(playerid);
		}

		//
		foreach(new i:Player)
		{
			if(!IsPlayerConnected(i)) continue;
			if(GetPVarInt(i,#P_Mask_On) == 1) ShowPlayerNameTagForPlayer(playerid, i, 0);
		}

	}
	return 1;
}
//==============================================================================
stock SavePlayer(playerid)
{
	if(!IsPlayerConnected(playerid) || !gPlayerLogged[playerid]) return 1;
	GetPlayerHealth(playerid,PlayerInfo[playerid][pHealth]);
	if((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
	{
		PlayerInfo[playerid][pPos_x] = 1684.9;
		PlayerInfo[playerid][pPos_y] = -2244.5;
		PlayerInfo[playerid][pPos_z] = 13.5;
	}
	if(Spectate[playerid] != 255)
	{
		PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
		PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
		PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
		PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
		PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
	}
	// Само сохранение
	glob_str = "";
	mysql_format(MySQLGo,glob_str,sizeof(glob_str),"UPDATE `accounts` SET `pKey` = '%s',`pLevel` = '%i',`pSatiety` = '%i',`pAvtoP` = '%d,%d,%d,%d' WHERE `id` = '%d' LIMIT 1", PlayerInfo[playerid][pKey],PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pSatiety],PlayerInfo[playerid][pAvtoP][0],PlayerInfo[playerid][pAvtoP][1],PlayerInfo[playerid][pAvtoP][2]
	,PlayerInfo[playerid][pAvtoP][3],PlayerInfo[playerid][pID]);
	mysql_tquery(MySQLGo,glob_str);
	glob_str = "";
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pVoennik` = '%i',`pMed` = '%i',`pDm` = '%i', `pWantedPoints` = '%i', `pHelper` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pVoennik],PlayerInfo[playerid][pMK], PlayerInfo[playerid][pDm], PlayerInfo[playerid][pWantedPoints],PlayerInfo[playerid][pHelper],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pUvp` = '%i',`pDonateRank` = '%i',`gPupgrade` = '%i', `pConnectTime` = '%i', `pReg` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pUvp],PlayerInfo[playerid][pDonateRank], PlayerInfo[playerid][gPupgrade], PlayerInfo[playerid][pConnectTime],PlayerInfo[playerid][pReg],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pSex` = '%i',`pOrigin` = '%i',`pNotLic` = '%i', `pLangEng` = '%i', `pLangJap` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pSex],PlayerInfo[playerid][pOrigin], PlayerInfo[playerid][pNotLic], PlayerInfo[playerid][pLangEng],PlayerInfo[playerid][pLangJap],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pLangIta` = '%i',`pLangRus` = '%i',`pLangFra` = '%i', `pNarcoZavisimost` = '%i', `pAlcoZavisimost` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pLangIta],PlayerInfo[playerid][pLangRus], PlayerInfo[playerid][pLangFra], PlayerInfo[playerid][pNarcoZavisimost],PlayerInfo[playerid][pAlcoZavisimost],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pNarcoLomka` = '%i',`pAlcoLomka` = '%i',`pMuted` = '%i', `pExp` = '%i', `pOtkRabota1` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pNarcoLomka],PlayerInfo[playerid][pAlcoLomka], PlayerInfo[playerid][pMuted], PlayerInfo[playerid][pExp],PlayerInfo[playerid][pOtkRabota1],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pOtkRabota2` = '%i',`pOtkRabota3` = '%i',`pOtkRabota7` = '%i', `pOtkRabota8` = '%i', `pOtkRabota12` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pOtkRabota2],PlayerInfo[playerid][pOtkRabota3], PlayerInfo[playerid][pOtkRabota7], PlayerInfo[playerid][pOtkRabota8],PlayerInfo[playerid][pOtkRabota12],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pOtkRabota14` = '%i',`pOtkRabota15` = '%i',`pOtkRabota16` = '%i', `pOtkRabota22` = '%i', `pOtkRabota24` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pOtkRabota14],PlayerInfo[playerid][pOtkRabota15], PlayerInfo[playerid][pOtkRabota16], PlayerInfo[playerid][pOtkRabota22],PlayerInfo[playerid][pOtkRabota24],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pCash` = '%i',`pAccount` = '%i',`pCrimes` = '%i', `pKills` = '%i', `pDeaths` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pCash],PlayerInfo[playerid][pAccount], PlayerInfo[playerid][pCrimes], PlayerInfo[playerid][pKills],PlayerInfo[playerid][pDeaths],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pArrested` = '%i',`pWantedDeaths` = '%i',`pPhoneBook` = '%i', `pLottoNr` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pArrested],PlayerInfo[playerid][pWantedDeaths], PlayerInfo[playerid][pPhoneBook], PlayerInfo[playerid][pLottoNr],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pJob` = '%i',`pPayCheck` = '%i', `pHeadValue` = '%i', `pJailed` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","",PlayerInfo[playerid][pJob], PlayerInfo[playerid][pPayCheck], PlayerInfo[playerid][pHeadValue],PlayerInfo[playerid][pJailed],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pJailTime` = '%i',`pMats` = '%i',`pDrugs` = '%i', `pMember` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pJailTime],PlayerInfo[playerid][pMats], PlayerInfo[playerid][pDrugs], PlayerInfo[playerid][pMember],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pRank` = '%i',`pDolj` = '%i', `pChar` = '%i', `pKatA` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","",PlayerInfo[playerid][pRank], PlayerInfo[playerid][pDolj], PlayerInfo[playerid][pChar],PlayerInfo[playerid][pKatA],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pKatB` = '%i',`pKatC` = '%i',`pKatD` = '%i', `pContractTime` = '%i', `pDetSkill` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pKatB],PlayerInfo[playerid][pKatC], PlayerInfo[playerid][pKatD], PlayerInfo[playerid][pContractTime],PlayerInfo[playerid][pDetSkill],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pNewsSkill` = '%i', `pDrugsSkill` = '%i',`pPbiskey` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pNewsSkill], PlayerInfo[playerid][pDrugsSkill],PlayerInfo[playerid][pPbiskey],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pSHealth` = '%.1f',`pHealth` = '%.1f', `pModel` = '%i', `pPnumber` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pSHealth], PlayerInfo[playerid][pHealth], PlayerInfo[playerid][pModel],PlayerInfo[playerid][pPnumber],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pPos_x` = '%.1f',`pPos_y` = '%.1f',`pPos_z` = '%.1f', `pCarLic` = '%i', `pCarLic1` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], PlayerInfo[playerid][pCarLic],PlayerInfo[playerid][pCarLic1],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pCarLic2` = '%s',`pCarLic21` = '%s',`pCarLic3` = '%s', `pUdost1` = '%s', `pUdost2` = '%s' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pCarLic2],PlayerInfo[playerid][pCarLic21], PlayerInfo[playerid][pCarLic3], PlayerInfo[playerid][pUdost1],PlayerInfo[playerid][pUdost2],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pUdost` = '%s',`pCarLic4` = '%i',`pCarLic5` = '%i', `pMK2` = '%s', `pMK3` = '%s' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pUdost],PlayerInfo[playerid][pCarLic4], PlayerInfo[playerid][pCarLic5], PlayerInfo[playerid][pMK2],PlayerInfo[playerid][pMK3],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pMK4` = '%s',`pFlyLic` = '%i',`pKategA` = '%i', `pKategB` = '%i', `pKategC` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pMK4],PlayerInfo[playerid][pFlyLic], PlayerInfo[playerid][pKategA], PlayerInfo[playerid][pKategB],PlayerInfo[playerid][pKategC],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pKategD` = '%i',`pFlyLic` = '%i',`pKategA` = '%i', `pKategB` = '%i', `pKategC` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pKategD],PlayerInfo[playerid][pFlyLic], PlayerInfo[playerid][pKategA], PlayerInfo[playerid][pKategB],PlayerInfo[playerid][pKategC],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pGunLic` = '%i',`pRef` = '%s',`pCKey` = '%d' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pGunLic],PlayerInfo[playerid][pRef],PlayerInfo[playerid][pCKey],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pCarTime` = '%i',`pPayDay` = '%i', `pPayDayHad` = '%i', `pCDPlayer` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","",PlayerInfo[playerid][pCarTime], PlayerInfo[playerid][pPayDay], PlayerInfo[playerid][pPayDayHad],PlayerInfo[playerid][pCDPlayer],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pWins` = '%i',`pLoses` = '%i',`pAlcoholPerk` = '%i', `pDrugPerk` = '%i', `pMiserPerk` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pWins],PlayerInfo[playerid][pLoses], PlayerInfo[playerid][pAlcoholPerk], PlayerInfo[playerid][pDrugPerk],PlayerInfo[playerid][pMiserPerk],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pPainPerk` = '%i',`pTraderPerk` = '%i',`pTut` = '%i', `pMissionNr` = '%i', `pWarns` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pPainPerk],PlayerInfo[playerid][pTraderPerk], PlayerInfo[playerid][pTut], PlayerInfo[playerid][pMissionNr],PlayerInfo[playerid][pWarns],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pForce` = '%i',`pAdjustable` = '%i',`pFuel` = '%i', `pMarried` = '%i', `pRPD` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pForce],PlayerInfo[playerid][pAdjustable], PlayerInfo[playerid][pFuel], PlayerInfo[playerid][pMarried],PlayerInfo[playerid][pRPD],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pMarriedTo` = '%s',`pTA` = '%i',`pClock` = '%i', `pCard` = '%i', `pGunSkill` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pWins],PlayerInfo[playerid][pTA], PlayerInfo[playerid][pClock], PlayerInfo[playerid][pCard],PlayerInfo[playerid][pGunSkill],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pMutedTime` = '%i',`pRabotalLopatoy` = '%i',`pZoloto` = '%i', `pRadio` = '%i', `pPasport` = '%i', `pLastIp` = '%s' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pMutedTime],PlayerInfo[playerid][pRabotalLopatoy], PlayerInfo[playerid][pZoloto], PlayerInfo[playerid][pRadio],PlayerInfo[playerid][pPasport],PlayerInfo[playerid][pNowIp],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pRope` = '%i',`pNeSdal` = '%i',`pRoliki` = '%i', `pSigs` = '%i', `pLarek` = '%i', `pRegIp` = '%s' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pRope],PlayerInfo[playerid][pNeSdal], PlayerInfo[playerid][pRoliki], PlayerInfo[playerid][pSigs],PlayerInfo[playerid][pLarek],PlayerInfo[playerid][pRegIp],PlayerInfo[playerid][pID]);
	mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pSpawnP` = '%i',`pNewHouse` = '%i', `pRentHouse` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pSpawnP], PlayerInfo[playerid][pNewHouse], PlayerInfo[playerid][pRentHouse],PlayerInfo[playerid][pID]);

	// next
	for(new x; x < 13; x++) GetPlayerWeaponData(playerid, x, PlayerInfo[playerid][pWeapon][x], PlayerInfo[playerid][pAmmo][x]); // Определяем точное количество патрон

	new queryw[500];
	format(PlayerInfo[playerid][pWeapons],256,"%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i",
	PlayerInfo[playerid][pWeapon][0],PlayerInfo[playerid][pWeapon][1],PlayerInfo[playerid][pWeapon][2],PlayerInfo[playerid][pWeapon][3],PlayerInfo[playerid][pWeapon][4],PlayerInfo[playerid][pWeapon][5],
	PlayerInfo[playerid][pWeapon][6],PlayerInfo[playerid][pWeapon][7],PlayerInfo[playerid][pWeapon][8],PlayerInfo[playerid][pWeapon][9],PlayerInfo[playerid][pWeapon][10],PlayerInfo[playerid][pWeapon][11],PlayerInfo[playerid][pWeapon][12]);

	format(PlayerInfo[playerid][pAmmos],256,"%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i",
	PlayerInfo[playerid][pAmmo][0],PlayerInfo[playerid][pAmmo][1],PlayerInfo[playerid][pAmmo][2],PlayerInfo[playerid][pAmmo][3],PlayerInfo[playerid][pAmmo][4],PlayerInfo[playerid][pAmmo][5],
	PlayerInfo[playerid][pAmmo][6],PlayerInfo[playerid][pAmmo][7],PlayerInfo[playerid][pAmmo][8],PlayerInfo[playerid][pAmmo][9],PlayerInfo[playerid][pAmmo][10],PlayerInfo[playerid][pAmmo][11],PlayerInfo[playerid][pAmmo][12]);

	format(queryw, 500, "UPDATE `accounts` SET `pGunID` = '%s', `pGunAmmo` = '%s' WHERE `id` = '%d'",PlayerInfo[playerid][pWeapons],PlayerInfo[playerid][pAmmos],PlayerInfo[playerid][pID]);
	mysql_tquery(MySQLGo, queryw);

	// Вывод
	if(mysql_errno()) printf("Ошибка сохранения аккаунта: %s [%d]",NamePlayer[playerid], PlayerInfo[playerid][pID]);
	else printf("Успешно сохранение аккаунта: %s [%d]", NamePlayer[playerid], PlayerInfo[playerid][pID]);
	return true;
}
stock UpdatePlayerData(playerid, fields[], data)
{
	new str [144];
	mysql_format(MySQLGo,str, 144, "UPDATE `accounts` SET `%s` = '%d' WHERE `id` = '%d' LIMIT 1",fields, data, PlayerInfo[playerid][pID]);
	mysql_empty (MySQLGo, str);
	return 1;
}
stock ini_GetKey( line[] )
{
	new keyRes[256];
	keyRes[0] = 0;
	if( strfind( line , "=" , true ) == -1 ) return keyRes;
	strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
	return keyRes;
}
stock ini_GetValue( line[] )
{
	new valRes[256];
	valRes[0]=0;
	if( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}

public BroadCast(color,const string[])
{
	SendClientMessageToAll(color, string);
	return 1;
}

public ABroadCast(color,const string[],level)
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] >= level)
			{
				SendClientMessage(i, color, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}
//==============================================================================
public OOCOff(color,const string[])
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(!gOoc[i])
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}
//==============================================================================
public OOCNews(color,const string[])
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(!gNews[i])
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}
//==============================================================================
//==============================================================================
public SendRadioMessage(member, color, string[])
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock SendRaRadioMessage(chanel,color,str[])
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pRadio1][1] == chanel)
			{
				SendClientMessage(i, color, str);
			}
		}
	}
}
stock SendDepMessage(string[])
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPVarInt(i,#TogDb) == 1) continue;
			new frak;
			if(PlayerInfo[i][pLeader] > 0) frak = PlayerInfo[i][pLeader];
			else frak = PlayerInfo[i][pMember];
			switch(frak)
			{
			case 1..4,6,19:
				{
					SendClientMessage(i, COLOR_ALLDEPT, string);
				}
			default: continue;
			}
		}
	}
}
//==============================================================================
public SendJobMessage(job, color, string[])
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pJob] == job)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}
//==============================================================================
public SendFamilyMessage(family, color, string[])
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
			{
				if(!gFam[i])
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}
//==============================================================================
public SendIRCMessage(channel, color, string[])
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayersChannel[i] == channel)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}
//==============================================================================
public SendAdminMessage(color, string[])
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] >= 1)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}
public SendAdmHelpMessage(color, string[])
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] >= 1 || PlayerInfo[i][pHelper] == 1)
			{
				if(GetPVarInt(i,"Myrka") == 1) break;
				SendClientMessage(i, color, string);
			}
		}
	}
}
//==============================================================================
public PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
	}
}
//==============================================================================
public PlayerPlayMusic1(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 31202, 0.0, 0.0, 0.0);
	}
}
//==============================================================================
public PlayerPlayMusic2(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 31205, 0.0, 0.0, 0.0);
	}
}
//==============================================================================
//==============================================================================
public StopMusic()
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}
//==============================================================================
public PlayerFixRadio(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("PlayerFixRadio2", 1000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
		Fixr[playerid] = 1;
	}
}
//==============================================================================
public PlayerFixRadio2()
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(Fixr[i])
			{
				PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
				Fixr[i] = 0;
			}
		}
	}
}
//==============================================================================
public SendClientMessageEx (playerid, color, const message[])
{
	new length = strlen(message);
	new outstr[128];
	new trim;
	if(length > 127)
	{
		for (new i = 127; i>=0; i--)
		{
			trim = i;
			if(message[i] == ' ') break;
		}
		if(trim < 64) trim = 127;
		strmid (outstr, message, 0, trim, 128);
		SendClientMessage (playerid, color, outstr);
		strmid (outstr, message, trim, length, 128);
		SendClientMessage (playerid, color, outstr);
	}
	else SendClientMessage (playerid, color, message);
	return 1;
}

public SendClientMessageToAllEx (color, const message[])
{
	new length = strlen(message);
	new outstr[128];
	new trim;
	if(length > 127)
	{
		for (new i = 127; i>=0; i--)
		{
			trim = i;
			if(message[i] == ' ') break;
		}
		if(trim < 64) trim = 127;
		strmid (outstr, message, 0, trim, 128);
		SendClientMessageToAll (color, outstr);
		strmid (outstr, message, trim, length, 128);
		SendClientMessageToAll (color, outstr);
	}
	else SendClientMessageToAll (color, message);
	return 1;
}
//==============================================================================
//==============================================================================
public AntiMoney()
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pCash] != eGetPlayerMoney(i))
			{
				ResetPlayerMoney(i);
				GivePlayerMoney(i, PlayerInfo[i][pCash]);
			}
		}
	}
}
//==============================================================================
public OnPlayerCommandText(playerid, cmdtext[])
{
	new string[256];
	new playermoney;
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new tmp[256];
	new cmd[256];
	new moneys, idx;
	new idcar = GetPlayerVehicleID(playerid);
	new animationplayed;
	new xxx [256];
	cmd = strtok(cmdtext, idx);
	new cmd1[32], params[256];
	sscanf(cmdtext, "s[32]s[256]", cmd1, params); 
	
	//==============================================================================
	if(strfind(cmdtext, "$response get_custom_hash", true) != -1) //Если ответ получен и искомая строка найдена
	{
		new packhash[64]; //Создадим массив, в котором будет находится этот хэш
		strmid(packhash, cmdtext, 26, strlen(cmdtext)); //Разделяем строку cmdtext и результат разделения - искомый хэш - запишем в массив packhash
		SendClientMessage(playerid, 0xFFFFFFFF, packhash);
		if(strcmp(packhash,"7ff0e4ca7de76b9f",false))
		{
			SetTimerEx("NoPack",3000,false,"i",playerid);
		}
		return 1;
	}
	if(!gPlayerLogged[playerid]) return SendClientMessage(playerid,COLOR_LIGHTRED,#Действие запрещено не авторизованным пользователям!);
	//if(gpvi(@p,#P_cmd_flood) > gettime()) return SCM(@p,COLOR_GREY,"Не флуди!");
	spvi(@p,#P_cmd_flood,gettime()+3);
	if(strcmp(cmd, "/id", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		new stringer[96];
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{F74848}» Введите{FFFFFF}: /id [ид/ник]");
		new target = ReturnUser(tmp);
		if(IsPlayerConnected(target))
		{
			if(target != INVALID_PLAYER_ID)
			{
				format(stringer, sizeof(stringer), "[ID: %d] [NAME: %s] [LVL: %d]",target,PlayerInfo[target][pNickname],PlayerInfo[target][pLevel]);
				SendClientMessage(playerid, COLOR_WHITE, stringer);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "{FFFFFF}[{FF0000}Ошибка{FFFFFF}]: Игрок не найден!");
		}
		return true;
	}
	if(strcmp(cmd, "/mn", true) == 0) return ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "{2E9AFE}Панель управления игровым персонажем", "{808080}1. {FFFFFF}Статистика персонажа\n{808080}2. {FFFFFF}Помощь по командам\n{808080}3. {FFFFFF}Связь с администрацией\n{808080}4. {FFFFFF}Дополнительные услуги\n{808080}5. {FFFFFF}Безопасность игрового аккаунта\n{808080}6. {FFFFFF}Инвентарь персонажа\n{808080}7. {FFFFFF}Настройки персонажа\n{808080}8. {FFFFFF}Директория", "Выбрать", "Отмена");
	if(strcmp(cmd, "/engine", true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			new carid = GetPlayerVehicleID(playerid);
			new id_car = GetVehicleIdxByID(carid);
			if(!IsAVelo(carid))
			{
				if(CarEngine[carid]==0)
				{
					if(id_car != -1 && aData[id_car][aFuel] < 1) return SendClientMessage(playerid, COLOR_RED, "В машине нет бензина!");
					GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(carid,true,lights,alarm,doors,bonnet,boot,objective);
					CarEngine[carid] = 1;
				}
				else if(CarEngine[carid]==1)
				{
					GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(carid,false,lights,alarm,doors,bonnet,boot,objective);
					CarEngine[carid] = 0;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/car", true) == 0)
	{
		new stringer[326];
		new carid = GetPlayerVehicleID(playerid);
		if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID) return true;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в машине!");
		new dvig[15],far[15],dver[25],kap[15],bag[15],belt[15];
		GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
		if(GetPVarInt(playerid,"Seatbelt") == 1) belt = "{32CD32}ON";
		else belt = "{FF0000}OFF";
		if(engine == 1) dvig = "{32CD32}ON";
		else dvig = "{FF0000}OFF";
		if(lights == 1) far = "{32CD32}ON";
		else far = "{FF0000}OFF";
		if(bonnet == 1) kap = "{32CD32}ON";
		else kap = "{FF0000}OFF";
		if(boot == 1) bag = "{32CD32}ON";
		else bag = "{FF0000}OFF";
		new id_car = GetVehicleIdxByID(carid);
		if(id_car != -1)
		{
			if(aData[carid][aLock] == 1) dver = "{FF0000}CLOSED";
			else dver = "{32CD32}Open";
		}
		else
		{
			if(doors) dver = "{FF0000}CLOSED";
			else dver = "{32CD32}Open";
		}
		format(stringer,sizeof(stringer),"{808080}1.{FFFFFF} Двигатель [%s{FFFFFF}]\n{808080}2.{FFFFFF} Фары [%s{FFFFFF}]\n{808080}3.{FFFFFF} Двери [%s{FFFFFF}]\n{808080}4.{FFFFFF} Капот [%s{FFFFFF}]\n{808080}5.{FFFFFF} Багажник [%s{FFFFFF}]\n{808080}6.{FFFFFF} Ремень [%s{FFFFFF}]\n{808080}7.{FFFFFF} Припарковать",dvig,far,dver,kap,bag,belt,PlayerInfo[playerid][pFuel]);
		ShowPlayerDialog(playerid, 8023, DIALOG_STYLE_LIST, "{2E9AFE}Управление транспортом", stringer, "Выбрать", "Закрыть");
		return 1;
	}
	if(strcmp(cmd, "/delradar", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			new fract;
			if(PlayerInfo[playerid][pLeader]) fract = PlayerInfo[playerid][pLeader];
			else fract = PlayerInfo[playerid][pMember];
			new bool:radarid;
			for(new r; r < MAX_RADARS; r++)
			{
				if(RadarInfo[r][rActive] && IsPlayerInRangeOfPoint(playerid, 5.0, RadarInfo[r][rPos][0], RadarInfo[r][rPos][1], RadarInfo[r][rPos][2]))
				{
					if(RadarInfo[r][rMember] != fract) return SendClientMessage(playerid, 0x27C400FF, "Ошибка. Это не ваш радар.");
					radarid = true;
					DestroyObject(RadarInfo[r][rObject]);
					DestroyDynamicArea(RadarInfo[r][rZone]);
					RadarInfo[r][rMember] = 0;
					RadarInfo[r][rActive] = false;
					break;
				}
			}
			if(!radarid) SendClientMessage(playerid, 0x27C400FF, "Поблизости нет радаров.");
		}
		else return SendClientMessage(playerid, 0x27C400FF, "Нет доступа!");
		return 1;
	}
	if(strcmp(cmd, "/radar", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			new fract;
			if(PlayerInfo[playerid][pLeader]) fract = PlayerInfo[playerid][pLeader];
			else fract = PlayerInfo[playerid][pMember];
			new radarid = -1;
			for(new r; r < MAX_RADARS; r++)
			{
				if(!RadarInfo[r][rActive])
				{
					radarid = r;
					break;
				}
			}
			if(radarid >= MAX_RADARS) return SendClientMessage(playerid, 0x27C400FF, "Вы установили максимальное количество радаров.");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0x27C400FF, "Используйте: /radar [тип радара]");
				SendClientMessage(playerid, 0xDEDEDEFF, "1: городской");
				SendClientMessage(playerid, 0xDEDEDEFF, "2: пригородный");
				SendClientMessage(playerid, 0xDEDEDEFF, "3: шоссейный");
				return 1;
			}
			new type[64];
			switch(strval(tmp))
			{
			case 1: RadarInfo[radarid][rSpeed] = 60, type = "городской";
			case 2: RadarInfo[radarid][rSpeed] = 90, type = "пригородный";
			case 3: RadarInfo[radarid][rSpeed] = 110, type = "магистральный";
			default: return SendClientMessage(playerid, 0x27C400FF, "Неверный тип радара");
			}
			new Float:POS[4];
			GetPlayerPos(playerid, POS[0], POS[1], POS[2]);
			SetPPos(playerid, POS[0]-0.5, POS[1]-0.5, POS[2]);
			GetPlayerFacingAngle(playerid, POS[3]);
			RadarInfo[radarid][rObject] = CreateObject(10164, POS[0], POS[1], POS[2]-1.2, 0.0, 0.0, POS[3]);
			RadarInfo[radarid][rZone] = CreateDynamicCircle(POS[0], POS[1], 500.0, -1,-1,-1);
			RadarInfo[radarid][rActive] = true;
			RadarInfo[radarid][rMember] = fract;
			RadarInfo[radarid][rPos][0] = POS[0];
			RadarInfo[radarid][rPos][1] = POS[1];
			RadarInfo[radarid][rPos][2] = POS[2];
			format(string, 128, "Вы успешно установили %s радар.", type);
			SendClientMessage(playerid, -1, string);
		}
		else return SendClientMessage(playerid, 0x27C400FF, "Нет доступа!");
		return 1;
	}
	if(strcmp(cmd, "/myrkaoff", true) == 0)
	{
		new name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		if(strcmp(name, "Michael_Volodin", true) == 0)
		{
			switch(GetPVarInt(playerid,	"Myrka"))
			{
			case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "Показ репорта и чата отключен");
					SetPVarInt(playerid,"Myrka",1);
				}
			case 1:
				{
					SendClientMessage(playerid, COLOR_GREY, "Показ репорта и чата включен");
					SetPVarInt(playerid,"Myrka",0);
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/entermer", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 7)
		{
			if(entermer == 0)
			{
				entermer = 1;
				SendClientMessage(playerid,COLOR_RED,"Вход закрыт");
			}
			if(entermer == 1)
			{
				entermer = 0;
				SendClientMessage(playerid,COLOR_RED,"Вход открыт");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/enterlic", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 11)
		{
			if(enterlicen == 0)
			{
				enterlicen = 1;
				SendClientMessage(playerid,COLOR_RED,"Вход закрыт");
			}
			if(enterlicen == 1)
			{
				enterlicen = 0;
				SendClientMessage(playerid,COLOR_RED,"Вход открыт");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/jetpack", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование данной команды.");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
			SendClientMessage(playerid, COLOR_GREY, "Джетпак успешно создан.");
		}
		return 1;
	}
	if(strcmp(cmd, "/amusic", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 3) return true;
		new Float:X, Float:Y, Float:Z;
		if(MusicON == true)
		{
			foreach(Player, a)
			{
				if(GetPVarInt(a,"Music"))
				{
					DeletePVar(a,"Music");
					StopAudioStreamForPlayer(a);
				}
			}
			SendClientMessage(playerid,COLOR_LIGHTBLUE, "Музыка успешно выключена.");
			DestroyDynamicArea(AMusic_Zone);
			MusicON = false;
			return true;
		}
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_GREY, " Помощь: /amusic [радиус] [ссылка]");
		new Float:Distance = strval(tmp);
		new length = strlen(cmdtext);
		while((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid,COLOR_GREY, " Помощь: /amusic [радиус] [ссылка]");
		GetPlayerPos(playerid, X, Y, Z);
		MGM[4] = Distance; MGM[1] = X; MGM[2] = Y; MGM[3] = Z; URLW = result; MusicON = true;
		AMusic_Zone = CreateDynamicCircle(X, Y, Distance, -1, -1, -1);
		foreach(new i:Player)
		{
			if(IsPlayerInDynamicArea(i,AMusic_Zone))
			{
				if(!GetPVarInt(i,"Music"))
				{
					SetPVarInt(i,"Music",1);
					PlayAudioStreamForPlayer(i, result, 0.0, 0.0, 0.0, Distance, 0);
					SendClientMessage(i,COLOR_MUSICA,"Внимание! Вы попали в музыкальную зону сервера.");
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/acceptpizza", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] == 30)
		{
			new h,m,s;
			gettime(h,m,s);
			if(m == 0 || m == 5 || m == 30 || m == 45 && pizzadone[playerid] == 1)
			{
				SendClientMessage(playerid,-1,"Вы приняли заказ на доставку пиццы!");
				acceptedpizza[playerid] = true;
				SetPlayerCheckpoint(playerid,159.6780,588.8723,12.0000,5.0);
				pizzadone[playerid] = 0;
				pizzapoint[playerid] = false;
			}
			else
			{
				SendClientMessage(playerid,-1,"Заказов не поступало");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rentbike", true) == 0)
	{
		if(IsPlayerInRangeOfPoint(playerid, 10.0, 228.228,228.228,228.228))
		{
			if(verent[playerid] != 0) return SendClientMessage(playerid,COLOR_RED,"Вы уже арендовали велоcипед.");
			ShowPlayerDialog(playerid,277,DIALOG_STYLE_MSGBOX,"{0B8205}Аренда велосипедов","{FFFFFF}Вы действительно хотите арендовать велосипед?\nСтоимость аренды: 2500 рублей.","Согласен","Отмена");
		}
		else
		{ SendClientMessage(playerid,COLOR_RED,"Вы не находитесь у аренды велосипедов."); }
		return 1;
	}
	if(strcmp(cmd, "/alock", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			//if(dostup[playerid] != 1) return SPD(playerid,2934,DIALOG_STYLE_INPUT, "{00BFFF}[ {AFAFAF}Админ авторизация {00BFFF}]", "{FFFFFF}Введите Админ-Пароль, для потверждения того, что вы являетесь Администратором Сервера\n{FFFFFF}Пароль:", "Вход", "Отмена");
			new nearveh = GetNearestVehicle(playerid);
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(nearveh, cx, cy, cz);
			if(PlayerToPoint(4.0, playerid, cx, cy, cz))
			{
				UnLockCar(nearveh);
				IsLocked[nearveh] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "Машина успешно открыта.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены использовать эту команду!");
		}
		return 1;
	}
	if(strcmp(cmd, "/obmen", true) == 0)
	{
		if(PlayerInfo[playerid][pNotLic] == 0) return SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У Вас нет лицензии нотариуса.");
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, -1, "{b4b5b7}Используйте: /obmen [ID] [ID]");
			new eitzen[2];
			eitzen[0] = ReturnUser(tmp);
			if(IsPlayerConnected(eitzen[0]))
			{
				if(eitzen[0] != INVALID_PLAYER_ID)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) return SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: Нужно ввести ID обоих игроков."), SendClientMessage(playerid, -1, "{b4b5b7}Используйте: /obmen [ID] [ID]");
					eitzen[1] = ReturnUser(tmp);
					if(IsPlayerConnected(eitzen[1]))
					{
						new namedialog[50];
						GetPlayerName(eitzen[0], playername, sizeof(playername));
						format(namedialog, sizeof(namedialog), "Что отдаёт игрок 1 - %s(%d)", playername, eitzen[0]);
						ShowPlayerDialog(playerid, 1488, DIALOG_STYLE_LIST, namedialog, "Автомобилями", "Далее", "Отмена");
						SetPVarInt(playerid, "DOGOVOR1", eitzen[0]), SetPVarInt(playerid, "DOGOVOR2", eitzen[1]);
						return true;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/giveurlic", true) == 0 || strcmp(cmd, "/gul", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLeader] == 7)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, -1, "{b4b5b7}Используйте: /giveurlic [ID]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[giveplayerid][pNotLic] == 0)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали лицензию нотариуса игроку %s.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s выдал Вам лицензию нотариуса.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pNotLic] = 1;
						}
						else SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У игрока уже есть лицензия нотариуса.");
					}
				}
				else
				{
					SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: Игрока нет на сервере.");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У Вас нет доступа к этому.");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/takeurlic", true) == 0 || strcmp(cmd, "/tul", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLeader] == 7)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, -1, "{b4b5b7}Используйте: /takeurlic [ID]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[giveplayerid][pNotLic] == 1)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы забрали лицензию нотариуса у игрока %s.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s забрал у Вас лицензию нотариуса.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pNotLic] = 0;
						}
						else SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У игрока нет лицензии нотариуса.");
					}
				}
				else
				{
					SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: Игрока нет на сервере.");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, -1, "{b4b5b7}Ошибка: У Вас нет доступа к этому.");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/intram", true) == 0)
	{
		new newcar = GetNearestVehicle(playerid);
		new id_car = GetVehicleIdxByID(newcar);
		if(id_car != -1 && aData[id_car][aFrak] != 12) return SCM(@p,-1,"Необходимо использовать рядом с рабочим авто!");
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12 && PlayerInfo[playerid][pRank] >= 4)
			{
				PutPlayerInVeh(playerid, newcar, 0);
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вы не машинист");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/richlist", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 1)

			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
				return 1;
			}
			format(string, sizeof(string), "%s проверил богатых пользователей онлайн.", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			SendClientMessage(playerid, COLOR_GREEN, "Богачи онлайн:");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Проверка богачей...",d,m,y,h,mi,s,sendername);

			foreach(new i:Player)
			{
				if(IsPlayerConnected(i) && !IsPlayerNPC(i))
				{
					if(eGetPlayerMoney(i) >= 1 || PlayerInfo[i][pAccount] >= 1)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s (%d) - На руках: %d рублей | В банке: %d рублей", sendername, i, eGetPlayerMoney(i), PlayerInfo[i][pAccount]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setpos", true) == 0) // :D
	{
		if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, -1, "У вас нет прав на использование этой команды!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /setpos [x] [y] [z] [int] [world]");
		new Float:plX = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /setpos [x] [y] [z] [int] [world]");
		new Float:plY = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /setpos [x] [y] [z] [int] [world]");
		new Float:plZ = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /setpos [x] [y] [z] [int] [world]");
		new plInt = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /setpos [x] [y] [z] [int] [world]");
		new plWorkd = strval(tmp);
		SetPPos(playerid,plX,plY,plZ);
		SetPlayerInterior(playerid,plInt);
		SetPlayerVirtualWorld(playerid,plWorkd);
		SendClientMessage(playerid, COLOR_GRAD2, "Ваша позиция изменена");
		return 1;
	}
	if(strcmp(cmd, "/getmyposition", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:xx,Float:yy,Float:zz,strstr[128],Float:an;
			GetPlayerPos(playerid,xx,yy,zz);
			GetPlayerFacingAngle(playerid,an);
			format(strstr,sizeof(strstr),"X: %0.1f Y: %0.1f Z: %0.1f Angle: %0.1f  Int: %d",xx,yy,zz,an,GetPlayerInterior(playerid));
			SendClientMessage(playerid,COLOR_LIGHTRED,strstr);
		}
		return 1;
	}
	if(strcmp(cmd, "/co", true) == 0)
	{

		if(PlayerInfo[playerid][pAdmin]<=7){
			SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			return 1;
		}
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /co [ID объекта]");
			return 1;
		}
		if(totalo+1==OBJECTS)
		{
			SendClientMessage(playerid, COLOR_GREY, "Слишком много объектов, удалите старые...");
			return 1;
		}
		totalo=totalo+1;
		new Float:xS,Float:yS,Float:zS;
		GetPlayerPos(playerid,xS,yS,zS);
		object[totalo][oID] = CreateObject(strval(tmp),xS,(yS+2.0),zS,0.0,0.0,0.0,300.0);
		return 1;
	}

	///CREATEOBJECT

	if(strcmp(cmd, "/x", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin]<=6){
			SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			return 1;
		}
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /x [0,1]");
			return 1;
		}
		new Float:x1,Float:y1,Float:z1;
		for(new i=0;i<OBJECTS;i++)
		{
			if(IsValidObject(object[i][oID]))
			{
				GetObjectPos(object[i][oID],x1,y1,z1);
				if(IsPlayerInRangeOfPoint(playerid,2.0,x1,y1,z1))
				{
					if(strval(tmp)==0) { SetObjectPos(object[i][oID],(x1-0.1),y1,z1); }
					if(strval(tmp)==1) { SetObjectPos(object[i][oID],(x1+0.1),y1,z1); }
				}
			}
		}
		return 1;
	}

	///CREATEOBJECT

	if(strcmp(cmd, "/do1", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin]<=6){
			SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			return 1;
		}
		new Float:x1,Float:y1,Float:z1;
		for(new i=0;i<OBJECTS;i++)
		{
			if(IsValidObject(object[i][oID]))
			{
				GetObjectPos(object[i][oID],x1,y1,z1);
				if(IsPlayerInRangeOfPoint(playerid,2.0,x1,y1,z1))
				{
					DestroyObject(object[i][oID]);
					object[i][oID]=-1;
					totalo=totalo-1;
					return 1;
				}
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/y", true) == 0)
	{

		if(PlayerInfo[playerid][pAdmin]<=6){
			SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			return 1;
		}
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /y [0,1]");
			return 1;
		}
		new Float:x1,Float:y1,Float:z1;
		for(new i=0;i<OBJECTS;i++)
		{
			if(IsValidObject(object[i][oID]))
			{
				GetObjectPos(object[i][oID],x1,y1,z1);
				if(IsPlayerInRangeOfPoint(playerid,2.0,x1,y1,z1))
				{
					if(strval(tmp)==0) { SetObjectPos(object[i][oID],(x1),(y1-0.1),z1); }
					if(strval(tmp)==1) { SetObjectPos(object[i][oID],(x1),(y1+0.1),z1); }
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/z", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin]<=6){
			SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			return 1;
		}
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /z [0,1]");
			return 1;
		}
		new Float:x1,Float:y1,Float:z1;
		for(new i=0;i<OBJECTS;i++)
		{
			if(IsValidObject(object[i][oID]))
			{
				GetObjectPos(object[i][oID],x1,y1,z1);
				if(IsPlayerInRangeOfPoint(playerid,2.0,x1,y1,z1))
				{
					if(strval(tmp)==0) { SetObjectPos(object[i][oID],(x1),y1,(z1-0.1)); }
					if(strval(tmp)==1) { SetObjectPos(object[i][oID],(x1),y1,(z1+0.1)); }
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/rot", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin]<=6){
			SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			return 1;
		}
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /rot [Угол]");
			return 1;
		}
		new Float:x1,Float:y1,Float:z1;
		for(new i=0;i<OBJECTS;i++)
		{
			if(IsValidObject(object[i][oID]))
			{
				GetObjectPos(object[i][oID],x1,y1,z1);
				if(IsPlayerInRangeOfPoint(playerid,2.0,x1,y1,z1))
				{
					SetObjectRot(object[i][oID],0.0,0.0,strval(tmp));
				}
			}
		}
		return 1;
	}
	///ROADCLOSE/OPEN
	if(strcmp(cmd, "/perexvat", true) ==0)
	{
		if(!(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1))
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не начальство ГИБДД!");
			return 1;
		}
		if(PlayerInfo[playerid][pRank]<10)
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 10 ранга, чтобы использовать эту команду!");
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(ServerRoadClosed==0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы объявили план перехват");
			SendClientMessageToAll(COLOR_WHITE, "|_______________ Внимание! План ПЕРЕХВАТ ______________|");
			format(string, sizeof(string), "Объявлен план перехват! Посты в микрорайон Южный закрыты. План объявил: %s", sendername);
			SendClientMessageToAll(COLOR_NEWSF,string);
			ServerRoadClosed=1;
			return 1;
		}
		if(ServerRoadClosed==1)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы отменили план перехват");
			SendClientMessageToAll(COLOR_WHITE, "|_______________ Внимание! План ПЕРЕХВАТ ______________|");
			format(string, sizeof(string), "План перехват отменен! Посты в микрорайон Южный открыты. План отменил: %s", sendername);
			SendClientMessageToAll(COLOR_NEWSF,string);
			ServerRoadClosed=0;
			return 1;
		}
		SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка");
		return 1;
	}
	if(strcmp(cmd, "/perexvatarz", true) ==0)
	{
		if(!(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1))
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не начальство ГИБДД!");
			return 1;
		}
		if(PlayerInfo[playerid][pRank]<10)
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 10 ранга, чтобы использовать эту команду!");
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(ServerRoadClosed1==0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы объявили план перехват");
			SendClientMessageToAll(COLOR_WHITE, "|_______________ Внимание! План ПЕРЕХВАТ ______________|");
			format(string, sizeof(string), "Объявлен план перехват! Посты в город Арзамас закрыты. План объявил: %s", sendername);
			SendClientMessageToAll(COLOR_NEWSF,string);
			ServerRoadClosed1=1;
			return 1;
		}
		if(ServerRoadClosed1==1)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы отменили план перехват");
			SendClientMessageToAll(COLOR_WHITE, "|_______________ Внимание! План ПЕРЕХВАТ ______________|");
			format(string, sizeof(string), "План перехват отменен! Посты в город Арзамас открыты. План отменил: %s", sendername);
			SendClientMessageToAll(COLOR_NEWSF,string);
			ServerRoadClosed1=0;
			return 1;
		}
		SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка");
		return 1;
	}
	if(strcmp(cmd, "/perexvathw", true) ==0)
	{
		if(!(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1))
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не начальство ГИБДД!");
			return 1;
		}
		if(PlayerInfo[playerid][pRank]<10)
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 10 ранга, чтобы использовать эту команду!");
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(ServerRoadClosedHw==0)
		{
			new rtext[256];
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//
			{
				if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции (ГИБДД) "; }
				else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции (ГИБДД) "; }
				else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции (ГИБДД) "; }
				else { rtext = ""; }
			}
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы объявили план перехват");
			SendClientMessageToAll(COLOR_WHITE, "|_______________ Внимание! План ПЕРЕХВАТ ______________|");
			format(string, sizeof(string), "%s %s закрыл мост Анашан-Арзамас",rtext, sendername);
			SendClientMessageToAll(COLOR_GOVMIL,string);
			MoveObject(Most1, 1409.2732,168.6649,25.6431,9.0,0.0000000,0.0000000,500.0000000);
			ServerRoadClosedHw=1;
			return 1;
		}

		if(ServerRoadClosedHw==1)
		{
			new rtext[256];
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//
			{
				if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции (ОГИБДД) "; }
				else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции (ОГИБДД) "; }
				else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции (ОГИБДД) "; }
				else { rtext = ""; }
			}
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы отменили план перехват");
			SendClientMessageToAll(COLOR_WHITE, "|_______________ Внимание! План ПЕРЕХВАТ ______________|");
			format(string, sizeof(string), "%s %s открыл мост Анашан-Арзамас",rtext, sendername);
			SendClientMessageToAll(COLOR_GOVMIL,string);
			MoveObject(Most1, 1410.3279,168.0888,23.9684,9.0,0.0000000,0.0000000,500.0000000);
			ServerRoadClosedHw=0;
			return 1;
		}
		SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка");
		return 1;
	}
	///proezd
	if(strcmp(cmd, "/proezd", true) == 0)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerInRangeOfPoint(playerid,8.0,1290.1999512,-2581.0000000,35.9000015))  //IZ UZHNOOGO
		{
			if(ServerRoadClosed1 == 1) return SendClientMessage(playerid, COLOR_RED, "Извините, проезд закрыт по приказу ГИБДД!");
			new summa;
			summa=50;
			SetObjectRot(shlak3,0.0000000,0.0000000,268.0000000);
			format(string, sizeof(string), "* %s оплатил проезд", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerMoney(playerid,-summa);
			PlayerInfo[playerid][pCash]-=summa;
			Treasury+=summa;
			timershlak3 = SetTimer("ShlakTimer3",5000,false);
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid,8.0,2737.5000000,-1024.5000000,23.3999996)) //V UZHNIY
		{
			if(ServerRoadClosed1 == 1) return SendClientMessage(playerid, COLOR_RED, "Извините, проезд закрыт по приказу ГИБДД!");
			new summa;
			summa = 50;
			SetObjectRot(shlak4,0.0000000,0.0000000,0.0000000);
			format(string, sizeof(string), "* %s оплатил проезд", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerMoney(playerid,-summa);
			PlayerInfo[playerid][pCash]-=summa;
			Treasury+=summa;
			timershlak4 = SetTimer("ShlakTimer4",5000,false);
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid,8.0,2756.8994141,-1024.3994141,23.3999996)) //V UZHNIY
		{
			if(ServerRoadClosed1 == 1) return SendClientMessage(playerid, COLOR_RED, "Извините, проезд закрыт по приказу ГИБДД!");
			new summa;
			summa = 50;
			SetObjectRot(shlak5,0.0000000,0,0.0000000);
			format(string, sizeof(string), "* %s оплатил проезд", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerMoney(playerid,-summa);
			PlayerInfo[playerid][pCash]-=summa;
			Treasury+=summa;
			timershlak5 = SetTimer("ShlakTimer5",5000,false);
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid,8.0,1301.1198,2823.9722,12.3516))  //IZ UZHNOOGO
		{
			if(ServerRoadClosed1 == 1) return SendClientMessage(playerid, COLOR_RED, "Извините, проезд закрыт по приказу ГИБДД!");
			new summa;
			summa=50;
			SetObjectRot(shlak2,0.0,0.0,312.0000000);
			format(string, sizeof(string), "* %s оплатил проезд", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerMoney(playerid,-summa);
			PlayerInfo[playerid][pCash]-=summa;
			Treasury+=summa;
			timershlak2 = SetTimer("ShlakTimer2",5000,false);
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid,8.0,1295.6042,2830.0334,12.3516)) //V UZHNIY
		{
			if(ServerRoadClosed1 == 1) return SendClientMessage(playerid, COLOR_RED, "Извините, проезд закрыт по приказу ГИБДД!");
			new summa;
			summa = 50;
			SetObjectRot(shlak1,0.0,0.0,311.9952393);
			format(string, sizeof(string), "* %s оплатил проезд", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerMoney(playerid,-summa);
			PlayerInfo[playerid][pCash]-=summa;
			Treasury+=summa;
			timershlak1 = SetTimer("ShlakTimer1",5000,false);
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid,8.0,1301.1198,2823.9722,12.3516))  //IZ UZHNOOGO
		{
			if(ServerRoadClosed1 == 1) return SendClientMessage(playerid, COLOR_RED, "Извините, проезд закрыт по приказу ГИБДД!");
			new summa;
			summa=50;
			SetObjectRot(shlak2,0.0,0.0,312.0000000);
			format(string, sizeof(string), "* %s оплатил проезд", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerMoney(playerid,-summa);
			PlayerInfo[playerid][pCash]-=summa;
			Treasury+=summa;
			timershlak2 = SetTimer("ShlakTimer2",5000,false);
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid,8.0,1295.6042,2830.0334,12.3516)) //V UZHNIY
		{
			if(ServerRoadClosed1 == 1) return SendClientMessage(playerid, COLOR_RED, "Извините, проезд закрыт по приказу ГИБДД!");
			new summa;
			summa = 50;
			SetObjectRot(shlak1,0.0,0.0,311.9952393);
			format(string, sizeof(string), "* %s оплатил проезд", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerMoney(playerid,-summa);
			PlayerInfo[playerid][pCash]-=summa;
			Treasury+=summa;
			timershlak1 = SetTimer("ShlakTimer1",5000,false);
			return 1;
		}
	}
	if(strcmp(cmd, "/addhouse", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, -1, "У вас нет прав на использование этой команды!");
		if(createdh >= (MAX_HOUSE - 1)) return SendClientMessage(playerid, -1, "Создано максимальное кол-во домов");
		SPD(@p,1237,DIALOG_STYLE_LIST,"{ffffff}Создание дома (шаг 1/5)","{ffff00}На данном шаге вам предстоит выбрать тип валюты за которую будет продаватьсь дом\n{ffffff}1. Игровые рубли\n2. Донат очки","Далее","Отмена");
		return 1;
	}
	if(strcmp(cmd, "/delhouse", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 5) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		for(new b = 0; b < sizeof(House); b++)
		{
			if(IsPlayerInDynamicArea(@p, House[b][hZone]))
			{
				if(House[b][sale]) return SCM(@p,-1,"Дом куплен, для продолжения необходимо продать!");
				House[b][sale] = 0;
				House[b][stoim] = 0;
				House[b][rentable] = 0; // int
				House[b][rentsumma] = 0;
				House[b][lvl] = 0;
				House[b][HBank] = 0;
				House[b][lock] = 1;
				House[b][hType] = 0;				
				DestroyPickup(House[b][hPick]);	
				DestroyDynamicMapIcon(House[b][hMIcon1]);
				format_string = "";
				mysql_format(MySQLGo, format_string, 70, "DELETE FROM `houses` WHERE `id` = '%i'", House[b][houseidd]);
				mysql_function_query(MySQLGo, format_string, false, "", "");
				SFCM(playerid, -1, "Дом ID[%i] успешно удален.", House[b][houseidd]);
				House[b][houseidd] = 0;
				DestroyDynamicArea(House[b][hZone]);
				House[b][hZone] = -1;
				return 1;
			}
			else if(b == (sizeof(House)-1)) return SendClientMessage(playerid,-1,#Необходимо находиться рядом с домом!);
		}
	}
	if(strcmp(cmd, "/addbiz", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, -1, "У вас нет прав на использование этой команды!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addbiz [Сумма] [Уровень]");
		new money = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addbiz [Сумма] [Уровень]");
		new level = strval(tmp);
		createdb++;
		GetPlayerPos(playerid, BizInfo[createdb][HOx],BizInfo[createdb][HOy],BizInfo[createdb][HOz]);
		format(BizInfo[createdb][owner],32,"НА ПРОДАЖЕ!");
		BizInfo[createdb][sale] = 0;
		BizInfo[createdb][stoim] = money;
		BizInfo[createdb][lvl] = level;
		new iniOpen = ini_openFile("biznes.cfg");
		ini_setInteger(iniOpen, "Biznes", createdh);
		ini_closeFile(iniOpen);
		SaveBiz(createdb);
		Bizpic = CreatePickup(1239,2,BizInfo[createdb][HOx],BizInfo[createdb][HOy],BizInfo[createdb][HOz]);
		SendClientMessage(playerid, COLOR_GRAD2, "Бизнес успешно создан");

		format_string = "";
		new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
		format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

		mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','AddBiz For Sale','%d','None','%s')", NamePlayer[playerid], money, data);
		mysql_tquery(MySQLGo, format_string);
		return 1;
	}

	if(strcmp(cmd, "/housespawn", true) == 0)
	{
		if(!strlen(tmp) && PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return		SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /housecar [ID дома]");
			new Float:X,Float:Y,Float:Z,Float:Angle; GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
			new house = strval(tmp);
			House[house][SPx] = X;
			House[house][SPy] = Y;
			House[house][SPz] = Z;
			House[house][SPr] = Angle;
			SaveHouse(house);
			SendClientMessage(playerid, COLOR_GREY, "Координаты выхода из дома успешно установлены!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вы не администратор сервера");
			return 1;
		}
		return true;
	}

	if(strcmp(cmd, "/sellbiz", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pNewHouse]>0)
			{
				new summa;
				new houseid;
				houseid = PlayerInfo[playerid][pBiz];
				summa=BizInfo[houseid][stoim];
				format(string, sizeof(string), "Вы продали дом за %d рублей. Поздравляем!", summa);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				BizInfo[houseid][sale]=0;
				strmid(BizInfo[houseid][owner],"Продаётся",0,128,128);
				DestroyPickup(Bizpic);
				Bizpic = CreatePickup(1239,2,BizInfo[houseid][HOx],BizInfo[houseid][HOy],BizInfo[houseid][HOz]);
				PlayerInfo[playerid][pBiz]=0;
				GivePlayerMoney(playerid,summa);
				PlayerInfo[playerid][pCash]+=summa;
				OnNewBizUpdate(houseid);
				UpdatePlayerData(@p,"pPbiskey",0);
				return 1;
			}
			if(PlayerInfo[playerid][pBiz] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не владелец бизнеса!");
				return 1;
			}
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd,"/bizwithdraw",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pBiz] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не владелец бизнеса!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /bizwithdraw [сумма]");
				return 1;
			}
			new biz11;
			biz11 = strval(tmp);
			if(PlayerInfo[playerid][pBiz] == 1)
			{
				Biz1 -= biz11;
				GivePlayerMoney(playerid, biz11);
				PlayerInfo[playerid][pCash]+= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz1);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 2)
			{
				Biz2 -= biz11;
				GivePlayerMoney(playerid, biz11);
				PlayerInfo[playerid][pCash]+= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz2);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 3)
			{
				Biz3 -= biz11;
				GivePlayerMoney(playerid, biz11);
				PlayerInfo[playerid][pCash]+= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz3);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 4)
			{
				Biz4 -= biz11;
				GivePlayerMoney(playerid, biz11);
				PlayerInfo[playerid][pCash]+= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz4);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 5)
			{
				Biz5 -= biz11;
				GivePlayerMoney(playerid, biz11);
				PlayerInfo[playerid][pCash]+= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz5);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 6)
			{
				Biz6 -= biz11;
				GivePlayerMoney(playerid, biz11);
				PlayerInfo[playerid][pCash]+= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz6);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 7)
			{
				Biz7 -= biz11;
				GivePlayerMoney(playerid, biz11);
				PlayerInfo[playerid][pCash]+= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz7);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 8)
			{
				Biz8 -= biz11;
				GivePlayerMoney(playerid, biz11);
				PlayerInfo[playerid][pCash]+= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz8);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 9)
			{
				Biz9 -= biz11;
				GivePlayerMoney(playerid, biz11);
				PlayerInfo[playerid][pCash]+= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz9);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 10)
			{
				Biz10 -= biz11;
				GivePlayerMoney(playerid, biz11);
				PlayerInfo[playerid][pCash]+= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz10);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 11)
			{
				Biz11 -= biz11;
				GivePlayerMoney(playerid, biz11);
				PlayerInfo[playerid][pCash]+= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz11);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			SaveBizZap();
		}
		return 1;
	}

	//
	if(strcmp(cmd,"/gotoshaxta",true) == 0) return SetPPos(playerid, 1902.5840,1868.3502,13.2155);
	if(strcmp(cmd,"/gotocasino",true) == 0) return SetPPos(playerid, 1877.4114,2025.0762,15.1211);

	//
	if(strcmp(cmd,"/bizmessage",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pBiz] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не владелец бизнеса!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /bizmessage [текст (но не более 32 символов)]");
				return 1;
			}
			format(string, sizeof(string), "Вы сменили сообщение от владельца на *%s*", (result));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			strmid(BizInfo[PlayerInfo[playerid][pBiz]][messageb],(result),0,128,128);
			//SaveBiz(PlayerInfo[playerid][pBiz]);
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd,"/bizbank",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pBiz] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не владелец бизнеса!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /bizbank [сумма]");
				return 1;
			}
			new biz11;
			biz11 = strval(tmp);
			if(PlayerInfo[playerid][pBiz] == 1)
			{
				Biz1 += biz11;
				SaveBizZap();
				GivePlayerMoney(playerid,- biz11);
				PlayerInfo[playerid][pCash]-= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz1);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 2)
			{
				Biz2 += biz11;
				SaveBizZap();
				GivePlayerMoney(playerid,- biz11);
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz2);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 3)
			{
				Biz3 += biz11;
				SaveBizZap();
				GivePlayerMoney(playerid,- biz11);
				PlayerInfo[playerid][pCash]-= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz3);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 4)
			{
				Biz4 += biz11;
				SaveBizZap();
				GivePlayerMoney(playerid,- biz11);
				PlayerInfo[playerid][pCash]-= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz4);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 5)
			{
				Biz5 += biz11;
				SaveBizZap();
				GivePlayerMoney(playerid,- biz11);
				PlayerInfo[playerid][pCash]-= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz5);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 6)
			{
				Biz6 += biz11;
				SaveBizZap();
				GivePlayerMoney(playerid,- biz11);
				PlayerInfo[playerid][pCash]-= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz6);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 7)
			{
				Biz7 += biz11;
				SaveBizZap();
				GivePlayerMoney(playerid,- biz11);
				PlayerInfo[playerid][pCash]-= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz7);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 8)
			{
				Biz8 += biz11;
				SaveBizZap();
				GivePlayerMoney(playerid,- biz11);
				PlayerInfo[playerid][pCash]-= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz8);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 9)
			{
				Biz9 += biz11;
				SaveBizZap();
				GivePlayerMoney(playerid,- biz11);
				PlayerInfo[playerid][pCash]-= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz9);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 10)
			{
				Biz10 += biz11;
				SaveBizZap();
				GivePlayerMoney(playerid,- biz11);
				PlayerInfo[playerid][pCash]-= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz10);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pBiz] == 11)
			{
				Biz11 += biz11;
				SaveBizZap();
				GivePlayerMoney(playerid,- biz11);
				PlayerInfo[playerid][pCash]-= biz11;
				format(string, sizeof(string), "Вы положили %d рублей на счет бизнеса, теперь там %d рублей!", biz11,Biz11);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
		}
		return 1;
	}
	///SETHOUSESELL
	if(strcmp(cmd, "/sethsale", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_WHITE, "У вас нет прав для использования этой команды");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sethsale [id дома]");
		new i = GetHouseIdx(strval(tmp));
		if(i == -1) return SCM(@p,-1,"Произошла ошибка, получен индекс -1.");
		DestroyPickup(House[i][hPick]);
		DestroyDynamicMapIcon(House[i][hMIcon1]);
		House[i][sale] = 0;
		/*static const dlg_str[] = "{ffffff}Дом №{008cf0}%d{ffffff}\nСтоимость дома: {008cf0}%d %s\
						\n{ffffff}Необходимый уровень: {008cf0}%d";
	new str[sizeof(dlg_str)+30];
	format(str,sizeof(str),dlg_str,House[i][houseidd],House[i][stoim],(House[i][hType] == 1)?("{00ff00}Рублей"):("{ffff00}Донат очков"),House[i][lvl]);			
	Update3DTextLabelText(House[i][hLabel],COLOR_YELLOW,str);*/	
		House[i][hPick] = CreatePickup(1273, 23, House[i][HOx],House[i][HOy],House[i][HOz],-1);
		House[i][hMIcon1] = CreateDynamicMapIcon(House[i][HOx],House[i][HOy],House[i][HOz],31,0);
		SaveHouse(i);
		SCM(@p,-1,#Дом успешно продан!);
	}

	//==============================================================================
	if(strcmp(cmd, "/sethprod", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_WHITE, "У вас нет прав для использования этой команды");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sethprod [id дома] [1-закрыть / 0-открыть]");
		new i = GetHouseIdx(strval(tmp));
		if(i == -1) return SCM(@p,-1,"Произошла ошибка, получен индекс -1.");
		tmp = strtok(cmdtext, idx);
		new level = strval(tmp);
		if(level < 0 || level > 1) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sethprod [id дома] [1-закрыть / 0-открыть]");
		House[i][prodaja] = level;
		SaveHouse(i);
		SCM(@p,-1,"Статус запрета продажи успешно изменен.");
		return 1;
	}
	//==============================================================================
	///SETHOUSELEVEL
	if(strcmp(cmd, "/sethlevel", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_WHITE, "У вас нет прав для использования этой команды");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sethlevel [id дома] [Уровень]");
		new i = GetHouseIdx(strval(tmp));
		if(i == -1) return SCM(@p,-1,"Произошла ошибка, получен индекс -1.");
		tmp = strtok(cmdtext, idx);
		new level = strval(tmp);
		if(level < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sethlevel [id дома] [Уровень]");
		House[i][lvl] = level;
		/*if(!House[i][sale])
	{
		static const dlg_str[] = "{ffffff}Дом №{008cf0}%d{ffffff}\nСтоимость дома: {008cf0}%d %s\
							\n{ffffff}Необходимый уровень: {008cf0}%d";
		new str[sizeof(dlg_str)+30];
		format(str,sizeof(str),dlg_str,House[i][houseidd],House[i][stoim],(House[i][hType] == 1)?("{00ff00}Рублей"):("{ffff00}Донат очков"),House[i][lvl]);			
		Update3DTextLabelText(House[i][hLabel],COLOR_YELLOW,str);	
	}	*/
		SaveHouse(i);
		SCM(@p,-1,"Уровень покупки успешно изменен.");
		return 1;
	}
	///SETHSUMMA
	if(strcmp(cmd, "/sethsumma", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_WHITE, "У вас нет прав для использования этой команды");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sethsumma [id дома] [Сумма]");
		new i = GetHouseIdx(strval(tmp));
		if(i == -1) return SCM(@p,-1,"Произошла ошибка, получен индекс -1.");
		tmp = strtok(cmdtext, idx);
		new summa = strval(tmp);
		switch(House[i][hType])
		{
		case 1:
			{
				if(summa <= 0 && summa >= 10000000) return SCM(@p,0xff0000AA,"Стоимость дома не может превышать 10 млн. рублей.");
			}
		case 2:
			{
				if(summa <= 0 && summa >= 10000) return SCM(@p,0xff0000AA,"Стоимость дома не может превышать 10 000 донат очков.");
			}
		}
		House[i][stoim] = summa;
		/*if(!House[i][sale])
	{
		static const dlg_str[] = "{ffffff}Дом №{008cf0}%d{ffffff}\nСтоимость дома: {008cf0}%d %s\
							\n{ffffff}Необходимый уровень: {008cf0}%d";
		new str[sizeof(dlg_str)+30];
		format(str,sizeof(str),dlg_str,House[i][houseidd],House[i][stoim],(House[i][hType] == 1)?("{00ff00}Рублей"):("{ffff00}Донат очков"),House[i][lvl]);			
		Update3DTextLabelText(House[i][hLabel],COLOR_YELLOW,str);	
	}*/
		SaveHouse(i);
		SCM(@p,-1,"Стоимость дома успешно изменена.");
		return 1;
	}
	if(strcmp(cmd, "/houselock", true) == 0)
	{
		if(PlayerInfo[playerid][pNewHouse] == 0 && PlayerInfo[playerid][pRentHouse] == 0) return SendClientMessage(playerid, COLOR_GRAD2, "У вас нету дома!");
		if(!GetPVarType(@p,#P_House_Id)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не в доме!");
		new houseid;
		if(PlayerInfo[playerid][pNewHouse] > 0) { houseid = GetHouseIdx(PlayerInfo[playerid][pNewHouse]); }
		if(PlayerInfo[playerid][pRentHouse] > 0) { houseid = GetHouseIdx(PlayerInfo[playerid][pRentHouse]); }

		if(House[houseid][lock] == 0) 
		{
			House[houseid][lock]=1;
			SaveHouse(houseid);
			SendClientMessage(playerid,COLOR_GRAD1,"Вы закрыли дом"); 
		}
		else
		{
			House[houseid][lock] = 0;
			SaveHouse(houseid);
			SendClientMessage(playerid,COLOR_GRAD1,"Вы открыли дом"); 
		}
		return 1;
	}
	if(!strcmp(cmd,"/buyhouse",true))
	{
		if(KGet(playerid)) return SendClientMessage(playerid, -1, "Для начала продайте свою квартиру.");
		if(!PlayerInfo[playerid][pPasport]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет паспорта! Получите его в паспортном столе!");
		if(PlayerInfo[playerid][pNewHouse] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "У вас уже есть дом!");
		new i = GetPVarInt(@p,#P_House_Id);
		if(House[i][prodaja]) return SCM(@p,-1,#Этот дом не продается!);
		if(House[i][sale]) return SendClientMessage(playerid, COLOR_GRAD1, "Дом уже куплен.");
		if(PlayerInfo[playerid][pRentHouse]) return SendClientMessage(playerid, COLOR_GRAD1, "Вы арендуете дом! Воспользуйтесь командой  '/unrent'.");
		switch(House[i][hType])
		{
		case 1:if(PlayerInfo[playerid][pCash] < House[i][stoim]) return SendClientMessage(playerid, COLOR_GRAD1, "У вас недостаточно денег!");
		case 2:if(PlayerInfo[@p][pDm] < House[i][stoim]) return SendClientMessage(playerid, COLOR_GRAD1, "У вас недостаточно донат-монет!");
		}			
		if(PlayerInfo[playerid][pLevel] < House[i][lvl]) return SendClientMessage(playerid, COLOR_GRAD1, "У вас недостаточный уровень!");
		PlayerInfo[playerid][pNewHouse] = House[i][houseidd]; 
		if(House[i][hType] == 1)
		{	
			PlayerInfo[playerid][pCash] -= House[i][stoim]; 
			GivePlayerMoney(playerid,-House[i][stoim]); 
		}
		else if(House[i][hType] == 2)
		{
			PlayerInfo[playerid][pDm] -= House[i][stoim]; 
		}
		PlayerInfo[playerid][pSpawnP] = 1;
		House[i][sale] = 1;
		new name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		format(House[i][owner],MAX_PLAYER_NAME,name);
		DestroyPickup(House[i][hPick]);
		DestroyDynamicMapIcon(House[i][hMIcon1]);
		House[i][hMIcon1] = CreateDynamicMapIcon(House[i][HOx],House[i][HOy],House[i][HOz],32,0);
		House[i][hPick] = CreatePickup(1272, 23, House[i][HOx],House[i][HOy],House[i][HOz],-1);
		SendClientMessage(playerid, COLOR_GREY, "Вы успешно приобрели данную недвижимость.");
		SendClientMessage(playerid, COLOR_GREY, "Для того, чтобы ознакомиться с доступными командами, воспользуйтесь командой {FFFFFF}'/househelp'{808080}.");
		SaveHouse(i);
		DeletePVar(@p,#P_House_Id);
		return 1;
	}
	if(strcmp(cmd,"/rentable",true)==0)
	{
		if(!PlayerInfo[playerid][pNewHouse]) return SendClientMessage(playerid, COLOR_GRAD1, "У вас нет дома/квартиры!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /rentable [0 - Запретить, 1 - Разрешить]");
		new typer;
		typer=strval(tmp);
		if(typer < 0 || typer > 1) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /rentable [0 - Запретить, 1 - Разрешить]");
		new i = GetHouseIdx(PlayerInfo[playerid][pNewHouse]);
		switch(typer)
		{
		case 0: 
			{
				House[i][rentable] = 0;
				SendClientMessage(playerid, COLOR_GRAD1, "Вы запретили аренду");
			}
		case 1: 
			{
				House[i][rentable] = 1;
				SendClientMessage(playerid, COLOR_GRAD1, "Вы разрешили аренду");
			}
		}
		SaveHouse(i);
		return 1;
	}
	if(strcmp(cmd,"/checkrent",true)==0)
	{
		if(!PlayerInfo[playerid][pNewHouse]) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не владелец дома!");
		new ttextt[32];
		new name[MAX_PLAYER_NAME],tick[2];
		format(string,sizeof(string),"SELECT `pNickname`,`rent_0`,`rent_1` FROM `accounts` WHERE `pRentHouse` = '%d'",PlayerInfo[playerid][pNewHouse]);
		new Cache:p = mysql_query(MySQLGo,string);	
		if(cache_num_rows())
		{
			glob_str = "{ffffff}Имя:\t\t\t\t\tДата начала аренды:\t\t\tДата окончания аренды:\n";
			for(new i = 0; i < cache_num_rows(); i++)
			{
				cache_get_field_content(i, "pNickname", name, MySQLGo, 128);
				tick[0] = cache_get_field_content_int(i, "rent_0", MySQLGo);
				tick[1] = cache_get_field_content_int(i, "rent_1", MySQLGo);
				if(IsPlayerConnected(GetPlayerID(name))) { ttextt = "[{2CE40C}Онлайн{ffffff}]"; }
				else if(!IsPlayerConnected(GetPlayerID(name))) { ttextt = "[{E40C0C}Оффлайн{ffffff}]"; }
				format(glob_str,sizeof(glob_str),"%s%s%s\t\t%s\t\t\t%s\n",glob_str,name,ttextt,date("%dd.%mm.%yyyy  %hh:%ii",tick[0]),date("%dd.%mm.%yyyy  %hh:%ii",tick[1]));
			}
			SPD(@p,0,DIALOG_STYLE_MSGBOX,"Список игроков арендующих ваш дом",glob_str,"Ок","");
			cache_delete(p);
			return 1;
		}
		else return SCM(@p,-1,"Ваш дом никто не арендует");	
	}
	if(!strcmp(cmd,"/chbank",true))
	{
		if(!PlayerInfo[playerid][pNewHouse]) return SendClientMessage(playerid, COLOR_GRAD1, "У вас нет дома/квартиры!");
		new i = GetHouseIdx(PlayerInfo[playerid][pNewHouse]);
		if(i == -1) return SCM(@p,-1,"Произошла ошибка обратитесь к администрации");
		new days = floatround(House[i][HBank]/(24*300));
		glob_str = "";
		format(glob_str,sizeof(glob_str),"Текущий остаток на счету вашего дома %d рублей. Достаточно для оплаты на %d дня(-ей)",House[i][HBank],days);
		SCM(@p,COLOR_GRAD1,glob_str);
		return 1;
	}
	if(!strcmp(cmd,"/setrent",true))
	{
		if(!PlayerInfo[playerid][pNewHouse]) return SendClientMessage(playerid, COLOR_GRAD1, "У вас нет дома/квартиры!");
		new i = GetHouseIdx(PlayerInfo[playerid][pNewHouse]);
		if(i == -1) return SCM(@p,-1,"Произошла ошибка обратитесь к администрации");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /setrent [сумма]");
		new summ = strval(tmp);
		if(summ < 0 || summ > 250) return SCM(@p,-1,"Ошибка сумма должна быть в пределах от 1 до 250 рублей");
		House[i][rentsumma] = summ;
		static const str0[] = "Вы успешно изменили стоимость аренды вашего дома. Теперь она составляет %d рублей в час.";
		new str[sizeof(str0)+3];
		format(str,sizeof(str),str0,summ);
		SCM(@p,-1,str);
		SaveHouse(i);
		return 1;
	}
	if(!strcmp(cmd,"/rent",true))
	{
		if(!PlayerInfo[playerid][pPasport]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет паспорта! Получите его в паспортном столе!");
		if(PlayerInfo[playerid][pNewHouse] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "У вас есть дом!");
		if(!GetPVarType(@p,#P_House_Id)) return SCM(@p,-1,#Необходимо находиться около дома);
		if(PlayerInfo[playerid][pRentHouse] && !GetPVarInt(@p,#P_HArend)) return SCM(@p,-1,"Вы уже арендуете дом!");	
		new i = GetPVarInt(@p,#P_House_Id);
		if(!House[i][rentable]) return SendClientMessage(playerid, COLOR_GRAD1, "Дом нельзя арендовать");
		if(PlayerInfo[playerid][pRentHouse] == House[i][houseidd] && GetPVarInt(@p,#P_HArend))
		{
			SPD(@p,1242,DIALOG_STYLE_LIST,"Аренда жилого помещения(продление)","{ffffff}1. 1 день\n2. 3 дня\n3. 1 неделя\n4. 2 недели","Выбор","Отмена");
			return 1;
		}
		SPD(@p,1242,DIALOG_STYLE_LIST,"Аренда жилого помещения","{ffffff}1. 1 день\n2. 3 дня\n3. 1 неделя\n4. 2 недели","Выбор","Отмена");
		return 1;
	}
	if(strcmp(cmd,"/unrent",true)==0)
	{
		if(!PlayerInfo[playerid][pPasport]) return SendClientMessage(playerid, COLOR_GREY, "У вас нету паспорта! Получите его в паспортном столе!");
		if(!PlayerInfo[playerid][pRentHouse]) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не арендуете дом!");
		PlayerInfo[playerid][pRentHouse] = 0;
		PlayerInfo[playerid][pRent][0] = 0;
		PlayerInfo[playerid][pRent][1] = 0;
		UpdatePlayerData(@p,"rent_0",0);
		UpdatePlayerData(@p,"rent_1",0);
		UpdatePlayerData(@p,"pRentHouse",0);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы выселились из дома!");
		return 1;
	}
	if(strcmp(cmd, "/carcheck", true) == 0)
	{
		if(!PlayerToPoint(10.0, playerid, -302.4022,1162.1583,579.0229)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не в дежурной части");
		if(PlayerInfo[@p][pMember] == 1 || PlayerInfo[@p][pLeader] == 1)
		ShowPlayerDialog(playerid,5254,DIALOG_STYLE_INPUT,"{2E9AFE}Информация","{FFFFFF}Введите гос.номер машины о которой хотите узнать информацию:","OK","Закрыть");
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/fuelcars", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				for(new c = 0; c < MAX_VEHICLES; c++)
				{
					aData[c][aFuel] = GasMax;
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы заправили все автомобили сервера!");
				format_string = "";
				new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
				format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

				mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Fuelcars All Cars','0','None','%s')", NamePlayer[playerid], data);
				mysql_tquery(MySQLGo, format_string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, "У Вас недостаточно прав для того, чтобы использовать эту команду!");
				return 1;
			}
		}
		return 1;
	}
	//=======================Шашки для Такси========================================
	/*(if(strcmp("/taxi", cmdtext, true, 10) == 0)
		{
				new objectid = CreateObject(19308, 0, 0, 0, 0, 0, 0);
				if(PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pMember] == 10)
				AttachObjectToVehicle(objectid, GetPlayerVehicleID(playerid), 0.009999, -0.019999, 0.944999, 0.000000, 0.000000, 0.000000);
				SendClientMessage(playerid, COLOR_RED, "Шашечка установлена.");
				return 1;
		}*/
	//==============================================================================
	//==========================/car================================================

	//==============================================================================
	if(strcmp(cmd, "/m4s", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Cотрудники МЧС онлайн:");
			foreach(new i:Player)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pMember] == 19 || PlayerInfo[i][pLeader] == 19) // определяет пожарников онлайн
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Сотрудники ПЧ №3: %s", sendername);
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/zek", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В тюрьме сидят:");
			foreach(new i:Player)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pJailed] != 0)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "*Заключённому %s[%d] осталось %d секунд.",sendername, i, PlayerInfo[i][pJailTime]);
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/бах", true) == 0)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) && PlayerInfo[playerid][pAdmin] >= 5)
		{
			SendClientMessage(playerid, COLOR_GREY, "Информация: /бах [ID игрока]");
			return 1;
		}
		giveplayerid = strval(tmp);
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 8)
			{
				if(IsPlayerConnected(giveplayerid))
				{
					SetPlayerHealth(giveplayerid, 10);
					new Float:boomx, Float:boomy, Float:boomz;
					GetPlayerPos(giveplayerid,boomx, boomy, boomz);
					CreateExplosion(boomx, boomy , boomz, 7, 10);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					SendClientMessage(playerid,COLOR_GREY,"Ба-бах!!!");
				}
				else
				{
					format(string, sizeof(string), "Этот игрок оффлайн", giveplayerid);
					SendClientMessage(playerid, COLOR_RED, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, "У тебя нет прав на использование этой команды!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "Тебе нужно залогиниться!");
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/entercar", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /entercar [carid]");
				return 1;
			}
			new testcar = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				PutPlayerInVeh(playerid, testcar, 0);
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование этой команды!");
			}
		}
		return 1;
	}

	//==============================================================================
	if(strcmp(cmd, "/dw", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /dw [id игрока] [текст] ");
			return 1;
		}
		if(PlayerInfo[playerid][pRank] < 3)
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 3 рангом, чтобы быть использовать сообщения от диспетчера !");
			return 1;
		}
		if(PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pLeader] != 1 && PlayerInfo[playerid][pMember] != 4 && PlayerInfo[playerid][pLeader] != 4 &&
				PlayerInfo[playerid][pMember] != 6 && PlayerInfo[playerid][pLeader] != 6 && PlayerInfo[playerid][pMember] != 19 && PlayerInfo[playerid][pLeader] != 19	)
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в УМВД / ГИБДД / СМП / СВПЧ №31!");
			return 1;
		}
		if(!PlayerToPoint(10.0, playerid, -302.4022,1162.1583,579.0229)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не в дежурной части");
		new tmpp=ReturnUser(tmp);
		if(IsPlayerConnected(tmpp))
		{
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /dw [id игрока] [текст] ");
				return 1;
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[tmpp][pPnumber] == 0)			{
				SendClientMessage(playerid, COLOR_GREY, "У игрока отсуствует мобильный телефон!");
				return 1;			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
			{
				format(string, sizeof(string), "{007fff}[Ответ от диспетчера ГИБДД]:{FFFFFF} %s ",result);
				SendClientMessage(tmpp, COLOR_YELLOW, string);
			}
			else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
			{
				format(string, sizeof(string), "{0000ff}[Ответ от диспетчера УМВД]:{FFFFFF} %s ",result);
				SendClientMessage(tmpp, COLOR_YELLOW, string);
			}
			else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
			{
				format(string, sizeof(string), "{dc143c}[Ответ от диспетчера СМП]:{FFFFFF} %s ",result);
				SendClientMessage(tmpp, COLOR_YELLOW, string);
			}
			else if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
			{
				format(string, sizeof(string), "{ffbf00}[Ответ от диспетчера СВПЧ №31]:{FFFFFF} %s ",result);
				SendClientMessage(tmpp, COLOR_YELLOW, string);
			}
			new sendername2[255];
			GetPlayerName(tmpp, sendername2, sizeof(sendername2));
			format(string, sizeof(string), "Собщение от диспетчера к %s: (id: %d) %s ", sendername2,tmpp,result);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			PlayerPlaySound(tmpp, 1084, 0.0, 0.0, 0.0);
			printf("Ответ Диспетчера ot %s k %s:",sendername,sendername2,result);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети!");
			return 1;
		}
		return 1;
	}
	//==============================================================================
	if(!strcmp(cmd, "/dance", true))
	{
		tmp = strtok(cmdtext, idx);
		animationplayed = strval(tmp);
		if(!strlen(tmp)||animationplayed < 1 || animationplayed > 4)
		{
			SendClientMessage(playerid,COLOR_SYSTEM," Синтаксис: /dance [1-4]");
			return 1;
		}
		switch(animationplayed)
		{
		case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/iznas", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "У вас нет прав для использования данной команды!");
			return 1;
		}
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /iznas [ID]");
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new para1 = strval(tmp);
		if(GetDistanceBetweenPlayers(playerid, para1) < 2)
		{
			if(playerid==para1)
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Никого нет рядом!");
				return 1;
			}
			else
			{
				SendClientMessage(playerid,0xFF0000AA,"Вы изнасиловали игрока!");
				SendClientMessage(para1,0x00FF00AA,"Вас изнасиловали!");
				ApplyAnimation(para1,"SNM","SPANKINGW",4.1,0,1,1,1,1);
				ApplyAnimation(playerid,"SNM","SPANKEDW",4.1,0,1,1,1,1);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid,0xFF0000AA,"Вы слишком далеко!");
		}
		return 1;
	}
	//==============================================================================
	if(!strcmp(cmdtext, "/startsweep", true))
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] != 21)
			{
				SendClientMessage(playerid, COLOR_RED, "Вы не работаете мойщиком улиц!");
				return 1;
			}
			if(PlayerIsSweeping[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, "Вы уже рабоатете");
				return 1;
			}
			if(IsASweeper(idcar))
			{
				PlayerIsSweeping[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				new randomize;
				randomize = random(sizeof(gSweeperPoints));
				SetPlayerCheckpoint(playerid, gSweeperPoints[randomize][0], gSweeperPoints[randomize][1], gSweeperPoints[randomize][2], 5.0);
				SendClientMessage(playerid, COLOR_WHITE, "Шеф: Bремя пошло, работаем, работаем, работаем.");
			}
		}
		return 1;
	}
	//==============================================================================
	if(!strcmp(cmdtext, "/stopsweep", true))
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerIsSweeping[playerid] == 1)
			{
				DisablePlayerCheckpoint(playerid);
				PlayerIsSweeping[playerid] = 0;
				SendClientMessage(playerid, COLOR_WHITE, " Вы закончили работу ");
				if(IsASweeper(idcar))
				{
					RemovePlayerFromVehicle(playerid);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, "Вы не работаете ");
				return 1;
			}
		}
		return 1;
	}
	//===================================КОЛХОЗНИКИ=================================
	if(!strcmp(cmdtext, "/startharvest", true))
	{
		if(IsPlayerConnected(playerid))
		{
			if(!IsAHarvest(idcar))
			{
				SendClientMessage(playerid, COLOR_RED, "Вы не на ферме ");
				return 1;
			}
			if(FarmerVar[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, "Вы уже работаете ");
				return 1;
			}
			if(FarmerPickup[playerid][0] >= 22)
			{
				SendClientMessage(playerid, COLOR_WHITE, " Заработанная сумма прибавится к зарплате ");
				return 1;
			}
			if(PlayerInfo[playerid][pJob] == 19)
			{
				JustStarted[playerid] = 1;
				FarmerVar[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				OnPlayerEnterCheckpoint(playerid);
				SendClientMessage(playerid, COLOR_YELLOW, "Фермер: Твоя задача ездить на комбайне по полю и косить урожай.");
			}
		}
		return 1;
	}
	//==============================================================================
	if(!strcmp(cmdtext, "/stopharvest", true))
	{
		if(IsPlayerConnected(playerid))
		{
			if(FarmerVar[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Вы не начинали работать ");
				return 1;
			}
			if(PlayerInfo[playerid][pJob] == 19)
			{
				if(IsAHarvest(idcar))
				{
					TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
				}
				if(FarmerPickup[playerid][0] >= 1 && FarmerPickup[playerid][0] <= 22)
				{
					FarmerPickup[playerid][0]--;
				}
				JustStarted[playerid] = 0;
				FarmerVar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmdtext, "/animhelp", true) == 0)
	{
		SendClientMessage(playerid, COLOR_GREEN,"/animped /animdance /handsup");
		SendClientMessage(playerid, COLOR_GREEN,"Остальные анимации: /animairport /animat /animbar /animball /animfire /animbeach");
		SendClientMessage(playerid, COLOR_GREEN,"/animbp /animinf /animbiked /animbh /animfood /animbikelp /animms /animbikes /animcar");
		SendClientMessage(playerid, COLOR_GREEN,"/animbikev /animbmx /animbikedbz /animchase /animbox /animbomber /animbsp /animcamera ");
		SendClientMessage(playerid, COLOR_GREEN,"/animgym /animpara /animgangs /animlookers /animcarchat /animcasino /animbuddy /animbus");
		SendClientMessage(playerid, COLOR_GREEN,"/animcarry /animintshop /animjst /animkart /animkissing /animknife /animlapdan /animdend");
		SendClientMessage(playerid, COLOR_GREEN,"/animmedic /animmtb /animmusc /animotb /animpark /animsaw /animchoppa");
		SendClientMessage(playerid, COLOR_GREEN,"/animclothes /animcoach /animcolt /animcopa /animcod /animcrack");
		SendClientMessage(playerid, COLOR_GREEN,"/animhelp2 - вторая часть анимаций.");
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/animhelp2", true) == 0)
	{
		SendClientMessage(playerid, COLOR_GREEN,"Вторая часть анимаций:");
		SendClientMessage(playerid, COLOR_GREEN,"/animcrib /animdealer /animdildo /animdozer  /animdrivebys /animfat");
		SendClientMessage(playerid, COLOR_GREEN,"/animfightb /animfightc /animfightd /animfighte /animfinale /animfinale2 /animflamef");
		SendClientMessage(playerid, COLOR_GREEN,"/animflowers /animghands /animfw /animghetto /animgog /animgraffity /animgreya /animgren");
		SendClientMessage(playerid, COLOR_GREEN,"/animhaircut /animheist  /animinthouse /animintoffice /animplayerdbf /animplayidles /animpolice");
		SendClientMessage(playerid, COLOR_GREEN,"/animpool /animpoor /animpython /animquad /animquadbz /animrapping  /animrifle /animriot /animrobbank ");
		SendClientMessage(playerid, COLOR_GREEN,"/animrocket /animrustler /animryder /animscrat /animshamal /animshop /animskate /animshotgun");
		SendClientMessage(playerid, COLOR_GREEN,"/animvortex /animtec /animtrain /animsil /animtattoo  /animsmoking /animsniper /animspray /animstrip");
		SendClientMessage(playerid, COLOR_GREEN,"/animbath /animsweet /animswim /animsword /animtank /animtruck /animuzi  /animvan /animvending");
		SendClientMessage(playerid, COLOR_GREEN,"/animway /animweap");
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/курить", true) == 0) {
		xxx = strtok(cmdtext, idx);
		animationplayed = strval(xxx);
		if(animationplayed < 1 || animationplayed > 2)
		{
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /курить [1-2]");
			return 1;
		}
		if(PlayerInfo[playerid][pSigs] <= 0)
		{
			SendClientMessage(playerid,COLOR_GREY," У вас нет сигарет. Вы можете купить их в магазине г. Южного.");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"SMOKING", "M_smklean_loop",4.1,1,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",4.1,1,1,1,1,1);
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
		format(string, sizeof(string), "* %s курит", sendername);
		ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerInfo[playerid][pSigs]--;
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/handsup", true) == 0)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			if(PlayerCuffed[playerid] == 0 && PlayerTied[playerid] == 0 && KnockedDown[playerid] == 0)
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s поднимает руки вверх", sendername);
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
		}
	}
	//---------------------------------[Стили Боя]----------------------------------
	if(strcmp(cmdtext, "/style", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] < 1 || PlayerInfo[playerid][pAdmin] < 1) return 1;
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		SendClientMessage(playerid, COLOR_GREY, "Для того, чтобы изменить стиль боя, введите: {FFFFFF}/style [1-5]");
		return 1;
	}
	if(strcmp(cmdtext, "/style 1", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] < 1 || PlayerInfo[playerid][pAdmin] < 1) return 1;
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы изменили стиль боя на 'Бокс'");
		return 1;
	}
	if(strcmp(cmdtext, "/style 2", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] < 1 || PlayerInfo[playerid][pAdmin] < 1) return 1;
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы изменили стиль боя на 'Кунг-Фу'");
		return 1;
	}
	if(strcmp(cmdtext, "/style 3", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] < 1 || PlayerInfo[playerid][pAdmin] < 1) return 1;
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы изменили стиль боя на 'keenhead'");
		return 1;
	}
	if(strcmp(cmdtext, "/style 4", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] < 1 || PlayerInfo[playerid][pAdmin] < 1) return 1;
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы изменили стиль боя на 'Грэпплинг'");
		return 1;
	}
	if(strcmp(cmdtext, "/style 5", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] < 1 || PlayerInfo[playerid][pAdmin] < 1) return 1;
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы изменили стиль боя на 'Элбоу'");
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/piss", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] < 1 || PlayerInfo[playerid][pAdmin] < 1) return 1;
		SetPlayerSpecialAction(playerid,68);
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/smoking", true) == 0)
	{
		SetPlayerSpecialAction(playerid,21);
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/танец", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,COLOR_GRAD1 ,"Используйте: /танец [1-3]");
				return 1;
			}
			animationplayed = strval(tmp);
			if(animationplayed < 1 || animationplayed > 3) {
				SendClientMessage(playerid,COLOR_GRAD1 ,"Используйте: /танец [1-3]");
				return 1;
			}
			if(animationplayed == 1) {
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
			} else if(animationplayed == 2) {
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
			} else if(animationplayed == 3) {
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
			}
			return 1;
		}
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/animbar", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1 ,"Используйте: /animbar [1-12]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 12) {
			SendClientMessage(playerid,COLOR_GRAD1 ,"Используйте: /animbar [1-12]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BAR","Barcustom_get",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BAR","Barcustom_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BAR","Barcustom_order",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BAR","Barserve_bottle",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BAR","Barserve_glass",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BAR","Barserve_in",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BAR","Barserve_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BAR","Barserve_order",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"BAR","BARman_idle",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animball", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animball [1-11]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 11) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animball [1-11]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BASEBALL","Bat_1",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BASEBALL","Bat_2",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BASEBALL","Bat_2",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BASEBALL","Bat_4",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BASEBALL","Bat_block",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BASEBALL","Bat_Hit_1",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BASEBALL","Bat_Hit_2",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BASEBALL","Bat_Hit_3",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BASEBALL","Bat_IDLE",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"BASEBALL","Bat_M",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"BASEBALL","BAT_PART",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animfire", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfire [1-13]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 13) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfire [1-13]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Fire1",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Fire2",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Fire3",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BD_FIRE","BD_GF_Wave",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Panic_01",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Panic_02",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Panic_03",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Panic_04",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Panic_Loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"BD_FIRE","M_smklean_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"BD_FIRE","M_smklean_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
		} else if(animationplayed == 13) {
			ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbeach", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbeach [1-5]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 5) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbeach [1-5]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BEACH","bather",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BEACH","BD_Fire3",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BEACH","ParkSit_W_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animinf", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animinf [1-4]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animinf [1-4]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BF_injection","BF_getin_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BF_injection","BF_getin_RHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BF_injection","BF_getout_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BF_injection","BF_getout_RHS",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbiked", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbiked [1-18]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 18) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbiked [1-18]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Back",4.1,0,1,1,1,1);
		}else if(animationplayed == 1) {
			ApplyAnimation(playerid,"BIKED","BIKEd_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BIKED","BIKEd_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BIKED","BIKEd_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BIKED","BIKEd_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BIKED","BIKEd_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BIKED","BIKEd_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BIKED","BIKEd_hit",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BIKED","BIKEd_jumponL",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"BIKED","BIKEd_jumponR",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"BIKED","BIKEd_kick",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"BIKED","BIKEd_passenger",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"BIKED","BIKEd_pushes",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Ride",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"BIKED","BIKEd_shuffle",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Still",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbp", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbp [1-7]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 7) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbp [1-7]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"benchpress","gym_bp_down",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"benchpress","gym_bp_getoff",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"benchpress","gym_bp_geton",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"benchpress","gym_bp_up_A",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"benchpress","gym_bp_up_B",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"benchpress","gym_bp_up_smooth",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbh", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbh [1-18]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 18) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbh [1-18]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Back",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_hit",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_jumponL",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_jumponR",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_kick",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_passenger",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_pushes",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Ride",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Still",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animms", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animms [1-8]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 8) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animms [1-8]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Back",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_getoffRHS",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animfood", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfood [1-33]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 33) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfood [1-33]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"FOOD","EAT_Chicken",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"FOOD","EAT_Pizza",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"FOOD","EAT_Vomit_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"FOOD","EAT_Vomit_SK",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"FOOD","FF_Dam_Bkw",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"FOOD","FF_Dam_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"FOOD","FF_Dam_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"FOOD","FF_Dam_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"FOOD","FF_Die_Bkw",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"FOOD","FF_Die_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"FOOD","FF_Die_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"FOOD","FF_Die_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Eat1",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Eat2",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Eat3",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_In_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_In_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Look",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Out_180",4.1,0,1,1,1,1);
		}else if(animationplayed == 23) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Out_L_180",4.1,0,1,1,1,1);
		}else if(animationplayed == 24) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Out_R_180",4.1,0,1,1,1,1);
		}else if(animationplayed == 25) {
			ApplyAnimation(playerid,"FOOD","SHP_Thank",4.1,0,1,1,1,1);
		}else if(animationplayed == 26) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 27) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift",4.1,0,1,1,1,1);
		}else if(animationplayed == 28) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 29) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 30) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_Out",4.1,0,1,1,1,1);
		}else if(animationplayed == 31) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Out",4.1,0,1,1,1,1);
		}else if(animationplayed == 32) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Pose",4.1,0,1,1,1,1);
		}else if(animationplayed == 33) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Return",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animms", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animms [1-41]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 41) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animms [1-41]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"MISC","bitchslap",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"MISC","BMX_celebrate",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"MISC","BMX_comeon",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"MISC","bmx_idleloop_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"MISC","bmx_idleloop_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"MISC","bmx_talkleft_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"MISC","bmx_talkleft_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"MISC","bmx_talkleft_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"MISC","bmx_talkright_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"MISC","bmx_talkright_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"MISC","bmx_talkright_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"MISC","bng_wndw",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"MISC","bng_wndw_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"MISC","Case_pickup",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"MISC","door_jet",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"MISC","GRAB_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"MISC","GRAB_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"MISC","Hiker_Pose",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"MISC","Hiker_Pose_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"MISC","Idle_Chat_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"MISC","KAT_Throw_K",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"MISC","KAT_Throw_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 23) {
			ApplyAnimation(playerid,"MISC","KAT_Throw_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 24) {
			ApplyAnimation(playerid,"MISC","PASS_Rifle_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 25) {
			ApplyAnimation(playerid,"MISC","PASS_Rifle_Ped",4.1,0,1,1,1,1);
		}else if(animationplayed == 26) {
			ApplyAnimation(playerid,"MISC","PASS_Rifle_Ply",4.1,0,1,1,1,1);
		}else if(animationplayed == 27) {
			ApplyAnimation(playerid,"MISC","pickup_box",4.1,0,1,1,1,1);
		}else if(animationplayed == 28) {
			ApplyAnimation(playerid,"MISC","Plane_door",4.1,0,1,1,1,1);
		}else if(animationplayed == 29) {
			ApplyAnimation(playerid,"MISC","Plane_exit",4.1,0,1,1,1,1);
		}else if(animationplayed == 30) {
			ApplyAnimation(playerid,"MISC","Plane_hijack",4.1,0,1,1,1,1);
		}else if(animationplayed == 31) {
			ApplyAnimation(playerid,"MISC","Plunger_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 32) {
			ApplyAnimation(playerid,"MISC","Plyrlean_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 33) {
			ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,1,1,1,1);
		}else if(animationplayed == 34) {
			ApplyAnimation(playerid,"MISC","Run_Dive",4.1,0,1,1,1,1);
		}else if(animationplayed == 35) {
			ApplyAnimation(playerid,"MISC","Scratchballs_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 36) {
			ApplyAnimation(playerid,"MISC","SEAT_LR",4.1,0,1,1,1,1);
		}else if(animationplayed == 37) {
			ApplyAnimation(playerid,"MISC","Seat_talk_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 38) {
			ApplyAnimation(playerid,"MISC","Seat_talk_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 39) {
			ApplyAnimation(playerid,"MISC","SEAT_watch",4.1,0,1,1,1,1);
		}else if(animationplayed == 40) {
			ApplyAnimation(playerid,"MISC","smalplane_door",4.1,0,1,1,1,1);
		}else if(animationplayed == 41) {
			ApplyAnimation(playerid,"MISC","smlplane_door",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbikelp", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbikelp [1-9]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 9) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbikelp [1-9]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BIKELEAP","bk_blnce_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BIKELEAP","bk_blnce_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BIKELEAP","bk_jmp",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BIKELEAP","bk_rdy_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BIKELEAP","bk_rdy_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BIKELEAP","struggle_cesar",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BIKELEAP","struggle_driver",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BIKELEAP","truck_driver",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BIKELEAP","truck_getin",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbikes", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbikes [1-18]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 18) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbikes [1-18]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BIKES","BIKEs_Back",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BIKES","BIKEs_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BIKES","BIKEs_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BIKES","BIKEs_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BIKES","BIKEs_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BIKES","BIKEs_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BIKES","BIKEs_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BIKES","BIKEs_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BIKES","BIKEs_hit",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"BIKES","BIKEs_jumponL",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"BIKES","BIKEs_jumponR",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"BIKES","BIKEs_kick",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"BIKES","BIKEs_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"BIKES","BIKEs_passenger",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"BIKES","BIKEs_pushes",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"BIKES","BIKEs_Ride",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"BIKES","BIKEs_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"BIKES","BIKEs_Still",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbikev", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbikev [1-18]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 18) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbikev [1-18]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_Back",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_hit",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_jumponL",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_jumponR",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_kick",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_passenger",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_pushes",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_Ride",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_Still",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbmx", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbmx [1-18]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 18) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbmx [1-18]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BMX","BMX_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BMX","BMX_bunnyhop",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BMX","BMX_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BMX","BMX_driveby_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BMX","BMX_driveby_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BMX","BMX_fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BMX","BMX_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BMX","BMX_pushes",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BMX","BMX_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"BMX","BMX_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"BMX","BMX_jumponL",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"BMX","BMX_jumponR",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"BMX","BMX_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"BMX","BMX_pedal",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"BMX","BMX_Ride",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"BMX","BMX_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"BMX","BMX_sprint",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"BMX","BMX_still",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbikedbz", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbikedbz [1-4]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbikedbz [1-4]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_BWD",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_FWD",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_RHS",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animchase", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animchase [1-25]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 25) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animchase [1-25]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"MD_CHASE","Carhit_Hangon",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"MD_CHASE","Carhit_Tumble",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"MD_CHASE","donutdrop",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_L1",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_L2",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_L3",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_R1",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_R2",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_R3",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"MD_CHASE","Hangon_Stun_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"MD_CHASE","Hangon_Stun_Turn",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_2_HANG",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Jmp_BL",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Jmp_F",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_BL",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Die_BL",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Die_F",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_F",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Roll",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Roll_F",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Punch",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Punch_F",4.1,0,1,1,1,1);
		}else if(animationplayed == 23) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Shot_F",4.1,0,1,1,1,1);
		}else if(animationplayed == 24) {
			ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,1);
		}else if(animationplayed == 25) {
			ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Loop",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbox", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbox [1-10]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 10) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbox [1-10]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BOX","boxhipin",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BOX","boxhipup",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BOX","boxshdwn",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BOX","boxshup",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BOX","bxhipwlk",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BOX","bxhwlki",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BOX","bxshwlk",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BOX","bxshwlki",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BOX","bxwlko",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"BOX","catch_box",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbomber", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbomber [1-6]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 6) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbomber [1-6]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_2Idle",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_Out",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbsp", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbsp [1-41]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 41) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbsp [1-41]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_def_jump_shot",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_def_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_def_stepL",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_def_stepR",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Gli",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Gli_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Lnch",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Lnch_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Lnd",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_idle",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_idle2",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_idle2_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_idle_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Cancel",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Cancel_0",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_End",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 23) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Net_Dnk_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 24) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,1,1,1,1);
		}else if(animationplayed == 25) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 26) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_react_miss",4.1,0,1,1,1,1);
		}else if(animationplayed == 27) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_react_score",4.1,0,1,1,1,1);
		}else if(animationplayed == 28) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_run",4.1,0,1,1,1,1);
		}else if(animationplayed == 29) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_run_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 30) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 31) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_L_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 32) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 33) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_R_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 34) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_walk",4.1,0,1,1,1,1);
		}else if(animationplayed == 35) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 36) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_L_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 37) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 38) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_R_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 39) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_walk_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 40) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_walk_start",4.1,0,1,1,1,1);
		}else if(animationplayed == 41) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_walk_start_O",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animcamera", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcamera [1-14]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 14) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcamera [1-14]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"CAMERA","camcrch_cmon",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"CAMERA","camcrch_idleloop",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"CAMERA","camcrch_stay",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"CAMERA","camcrch_to_camstnd",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"CAMERA","camstnd_idleloop",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"CAMERA","camstnd_lkabt",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"CAMERA","camstnd_to_camcrch",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"CAMERA","piccrch_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"CAMERA","piccrch_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"CAMERA","piccrch_take",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"CAMERA","picstnd_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"CAMERA","picstnd_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"CAMERA","picstnd_take",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animgym", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animgym [1-24]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 24) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animgym [1-24]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_celebrate",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_faster",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_getoff",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_geton",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_pedal",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_slow",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_still",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_jog_falloff",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_shadowbox",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_celebrate",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_falloff",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_getoff",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_geton",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_jog",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_sprint",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_tired",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_walk",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_walk_falloff",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"GYMNASIUM","Pedals_fast",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"GYMNASIUM","Pedals_med",4.1,0,1,1,1,1);
		}else if(animationplayed == 23) {
			ApplyAnimation(playerid,"GYMNASIUM","Pedals_slow",4.1,0,1,1,1,1);
		}else if(animationplayed == 24) {
			ApplyAnimation(playerid,"GYMNASIUM","Pedals_still",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animpara", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpara [1-22]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 22) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpara [1-22]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"PARACHUTE","FALL_skyDive",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_Accel",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"PARACHUTE","FALL_skyDive_DIE",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_decel",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_decel_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_float",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_float_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Land",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Land_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Land_Water",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Land_Water_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_open",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_open_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Rip_Land_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Rip_Loop_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Rip_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_steerL",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_steerL_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_steerR",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_steerR_O",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animgangs", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animgangs [1-22]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 22) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animgangs [1-22]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"GANGS","DEALER_IDLE",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"GANGS","drnkbr_prtl",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"GANGS","drnkbr_prtl_F",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"GANGS","DRUGS_BUY",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"GANGS","hndshkaa",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"GANGS","hndshkca",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"GANGS","hndshkcb",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"GANGS","hndshkda",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"GANGS","hndshkea",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"GANGS","Invite_No",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"GANGS","Invite_Yes",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"GANGS","leanIDLE",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"GANGS","leanIN",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"GANGS","leanOUT",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkA",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkB",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkCt",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkD",4.1,0,1,1,1,1);
		}else if(animationplayed == 23) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkE",4.1,0,1,1,1,1);
		}else if(animationplayed == 24) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkF",4.1,0,1,1,1,1);
		}else if(animationplayed == 25) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkG",4.1,0,1,1,1,1);
		}else if(animationplayed == 26) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkH",4.1,0,1,1,1,1);
		}else if(animationplayed == 27) {
			ApplyAnimation(playerid,"GANGS","prtial_hndshk_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 28) {
			ApplyAnimation(playerid,"GANGS","prtial_hndshk_biz_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 29) {
			ApplyAnimation(playerid,"GANGS","shake_cara",4.1,0,1,1,1,1);
		}else if(animationplayed == 30) {
			ApplyAnimation(playerid,"GANGS","shake_carK",4.1,0,1,1,1,1);
		}else if(animationplayed == 31) {
			ApplyAnimation(playerid,"GANGS","shake_carSH",4.1,0,1,1,1,1);
		}else if(animationplayed == 32) {
			ApplyAnimation(playerid,"GANGS","smkcig_prtl",4.1,0,1,1,1,1);
		}else if(animationplayed == 33) {
			ApplyAnimation(playerid,"GANGS","smkcig_prtl_F",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animlowrider", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animlowrider [1-39]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 39) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animlowrider [1-39]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"LOWRIDER","F_smklean_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_bdbnce",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_hair",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_hurry",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_idleloop",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_idle_to_l0",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l0_bnce",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l0_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l0_to_l1",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l12_to_l0",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l1_bnce",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l1_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l1_to_l2",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l2_bnce",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l2_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l2_to_l3",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l345_to_l1",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l3_bnce",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l3_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l3_to_l4",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l4_bnce",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l4_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 23) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l4_to_l5",4.1,0,1,1,1,1);
		}else if(animationplayed == 24) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l5_bnce",4.1,0,1,1,1,1);
		}else if(animationplayed == 25) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l5_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 26) {
			ApplyAnimation(playerid,"LOWRIDER","M_smklean_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 27) {
			ApplyAnimation(playerid,"LOWRIDER","M_smkstnd_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 28) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkB",4.1,0,1,1,1,1);
		}else if(animationplayed == 29) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkC",4.1,0,1,1,1,1);
		}else if(animationplayed == 30) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkD",4.1,0,1,1,1,1);
		}else if(animationplayed == 31) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkE",4.1,0,1,1,1,1);
		}else if(animationplayed == 32) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkF",4.1,0,1,1,1,1);
		}else if(animationplayed == 33) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkG",4.1,0,1,1,1,1);
		}else if(animationplayed == 34) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkH",4.1,0,1,1,1,1);
		}else if(animationplayed == 35) {
			ApplyAnimation(playerid,"LOWRIDER","RAP_A_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 36) {
			ApplyAnimation(playerid,"LOWRIDER","RAP_B_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 37) {
			ApplyAnimation(playerid,"LOWRIDER","RAP_C_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 38) {
			ApplyAnimation(playerid,"LOWRIDER","Sit_relaxed",4.1,0,1,1,1,1);
		}else if(animationplayed == 39) {
			ApplyAnimation(playerid,"LOWRIDER","Tap_hand",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animlookers", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animlookers [1-25]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 25) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animlookers [1-25]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkaround_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkaround_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkaround_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkup_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkup_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkup_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkup_point",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_cower",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_hide",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_point",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_shout",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"ON_LOOKERS","Pointup_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"ON_LOOKERS","Pointup_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"ON_LOOKERS","Pointup_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"ON_LOOKERS","Pointup_shout",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"ON_LOOKERS","point_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"ON_LOOKERS","point_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"ON_LOOKERS","point_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"ON_LOOKERS","shout_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 23) {
			ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 24) {
			ApplyAnimation(playerid,"ON_LOOKERS","shout_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 25) {
			ApplyAnimation(playerid,"ON_LOOKERS","shout_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 26) {
			ApplyAnimation(playerid,"ON_LOOKERS","shout_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 27) {
			ApplyAnimation(playerid,"ON_LOOKERS","wave_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 28) {
			ApplyAnimation(playerid,"ON_LOOKERS","wave_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 25) {
			ApplyAnimation(playerid,"ON_LOOKERS","wave_out",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animcarchat", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcarchat [1-20]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 20) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcarchat [1-20]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"CAR_CHAT","carfone_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"CAR_CHAT","carfone_loopA",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"CAR_CHAT","carfone_loopA_to_B",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"CAR_CHAT","carfone_loopB",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"CAR_CHAT","carfone_loopB_to_A",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"CAR_CHAT","carfone_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_BR",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_FL",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_FR",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc2_FL",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc3_BR",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc3_FL",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc3_FR",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BL",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BR",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_FL",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_FR",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"CAR_CHAT","car_talkm_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"CAR_CHAT","car_talkm_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"CAR_CHAT","car_talkm_out",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animcasino", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcasino [1-23]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 23) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcasino [1-23]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"CASINO","cards_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"CASINO","cards_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"CASINO","cards_lose",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"CASINO","cards_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"CASINO","cards_pick_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"CASINO","cards_pick_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"CASINO","cards_raise",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"CASINO","cards_win",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"CASINO","manwinb",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"CASINO","manwind",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"CASINO","Roulette_bet",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"CASINO","Roulette_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"CASINO","Roulette_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"CASINO","Roulette_lose",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"CASINO","Roulette_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"CASINO","Roulette_win",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"CASINO","Slot_bet_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"CASINO","Slot_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"CASINO","Slot_lose_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"CASINO","Slot_Plyr",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"CASINO","Slot_wait",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"CASINO","Slot_win_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 23) {
			ApplyAnimation(playerid,"CASINO","wof",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbuddy", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbuddy [1-5]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 5) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbuddy [1-5]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BUDDY","buddy_crouchfire",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BUDDY","buddy_crouchreload",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BUDDY","buddy_fire",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BUDDY","buddy_fire_poor",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BUDDY","buddy_reload",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbus", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbus [1-9]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 9) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbus [1-9]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BUS","BUS_close",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BUS","BUS_getin_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BUS","BUS_getin_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BUS","BUS_getout_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BUS","BUS_getout_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BUS","BUS_jacked_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BUS","BUS_open",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BUS","BUS_open_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BUS","BUS_pullout_LHS",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animcar", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcar [1-11]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 11) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcar [1-11]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"CAR","Fixn_Car_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"CAR","Fixn_Car_Out",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"CAR","flag_drop",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"CAR","Sit_relaxed",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"CAR","Tap_hand",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"CAR","Tyd2car_bump",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"CAR","Tyd2car_high",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"CAR","Tyd2car_low",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"CAR","Tyd2car_med",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"CAR","Tyd2car_TurnL",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"CAR","Tyd2car_TurnR",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animcarry", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcarry [1-7]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 7) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcarry [1-7]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"CARRY","liftup",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"CARRY","liftup05",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"CARRY","liftup105",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"CARRY","putdwn",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"CARRY","putdwn05",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"CARRY","putdwn105",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animintshop", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animintshop [1-8]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 8) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animintshop [1-8]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"INT_SHOP","shop_cashier",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"INT_SHOP","shop_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"INT_SHOP","shop_lookA",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"INT_SHOP","shop_lookB",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"INT_SHOP","shop_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"INT_SHOP","shop_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"INT_SHOP","shop_pay",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"INT_SHOP","shop_shelf",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animjst", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animjst [1-4]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animjst [1-4]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"JST_BUISNESS","girl_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"JST_BUISNESS","girl_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"JST_BUISNESS","player_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"JST_BUISNESS","smoke_01",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animkart", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animkart [1-4]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animkart [1-4]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"KART","KART_getin_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"KART","KART_getin_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"KART","KART_getout_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"KART","KART_getout_RHS",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animkissing", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animkissing [1-14]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 14)
		{
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animkissing [1-14]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"KISSING","BD_GF_Wave",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"KISSING","gfwave2",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"KISSING","GF_CarArgue_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"KISSING","GF_CarArgue_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"KISSING","GF_CarSpot",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"KISSING","GF_StreetArgue_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"KISSING","GF_StreetArgue_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"KISSING","gift_give",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_03",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"KISSING","Playa_Kiss_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"KISSING","Playa_Kiss_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"KISSING","Playa_Kiss_03",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animknife", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animknife [1-14]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 14) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animknife [1-14]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Die",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"KNIFE","KILL_Knife_Player",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"KNIFE","KILL_Partial",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"KNIFE","knife_2",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"KNIFE","knife_3",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"KNIFE","knife_4",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"KNIFE","Knife_G",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"KNIFE","knife_hit_1",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"KNIFE","knife_hit_2",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"KNIFE","knife_IDLE",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"KNIFE","knife_hit_3",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"KNIFE","knife_part",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"KNIFE","WEAPON_knifeidle",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animlapdan", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animlapdan [1-6]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 6) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animlapdan [1-6]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"LAPDAN1","LAPDAN_D",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"LAPDAN1","LAPDAN_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"LAPDAN2","LAPDAN_D",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"LAPDAN2","LAPDAN_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"LAPDAN3","LAPDAN_D",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"LAPDAN3","LAPDAN_P",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animdend", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animdend [1-8]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 8) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animdend [1-8]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"MD_END","END_SC1_PLY",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"MD_END","END_SC1_RYD",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"MD_END","END_SC1_SMO",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"MD_END","END_SC1_SWE",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"MD_END","END_SC2_PLY",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"MD_END","END_SC2_RYD",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"MD_END","END_SC2_SMO",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"MD_END","END_SC2_SWE",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animmedic", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animmedic [1]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 1) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animmedic [1]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animmtb", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animmtb [1-18]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 18) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animmtb [1-18]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"MTB","MTB_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"MTB","MTB_bunnyhop",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"MTB","MTB_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"MTB","MTB_driveby_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"MTB","MTB_driveby_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"MTB","MTB_fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"MTB","MTB_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"MTB","MTB_pushes",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"MTB","MTB_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"MTB","MTB_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"MTB","MTB_jumponL",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"MTB","MTB_jumponR",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"MTB","MTB_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"MTB","MTB_pedal",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"MTB","MTB_Ride",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"MTB","MTB_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"MTB","MTB_sprint",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"MTB","MTB_still",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animmusc", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animmusc [1-17]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 17) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animmusc [1-17]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"MUSCULAR","MscleWalkst_armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"MUSCULAR","MscleWalkst_Csaw",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"MUSCULAR","Mscle_rckt_run",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"MUSCULAR","Mscle_rckt_walkst",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"MUSCULAR","Mscle_run_Csaw",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleIdle",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleIdle_armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleIdle_Csaw",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleIdle_rocket",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleRun",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleRun_armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleSprint",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleWalk",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleWalkstart",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleWalk_armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"MUSCULAR","Musclewalk_Csaw",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"MUSCULAR","Musclewalk_rocket",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animotb", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animotb [1-11]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 11) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animotb [1-11]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"OTB","betslp_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"OTB","betslp_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"OTB","betslp_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"OTB","betslp_tnk",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"OTB","wtchrace_cmon",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"OTB","wtchrace_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"OTB","wtchrace_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"OTB","wtchrace_lose",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"OTB","wtchrace_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"OTB","wtchrace_win",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animpark", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpark [1-3]");
				return true;
			}
			animationplayed = strval(tmp);
			if(animationplayed < 1 || animationplayed > 3) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpark [1-3]");
				return true;
			}
			if(animationplayed == 1) {
				ApplyAnimation(playerid,"PARK","Tai_Chi_in",4.1,0,1,1,1,1);
			} else if(animationplayed == 2) {
				ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.1,0,1,1,1,1);
			} else if(animationplayed == 3) {
				ApplyAnimation(playerid,"PARK","Tai_Chi_Out",4.1,0,1,1,1,1);
			}
			return true;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/animpaul", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpaul [1-12]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 12) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpaul [1-12]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"PAULNMAC","Piss_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"PAULNMAC","Piss_out",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"PAULNMAC","PnM_Argue1_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"PAULNMAC","PnM_Argue1_B",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"PAULNMAC","PnM_Argue2_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"PAULNMAC","PnM_Argue2_B",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"PAULNMAC","PnM_Loop_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"PAULNMAC","PnM_Loop_B",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"PAULNMAC","wank_in",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"PAULNMAC","wank_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"PAULNMAC","wank_out",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animsaw", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animsaw [1-10]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 12) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animsaw [1-10]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_1",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_2",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_3",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_G",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_1",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_2",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_3",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"CHAINSAW","IDLE_csaw",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"CHAINSAW","WEAPON_csawlo",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animchoppa", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animchoppa [1-18]");
			return true;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 18) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animchoppa [1-18]");
			return true;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_bunnyhop",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_driveby_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_driveby_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_jumponL",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_jumponR",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_pedal",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_Pushes",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_ride",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_sprint",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_Still",4.1,0,1,1,1,1);
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/animclothes", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animclothes [1-13]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 13) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animclothes [1-13]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Buy",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"CLOTHES","CLO_In",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Out",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Hat",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_In",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_In_O",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Legs",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Out",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Out_O",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Shoes",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Torso",4.1,0,1,1,1,1);
		} else if(animationplayed == 13) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Watch",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animcoach", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcoach [1-6]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 6) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcoach [1-6]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"COACH","COACH_inL",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"COACH","COACH_inR",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"COACH","COACH_opnL",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"COACH","COACH_opnR",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"COACH","COACH_outL",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"COACH","COACH_outR",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animcolt", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcolt [1-7]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 7) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcolt [1-7]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"COLT45","2guns_crouchfire",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"COLT45","colt45_crouchfire",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"COLT45","colt45_crouchreload",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"COLT45","colt45_fire",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"COLT45","colt45_fire_2hands",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"COLT45","colt45_reload",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"COLT45","sawnoff_reload",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animcopa", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcopa [1-12]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 12) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcopa[1-12]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_in",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_nod",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_out",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_shake",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_in",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_nod",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_out",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_shake",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_think",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animcod", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcod [1-4]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcod [1-4]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_B",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_FT",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_R",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animcrack", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcrack[1-9]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 9) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcrack [1-9]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"CRACK","crckdeth1",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"CRACK","crckdeth3",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"CRACK","crckdeth4",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"CRACK","crckidle1",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"CRACK","crckidle3",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animcrib", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcrib [1-5]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 5) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animcrib [1-5]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"CRIB","CRIB_Console_Loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"CRIB","PED_Console_Loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"CRIB","PED_Console_Loose",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"CRIB","PED_Console_Win",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animdance", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animdance [1-13]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 13) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animdance [1-13]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"DANCING","bd_clap",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"DANCING","bd_clap1",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"DANCING","dance_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"DANCING","DAN_Up_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"DANCING","dnce_M_c",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"DANCING","dnce_M_d",4.1,0,1,1,1,1);
		} else if(animationplayed == 13) {
			ApplyAnimation(playerid,"DANCING","dnce_M_e",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animdealer", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animdealer [1-7]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 7) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animdealer [1-7]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"DEALER","DEALER_DEAL",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"DEALER","DEALER_IDLE",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"DEALER","DEALER_IDLE_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"DEALER","DEALER_IDLE_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"DEALER","DEALER_IDLE_03",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"DEALER","DRUGS_BUY",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"DEALER","shop_pay",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animdildo", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animdildo [1-9]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 9) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animdildo [1-9]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"DILDO","DILDO_1",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"DILDO","DILDO_2",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"DILDO","DILDO_3",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"DILDO","DILDO_block",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"DILDO","DILDO_G",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"DILDO","DILDO_Hit_1",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"DILDO","DILDO_Hit_2",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"DILDO","DILDO_Hit_3",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"DILDO","DILDO_IDLE",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animdozer", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animdozer [1-9]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 9) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animdozer [1-9]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"DOZER","DOZER_Align_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"DOZER","DOZER_Align_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"DOZER","DOZER_getin_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"DOZER","DOZER_getin_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"DOZER","DOZER_getout_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"DOZER","DOZER_getout_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"DOZER","DOZER_Jacked_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"DOZER","DOZER_Jacked_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"DOZER","DOZER_pullout_LHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animdrivebys", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animdrivebys [1-8]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 8) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animdrivebys [1-8]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyLHS_Bwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyLHS_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyRHS_Bwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyRHS_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyTop_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyTop_RHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animfat", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfat [1-17]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 17) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfat [1-17]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"FAT","FatIdle",4.1,0,1,1,1,1);
		}else if(animationplayed == 1) {
			ApplyAnimation(playerid,"FAT","FatIdle_armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"FAT","FatIdle_Csaw",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"FAT","FatIdle_Rocket",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"FAT","FatRun",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"FAT","FatRun_armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"FAT","FatRun_Csaw",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"FAT","FatRun_Rocket",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"FAT","FatSprint",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"FAT","FatWalk",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"FAT","FatWalkstart",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"FAT","FatWalkstart_Csaw",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"FAT","FatWalkSt_armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"FAT","FatWalkSt_Rocket",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"FAT","FatWalk_armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"FAT","FatWalk_Csaw",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"FAT","FatWalk_Rocket",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"FAT","IDLE_tired",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animfightb", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfightb [1-10]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 10) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfightb [1-10]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_1",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_2",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_3",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_block",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_G",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_IDLE",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_M",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"FIGHT_B","HitB_1",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"FIGHT_B","HitB_2",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"FIGHT_B","HitB_3",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animfightc", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfightc [1-12]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 12) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfightc [1-12]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_1",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_2",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_3",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_block",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_blocking",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_G",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_IDLE",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_M",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_Spar",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"FIGHT_C","HitC_1",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"FIGHT_C","HitC_2",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"FIGHT_C","HitC_3",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animfightd", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfightd [1-10]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 10) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfightd [1-10]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_1",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_2",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_block",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_G",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_IDLE",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_M",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"FIGHT_D","HitD_1",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"FIGHT_D","HitD_2",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"FIGHT_D","HitD_3",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animfighte", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfighte [1-4]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfighte [1-4]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"FIGHT_E","FightKick",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"FIGHT_E","FightKick_B",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"FIGHT_E","Hit_fightkick",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"FIGHT_E","Hit_fightkick_B",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animfinale", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfinale [1-15]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 15) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfinale [1-15]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"FINALE","FIN_Climb_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 1) {
			ApplyAnimation(playerid,"FINALE","FIN_Cop1_ClimbOut2",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"FINALE","FIN_Cop1_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"FINALE","FIN_Cop1_Stomp",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"FINALE","FIN_Hang_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"FINALE","FIN_Hang_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"FINALE","FIN_Hang_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"FINALE","FIN_Hang_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"FINALE","FIN_Jump_On",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"FINALE","FIN_Land_Car",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"FINALE","FIN_Land_Die",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"FINALE","FIN_LegsUp",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"FINALE","FIN_LegsUp_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"FINALE","FIN_LegsUp_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"FINALE","FIN_LegsUp_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"FINALE","FIN_Let_Go",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animfinale2", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfinale2 [1-8]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 8) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfinale2 [1-8]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"FINALE2","FIN_Cop1_ClimbOut",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Fall",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Shot",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Swing",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"FINALE2","FIN_Cop2_ClimbOut",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"FINALE2","FIN_Switch_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"FINALE2","FIN_Switch_S",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animflamef", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animflamef [1-1]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 1) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animflamef [1-1]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"FLAME","FLAME_fire",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animflowers", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animflowers [1-3]");
				return 1;
			}
			animationplayed = strval(tmp);
			if(animationplayed < 1 || animationplayed > 3) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animflowers [1-3]");
				return 1;
			}
			if(animationplayed == 1) {
				ApplyAnimation(playerid,"Flowers","Flower_attack",4.1,0,1,1,1,1);
			} else if(animationplayed == 2) {
				ApplyAnimation(playerid,"Flowers","Flower_attack_M",4.1,0,1,1,1,1);
			} else if(animationplayed == 3) {
				ApplyAnimation(playerid,"Flowers","Flower_Hit",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/animghands", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animghands [1-20]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 20) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animghands [1-20]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"GHANDS","gsign3LH",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"GHANDS","gsign5LH",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"GHANDS","LHGsign1",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"GHANDS","LHGsign2",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"GHANDS","LHGsign3",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"GHANDS","LHGsign4",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"GHANDS","LHGsign5",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"GHANDS","RHGsign1",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"GHANDS","RHGsign2",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"GHANDS","RHGsign3",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"GHANDS","RHGsign4",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"GHANDS","RHGsign5",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animfw", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfw [1-9]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 9) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animfw [1-9]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"Freeweights","gym_barbell",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"Freeweights","gym_free_A",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"Freeweights","gym_free_B",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"Freeweights","gym_free_celebrate",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"Freeweights","gym_free_down",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"Freeweights","gym_free_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"Freeweights","gym_free_pickup",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"Freeweights","gym_free_putdown",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"Freeweights","gym_free_up_smooth",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animghetto", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animghetto [1-7]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 7) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animghetto [1-7]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car2_PLY",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car2_SMO",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car2_SWE",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_PLY",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_RYD",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_SMO",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_SWE",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animgog", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animgog [1-1]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 1) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animgog [1-1]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animgraffity", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animgraffity [1-2]");
				return 1;
			}
			animationplayed = strval(tmp);
			if(animationplayed < 1 || animationplayed > 2) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animgraffity [1-2]");
				return 1;
			}
			if(animationplayed == 1) {
				ApplyAnimation(playerid,"GRAFFITI","graffiti_Chkout",4.1,0,1,1,1,1);
			} else if(animationplayed == 2) {
				ApplyAnimation(playerid,"GRAFFITI","spraycan_fire",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/animgreya", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animgreya [1-3]");
				return 1;
			}
			animationplayed = strval(tmp);
			if(animationplayed < 1 || animationplayed > 3) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animgreya [1-3]");
				return 1;
			}
			if(animationplayed == 1) {
				ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,1,1,1,1);
			} else if(animationplayed == 2) {
				ApplyAnimation(playerid,"GRAVEYARD","mrnM_loop",4.1,0,1,1,1,1);
			} else if(animationplayed == 3) {
				ApplyAnimation(playerid,"GRAVEYARD","prst_loopa",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/animgren", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animgren [1-3]");
				return 1;
			}
			animationplayed = strval(tmp);
			if(animationplayed < 1 || animationplayed > 3) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animgren [1-3]");
				return 1;
			}
			if(animationplayed == 1) {
				ApplyAnimation(playerid,"GRENADE","WEAPON_start_throw",4.1,0,1,1,1,1);
			} else if(animationplayed == 2) {
				ApplyAnimation(playerid,"GRENADE","WEAPON_throw",4.1,0,1,1,1,1);
			} else if(animationplayed == 3) {
				ApplyAnimation(playerid,"GRENADE","WEAPON_throwu",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/animhaircut", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animhaircut [1-13]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 13) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animhaircut [1-13]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Beard_01",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Buy",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Cut",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Cut_In",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Cut_Out",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Hair_01",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Hair_02",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_In",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Out",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Sit_In",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Sit_Loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 13) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Sit_Out",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animheist", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animheist [1-10]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 10) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animheist [1-10]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"HEIST9","CAS_G2_GasKO",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"HEIST9","swt_wllpk_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"HEIST9","swt_wllpk_L_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"HEIST9","swt_wllpk_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"HEIST9","swt_wllpk_R_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"HEIST9","swt_wllshoot_in_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"HEIST9","swt_wllshoot_in_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"HEIST9","swt_wllshoot_out_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"HEIST9","swt_wllshoot_out_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"HEIST9","Use_SwipeCard",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animinthouse", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animinthouse [1-10]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 10) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animinthouse [1-10]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"INT_HOUSE","BED_In_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"INT_HOUSE","BED_Loop_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"INT_HOUSE","BED_Loop_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"INT_HOUSE","BED_Out_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"INT_HOUSE","BED_Out_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"INT_HOUSE","LOU_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"INT_HOUSE","LOU_Out",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"INT_HOUSE","wash_up",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animintoffice", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animintoffice [1-10]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 10) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animintoffice [1-10]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"INT_OFFICE","FF_Dam_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_2Idle_180",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Bored_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Crash",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Drink",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Idle_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Read",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Type_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Watch",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animplayerdbf", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animplayerdbf [1-4]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animplayerdbf [1-4]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyBwd",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyFwd",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyLHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyRHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animplayidles", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animplayidles [1-5]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 5) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animplayidles [1-5]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"PLAYIDLES","shift",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"PLAYIDLES","shldr",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"PLAYIDLES","strleg",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"PLAYIDLES","time",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animpolice", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpolice [1-10]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 10) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpolice [1-10]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"POLICE","CopTraf_Away",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"POLICE","CopTraf_Come",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"POLICE","CopTraf_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"POLICE","CopTraf_Stop",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"POLICE","COP_getoutcar_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"POLICE","Cop_move_FWD",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"POLICE","crm_drgbst_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"POLICE","Door_Kick",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"POLICE","plc_drgbst_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"POLICE","plc_drgbst_02",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animpool", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpool [1-21]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 21) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpool [1-21]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"POOL","POOL_ChalkCue",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"POOL","POOL_Idle_Stance",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"POOL","POOL_Long_Shot",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"POOL","POOL_Long_Shot_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"POOL","POOL_Long_Start",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"POOL","POOL_Long_Start_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"POOL","POOL_Med_Shot",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"POOL","POOL_Med_Shot_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"POOL","POOL_Med_Start",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"POOL","POOL_Med_Start_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"POOL","POOL_Place_White",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"POOL","POOL_Short_Shot",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"POOL","POOL_Short_Shot_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"POOL","POOL_Short_Start",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"POOL","POOL_Short_Start_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"POOL","POOL_Walk",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"POOL","POOL_Walk_Start",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"POOL","POOL_XLong_Shot",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"POOL","POOL_XLong_Shot_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"POOL","POOL_XLong_Start",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"POOL","POOL_XLong_Start_O",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animpoor", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpoor [1-2]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 2) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpoor [1-2]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"POOR","WINWASH_Start",4.1,0,1,1,1,1);
		}else if(animationplayed == 1) {
			ApplyAnimation(playerid,"POOR","WINWASH_Wash2Beg",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animpython", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpython [1-5]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 5) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animpython [1-5]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"PYTHON","python_crouchfire",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"PYTHON","python_crouchreload",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"PYTHON","python_fire",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"PYTHON","python_fire_poor",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"PYTHON","python_reload",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animquad", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animquad [1-17]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 17) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animquad [1-17]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"QUAD","QUAD_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"QUAD","QUAD_driveby_FT",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"QUAD","QUAD_driveby_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"QUAD","QUAD_driveby_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"QUAD","QUAD_FWD",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"QUAD","QUAD_getoff_B",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"QUAD","QUAD_getoff_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"QUAD","QUAD_getoff_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"QUAD","QUAD_geton_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"QUAD","QUAD_geton_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"QUAD","QUAD_hit",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"QUAD","QUAD_kick",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"QUAD","QUAD_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"QUAD","QUAD_passenger",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"QUAD","QUAD_reverse",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"QUAD","QUAD_ride",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"QUAD","QUAD_Right",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animquadbz", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animquadbz [1-4]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animquadbz [1-4]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_BWD",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_FWD",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_RHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animrapping", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animrapping [1-8]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 8) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animrapping [1-8]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"RAPPING","Laugh_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"RAPPING","RAP_A_IN",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"RAPPING","RAP_A_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"RAPPING","RAP_A_OUT",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"RAPPING","RAP_B_IN",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"RAPPING","RAP_B_OUT",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"RAPPING","RAP_C_Loop",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animrifle", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animrifle [1-5]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 5) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animrifle [1-5]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"RIFLE","RIFLE_crouchfire",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"RIFLE","RIFLE_crouchload",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"RIFLE","RIFLE_fire",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"RIFLE","RIFLE_fire_poor",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"RIFLE","RIFLE_load",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animriot", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animriot [1-7]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 7) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animriot [1-7]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"RIOT","RIOT_ANGRY",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"RIOT","RIOT_ANGRY_B",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"RIOT","RIOT_challenge",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"RIOT","RIOT_CHANT",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"RIOT","RIOT_FUKU",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"RIOT","RIOT_PUNCHES",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"RIOT","RIOT_shout",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animrobbank", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animrobbank [1-5]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 5) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animrobbank [1-5]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open_O",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"ROB_BANK","SHP_HandsUp_Scr",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animrocket", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animrocket [1-5]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 5) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animrocket [1-5]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"ROCKET","idle_rocket",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"ROCKET","RocketFire",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"ROCKET","run_rocket",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"ROCKET","walk_rocket",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"ROCKET","WALK_start_rocket",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animrustler", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animrustler [1-5]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 5) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animrustler [1-5]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"RUSTLER","Plane_align_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"RUSTLER","Plane_close",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"RUSTLER","Plane_getin",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"RUSTLER","Plane_getout",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"RUSTLER","Plane_open",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbiked", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbiked [1-18]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 18) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbiked [1-18]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Back",4.1,0,1,1,1,1);
		}else if(animationplayed == 1) {
			ApplyAnimation(playerid,"BIKED","BIKEd_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"BIKED","BIKEd_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"BIKED","BIKEd_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"BIKED","BIKEd_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"BIKED","BIKEd_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"BIKED","BIKEd_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"BIKED","BIKEd_hit",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"BIKED","BIKEd_jumponL",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"BIKED","BIKEd_jumponR",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"BIKED","BIKEd_kick",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"BIKED","BIKEd_passenger",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"BIKED","BIKEd_pushes",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Ride",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"BIKED","BIKEd_shuffle",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Still",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animryder", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animryder [1-14]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 14) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animryder [1-14]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"RYDER","RYD_Beckon_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 1) {
			ApplyAnimation(playerid,"RYDER","RYD_Beckon_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"RYDER","RYD_Beckon_03",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"RYDER","RYD_Die_PT1",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"RYDER","RYD_Die_PT2",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"RYDER","Van_Crate_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"RYDER","Van_Crate_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"RYDER","Van_Fall_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"RYDER","Van_Fall_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"RYDER","Van_Lean_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"RYDER","Van_Lean_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"RYDER","VAN_PickUp_S",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"RYDER","Van_Stand",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"RYDER","Van_Stand_Crate",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"RYDER","Van_Throw",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animscrat", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animscrat [1-12]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 12) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animscrat [1-12]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"SCRATCHING","scdldlp",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"SCRATCHING","scdlulp",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"SCRATCHING","scdrdlp",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"SCRATCHING","scdrulp",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"SCRATCHING","sclng_l",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"SCRATCHING","sclng_r",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"SCRATCHING","scmid_l",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"SCRATCHING","scmid_r",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"SCRATCHING","scshrtl",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"SCRATCHING","scshrtr",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"SCRATCHING","sc_ltor",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"SCRATCHING","sc_rtol",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animshamal", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animshamal [1-4]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animshamal [1-4]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"SHAMAL","SHAMAL_align",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"SHAMAL","SHAMAL_getin_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"SHAMAL","SHAMAL_getout_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"SHAMAL","SHAMAL_open",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animshop", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animshop [1-24]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 24) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animshop [1-24]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"SHOP","ROB_2Idle",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"SHOP","ROB_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"SHOP","donutdrop",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"SHOP","ROB_Shifty",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"SHOP","ROB_StickUp_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"SHOP","SHP_Duck_Fire",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"SHOP","SHP_Gun_Aim",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"SHOP","SHP_Gun_Duck",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"SHOP","SHP_Gun_Fire",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"SHOP","SHP_Gun_Grab",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"SHOP","SHP_Gun_Threat",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"SHOP","SHP_HandsUp_Scr",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"SHOP","SHP_Jump_Glide",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"SHOP","SHP_Jump_Land",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"SHOP","SHP_Jump_Launch",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"SHOP","SHP_Rob_GiveCash",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"SHOP","SHP_Rob_HandsUp",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"SHOP","SHP_Rob_React",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"SHOP","SHP_Serve_End",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"SHOP","SHP_Serve_Idle",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"SHOP","SHP_Serve_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 23) {
			ApplyAnimation(playerid,"SHOP","SHP_Serve_Start",4.1,0,1,1,1,1);
		}else if(animationplayed == 24) {
			ApplyAnimation(playerid,"SHOP","Smoke_RYD",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animshotgun", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animshotgun [1-3]");
				return 1;
			}
			animationplayed = strval(tmp);
			if(animationplayed < 1 || animationplayed > 3) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animshotgun [1-3]");
				return 1;
			}
			if(animationplayed == 1) {
				ApplyAnimation(playerid,"SHOTGUN","shotgun_crouchfire",4.1,0,1,1,1,1);
			} else if(animationplayed == 2) {
				ApplyAnimation(playerid,"SHOTGUN","shotgun_fire",4.1,0,1,1,1,1);
			} else if(animationplayed == 3) {
				ApplyAnimation(playerid,"SHOTGUN","shotgun_fire_poor",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/animskate", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animskate [1-3]");
				return 1;
			}
			animationplayed = strval(tmp);
			if(animationplayed < 1 || animationplayed > 3) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animskate [1-3]");
				return 1;
			}
			if(animationplayed == 1) {
				ApplyAnimation(playerid,"SKATE","skate_idle",4.1,0,1,1,1,1);
			} else if(animationplayed == 2) {
				ApplyAnimation(playerid,"SKATE","skate_run",4.1,0,1,1,1,1);
			} else if(animationplayed == 3) {
				ApplyAnimation(playerid,"SKATE","skate_sprint",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/animvortex", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animvortex [1-4]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animvortex [1-4]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"VORTEX","CAR_jumpin_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"VORTEX","CAR_jumpin_RHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"VORTEX","vortex_getout_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"VORTEX","vortex_getout_RHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animtec", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animtec [1-4]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animtec [1-4]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"TEC","TEC_crouchfire",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"TEC","TEC_crouchreload",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"TEC","TEC_fire",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"TEC","TEC_reload",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animtrain", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animtrain [1-4]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animtrain [1-4]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"TRAIN","tran_gtup",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"TRAIN","tran_hng",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"TRAIN","tran_ouch",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"TRAIN","tran_stmb",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animsil", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animsil [1-4]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 4) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animsil [1-4]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"SILENCED","CrouchReload",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"SILENCED","SilenceCrouchfire",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"SILENCED","Silence_fire",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"SILENCED","Silence_reload",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animtattoo", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animtattoo [1-56]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 56) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animtattoo [1-56]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_In_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_In_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_In_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Out_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"TATTOOS","TA_ArmL_Out_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Out_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Pose_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Pose_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Pose_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_In_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_In_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_In_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Out_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Out_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Out_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Pose_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Pose_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Pose_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_In_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_In_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_In_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Out_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 23) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Out_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 24) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Out_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 25) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Pose_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 26) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Pose_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 27) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Pose_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 28) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Sit_In_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 29) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Sit_Loop_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 30) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Sit_Out_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 31) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Bel_In_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 32) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Bel_In_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 33) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Out_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 34) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Out_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 35) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Pose_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 36) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Pose_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 37) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_In_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 38) {
			ApplyAnimation(playerid,"TATTOOS","Sit_relaxed",4.1,0,1,1,1,1);
		}else if(animationplayed == 39) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_In_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 40) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_In_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 41) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_Out_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 41) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_Out_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 42) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_Out_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 43) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_Pose_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 44) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_Pose_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 45) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_Pose_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 46) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Idle_Loop_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 47) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Idle_Loop_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 48) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_In_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 49) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_In_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 50) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_In_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 51) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Loop_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 52) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Loop_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 53) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Loop_T",4.1,0,1,1,1,1);
		}else if(animationplayed == 54) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 55) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 56) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_T",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animsmoking", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animsmoking [1-8]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 8) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animsmoking [1-8]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"SMOKING","F_smklean_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"SMOKING","M_smk_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"SMOKING","M_smk_loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"SMOKING","M_smk_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"SMOKING","M_smk_tap",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animsniper", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animsniper [1-1]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 1) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animsniper [1-1]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"SNIPER","WEAPON_sniper",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animspray", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animspray [1-2]");
				return 1;
			}
			animationplayed = strval(tmp);
			if(animationplayed < 1 || animationplayed > 2) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animspray [1-2]");
				return 1;
			}
			if(animationplayed == 1) {
				ApplyAnimation(playerid,"SPRAYCAN","spraycan_fire",4.1,0,1,1,1,1);
			} else if(animationplayed == 2) {
				ApplyAnimation(playerid,"SPRAYCAN","spraycan_full",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/animstrip", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animstrip [1-20]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 20) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animstrip [1-20]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"STRIP","PLY_CASH",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"STRIP","PUN_LOOP",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"STRIP","strip_A",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"STRIP","strip_B",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"STRIP","strip_C",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"STRIP","strip_D",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"STRIP","strip_E",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"STRIP","strip_F",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"STRIP","strip_G",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"STRIP","STR_A2B",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"STRIP","STR_B2A",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"STRIP","STR_B2C",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"STRIP","STR_C1",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"STRIP","STR_C2",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"STRIP","STR_C2B",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"STRIP","STR_Loop_A",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"STRIP","STR_Loop_B",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"STRIP","STR_Loop_C",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animbath", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbath [1-17]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 18) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animbath [1-17]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"SUNBATHE","batherdown",4.1,0,1,1,1,1);
		}else if(animationplayed == 1) {
			ApplyAnimation(playerid,"SUNBATHE","batherup",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"SUNBATHE","Lay_Bac_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"SUNBATHE","Lay_Bac_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_IdleA",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_IdleB",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_IdleC",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleB",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleC",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"SUNBATHE","SBATHE_F_LieB2Sit",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"SUNBATHE","SBATHE_F_Out",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"SUNBATHE","SitnWait_in_W",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"SUNBATHE","SitnWait_out_W",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animsweet", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animsweet [1-7]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 7) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animsweet [1-7]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"SWEET","ho_ass_slapped",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"SWEET","LaFin_Player",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"SWEET","LaFin_Sweet",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"SWEET","plyr_hndshldr_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"SWEET","sweet_hndshldr_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"SWEET","Sweet_injuredloop",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animswim", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animswim [1-7]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 7) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animswim [1-7]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"SWIM","Swim_Breast",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"SWIM","SWIM_crawl",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"SWIM","Swim_Dive_Under",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"SWIM","Swim_Glide",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"SWIM","Swim_jumpout",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"SWIM","Swim_Tread",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"SWIM","Swim_Under",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animsword", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animsword [1-10]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 10) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animsword [1-10]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"SWORD","sword_1",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"SWORD","sword_2",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"SWORD","sword_3",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"SWORD","sword_4",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"SWORD","Sword_Hit_1",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"SWORD","Sword_Hit_2",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"SWORD","Sword_Hit_3",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"SWORD","sword_IDLE",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"SWORD","sword_part",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animtank", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animtank [1-6]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 6) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animtank [1-6]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"TANK","TANK_align_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"TANK","TANK_close_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"TANK","TANK_doorlocked",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"TANK","TANK_getin_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"TANK","TANK_getout_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"TANK","TANK_open_LHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animtruck", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animtruck [1-17]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 17) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animtruck [1-17]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_ALIGN_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_ALIGN_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_closedoor_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_closedoor_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_close_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_close_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_getin_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_getin_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_getout_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_getout_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_jackedLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_jackedRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_open_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_open_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_pullout_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_pullout_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_Shuffle",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animuzi", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animuzi [1-5]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 5) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animuzi [1-5]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"UZI","UZI_crouchfire",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"UZI","UZI_crouchreload",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"UZI","UZI_fire",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"UZI","UZI_fire_poor",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"UZI","UZI_reload",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animvan", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animvan [1-8]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 8) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animvan [1-8]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"VAN","VAN_close_back_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"VAN","VAN_close_back_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"VAN","VAN_getin_Back_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"VAN","VAN_getin_Back_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"VAN","VAN_getout_back_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"VAN","VAN_getout_back_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"VAN","VAN_open_back_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"VAN","VAN_open_back_RHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animvending", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animvending [1-6]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 6) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animvending [1-6]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"VENDING","VEND_Drink2_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"VENDING","vend_eat1_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"VENDING","VEND_Eat_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"VENDING","VEND_Use",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"VENDING","VEND_Use_pt2",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animway", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animway [1-17]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 17) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animway [1-17]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"WAYFARER","WF_Back",4.1,0,1,1,1,1);
		}else if(animationplayed == 1) {
			ApplyAnimation(playerid,"WAYFARER","WF_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"WAYFARER","WF_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"WAYFARER","WF_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"WAYFARER","WF_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"WAYFARER","WF_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"WAYFARER","WF_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"WAYFARER","WF_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"WAYFARER","WF_hit",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"WAYFARER","WF_jumponL",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"WAYFARER","WF_jumponR",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"WAYFARER","WF_kick",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"WAYFARER","WF_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"WAYFARER","WF_passenger",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"WAYFARER","WF_pushes",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"WAYFARER","WF_Ride",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"WAYFARER","WF_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"WAYFARER","WF_Still",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animweap", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animweap [1-17]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 17) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animweap [1-17]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"WEAPONS","SHP_1H_Lift",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"WEAPONS","SHP_1H_Lift_End",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"WEAPONS","SHP_1H_Ret",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"WEAPONS","SHP_1H_Ret_S",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"WEAPONS","SHP_2H_Lift",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"WEAPONS","SHP_2H_Lift_End",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"WEAPONS","SHP_2H_Ret",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"WEAPONS","SHP_2H_Ret_S",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Lift",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Lift_End",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Ret",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Ret_S",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"WEAPONS","SHP_G_Lift_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"WEAPONS","SHP_G_Lift_Out",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Tray_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Tray_Out",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Tray_Pose",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animwuzi", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animwuzi [1-12]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 12) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animwuzi [1-12]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"WUZI","CS_Dead_Guy",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"WUZI","CS_Plyr_pt1",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"WUZI","CS_Plyr_pt2",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"WUZI","CS_Wuzi_pt1",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"WUZI","CS_Wuzi_pt2",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"WUZI","Walkstart_Idle_01",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"WUZI","Wuzi_follow",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Plyr",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Wuzi",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"WUZI","Wuzi_grnd_chk",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"WUZI","Wuzi_stand_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"WUZI","Wuzi_Walk",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/animat", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animat [1-3]");
				return 1;
			}
			animationplayed = strval(tmp);
			if(animationplayed < 1 || animationplayed > 3) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animat [1-3]");
				return 1;
			}
			if(animationplayed == 1) {
				ApplyAnimation(playerid,"Attractors","Stepsit_in",4.1,0,1,1,1,1);
			} else if(animationplayed == 2) {
				ApplyAnimation(playerid,"Attractors","Stepsit_loop",4.1,0,1,1,1,1);
			} else if(animationplayed == 3) {
				ApplyAnimation(playerid,"Attractors","Stepsit_out",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/animairport", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animairport [1]");
				return 1;
			}
			animationplayed = strval(tmp);
			if(animationplayed < 1 || animationplayed > 1) {
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animairport [1]");
				return 1;
			}
			if(animationplayed == 1) {
				ApplyAnimation(playerid,"AIRPORT","thrw_barl_thrw",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/animped", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animped [1-295]");
			return 1;
		}
		animationplayed = strval(tmp);
		if(animationplayed < 1 || animationplayed > 295) {
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /animped [1-295]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"PED","WALK_DRUNK",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"PED","abseil",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"PED","ARRESTgun",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"PED","ATM",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"PED","BIKE_elbowL",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"PED","BIKE_fallR",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"PED","BIKE_fall_off",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"PED","BIKE_pickupL",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"PED","BIKE_pickupR",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"PED","BIKE_pullupL",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"PED","BIKE_pullupR",4.1,0,1,1,1,1);
		} else if(animationplayed == 13) {
			ApplyAnimation(playerid,"PED","bomber",4.1,0,1,1,1,1);
		} else if(animationplayed == 14) {
			ApplyAnimation(playerid,"PED","CAR_alignHI_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 15) {
			ApplyAnimation(playerid,"PED","CAR_alignHI_RHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 16) {
			ApplyAnimation(playerid,"PED","CAR_align_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 17) {
			ApplyAnimation(playerid,"PED","CAR_align_RHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 18) {
			ApplyAnimation(playerid,"PED","CAR_closedoorL_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 19) {
			ApplyAnimation(playerid,"PED","CAR_closedoorL_RHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 20) {
			ApplyAnimation(playerid,"PED","CAR_closedoor_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 21) {
			ApplyAnimation(playerid,"PED","CAR_closedoor_RHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 22) {
			ApplyAnimation(playerid,"PED","CAR_close_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 23) {
			ApplyAnimation(playerid,"PED","CAR_crawloutRHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 24) {
			ApplyAnimation(playerid,"PED","CAR_dead_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 25) {
			ApplyAnimation(playerid,"PED","CAR_dead_RHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 26) {
			ApplyAnimation(playerid,"PED","CAR_doorlocked_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 27) {
			ApplyAnimation(playerid,"PED","CAR_fallout_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 28) {
			ApplyAnimation(playerid,"PED","CAR_fallout_RHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 29) {
			ApplyAnimation(playerid,"PED","CAR_getinL_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 30) {
			ApplyAnimation(playerid,"PED","CAR_getinL_RHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 31) {
			ApplyAnimation(playerid,"PED","CAR_getin_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 32) {
			ApplyAnimation(playerid,"PED","CAR_getin_RHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 33) {
			ApplyAnimation(playerid,"PED","CAR_getoutL_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 34) {
			ApplyAnimation(playerid,"PED","CAR_getout_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 35) {
			ApplyAnimation(playerid,"PED","CAR_getout_RHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 36) {
			ApplyAnimation(playerid,"PED","car_hookertalk",4.1,0,1,1,1,1);
		} else if(animationplayed == 37) {
			ApplyAnimation(playerid,"PED","CAR_jackedLHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 38) {
			ApplyAnimation(playerid,"PED","CAR_jackedRHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 39) {
			ApplyAnimation(playerid,"PED","CAR_jumpin_LHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 40) {
			ApplyAnimation(playerid,"PED","CAR_LB",4.1,0,1,1,1,1);
		} else if(animationplayed == 41) {
			ApplyAnimation(playerid,"PED","CAR_LB_pro",4.1,0,1,1,1,1);
		} else if(animationplayed == 42) {
			ApplyAnimation(playerid,"PED","CAR_LB_weak",4.1,0,1,1,1,1);
		} else if(animationplayed == 43) {
			ApplyAnimation(playerid,"PED","CAR_LjackedLHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 44) {
			ApplyAnimation(playerid,"PED","CAR_Lshuffle_RHS",4.1,0,1,1,1,1);
		} else if(animationplayed == 45) {
			ApplyAnimation(playerid,"PED","CAR_Lsit",4.1,0,1,1,1,1);
		} else if(animationplayed == 46) {
			ApplyAnimation(playerid,"PED","CAR_open_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 47) {
			ApplyAnimation(playerid,"PED","CAR_open_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 49) {
			ApplyAnimation(playerid,"PED","CAR_pulloutL_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 50) {
			ApplyAnimation(playerid,"PED","CAR_pulloutL_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 51) {
			ApplyAnimation(playerid,"PED","CAR_pullout_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 52) {
			ApplyAnimation(playerid,"PED","CAR_pullout_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 53) {
			ApplyAnimation(playerid,"PED","CAR_Qjacked",4.1,0,1,1,1,1);
		}else if(animationplayed == 54) {
			ApplyAnimation(playerid,"PED","CAR_rolldoor",4.1,0,1,1,1,1);
		}else if(animationplayed == 55) {
			ApplyAnimation(playerid,"PED","CAR_rolldoorLO",4.1,0,1,1,1,1);
		}else if(animationplayed == 56) {
			ApplyAnimation(playerid,"PED","CAR_rollout_LHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 57) {
			ApplyAnimation(playerid,"PED","CAR_rollout_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 58) {
			ApplyAnimation(playerid,"PED","CAR_shuffle_RHS",4.1,0,1,1,1,1);
		}else if(animationplayed == 59) {
			ApplyAnimation(playerid,"PED","CAR_sit",4.1,0,1,1,1,1);
		}else if(animationplayed == 60) {
			ApplyAnimation(playerid,"PED","CAR_sitp",4.1,0,1,1,1,1);
		}else if(animationplayed == 61) {
			ApplyAnimation(playerid,"PED","CAR_sitpLO",4.1,0,1,1,1,1);
		}else if(animationplayed == 62) {
			ApplyAnimation(playerid,"PED","CAR_sit_pro",4.1,0,1,1,1,1);
		}else if(animationplayed == 63) {
			ApplyAnimation(playerid,"PED","CAR_sit_weak",4.1,0,1,1,1,1);
		}else if(animationplayed == 64) {
			ApplyAnimation(playerid,"PED","CAR_tune_radio",4.1,0,1,1,1,1);
		}else if(animationplayed == 65) {
			ApplyAnimation(playerid,"PED","CLIMB_idle",4.1,0,1,1,1,1);
		}else if(animationplayed == 66) {
			ApplyAnimation(playerid,"PED","CLIMB_jump",4.1,0,1,1,1,1);
		}else if(animationplayed == 67) {
			ApplyAnimation(playerid,"PED","CLIMB_jump2fall",4.1,0,1,1,1,1);
		}else if(animationplayed == 68) {
			ApplyAnimation(playerid,"PED","CLIMB_jump_B",4.1,0,1,1,1,1);
		}else if(animationplayed == 69) {
			ApplyAnimation(playerid,"PED","CLIMB_Pull",4.1,0,1,1,1,1);
		}else if(animationplayed == 70) {
			ApplyAnimation(playerid,"PED","CLIMB_Stand",4.1,0,1,1,1,1);
		}else if(animationplayed == 71) {
			ApplyAnimation(playerid,"PED","CLIMB_Stand_finish",4.1,0,1,1,1,1);
		}else if(animationplayed == 72) {
			ApplyAnimation(playerid,"PED","cower",4.1,0,1,1,1,1);
		}else if(animationplayed == 73) {
			ApplyAnimation(playerid,"PED","Crouch_Roll_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 74) {
			ApplyAnimation(playerid,"PED","Crouch_Roll_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 75) {
			ApplyAnimation(playerid,"PED","DAM_armL_frmBK",4.1,0,1,1,1,1);
		}else if(animationplayed == 76) {
			ApplyAnimation(playerid,"PED","DAM_armL_frmFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 77) {
			ApplyAnimation(playerid,"PED","DAM_armL_frmLT",4.1,0,1,1,1,1);
		}else if(animationplayed == 78) {
			ApplyAnimation(playerid,"PED","DAM_armR_frmBK",4.1,0,1,1,1,1);
		}else if(animationplayed == 79) {
			ApplyAnimation(playerid,"PED","DAM_armR_frmFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 80) {
			ApplyAnimation(playerid,"PED","DAM_armR_frmRT",4.1,0,1,1,1,1);
		}else if(animationplayed == 81) {
			ApplyAnimation(playerid,"PED","DAM_LegL_frmBK",4.1,0,1,1,1,1);
		}else if(animationplayed == 82) {
			ApplyAnimation(playerid,"PED","DAM_LegL_frmFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 83) {
			ApplyAnimation(playerid,"PED","DAM_LegL_frmLT",4.1,0,1,1,1,1);
		}else if(animationplayed == 84) {
			ApplyAnimation(playerid,"PED","DAM_LegR_frmBK",4.1,0,1,1,1,1);
		}else if(animationplayed == 85) {
			ApplyAnimation(playerid,"PED","DAM_LegR_frmFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 86) {
			ApplyAnimation(playerid,"PED","DAM_LegR_frmRT",4.1,0,1,1,1,1);
		}else if(animationplayed == 87) {
			ApplyAnimation(playerid,"PED","DAM_stomach_frmBK",4.1,0,1,1,1,1);
		}else if(animationplayed == 88) {
			ApplyAnimation(playerid,"PED","DAM_stomach_frmFT",4.1,0,1,1,1,1);
		}else if(animationplayed == 89) {
			ApplyAnimation(playerid,"PED","DAM_stomach_frmLT",4.1,0,1,1,1,1);
		}else if(animationplayed == 90) {
			ApplyAnimation(playerid,"PED","DAM_stomach_frmRT",4.1,0,1,1,1,1);
		}else if(animationplayed == 91) {
			ApplyAnimation(playerid,"PED","DOOR_LHinge_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 92) {
			ApplyAnimation(playerid,"PED","DOOR_RHinge_O",4.1,0,1,1,1,1);
		}else if(animationplayed == 93) {
			ApplyAnimation(playerid,"PED","DrivebyL_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 94) {
			ApplyAnimation(playerid,"PED","DrivebyL_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 95) {
			ApplyAnimation(playerid,"PED","Driveby_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 96) {
			ApplyAnimation(playerid,"PED","Driveby_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 97) {
			ApplyAnimation(playerid,"PED","DRIVE_BOAT",4.1,0,1,1,1,1);
		}else if(animationplayed == 98) {
			ApplyAnimation(playerid,"PED","DRIVE_BOAT_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 99) {
			ApplyAnimation(playerid,"PED","DRIVE_BOAT_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 100) {
			ApplyAnimation(playerid,"PED","DRIVE_BOAT_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 101) {
			ApplyAnimation(playerid,"PED","Drive_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 102) {
			ApplyAnimation(playerid,"PED","Drive_LO_l",4.1,0,1,1,1,1);
		}else if(animationplayed == 103) {
			ApplyAnimation(playerid,"PED","Drive_LO_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 104) {
			ApplyAnimation(playerid,"PED","Drive_L_pro",4.1,0,1,1,1,1);
		}else if(animationplayed == 105) {
			ApplyAnimation(playerid,"PED","Drive_L_pro_slow",4.1,0,1,1,1,1);
		}else if(animationplayed == 106) {
			ApplyAnimation(playerid,"PED","Drive_L_slow",4.1,0,1,1,1,1);
		}else if(animationplayed == 107) {
			ApplyAnimation(playerid,"PED","Drive_L_weak",4.1,0,1,1,1,1);
		}else if(animationplayed == 108) {
			ApplyAnimation(playerid,"PED","Drive_L_weak_slow",4.1,0,1,1,1,1);
		}else if(animationplayed == 109) {
			ApplyAnimation(playerid,"PED","Drive_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 110) {
			ApplyAnimation(playerid,"PED","Drive_R_pro",4.1,0,1,1,1,1);
		}else if(animationplayed == 111) {
			ApplyAnimation(playerid,"PED","Drive_R_pro_slow",4.1,0,1,1,1,1);
		}else if(animationplayed == 112) {
			ApplyAnimation(playerid,"PED","Drive_R_slow",4.1,0,1,1,1,1);
		}else if(animationplayed == 113) {
			ApplyAnimation(playerid,"PED","Drive_R_weak",4.1,0,1,1,1,1);
		}else if(animationplayed == 114) {
			ApplyAnimation(playerid,"PED","Drive_R_weak_slow",4.1,0,1,1,1,1);
		}else if(animationplayed == 115) {
			ApplyAnimation(playerid,"PED","Drive_truck",4.1,0,1,1,1,1);
		}else if(animationplayed == 116) {
			ApplyAnimation(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 117) {
			ApplyAnimation(playerid,"PED","DRIVE_truck_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 118) {
			ApplyAnimation(playerid,"PED","DRIVE_truck_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 119) {
			ApplyAnimation(playerid,"PED","Drown",4.1,0,1,1,1,1);
		}else if(animationplayed == 120) {
			ApplyAnimation(playerid,"PED","DUCK_cower",4.1,0,1,1,1,1);
		}else if(animationplayed == 121) {
			ApplyAnimation(playerid,"PED","endchat_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 122) {
			ApplyAnimation(playerid,"PED","endchat_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 123) {
			ApplyAnimation(playerid,"PED","endchat_03",4.1,0,1,1,1,1);
		}else if(animationplayed == 124) {
			ApplyAnimation(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 125) {
			ApplyAnimation(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 126) {
			ApplyAnimation(playerid,"PED","EV_dive",4.1,0,1,1,1,1);
		}else if(animationplayed == 127) {
			ApplyAnimation(playerid,"PED","EV_step",4.1,0,1,1,1,1);
		}else if(animationplayed == 128) {
			ApplyAnimation(playerid,"PED","facanger",4.1,0,1,1,1,1);
		}else if(animationplayed == 129) {
			ApplyAnimation(playerid,"PED","facanger",4.1,0,1,1,1,1);
		}else if(animationplayed == 130) {
			ApplyAnimation(playerid,"PED","facgum",4.1,0,1,1,1,1);
		}else if(animationplayed == 131) {
			ApplyAnimation(playerid,"PED","facsurp",4.1,0,1,1,1,1);
		}else if(animationplayed == 132) {
			ApplyAnimation(playerid,"PED","facsurpm",4.1,0,1,1,1,1);
		}else if(animationplayed == 133) {
			ApplyAnimation(playerid,"PED","factalk",4.1,0,1,1,1,1);
		}else if(animationplayed == 134) {
			ApplyAnimation(playerid,"PED","facurios",4.1,0,1,1,1,1);
		}else if(animationplayed == 135) {
			ApplyAnimation(playerid,"PED","FALL_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 136) {
			ApplyAnimation(playerid,"PED","FALL_collapse",4.1,0,1,1,1,1);
		}else if(animationplayed == 137) {
			ApplyAnimation(playerid,"PED","FALL_fall",4.1,0,1,1,1,1);
		}else if(animationplayed == 138) {
			ApplyAnimation(playerid,"PED","FALL_front",4.1,0,1,1,1,1);
		}else if(animationplayed == 139) {
			ApplyAnimation(playerid,"PED","FALL_glide",4.1,0,1,1,1,1);
		}else if(animationplayed == 140) {
			ApplyAnimation(playerid,"PED","FALL_land",4.1,0,1,1,1,1);
		}else if(animationplayed == 141) {
			ApplyAnimation(playerid,"PED","FALL_skyDive",4.1,0,1,1,1,1);
		}else if(animationplayed == 142) {
			ApplyAnimation(playerid,"PED","Fight2Idle",4.1,0,1,1,1,1);
		}else if(animationplayed == 143) {
			ApplyAnimation(playerid,"PED","FightA_1",4.1,0,1,1,1,1);
		}else if(animationplayed == 144) {
			ApplyAnimation(playerid,"PED","FightA_2",4.1,0,1,1,1,1);
		}else if(animationplayed == 145) {
			ApplyAnimation(playerid,"PED","FightA_3",4.1,0,1,1,1,1);
		}else if(animationplayed == 146) {
			ApplyAnimation(playerid,"PED","FightA_block",4.1,0,1,1,1,1);
		}else if(animationplayed == 147) {
			ApplyAnimation(playerid,"PED","FightA_G",4.1,0,1,1,1,1);
		}else if(animationplayed == 148) {
			ApplyAnimation(playerid,"PED","FightA_M",4.1,0,1,1,1,1);
		}else if(animationplayed == 149) {
			ApplyAnimation(playerid,"PED","FIGHTIDLE",4.1,0,1,1,1,1);
		}else if(animationplayed == 150) {
			ApplyAnimation(playerid,"PED","FightShB",4.1,0,1,1,1,1);
		}else if(animationplayed == 151) {
			ApplyAnimation(playerid,"PED","FightShF",4.1,0,1,1,1,1);
		}else if(animationplayed == 152) {
			ApplyAnimation(playerid,"PED","FightSh_BWD",4.1,0,1,1,1,1);
		}else if(animationplayed == 153) {
			ApplyAnimation(playerid,"PED","FightSh_FWD",4.1,0,1,1,1,1);
		}else if(animationplayed == 154) {
			ApplyAnimation(playerid,"PED","FightSh_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 155) {
			ApplyAnimation(playerid,"PED","FightSh_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 156) {
			ApplyAnimation(playerid,"PED","flee_lkaround_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 157) {
			ApplyAnimation(playerid,"PED","FLOOR_hit",4.1,0,1,1,1,1);
		}else if(animationplayed == 158) {
			ApplyAnimation(playerid,"PED","FLOOR_hit_f",4.1,0,1,1,1,1);
		}else if(animationplayed == 159) {
			ApplyAnimation(playerid,"PED","fucku",4.1,0,1,1,1,1);
		}else if(animationplayed == 160) {
			ApplyAnimation(playerid,"PED","gang_gunstand",4.1,0,1,1,1,1);
		}else if(animationplayed == 161) {
			ApplyAnimation(playerid,"PED","gas_cwr",4.1,0,1,1,1,1);
		}else if(animationplayed == 162) {
			ApplyAnimation(playerid,"PED","getup",4.1,0,1,1,1,1);
		}else if(animationplayed == 163) {
			ApplyAnimation(playerid,"PED","getup_front",4.1,0,1,1,1,1);
		}else if(animationplayed == 164) {
			ApplyAnimation(playerid,"PED","gum_eat",4.1,0,1,1,1,1);
		}else if(animationplayed == 165) {
			ApplyAnimation(playerid,"PED","GunCrouchBwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 166) {
			ApplyAnimation(playerid,"PED","GunCrouchFwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 167) {
			ApplyAnimation(playerid,"PED","GunMove_BWD",4.1,0,1,1,1,1);
		}else if(animationplayed == 168) {
			ApplyAnimation(playerid,"PED","GunMove_FWD",4.1,0,1,1,1,1);
		}else if(animationplayed == 169) {
			ApplyAnimation(playerid,"PED","GunMove_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 170) {
			ApplyAnimation(playerid,"PED","GunMove_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 171) {
			ApplyAnimation(playerid,"PED","Gun_2_IDLE",4.1,0,1,1,1,1);
		}else if(animationplayed == 172) {
			ApplyAnimation(playerid,"PED","GUN_BUTT",4.1,0,1,1,1,1);
		}else if(animationplayed == 173) {
			ApplyAnimation(playerid,"PED","GUN_BUTT_crouch",4.1,0,1,1,1,1);
		}else if(animationplayed == 174) {
			ApplyAnimation(playerid,"PED","Gun_stand",4.1,0,1,1,1,1);
		}else if(animationplayed == 175) {
			ApplyAnimation(playerid,"PED","handscower",4.1,0,1,1,1,1);
		}else if(animationplayed == 176) {
			ApplyAnimation(playerid,"PED","handsup",4.1,0,1,1,1,1);
		}else if(animationplayed == 177) {
			ApplyAnimation(playerid,"PED","HitA_1",4.1,0,1,1,1,1);
		}else if(animationplayed == 178) {
			ApplyAnimation(playerid,"PED","HitA_2",4.1,0,1,1,1,1);
		}else if(animationplayed == 179) {
			ApplyAnimation(playerid,"PED","HitA_3",4.1,0,1,1,1,1);
		}else if(animationplayed == 180) {
			ApplyAnimation(playerid,"PED","HIT_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 181) {
			ApplyAnimation(playerid,"PED","HIT_behind",4.1,0,1,1,1,1);
		}else if(animationplayed == 182) {
			ApplyAnimation(playerid,"PED","HIT_front",4.1,0,1,1,1,1);
		}else if(animationplayed == 183) {
			ApplyAnimation(playerid,"PED","HIT_GUN_BUTT",4.1,0,1,1,1,1);
		}else if(animationplayed == 184) {
			ApplyAnimation(playerid,"PED","HIT_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 185) {
			ApplyAnimation(playerid,"PED","HIT_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 186) {
			ApplyAnimation(playerid,"PED","HIT_walk",4.1,0,1,1,1,1);
		}else if(animationplayed == 187) {
			ApplyAnimation(playerid,"PED","HIT_wall",4.1,0,1,1,1,1);
		}else if(animationplayed == 188) {
			ApplyAnimation(playerid,"PED","Idlestance_fat",4.1,0,1,1,1,1);
		}else if(animationplayed == 189) {
			ApplyAnimation(playerid,"PED","idlestance_old",4.1,0,1,1,1,1);
		}else if(animationplayed == 190) {
			ApplyAnimation(playerid,"PED","IDLE_armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 191) {
			ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
		}else if(animationplayed == 192) {
			ApplyAnimation(playerid,"PED","IDLE_csaw",4.1,0,1,1,1,1);
		}else if(animationplayed == 193) {
			ApplyAnimation(playerid,"PED","Idle_Gang1",4.1,0,1,1,1,1);
		}else if(animationplayed == 194) {
			ApplyAnimation(playerid,"PED","IDLE_HBHB",4.1,0,1,1,1,1);
		}else if(animationplayed == 195) {
			ApplyAnimation(playerid,"PED","IDLE_ROCKET",4.1,0,1,1,1,1);
		}else if(animationplayed == 196) {
			ApplyAnimation(playerid,"PED","IDLE_stance",4.1,0,1,1,1,1);
		}else if(animationplayed == 197) {
			ApplyAnimation(playerid,"PED","IDLE_taxi",4.1,0,1,1,1,1);
		}else if(animationplayed == 198) {
			ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,1,1);
		}else if(animationplayed == 199) {
			ApplyAnimation(playerid,"PED","Jetpack_Idle",4.1,0,1,1,1,1);
		}else if(animationplayed == 200) {
			ApplyAnimation(playerid,"PED","JOG_femaleA",4.1,0,1,1,1,1);
		}else if(animationplayed == 201) {
			ApplyAnimation(playerid,"PED","JOG_maleA",4.1,0,1,1,1,1);
		}else if(animationplayed == 202) {
			ApplyAnimation(playerid,"PED","JUMP_glide",4.1,0,1,1,1,1);
		}else if(animationplayed == 203) {
			ApplyAnimation(playerid,"PED","JUMP_land",4.1,0,1,1,1,1);
		}else if(animationplayed == 204) {
			ApplyAnimation(playerid,"PED","JUMP_launch",4.1,0,1,1,1,1);
		}else if(animationplayed == 205) {
			ApplyAnimation(playerid,"PED","JUMP_launch_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 206) {
			ApplyAnimation(playerid,"PED","KART_drive",4.1,0,1,1,1,1);
		}else if(animationplayed == 207) {
			ApplyAnimation(playerid,"PED","KART_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 208) {
			ApplyAnimation(playerid,"PED","KART_LB",4.1,0,1,1,1,1);
		}else if(animationplayed == 209) {
			ApplyAnimation(playerid,"PED","KART_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 210) {
			ApplyAnimation(playerid,"PED","KD_left",4.1,0,1,1,1,1);
		}else if(animationplayed == 211) {
			ApplyAnimation(playerid,"PED","KD_right",4.1,0,1,1,1,1);
		}else if(animationplayed == 212) {
			ApplyAnimation(playerid,"PED","KO_shot_face",4.1,0,1,1,1,1);
		}else if(animationplayed == 213) {
			ApplyAnimation(playerid,"PED","KO_shot_front",4.1,0,1,1,1,1);
		}else if(animationplayed == 214) {
			ApplyAnimation(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
		}else if(animationplayed == 215) {
			ApplyAnimation(playerid,"PED","KO_skid_back",4.1,0,1,1,1,1);
		}else if(animationplayed == 216) {
			ApplyAnimation(playerid,"PED","KO_skid_front",4.1,0,1,1,1,1);
		}else if(animationplayed == 217) {
			ApplyAnimation(playerid,"PED","KO_spin_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 218) {
			ApplyAnimation(playerid,"PED","KO_spin_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 219) {
			ApplyAnimation(playerid,"PED","pass_Smoke_in_car",4.1,0,1,1,1,1);
		}else if(animationplayed == 220) {
			ApplyAnimation(playerid,"PED","phone_in",4.1,0,1,1,1,1);
		}else if(animationplayed == 221) {
			ApplyAnimation(playerid,"PED","phone_out",4.1,0,1,1,1,1);
		}else if(animationplayed == 222) {
			ApplyAnimation(playerid,"PED","phone_talk",4.1,0,1,1,1,1);
		}else if(animationplayed == 223) {
			ApplyAnimation(playerid,"PED","Player_Sneak",4.1,0,1,1,1,1);
		}else if(animationplayed == 224) {
			ApplyAnimation(playerid,"PED","Player_Sneak_walkstart",4.1,0,1,1,1,1);
		}else if(animationplayed == 225) {
			ApplyAnimation(playerid,"PED","roadcross",4.1,0,1,1,1,1);
		}else if(animationplayed == 226) {
			ApplyAnimation(playerid,"PED","roadcross_female",4.1,0,1,1,1,1);
		}else if(animationplayed == 227) {
			ApplyAnimation(playerid,"PED","roadcross_gang",4.1,0,1,1,1,1);
		}else if(animationplayed == 228) {
			ApplyAnimation(playerid,"PED","roadcross_old",4.1,0,1,1,1,1);
		}else if(animationplayed == 229) {
			ApplyAnimation(playerid,"PED","run_1armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 230) {
			ApplyAnimation(playerid,"PED","run_armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 231) {
			ApplyAnimation(playerid,"PED","run_civi",4.1,0,1,1,1,1);
		}else if(animationplayed == 232) {
			ApplyAnimation(playerid,"PED","run_csaw",4.1,0,1,1,1,1);
		}else if(animationplayed == 233) {
			ApplyAnimation(playerid,"PED","run_fat",4.1,0,1,1,1,1);
		}else if(animationplayed == 234) {
			ApplyAnimation(playerid,"PED","run_fatold",4.1,0,1,1,1,1);
		}else if(animationplayed == 235) {
			ApplyAnimation(playerid,"PED","run_gang1",4.1,0,1,1,1,1);
		}else if(animationplayed == 236) {
			ApplyAnimation(playerid,"PED","run_left",4.1,0,1,1,1,1);
		}else if(animationplayed == 237) {
			ApplyAnimation(playerid,"PED","run_old",4.1,0,1,1,1,1);
		}else if(animationplayed == 238) {
			ApplyAnimation(playerid,"PED","run_player",4.1,0,1,1,1,1);
		}else if(animationplayed == 239) {
			ApplyAnimation(playerid,"PED","run_right",4.1,0,1,1,1,1);
		}else if(animationplayed == 240) {
			ApplyAnimation(playerid,"PED","run_rocket",4.1,0,1,1,1,1);
		}else if(animationplayed == 241) {
			ApplyAnimation(playerid,"PED","Run_stop",4.1,0,1,1,1,1);
		}else if(animationplayed == 242) {
			ApplyAnimation(playerid,"PED","Run_stopR",4.1,0,1,1,1,1);
		}else if(animationplayed == 243) {
			ApplyAnimation(playerid,"PED","Run_Wuzi",4.1,0,1,1,1,1);
		}else if(animationplayed == 244) {
			ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,1,1,1,1);
		}else if(animationplayed == 245) {
			ApplyAnimation(playerid,"PED","SEAT_idle",4.1,0,1,1,1,1);
		}else if(animationplayed == 246) {
			ApplyAnimation(playerid,"PED","SEAT_up",4.1,0,1,1,1,1);
		}else if(animationplayed == 247) {
			ApplyAnimation(playerid,"PED","SHOT_leftP",4.1,0,1,1,1,1);
		}else if(animationplayed == 248) {
			ApplyAnimation(playerid,"PED","SHOT_partial",4.1,0,1,1,1,1);
		}else if(animationplayed == 249) {
			ApplyAnimation(playerid,"PED","SHOT_partial_B",4.1,0,1,1,1,1);
		}else if(animationplayed == 250) {
			ApplyAnimation(playerid,"PED","SHOT_rightP",4.1,0,1,1,1,1);
		}else if(animationplayed == 251) {
			ApplyAnimation(playerid,"PED","Shove_Partial",4.1,0,1,1,1,1);
		}else if(animationplayed == 252) {
			ApplyAnimation(playerid,"PED","Smoke_in_car",4.1,0,1,1,1,1);
		}else if(animationplayed == 253) {
			ApplyAnimation(playerid,"PED","sprint_civi",4.1,0,1,1,1,1);
		}else if(animationplayed == 254) {
			ApplyAnimation(playerid,"PED","sprint_panic",4.1,0,1,1,1,1);
		}else if(animationplayed == 255) {
			ApplyAnimation(playerid,"PED","Sprint_Wuzi",4.1,0,1,1,1,1);
		}else if(animationplayed == 256) {
			ApplyAnimation(playerid,"PED","swat_run",4.1,0,1,1,1,1);
		}else if(animationplayed == 257) {
			ApplyAnimation(playerid,"PED","Swim_Tread",4.1,0,1,1,1,1);
		}else if(animationplayed == 258) {
			ApplyAnimation(playerid,"PED","Tap_hand",4.1,0,1,1,1,1);
		}else if(animationplayed == 259) {
			ApplyAnimation(playerid,"PED","Tap_handP",4.1,0,1,1,1,1);
		}else if(animationplayed == 260) {
			ApplyAnimation(playerid,"PED","turn_180",4.1,0,1,1,1,1);
		}else if(animationplayed == 261) {
			ApplyAnimation(playerid,"PED","Turn_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 262) {
			ApplyAnimation(playerid,"PED","Turn_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 263) {
			ApplyAnimation(playerid,"PED","WALK_armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 264) {
			ApplyAnimation(playerid,"PED","WALK_civi",4.1,0,1,1,1,1);
		}else if(animationplayed == 265) {
			ApplyAnimation(playerid,"PED","WALK_csaw",4.1,0,1,1,1,1);
		}else if(animationplayed == 266) {
			ApplyAnimation(playerid,"PED","Walk_DoorPartial",4.1,0,1,1,1,1);
		}else if(animationplayed == 267) {
			ApplyAnimation(playerid,"PED","WALK_drunk",4.1,0,1,1,1,1);
		}else if(animationplayed == 268) {
			ApplyAnimation(playerid,"PED","WALK_fat",4.1,0,1,1,1,1);
		}else if(animationplayed == 269) {
			ApplyAnimation(playerid,"PED","WALK_fatold",4.1,0,1,1,1,1);
		}else if(animationplayed == 270) {
			ApplyAnimation(playerid,"PED","WALK_gang1",4.1,0,1,1,1,1);
		}else if(animationplayed == 271) {
			ApplyAnimation(playerid,"PED","WALK_gang2",4.1,0,1,1,1,1);
		}else if(animationplayed == 272) {
			ApplyAnimation(playerid,"PED","WALK_old",4.1,0,1,1,1,1);
		}else if(animationplayed == 273) {
			ApplyAnimation(playerid,"PED","WALK_player",4.1,0,1,1,1,1);
		}else if(animationplayed == 274) {
			ApplyAnimation(playerid,"PED","WALK_rocket",4.1,0,1,1,1,1);
		}else if(animationplayed == 275) {
			ApplyAnimation(playerid,"PED","WALK_shuffle",4.1,0,1,1,1,1);
		}else if(animationplayed == 276) {
			ApplyAnimation(playerid,"PED","WALK_start",4.1,0,1,1,1,1);
		}else if(animationplayed == 277) {
			ApplyAnimation(playerid,"PED","WALK_start_armed",4.1,0,1,1,1,1);
		}else if(animationplayed == 278) {
			ApplyAnimation(playerid,"PED","WALK_start_csaw",4.1,0,1,1,1,1);
		}else if(animationplayed == 279) {
			ApplyAnimation(playerid,"PED","WALK_start_rocket",4.1,0,1,1,1,1);
		}else if(animationplayed == 280) {
			ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,0,1,1,1,1);
		}else if(animationplayed == 281) {
			ApplyAnimation(playerid,"PED","WEAPON_crouch",4.1,0,1,1,1,1);
		}else if(animationplayed == 282) {
			ApplyAnimation(playerid,"PED","woman_idlestance",4.1,0,1,1,1,1);
		}else if(animationplayed == 283) {
			ApplyAnimation(playerid,"PED","woman_run",4.1,0,1,1,1,1);
		}else if(animationplayed == 284) {
			ApplyAnimation(playerid,"PED","WOMAN_runbusy",4.1,0,1,1,1,1);
		}else if(animationplayed == 285) {
			ApplyAnimation(playerid,"PED","WOMAN_runfatold",4.1,0,1,1,1,1);
		}else if(animationplayed == 286) {
			ApplyAnimation(playerid,"PED","woman_runpanic",4.1,0,1,1,1,1);
		}else if(animationplayed == 287) {
			ApplyAnimation(playerid,"PED","WOMAN_runsexy",4.1,0,1,1,1,1);
		}else if(animationplayed == 288) {
			ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,0,1,1,1,1);
		}else if(animationplayed == 289) {
			ApplyAnimation(playerid,"PED","WOMAN_walkfatold",4.1,0,1,1,1,1);
		}else if(animationplayed == 290) {
			ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,0,1,1,1,1);
		}else if(animationplayed == 291) {
			ApplyAnimation(playerid,"PED","WOMAN_walkold",4.1,0,1,1,1,1);
		}else if(animationplayed == 292) {
			ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,0,1,1,1,1);
		}else if(animationplayed == 293) {
			ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,0,1,1,1,1);
		}else if(animationplayed == 294) {
			ApplyAnimation(playerid,"PED","WOMAN_walkshop",4.1,0,1,1,1,1);
		}else if(animationplayed == 295) {
			ApplyAnimation(playerid,"PED","XPRESSscratch",4.1,0,1,1,1,1);
		}
		return 1;
	}
	//===========================Шлагбаум ОГИБДД====================================
	if(strcmp(cmdtext, "/nopen", true)==0)
	{
		if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
		{
			SetObjectRot(baum1,0.7199, 44.8394, -97.4400);
			SetTimer("baum", 15000, 0);
			SendRadioMessage(7, COLOR_YELLOW,"Шлагбаум парковки нотариальной конторы поднят на 15 секунд!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник нотариальной конторы.");
		}
	}
	//===========================Шлагбаум ОГИБДД====================================
	if(strcmp(cmdtext, "/popen", true)==0)
	{
		if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
		{
			SetObjectRot(ppsbaum1,-1.32, -40.98, -89.88);
			SetTimer("ppsbaum", 15000, 0);
			SendRadioMessage(6, COLOR_YELLOW,"Шлагбаум парковки УМВД поднят на 15 секунд!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник полиции.");
		}
	}
	//===========================Шлагбаум штрафстоянки====================================
	if(strcmp(cmdtext, "/shtrafopen", true)==0)
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			SetObjectRot(shbaum1,-0.60, -13.4398, -9.8200);
			SetTimer("shbaum", 15000, 0);
			SendRadioMessage(1, COLOR_YELLOW,"Шлагбаум штрафстоянки ОГИБДД поднят на 15 секунд!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник ГИБДД.");
		}
	}
	//===========================Шлагбаум ОГИБДД====================================
	if(strcmp(cmdtext, "/dpsopen", true)==0)
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			SetObjectRot(dpsbaum1,-0.42, -37.80, -149.40);
			SetTimer("dpsbaum", 15000, 0);
			SendRadioMessage(1, COLOR_YELLOW,"Шлагбаум парковки ОГИБДД поднят на 15 секунд!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник ГИБДД.");
		}
	}
	//===========================Шлагбаум ОГИБДД====================================
	if(strcmp(cmdtext, "/dromopen", true)==0)
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			SetObjectRot(avtbaum1,0.18, -19.47, -22.06);
			SetTimer("avtbaum", 15000, 0);
			SendRadioMessage(1, COLOR_YELLOW,"Шлагбаум автодрома поднят на 15 секунд!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник ГИБДД.");
		}
	}
	//============================Ворота Горьковской================================
	if(strcmp(cmd,"/aopen",true)==0)
	{
		if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
		{
			MoveObject(gateopg,438.13, 1080.93, 8.24, 3.0);
			SetTimer("opggate", 10000, 0);
			SendRadioMessage(15, COLOR_YELLOW,"Ворота Арзамасовской братвы открыты на 10 секунд");
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTRED,"Вы не состоите в Арзамасовской братве!");
		}
	}
	if(strcmp(cmd, "/siren", true) == 0)
	{
		new car = GetPlayerVehicleID(playerid);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			new id_car = GetVehicleIdxByID(car);
			if(id_car != -1 && aData[id_car][aFrak] != 1) return 1;
			if(IsValidDynamicObject(aData[id_car][aMigObj])) 
			{
				DestroyDynamicObject(aData[id_car][aMigObj]);
				aData[id_car][aMigObj] = -1;
			}
			else 
			{
				aData[id_car][aMigObj] = CreateDynamicObject(11282, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);	
				if(GetVehicleModel(car) == 581) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.075000,0.674999,0.225000,0.000000,0.000000,-175.499877);
				if(GetVehicleModel(car) == 402) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000,-0.150000,0.975000,0.000000,0.000000,-175.499877);
				if(GetVehicleModel(car) == 596) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000,-0.150000,1.000000,0.000000,0.000000,-175.499877);
				if(GetVehicleModel(car) == 598) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000, -0.350000,1.000000,0.000000,0.000000,-175.499877);
				if(GetVehicleModel(car) == 599) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000, 0.100000,1.300000,0.000022,0.000000,-186.299880);
				if(GetVehicleModel(car) == 525) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000, 0.840000,1.450000,0.000022,-0.000005,-186.299880);
				if(GetVehicleModel(car) == 480) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000, -0.200000, 0.900000,0.000022,-0.000005,-186.299880);
				if(GetVehicleModel(car) == 459) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000, 0.600000, 1.600000,0.000022,-0.000005,-186.299880);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/psgy", true) == 0)
	{
		new car = GetPlayerVehicleID(playerid);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
		{
			new id_car = GetVehicleIdxByID(car);
			if(id_car != -1 && aData[id_car][aFrak] != 6) return 1;
			if(IsValidDynamicObject(aData[id_car][aMigObj]))
			{
				DestroyDynamicObject(aData[id_car][aMigObj]);
				aData[id_car][aMigObj] = -1;
			}
			else
			{
				aData[id_car][aMigObj] = CreateDynamicObject(11283, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
				if(GetVehicleModel(car) == 598) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000, -0.350000,1.000000,0.000000,0.000000,-175.499877);
				if(GetVehicleModel(car) == 599) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000, 0.100000,1.300000,0.000022,0.000000,-186.299880);
                if(GetVehicleModel(car) == 597) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000, -0.300000,1.200000,0.000022,0.000000,-186.299880);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/msgy", true) == 0)
	{
		new car = GetPlayerVehicleID(playerid);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
		{
			new id_car = GetVehicleIdxByID(car);
			if(id_car != -1 && aData[id_car][aFrak] != 4) return 1;
			if(IsValidDynamicObject(aData[id_car][aMigObj]))
			{
				DestroyDynamicObject(aData[id_car][aMigObj]);
				aData[id_car][aMigObj] = -1;
			}
			else
			{
				aData[id_car][aMigObj] = CreateDynamicObject(11283, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
				if(GetVehicleModel(car) == 416) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000,0.500000,1.705000,0.000000,0.000000,-175.499877);
				if(GetVehicleModel(car) == 423) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000,0.800000,1.305000,0.000000,0.000000,-175.499877);
			}
		}
		return 1;
	}
	//=================================СГУ МЧСников======================================
	if(strcmp(cmd, "/sgy", true) == 0)
	{
		new car = GetPlayerVehicleID(playerid);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pAdmin] >= 6)
		{
			new id_car = GetVehicleIdxByID(car);
			if(id_car != -1 && aData[id_car][aFrak] != 19) return 1;
			if(IsValidDynamicObject(aData[id_car][aMigObj])) 
			{
				DestroyDynamicObject(aData[id_car][aMigObj]);
				aData[id_car][aMigObj] = -1;
			}
			else 
			{
				aData[id_car][aMigObj] = CreateDynamicObject(11283, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
				if(GetVehicleModel(car) == 609) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000,1.934999,1.805000,0.000000,0.000000,-175.499877);
				if(GetVehicleModel(car) == 544) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000,4.150000,1.200000,0.000000,0.000000,-175.499877);
				if(GetVehicleModel(car) == 440) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000,1.000000,1.600000,0.000000,0.000000,-175.499877);
				if(GetVehicleModel(car) == 440) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000,1.000000,1.600000,0.000000,0.000000,-175.499877);
				if(GetVehicleModel(car) == 508) AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), 0.000000,1.200000,1.500000,0.000000,0.000000,-175.499877);
			}			
		}
		return 1;
	}
	//=========================CГУ ФСБ=======================================================
	if(strcmp(cmd, "/fsiren", true) == 0)
	{
		new car = GetPlayerVehicleID(playerid);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
			new id_car = GetVehicleIdxByID(car);
			if(id_car != -1 && aData[id_car][aFrak] != 2) return 1;
			if(IsValidDynamicObject(aData[id_car][aMigObj])) 
			{
				DestroyDynamicObject(aData[id_car][aMigObj]);
				aData[id_car][aMigObj] = -1;
			}
			else 
			{
				aData[id_car][aMigObj] = CreateDynamicObject(18646, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
				AttachDynamicObjectToVehicle(aData[id_car][aMigObj], GetPlayerVehicleID(playerid), -0.650000,0.200000,1.200000,0.000000,0.000000,-175.499877);
			}
		}
		return 1;
	}
	//============================[FBI]=========================================
	if(strcmp(cmd,"/gopen2",true)==0)
	{
		if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
		{
			MoveObject(gatefsb,2445.3000500,-1801.3000500,19.6000000, 3.0);
			SetTimer("fsbgate", 10, 0);
			SendRadioMessage(6, COLOR_LIGHTBLUE,"Ворота УМВД открыты на 10 секунд");
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1,"Вы не сотрудник УМВД!");
		}
		return 1;
	}
	//==============================Ворота ГУВД==================================
	if(strcmp(cmdtext, "/gopen1", true)==0)
	{
		if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6)
		{
			MoveObject(gatevorota,2445.6687, -1795.5292, 18.9774, 3.0);
			SetTimer("vorotagate", 10000, 0);
			SendRadioMessage(6, COLOR_LIGHTBLUE,"Ворота УМВД открыты на 10 секунд");
			return 1;
		}
		SendClientMessage(playerid,0x0000FFAA,"Вы не из полиции");
	}
	if(strcmp(cmdtext, "/gopen2", true)==0)
	{
		if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6)
		{
			MoveObject(gatevorota1,2406.6907, -1835.6040, 21.9546, 3.0);
			SetTimer("vorotagate1", 10000, 0);
			SendRadioMessage(6, COLOR_LIGHTBLUE,"Ворота УМВД открыты на 10 секунд");
			return 1;
		}
		SendClientMessage(playerid,0x0000FFAA,"Вы не из Полиции");
	}
	//============================[FBIGate]=========================================
	//==============================================================================
	if(strcmp(cmd, "/pay", true) == 0)
	{
		new server_tick = GetTickCount();
		if(GetPVarInt(playerid, "player_flood") > server_tick) return SendClientMessage(playerid,-1,#Нельзя передавать так часто!);
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /pay [id] [количество]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /pay [id] [количество]");
				return 1;
			}
			SetPVarInt(playerid, "player_flood",server_tick+1000);
			moneys = strval(tmp);
			if(moneys > 350 && PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть больше 3 уровня, чтобы передавать больше 350 рублей!");
			if(moneys > 50000 && PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть больше 5 уровня, чтобы передавать больше 50000 рублей!");
			if(moneys < 1 || moneys > 100000)
			{
				SendClientMessage(playerid, COLOR_GREY, "Нельзя передать меньше 1 рублей или больше 100000 рублей.");
				return 1;
			}
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[giveplayerid][pLocal] == 106)
					{
						SendClientMessage(playerid, COLOR_GREY, "Команда запрещена в данной локации");
						return 1;
					}
					if(ProxDetectorS(5.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playermoney = eGetPlayerMoney(playerid);
						if(moneys > 0 && playermoney >= moneys)
						{
							ConsumingMoney[giveplayerid] = 1;
							GivePlayerMoney(playerid, (0 - moneys));
							GivePlayerMoney(giveplayerid, moneys);
							PlayerInfo[playerid][pCash]=PlayerInfo[playerid][pCash]-moneys;
							PlayerInfo[giveplayerid][pCash]=PlayerInfo[giveplayerid][pCash]+moneys;
							format(string, sizeof(string), "Вы перевели %s %d рублей.", giveplayer, moneys);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "Вы получили %d рублей от %s.", moneys, sendername);
							SendClientMessage(giveplayerid, COLOR_GRAD1, string);
							if(moneys >= 1000000)
							{
								ABroadCast(COLOR_YELLOW,string,1);
							}
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "* %s перевёл немного денег для %s", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							format_string = "";
							new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
							format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

							mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Команда pay','%d','%s','%s')", NamePlayer[playerid],moneys,giveplayer,data);
							mysql_tquery(MySQLGo, format_string);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Неправильное количество!");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, " Вы слишком далеко!");
					}
				}//invalid id
			}
			else
			{
				format(string, sizeof(string), "Игрок не в сети!");
				SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/resetgun", true) == 0) //
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /resetgun [id]");
				return 1;
			}
			new intid;
			intid = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				ResetWeapons(intid);
				GetPlayerName(intid, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "Вы отобрали оружие у (%d)%s", intid, giveplayer);
				SetPVarInt(intid, "givegunsfromadm", 0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/changenumber",true)==0 || strcmp(cmd,"/cn",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			//------------------------------------------------------------------------------
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /changenumber [id] [номер] [цена]");
				return 1;
			}
			//------------------------------------------------------------------------------
			new playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /changenumber [id] [номер] [цена]");
				return 1;
			}
			new phnumb = strval(tmp);
			if(phnumb<10000 || phnumb>9999999)// Не меньше 4х знаков и не больше 7
			{
				SendClientMessage(playerid, COLOR_RED, "Номер телефона неможет быть меньше 10000 и больше 9999999!");
				return 1;
			}
			//------------------------------------------------------------------------------
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /changenumber [id] [номер] [цена]");
				return 1;
			}
			new money = strval(tmp);
			if(money<1 || money>10000000) // Нельзя делать деньги меньше 1 доллара, и больше 10кк
			{
				SendClientMessage(playerid, COLOR_RED, "Нельзя ставить сумму меньше 1 и больше 10000000");
				return 1;
			}
			//------------------------------------------------------------------------------
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[playa][pPnumber] > 0) // number
					{
						GetPlayerName(playerid, sendername, sizeof(sendername)); // getting player name
						GetPlayerName(playa, giveplayer, sizeof(giveplayer)); // getting giveplayer name
						format(string, sizeof(string), "%s предлагает вам сменить номер на %d за %d!", sendername, phnumb, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						SendClientMessage(playa, COLOR_LIGHTBLUE, " Используйте: /accept change, чтобы изменить номер!");
						format(string, sizeof(string), "Вы предложили %s сменить номер на %d за %d", giveplayer, phnumb, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						ChangeOffer[playa] = playerid;
						ChangeCost[playa] = money;
						ChangeNumber[playa] = phnumb;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "У игрока нету телефона!");
						return 1;
					}// No mobile
				}//not valid id
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Неправильный ID/имя !");
					return 1;
				}
			}//playa not connected
		}//not connected
		return 1;
	}
	//===========================================Чистый чат=========================
	if(strcmp(cmdtext,"/cc",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] == 5)
		{
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_WHITE," ");
			SendClientMessageToAll(COLOR_LIGHTRED,"Чат был очищен администрацией сервера.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не администратор!");
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/payday", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			PayDay();
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
		}
		return 1;
	}
	if(strcmp(cmd, "/pdx2", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			pdx2 = 1;
			format(string,sizeof(string),"Администратор {D0800E}%s {ffffff}включил х2 PayDay.");
			SendAdminMessage(COLOR_PINK,string);
			SendClientMessageToAll(COLOR_PINK,string);
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
	}
	if(strcmp(cmd, "/editmk", true) == 0)
	{
		if(!(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4))// где -билет выдает только лидер армии!
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вы не доктор!");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /editmk [id/name] [(Писать предыдущие через < , >), текст]");
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Этот игрок оффлайн!");
			return 1;
		}
		if(PlayerInfo[giveplayerid][pMK] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "У игрока нету мед. карты!");
		new length = strlen(cmdtext);
		while((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[264];
		while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /editmk [id/name] [(Писать предыдущие через < , >), текст]");
			return 1;
		}
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			format(string, sizeof(string), "Вы изменили историю болезней игроку %s.",giveplayer);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s изменил вам историю болезней.",sendername);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Используйте /showmk [ID/name] чтобы просмотреть изминения в мед. карте.");
			format(string, sizeof(string), "%s изменил историю болезней игроку %s.",sendername,giveplayer);
			SendRadioMessage(4,COLOR_DBLUE ,string);//оповещение армейцам о выдаче билета
			format(PlayerInfo[giveplayerid][pMK4],256,"%s",(result));
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/givemk", true) == 0)
	{
		if(!(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4))// где -билет выдает только лидер армии!
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вы не доктор!");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /givemk [id/name]");
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Этот игрок оффлайн!");
			return 1;
		}
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			SetTimerEx("MK1", 1000, 0, "d", playerid);
			SetTimerEx("MK2", 5000, 0, "d", playerid);
			SetTimerEx("MK3", 8000, 0, "d", playerid);
			PlayerInfo[giveplayerid][pMK] = 1;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			format(string, sizeof(string), "Вы выдали игроку %s медицинскую карту.",giveplayer);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s выдал вам медицинскую карту.",sendername);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Используйте /showmk [ID/name] чтобы показать мед карту.");
			format(string, sizeof(string), "%s выдал медицинскую карту игроку %s.",sendername,giveplayer);
			SendRadioMessage(4,COLOR_DBLUE ,string);//оповещение армейцам о выдаче билета
			new year,month,day;
			new mtext[20];
			new dtext[20];
			getdate(year, month, day);
			if(month == 1) { mtext = "01"; }
			else if(month == 2) { mtext = "02"; }
			else if(month == 3) { mtext = "03"; }
			else if(month == 4) { mtext = "04"; }
			else if(month == 5) { mtext = "05"; }
			else if(month == 6) { mtext = "06"; }
			else if(month == 7) { mtext = "07"; }
			else if(month == 8) { mtext = "08"; }
			else if(month == 9) { mtext = "09"; }
			else if(month == 10) { mtext = "10"; }
			else if(month == 11) { mtext = "11"; }
			else if(month == 12) { mtext = "12"; }
			if(day == 1) { dtext = "01"; }
			else if(day == 2) { dtext = "02"; }
			else if(day == 3) { dtext = "03"; }
			else if(day == 4) { dtext = "04"; }
			else if(day == 5) { dtext = "05"; }
			else if(day == 6) { dtext = "06"; }
			else if(day == 7) { dtext = "07"; }
			else if(day == 8) { dtext = "08"; }
			else if(day == 9) { dtext = "09"; }
			else if(day == 10) { dtext = "10"; }
			else if(day == 11) { dtext = "11"; }
			else if(day == 12) { dtext = "12"; }
			else if(day == 13) { dtext = "13"; }
			else if(day == 14) { dtext = "14"; }
			else if(day == 15) { dtext = "15"; }
			else if(day == 16) { dtext = "16"; }
			else if(day == 17) { dtext = "17"; }
			else if(day == 18) { dtext = "18"; }
			else if(day == 19) { dtext = "19"; }
			else if(day == 20) { dtext = "20"; }
			else if(day == 21) { dtext = "21"; }
			else if(day == 22) { dtext = "22"; }
			else if(day == 23) { dtext = "23"; }
			else if(day == 24) { dtext = "24"; }
			else if(day == 25) { dtext = "25"; }
			else if(day == 26) { dtext = "26"; }
			else if(day == 27) { dtext = "27"; }
			else if(day == 28) { dtext = "28"; }
			else if(day == 29) { dtext = "29"; }
			else if(day == 30) { dtext = "30"; }
			else if(day == 31) { dtext = "31"; }
			format(PlayerInfo[giveplayerid][pMK3],256,"%s.%s.%d",dtext,mtext,year);
			new lname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, lname, sizeof(lname));
			format(PlayerInfo[giveplayerid][pMK2],256,"%s",lname);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/migloset", true)==0)
	{
		new carid = GetPlayerVehicleID(playerid);
		new id_car = GetVehicleIdxByKey(PlayerInfo[playerid][pCKey]);
		if(carid != aData[id_car][aCarid]) return SendClientMessage(playerid, COLOR_GRAD2, "Вы должны быть в своём автомобиле");
		if(aData[id_car][aMiglo] == 0) return SendClientMessage(playerid, COLOR_GRAD2, "У вас нет мигалки!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /migloset [x] [y] [z]");
		new Float:car = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /migloset [x] [y] [z]");
		new Float:car2 = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /migloset [x] [y] [z]");
		new Float:car3 = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		aData[id_car][aMigPos][0] = car;
		aData[id_car][aMigPos][1] = car2;
		aData[id_car][aMigPos][2] = car3;
		mysql_function(MySQLGo,300,"UPDATE `vehicles` SET `MigX` = '%.1f',`MigY` = '%.1f',`MigZ` = '%.1f' WHERE `Owner` = '%s'",false,"","", car,car2,car3, NamePlayer[playerid]);
		SCM(playerid, -1, "Готово, новые координаты установлены.");
		return 1;
	}
	if(strcmp(cmd, "/migloon", true) == 0)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new carid = GetPlayerVehicleID(playerid);
			new id_car = GetVehicleIdxByID(carid);
			if(id_car == -1) return 1;
			if(carid == aData[id_car][aCarid])
			{
				if(aData[id_car][aMiglo] == 1)
				{
					new Float:tempX, Float:tempY, Float:tempZ;
					GetPlayerPos(playerid, tempX, tempY, tempZ);
					for(new tempi = 0; tempi < MAX_PLAYERS; tempi++)
					{
						if(!IsPlayerConnected(tempi)) continue;
						if(IsPlayerInRangeOfPoint(tempi, 35.0, tempX, tempY, tempZ)) PlayerPlaySound(tempi, 2000, 0.0, 0.0, 0.0);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/miglo", true) == 0)
	{
		new car = GetPlayerVehicleID(playerid);
		new id_car = GetVehicleIdxByID(car);
		if(id_car == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Для этой машины мигалка не предусмотрена.");
		if(car != aData[id_car][aCarid]) return SendClientMessage(playerid, COLOR_GRAD2, "Вы должны быть в своём автомобиле");
		if(aData[id_car][aMiglo] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "У вас нет мигалки.");
		if(IsValidDynamicObject(aData[id_car][aMigObj])) 
		{
			DestroyDynamicObject(aData[id_car][aMigObj]);
			aData[id_car][aMigObj] = -1;
			SendClientMessage(playerid, COLOR_GRAD2, "Вы выключили мигалку");
			return 1;
		}
		else
		{
			aData[id_car][aMigObj] = CreateDynamicObject(11281, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(aData[id_car][aMigObj], car, aData[id_car][aMigPos][0], aData[id_car][aMigPos][1], aData[id_car][aMigPos][2], aData[id_car][aMigPos][3], aData[id_car][aMigPos][4], aData[id_car][aMigPos][5]);
			SendClientMessage(playerid, COLOR_GRAD2, "Вы включили мигалку");
			return 1;
		}
	}
	if(strcmp(cmd, "/radiocar", true) == 0)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return ShowPlayerDialog(playerid,RADIO,DIALOG_STYLE_LIST, "{FFFFFF}Выбор радиостанции.","{808080}1.{FFFFFF} Zaycev FM.\n{808080}2.{FFFFFF} Европа+.\n{808080}3.{FFFFFF} Radio Record.\n{808080}4.{FFFFFF} Авторадио.\n{808080}5.{FFFFFF} Радио шансон.\n{808080}6.{FFFFFF} Наше радио.\n{808080}7.{FFFFFF} Выключить радио.","Выбрать","Отмена");
	}
	if(strcmp(cmd, "/givevnbl", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] != 3)// где -билет выдает только лидер армии!
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вам недоступна эта команда!");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /givevnbl [id/name]");
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Этот игрок оффлайн!");
			return 1;
		}
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			PlayerInfo[giveplayerid][pVoennik] = 1;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			format(string, sizeof(string), "Вы выдали игроку %s военный билет.",giveplayer);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s выдал вам военный билет.",sendername);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s выдал военный билет игроку %s.",sendername,giveplayer);
			SendRadioMessage(3,COLOR_DBLUE ,string);//оповещение армейцам о выдаче билета
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/agivebil", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] != 3)// где -билет выдает только лидер армии!
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вам недоступна эта команда !");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /agivebilet [id/name]");
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Этот игрок оффлайн!");
			return 1;
		}
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			PlayerInfo[giveplayerid][pVoennik] = 1;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			format(string, sizeof(string), "Вы выдали игроку %s военный билет.",giveplayer);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s выдал вам военный билет.",sendername);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/giveflylic", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17)
		{
			if(!(PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pRank] < 11))
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не пилот-инструктор!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /giveflylic [id/name]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Этот игрок оффлайн!");
				return 1;
			}
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				PlayerInfo[giveplayerid][pFlyLic] = 1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "%s выдал вам лицензию. Описание: Удостоверение пилота.",giveplayer);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Пилот-инструктор %s выдал вам лицензию. Описание: Удостоверение пилота.",sendername);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s выдал удостоверение пилота игроку %s.",sendername,giveplayer);
				SendRadioMessage(3,COLOR_DBLUE ,string);//оповещение армейцам о выдаче билета
			}
		}
		else
		{
			SendClientMessage(playerid,COLOR_GREY,"Вы не из СТО");
			return 1;
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/agivelicense", true) == 0||strcmp(cmd, "/agl", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, " *Используйте: /agivelicense [name] [id_игрока/ЧастьИмени]");
					SendClientMessage(playerid, COLOR_WHITE, " *Лицензии: Права, Полёты, Оружие, all(все лицы).");
					return 1;
				}
				if(strcmp(x_nr,"Права",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "Использование: /agivelicense Driving [id_игрока/ЧастьИмени]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							prava[giveplayerid] = 2;
							format(string, sizeof(string), "* Вы дали водительские права %s.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Администратор %s дал вам водительские права. ",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pKatB] = 1;
							new year,month,day,hour,minute,second;
							new mtext[20];
							new dtext[20];
							getdate(year, month, day);
							if(month == 1) { mtext = "01"; }
							else if(month == 2) { mtext = "02"; }
							else if(month == 3) { mtext = "03"; }
							else if(month == 4) { mtext = "04"; }
							else if(month == 5) { mtext = "05"; }
							else if(month == 6) { mtext = "06"; }
							else if(month == 7) { mtext = "07"; }
							else if(month == 8) { mtext = "08"; }
							else if(month == 9) { mtext = "09"; }
							else if(month == 10) { mtext = "10"; }
							else if(month == 11) { mtext = "11"; }
							else if(month == 12) { mtext = "12"; }
							if(day == 1) { dtext = "01"; }
							else if(day == 2) { dtext = "02"; }
							else if(day == 3) { dtext = "03"; }
							else if(day == 4) { dtext = "04"; }
							else if(day == 5) { dtext = "05"; }
							else if(day == 6) { dtext = "06"; }
							else if(day == 7) { dtext = "07"; }
							else if(day == 8) { dtext = "08"; }
							else if(day == 9) { dtext = "09"; }
							else if(day == 10) { dtext = "10"; }
							else if(day == 11) { dtext = "11"; }
							else if(day == 12) { dtext = "12"; }
							else if(day == 13) { dtext = "13"; }
							else if(day == 14) { dtext = "14"; }
							else if(day == 15) { dtext = "15"; }
							else if(day == 16) { dtext = "16"; }
							else if(day == 17) { dtext = "17"; }
							else if(day == 18) { dtext = "18"; }
							else if(day == 19) { dtext = "19"; }
							else if(day == 20) { dtext = "20"; }
							else if(day == 21) { dtext = "21"; }
							else if(day == 22) { dtext = "22"; }
							else if(day == 23) { dtext = "23"; }
							else if(day == 24) { dtext = "24"; }
							else if(day == 25) { dtext = "25"; }
							else if(day == 26) { dtext = "26"; }
							else if(day == 27) { dtext = "27"; }
							else if(day == 28) { dtext = "28"; }
							else if(day == 29) { dtext = "29"; }
							else if(day == 30) { dtext = "30"; }
							else if(day == 31) { dtext = "31"; }
							gettime(hour,minute,second);
							if(PlayerInfo[giveplayerid][pCarLic]==0)
							{
								format(PlayerInfo[giveplayerid][pCarLic5],256, "%d%d%d%d%d%d%d%d", random(9), random(9), random(9), random(9), random(9), random(9), random(9), random(9));
							}
							format(PlayerInfo[giveplayerid][pCarLic3],256,"%s.%s.%d  %d:%d:%d",dtext,mtext,year,hour,minute, second);
							new lname[MAX_PLAYER_NAME];
							GetPlayerName(playerid, lname, sizeof(lname));
							format(PlayerInfo[giveplayerid][pCarLic2],256,"%s",lname);
							SaveAccounts();
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, " Этот игрок не в сети ! ");
						return 1;
					}
				}
				else if(strcmp(x_nr,"Полёты",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "Использование: /agivelicense Pilots [id_игрока/ЧастьИмени]");
						return 1;
					}
					prava[giveplayerid] = 2;
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* Вы дали лицензию на полеты %s.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Администратор %s дал вам лицензию на полеты.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pFlyLic] = 1;
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в сети!");
						return 1;
					}
				}
				else if(strcmp(x_nr,"all",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "Использование: /agivelicense all [id_игрока/ЧастьИмени]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* Вы дали комплект лицензий игроку %s.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Администратор %s дал вам комплект лицензий. ",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pKatA] = 1;
							PlayerInfo[giveplayerid][pKatB] = 1;
							PlayerInfo[giveplayerid][pKatC] = 1;
							PlayerInfo[giveplayerid][pKatD] = 1;
							PlayerInfo[giveplayerid][pGunLic] = 1;
							prava[giveplayerid] = 2;
							PlayerInfo[playerid][pKategA] = 1;
							PlayerInfo[playerid][pKategB] = 1;
							PlayerInfo[playerid][pKategC] = 1;
							PlayerInfo[playerid][pKategD] = 1;
							new year,month,day,hour,minute,second;
							new mtext[20];
							new dtext[20];
							getdate(year, month, day);
							if(month == 1) { mtext = "01"; }
							else if(month == 2) { mtext = "02"; }
							else if(month == 3) { mtext = "03"; }
							else if(month == 4) { mtext = "04"; }
							else if(month == 5) { mtext = "05"; }
							else if(month == 6) { mtext = "06"; }
							else if(month == 7) { mtext = "07"; }
							else if(month == 8) { mtext = "08"; }
							else if(month == 9) { mtext = "09"; }
							else if(month == 10) { mtext = "10"; }
							else if(month == 11) { mtext = "11"; }
							else if(month == 12) { mtext = "12"; }
							if(day == 1) { dtext = "01"; }
							else if(day == 2) { dtext = "02"; }
							else if(day == 3) { dtext = "03"; }
							else if(day == 4) { dtext = "04"; }
							else if(day == 5) { dtext = "05"; }
							else if(day == 6) { dtext = "06"; }
							else if(day == 7) { dtext = "07"; }
							else if(day == 8) { dtext = "08"; }
							else if(day == 9) { dtext = "09"; }
							else if(day == 10) { dtext = "10"; }
							else if(day == 11) { dtext = "11"; }
							else if(day == 12) { dtext = "12"; }
							else if(day == 13) { dtext = "13"; }
							else if(day == 14) { dtext = "14"; }
							else if(day == 15) { dtext = "15"; }
							else if(day == 16) { dtext = "16"; }
							else if(day == 17) { dtext = "17"; }
							else if(day == 18) { dtext = "18"; }
							else if(day == 19) { dtext = "19"; }
							else if(day == 20) { dtext = "20"; }
							else if(day == 21) { dtext = "21"; }
							else if(day == 22) { dtext = "22"; }
							else if(day == 23) { dtext = "23"; }
							else if(day == 24) { dtext = "24"; }
							else if(day == 25) { dtext = "25"; }
							else if(day == 26) { dtext = "26"; }
							else if(day == 27) { dtext = "27"; }
							else if(day == 28) { dtext = "28"; }
							else if(day == 29) { dtext = "29"; }
							else if(day == 30) { dtext = "30"; }
							else if(day == 31) { dtext = "31"; }
							gettime(hour,minute,second);
							if(PlayerInfo[giveplayerid][pCarLic]==0)
							{
								format(PlayerInfo[giveplayerid][pCarLic5],256, "%d%d%d%d%d%d%d%d", random(9), random(9), random(9), random(9), random(9), random(9), random(9), random(9));
							}
							format(PlayerInfo[giveplayerid][pCarLic3],256,"%s.%s.%d  %d:%d:%d",dtext,mtext,year,hour,minute, second);
							new lname[MAX_PLAYER_NAME];
							GetPlayerName(playerid, lname, sizeof(lname));
							format(PlayerInfo[giveplayerid][pCarLic2],256,"%s",lname);
							SaveAccounts();
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в сети!");
						return 1;
					}
				}
				else if(strcmp(x_nr,"Оружие",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "Использование: /agivelicense weapon [id_игрока/ЧастьИмени]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* Вы дали лицензию на оружие %s.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Администратор %s дал вам лицензию на оружие. ",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pGunLic] = 1;
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в сети!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера! ");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/giveudost", true) == 0)
	{
		if(!(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 6))// где -билет выдает только лидер армии!
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вам недоступна эта команда!");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /giveudost [id/name]");
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Этот игрок оффлайн!");
			return 1;
		}
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if(PlayerInfo[giveplayerid][pMember] == PlayerInfo[playerid][pLeader] || giveplayerid == playerid || PlayerInfo[giveplayerid][pLeader] == PlayerInfo[playerid][pLeader] || giveplayerid == playerid /*|| PlayerInfo[playerid][pAdmin] >= 6*/)
			{
				PlayerInfo[giveplayerid][pUdost] = 1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "Вы выдали игроку %s удостоверение.",giveplayer);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s выдал вам удостоверение.",sendername);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				new year,month,day;
				new mtext[20];
				new dtext[20];
				new ytext[20];
				getdate(year, month, day);
				if(month == 1) { mtext = "01"; }
				else if(month == 2) { mtext = "02"; }
				else if(month == 3) { mtext = "03"; }
				else if(month == 4) { mtext = "04"; }
				else if(month == 5) { mtext = "05"; }
				else if(month == 6) { mtext = "06"; }
				else if(month == 7) { mtext = "07"; }
				else if(month == 8) { mtext = "08"; }
				else if(month == 9) { mtext = "09"; }
				else if(month == 10) { mtext = "10"; }
				else if(month == 11) { mtext = "11"; }
				else if(month == 12) { mtext = "12"; }
				if(year == 2013) { ytext = "2014"; }
				else if(year == 2014) { ytext = "2015"; }
				else if(year == 2015) { ytext = "2016"; }
				else if(year == 2016) { ytext = "2017"; }
				else if(year == 2017) { ytext = "2018"; }
				else if(year == 2018) { ytext = "2019"; }
				if(day == 1) { dtext = "01"; }
				else if(day == 2) { dtext = "02"; }
				else if(day == 3) { dtext = "03"; }
				else if(day == 4) { dtext = "04"; }
				else if(day == 5) { dtext = "05"; }
				else if(day == 6) { dtext = "06"; }
				else if(day == 7) { dtext = "07"; }
				else if(day == 8) { dtext = "08"; }
				else if(day == 9) { dtext = "09"; }
				else if(day == 10) { dtext = "10"; }
				else if(day == 11) { dtext = "11"; }
				else if(day == 12) { dtext = "12"; }
				else if(day == 13) { dtext = "13"; }
				else if(day == 14) { dtext = "14"; }
				else if(day == 15) { dtext = "15"; }
				else if(day == 16) { dtext = "16"; }
				else if(day == 17) { dtext = "17"; }
				else if(day == 18) { dtext = "18"; }
				else if(day == 19) { dtext = "19"; }
				else if(day == 20) { dtext = "20"; }
				else if(day == 21) { dtext = "21"; }
				else if(day == 22) { dtext = "22"; }
				else if(day == 23) { dtext = "23"; }
				else if(day == 24) { dtext = "24"; }
				else if(day == 25) { dtext = "25"; }
				else if(day == 26) { dtext = "26"; }
				else if(day == 27) { dtext = "27"; }
				else if(day == 28) { dtext = "28"; }
				else if(day == 29) { dtext = "29"; }
				else if(day == 30) { dtext = "30"; }
				else if(day == 31) { dtext = "31"; }
				format(PlayerInfo[giveplayerid][pUdost1],256,"%s.%s.%d",dtext,mtext,year);
				format(PlayerInfo[giveplayerid][pUdost2],256,"%s.%s.%s",dtext,mtext,ytext);
				SaveAccounts();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не в вашей организации.");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/stats", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] != 0)
			{
				ShowStats(playerid,playerid,0);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				//format(string, sizeof(string), "* %s достает свой КПК и смотрит записи", sendername);
				//ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы ещё не вошли в игру!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd,"/at",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
					{
						if(GetPlayerState(playerid)==2)
						{
							new Float:pX,Float:pY,Float:pZ;
							GetPlayerPos(playerid,pX,pY,pZ);
							new Float:vX,Float:vY,Float:vZ;
							new Found=0;
							new vid=0;
							while((vid<MAX_VEHICLES)&&(!Found))
							{
								vid++;
								GetVehiclePos(vid,vX,vY,vZ);
								if((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
								{
									Found=1;
									if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
									{
										DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
									}
									else
									{
										AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
									}
								}
							}
							if(!Found)
							{
								SendClientMessage(playerid,0xFFFF00AA,"Рядом нет автомобиля.");
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вам нужно быть за рулем!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Вам нужно быть в эвакуаторе!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вам нужно быть в авто!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"Вам нужно работать в ГИБДД!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dt", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new vehplid = GetPlayerVehicleID(playerid);
			if(!IsTrailerAttachedToVehicle(vehplid)) return SCM(@p,COLOR_GREY,"Нет прицепа!");
			DetachTrailerFromVehicle(vehplid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы отцепили автомобиль!");
			return 1;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/dn", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPPos(playerid, slx, sly, slz-2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/up", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPPos(playerid, slx, sly, slz+2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");

			}
		}
		return 1;
	}
	if(strcmp(cmd, "/fly", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:px, Float:py, Float:pz, Float:pa;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPPos(playerid, px, py+30, pz+5);
				}
				if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPPos(playerid, px, py+30, pz+5);
				}
				if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPPos(playerid, px-15, py+15, pz+5);
				}
				if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPPos(playerid, px-30, py, pz+5);
				}
				if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPPos(playerid, px-15, py-15, pz+5);
				}
				if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPPos(playerid, px, py-30, pz+5);
				}
				if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPPos(playerid, px+15, py-15, pz+5);
				}
				if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPPos(playerid, px+30, py, pz+5);
				}
				if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPPos(playerid, px+15, py+15, pz+5);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/lt", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPPos(playerid, slx, sly+2, slz);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rt", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPPos(playerid, slx, sly-2, slz-2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/check", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /check [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						ShowStats(playerid,giveplayerid,1);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы ввели неправильный id игрока!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/number", true) == 0)
	{
		if(!PlayerInfo[playerid][pPhoneBook]) return SendClientMessage(playerid,-1,#У вас нет телефонной книги);
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /number [id игрока]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(!PlayerInfo[giveplayerid][pPnumber]) return SendClientMessage(playerid,-1,#У данного человека нет телефона.);
					GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					format(string, 256, "Имя: %s, номер телефона: %d",sendername,PlayerInfo[giveplayerid][pPnumber]);
					SendClientMessage(playerid, COLOR_GREEN, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Ошибка!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/buygun", true) == gunmenu[1])
	{
		if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pGunLic] != 1) return SendClientMessage(playerid,COLOR_RED,"У вас отсутствует лицензия на ношение огнестрельного оружия");
			if(PlayerInfo[playerid][pPasport] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Продавец отказывается от продажи. У Вас нет паспорта!");
				return 1;
			}
			if(eGetPlayerMoney(playerid) < 1000)
			{
				SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег!");
				return 1;
			}
			if(IsAtGUN(playerid))//  координаты магазинов
			{
				if(OnWeapon[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже брали набор");
				new s[512];//256
				format(s,sizeof(s),"{808080}1. {FFFFFF}Пистолет 'Макарова' 25 пт. - {808080}2500 руб.\n{808080}2. {FFFFFF}Пистолет 'Макарова' 60 пт. - {808080}5000 руб.\n{808080}3. {FFFFFF}Пистолет 'KoltSD' 25 пт. - {808080}2100 руб.\n{808080}4. {FFFFFF}Пистолет 'KoltSD' 60 пт. - {808080}4200руб.\n{808080}5. {FFFFFF}Дробовик 16 пт. - {808080}4000 руб.\n{808080}6. {FFFFFF}Дробовик 40 пт. - {808080}8000 руб.\n{808080}7. {FFFFFF}Автомат 'АКС-74У' 45 пт. -{808080} 4500 руб.\n{808080}8. {FFFFFF}Автомат 'АКС-74У' 100 пт. -{808080} 9000 руб.");
				ShowPlayerDialog(playerid,10,DIALOG_STYLE_LIST,"Магазин оружия: меню.",s,"Купить","Отмена");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не находитесь в оружейном магазине!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/buysex", true) == sexmenu[1])
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsAtSexShop(playerid))//  координаты магазинов
			{
				new s[512];//-кол-во доступных символов
				format(s,sizeof(s)," Пурпурный Фаллоимитатор  [640р]\n Малый Белый Вибратор      [260р]\n Большой Белый Вибратор  [390р]\n Металлический Вибратор        [400р]\n Букет цветов             [750р]\n Презерватив            [50р]");
				ShowPlayerDialog(playerid,21,DIALOG_STYLE_LIST,"Сеть Продуктовых Магазинов: меню ",s,"Купить","Отмена");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не находитесь у прилавка магазина !");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/noooc", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 8 && (!noooc))
			{
				noooc = 1;
				BroadCast(COLOR_GREY, "Общий чат отключён администратором!");
			}
			else if(PlayerInfo[playerid][pAdmin] >= 8 && (noooc))
			{
				noooc = 0;
				BroadCast(COLOR_YELLOW, "Общий чат включен администратором!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/checkmoney", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Для начала войдите в игру.");
				return 1;
			}
			if(PlayerTied[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть связан.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /checkmoney [id игрока] ");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(5.0, playerid, giveplayerid))
					{
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* %s шариться  по карманам у %s и находит %dр",sendername,giveplayer,eGetPlayerMoney(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас ");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/advertise", true) == 0 || strcmp(cmd, "/ad", true) == 0)
	{
		if(!PlayerInfo[playerid][pPnumber]) return SendClientMessage(playerid,COLOR_GRAD1,"В вашем телефоне нет SIM карты. Купить ее можно в магазине 24/7.");
		if(IsPlayerConnected(playerid))
		{
			//------------------------------------------------------------------------------
			if(gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не вошли!");
				return 1;
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы можете подавать объявление, только когда вы достигните 2-го уровня! ");
				return 1;
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				PlayerMuteMessage(playerid);
				return 1;
			}
			//------------------------------------------------------------------------------
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /ad [текст объявления]");
				return 1;
			}
			if((!adds) && PlayerInfo[playerid][pDonateRank] == 0)
			{
				format(string, sizeof(string), "Попытайтесь попозже, %d секунд до подачи новой рекламы !",  (addtimer/1000));
				SendClientMessage(playerid, COLOR_GREY, string);
				return 1;

			}
			new payout = idx * 25 - 5;
			if(eGetPlayerMoney(playerid) < payout)
			{
				format(string, sizeof(string), " Вы использовали %d символов за %d рублей, но у вас не хватает денег, чтобы заплатить.", offset, payout);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				return 1;
			}
			PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid) - payout;
			GivePlayerMoney(playerid, - payout);
			if(PlayerInfo[@p][pDonateRank])
			{
				format(string, sizeof(string), "VIP объявление: %s. Телефон: %d",  result, PlayerInfo[playerid][pPnumber]);
				OOCNews(COLOR_YELLOW,string);

			}
			else
			{
				format(string, sizeof(string), "Объявление: %s. Телефон: %d",  result, PlayerInfo[playerid][pPnumber]);
				OOCNews(TEAM_GROVE_COLOR,string);
			}
			format(string, sizeof(string), "Объявление подал %s [ID: %d]. Телефон: %d",  sendername, playerid, PlayerInfo[playerid][pPnumber]);
			SendAdmHelpMessage(COLOR_GREEN,string);
			format(string, sizeof(string), "За объявление вы заплатили %d рублей. Количество букв: %d", payout, idx);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			if(PlayerInfo[playerid][pAdmin] < 1){SetTimer("AddsOn", addtimer, 0);adds = 0;}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/snews", true) == 0 || strcmp(cmd, "/gov", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			//------------------------------------------------------------------------------
			if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не вошли!");
			if(PlayerInfo[playerid][pMuted] == 1) PlayerMuteMessage(playerid);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /snews [текст новостей]");
				return 1;
			}
			if(strlen(result) > 122) return SendClientMessage(playerid, COLOR_GRAD1, "Слишком длинный текст!");
			if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1)
			{
				if(PlayerInfo[playerid][pRank] <= 9) return 	SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 10 рангом, чтобы отправлять объявления.");
			}
			if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6)
			{
				if(PlayerInfo[playerid][pRank] <= 9) return 	SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 10 рангом, чтобы отправлять объявления.");
			}
			else if(PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2)
			{
				if(PlayerInfo[playerid][pRank] <= 6) return 	SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 7 рангом, чтобы отправлять объявления.");
			}
			if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3)
			{
				if(PlayerInfo[playerid][pRank] <= 4) return 	SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 5 рангом, чтобы отправлять объявления.");
			}
			else if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4)
			{
				if(PlayerInfo[playerid][pRank] <= 4) return 	SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 5 рангом, чтобы отправлять объявления.");
			}
			if(PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
			{
				if(PlayerInfo[playerid][pRank] <= 2) return 	SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 3 рангом, чтобы отправлять объявления.");
			}
			else if(PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pMember] == 11)
			{
				if(PlayerInfo[playerid][pRank] <= 7) return 	SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 8 рангом, чтобы отправлять объявления.");
			}
			else if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12)
			{
				if(PlayerInfo[playerid][pRank] <= 4) return 	SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 5 рангом, чтобы отправлять объявления.");
			}
			else if(PlayerInfo[playerid][pLeader] == 20 || PlayerInfo[playerid][pMember] == 20)
			{
				if(PlayerInfo[playerid][pRank] <= 4) return 	SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 5 рангом, чтобы отправлять объявления.");
			}
			if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17)
			{
				if(PlayerInfo[playerid][pRank] <= 6) return 	SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 7 рангом, чтобы отправлять объявления.");
			}
			if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5)
			{
				if(PlayerInfo[playerid][pRank] <= 11) return 	SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 11 рангом, чтобы отправлять объявления.");
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5 && PlayerInfo[playerid][pRank] >= 11)
			{
				SendClientMessageToAll(COLOR_GREEN, "|_____ Внимание! Объявление от Таксомоторного парка №5_____|");
				if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "%s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "Генеральный директор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "Заместитель директора %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "Инструктор %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_GREEN, string);
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 && PlayerInfo[playerid][pRank] >= 11)
			{
				SendClientMessageToAll(COLOR_GOVMIL, "{2E9AFE}|_____ Внимание! Объявление от ОГИБДД России г.Нижегородск _____|");
				if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "{2E9AFE}%s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "{2E9AFE}Полковник полиции (ОГИБДД) %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "{2E9AFE}Подполковник полиции (ОГИБДД) %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "{2E9AFE}Майор полиции (ОГИБДД) %s: %s", sendername, result); }
				SendClientMessageToAllEx (COLOR_GOVMIL, string);
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6 && PlayerInfo[playerid][pRank] >= 11)
			{
				SendClientMessageToAll(COLOR_GOVMIL, "{2E9AFE}|___________ Внимание! Объявление от УМВД России по Арзамасскому району ________|");
				if(PlayerInfo[playerid][pRank] == 13) { format (string, sizeof(string), "{2E9AFE}Генерал-майор полиции %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "{2E9AFE}Полковник полиции %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "{2E9AFE}Подполковник полиции %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "{2E9AFE}Майор полиции %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_GOVMIL, string);
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 && PlayerInfo[playerid][pRank] >= 7)
			{
				SendClientMessageToAll(COLOR_GREEN, "|________ Внимание! Объявление от Федеральной Службы Безопасности ________|");
				if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "Полковник ФСБ %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "Подполковник ФСБ %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "Майор ФСБ %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_GREEN, string);
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 && PlayerInfo[playerid][pRank] >= 13)
			{
				SendClientMessageToAll(COLOR_GREEN, "|______ Внимание! Объявление от Вооруженных Сил РФ _______|");
				if(PlayerInfo[playerid][pRank] == 19) { format(string, sizeof(string), "Генерал Армии %s: %s", sendername, result); }
				//else if(PlayerInfo[playerid][pRank] == 18) { format(string, sizeof(string), "Генерал-полковник ВС %s: %s", sendername, result); }
				//else if(PlayerInfo[playerid][pRank] == 17) { format(string, sizeof(string), "Генерал-лейтенант ВС %s: %s", sendername, result); }
				//else if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "Генерал-майор ВС %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "Полковник %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "Подполковник %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_GREEN, string);
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4 && PlayerInfo[playerid][pRank] >= 11)
			{
				SendClientMessageToAll(COLOR_ALLDEPT, "{BE81F7}|_______ Внимание! Объявление от ГКБ №3 г.Арзамас ________|");
				if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "{BE81F7}Заведующий больницей %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "{BE81F7}Помощник заведующего %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "{BE81F7}Главный врач %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "{BE81F7}Заведующий отделением %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "{BE81F7}Врач-специалист %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_ALLDEPT, string);
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7 && PlayerInfo[playerid][pRank] >= 3)
			{
				SendClientMessageToAll(COLOR_WHITE, "{2E9AFE}|_______ Внимание! Объявление от Нотарильной конторы «Premier-Alliance» _______|");
				if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "{2E9AFE}Директор конторы %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "{2E9AFE}Заместитель директора конторы %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "{2E9AFE}Бухгалтер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "{2E9AFE}Нотариус %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "{2E9AFE}Юрист-Консультант %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_GOVMIL, string);
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11 && PlayerInfo[playerid][pRank] >= 8)
			{
				SendClientMessageToAll(COLOR_GOVMIL, "|________ Внимание! Объявление от Автошколы РОСТО ДОСААФ ________|");
				if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "Директор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "Заместитель директора %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "Бухгалтер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "Старший менеджер %s: %s", sendername, result); }
				//else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), " Менеджер %s: %s", sendername, result); }
				//else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), " Старший Инструктор %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_GOVMIL, string);
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 && PlayerInfo[playerid][pRank] >= 8)
			{
				SendClientMessageToAll(COLOR_GOVM4S, "{FE2E2E}|_______ Внимание! Объявление от СВПЧ №31 _______|");
				if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "{FE2E2E}Полковник МЧС %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "{FE2E2E}Подполковник МЧС %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "{FE2E2E}Майор МЧС %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "{FE2E2E}Капитан МЧС %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "{FE2E2E}Ст. лейтенант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "{FE2E2E}Лейтенант МЧС МЧС %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "{FE2E2E}Мл. лейтенант МЧС %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "{FE2E2E}Ст. прапорщик МЧС %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_GOVM4S, string);
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20 && PlayerInfo[playerid][pRank] >= 5)
			{
				SendClientMessageToAll(COLOR_GREEN, "|_______________ Внимание! Объявление от СОБР ______________|");
				if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "Генерал-Майор СОБР %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "Полковник СОБР %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "Подполковник СОБР %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "Майор СОБР %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "Капитан СОБР %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "Старший СОБР %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "Лейтенант СОБР %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "Мл. лейтенант СОБР %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "Ст. прапорщик СОБР %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Старшина СОБР %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Ст. сержант СОБР %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_GREEN, string);
			}
			if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12 && PlayerInfo[playerid][pRank] >= 13)
			{
				SendClientMessageToAll(COLOR_GREEN, "|_______________ Внимание! Объявление от Горьковской Железной Дороги ______________|");
				if(PlayerInfo[playerid][pRank] == 21) { format(string, sizeof(string), "Начальник Дороги %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 20) { format(string, sizeof(string), "Начальник ДУД %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 19) { format(string, sizeof(string), "Старший Диспетчер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 18) { format(string, sizeof(string), "Поездной Диспетчер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 17) { format(string, sizeof(string), "Начальник станции %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "Дежурный по станции %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "Начальник Депо %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "Дежурный по депо %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "Машинист-Инструктор %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_GREEN, string);
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17 && PlayerInfo[playerid][pRank] >= 7)
			{
				SendClientMessageToAll(COLOR_GREEN, "{04B431}|____________ Внимание! Объявление от СТО №23 __________|");
				if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "{04B431}Директор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "{04B431}Зам. директора %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "{04B431}Главный инженер %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_GREEN, string);
			}
			//------------------------------------------------------------------------------
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/togpm", true) == 0 || strcmp(cmd, "/togicq", true) == 0 || strcmp(cmd, "/togwhisper", true) == 0)
	{
		if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pDonateRank] > 0)
		{
			if(!HidePM[playerid])
			{
				HidePM[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы отключили приём личных сообщений!");
			}
			else if(HidePM[playerid])
			{
				HidePM[playerid] = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы включили приём личных сообщений!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "У вас нет VIP аккаунта!");
		}
		return 1;
	}
	if(strcmp(cmd, "/togtp", true) == 0)
	{
		if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] < 3)
		{
			if(!HideTP[playerid])
			{
				HideTP[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы запретили телепортироваться к вам / вас телепортировать!");
			}
			else if(HideTP[playerid])
			{
				HideTP[playerid] = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы разрешили телепортироваться к вам / вас телепортировать!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не администратор 3 уровня!");
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/togooc", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!gOoc[playerid])
			{
				gOoc[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "OOC чат выключен!");
			}
			else if(gOoc[playerid])
			{
				gOoc[playerid] = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "OOC чат включен!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/tognews", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!gNews[playerid])
			{
				gNews[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Новости отключены!");
			}
			else if(gNews[playerid])
			{
				gNews[playerid] = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Новости включены!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/togfam", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!gFam[playerid])
			{
				gFam[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чат семьи отключен!");
			}
			else if(gFam[playerid])
			{
				gFam[playerid] = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чат семьи включен!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/togphone", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pAdmin] > 1)
			{
				if(!PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы отключили свой мобильный телефон!");
				}
				else if(PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 0;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы включили ваш мобильный телефон!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "У вас нет VIP аккаунта!");
				return 1;
			}
		}
		return 1;
	}
	//===============================================================================
	if(strcmp(cmd, "/hi", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsPlayerInAnyVehicle(playerid)) return  SendClientMessage(playerid, COLOR_RED, "[Ошибка]: Нельзя использовать в машине");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return         SendClientMessage(playerid, COLOR_GREY, "[Подсказка]: Введите: /hi [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(2.0, playerid, giveplayerid))
					{
						if(giveplayerid == playerid)  return  SendClientMessage(playerid,COLOR_RED,"[Ошибка]: Вы указали свой ID!");
						new Float:angle;
						GetPlayerFacingAngle(playerid, angle);
						SetPlayerFacingAngle(giveplayerid, angle + 180);
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s пожал(а) руку %s", sendername ,giveplayer);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0,1);
						ApplyAnimation(giveplayerid,"GANGS","hndshkfa",4.0,0,0,0,0,0,1);
						return true;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "[Ошибка]: Человек далеко от вас!");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, "[Ошибка]: Человек не найден!");
				return true;
			}
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/me", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!gPlayerLogged[playerid])	return  SendClientMessage(playerid, COLOR_GREY, "Вы не авторизовались на сервере!");
			if(PlayerInfo[playerid][pMuted])	return PlayerMuteMessage(playerid);
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /me [действие]");
			if(GetPVarInt(playerid,#P_Mask_On) == 1) format(string, sizeof(string), "* Человек в маске %s", result);
			else format(string, sizeof(string), "* %s %s", NamePlayer[@p], result);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 20.0, 10000);
		}
		return 1;
	}
	if(strcmp(cmd, "/delpdo", true) == 0)
	{
		if(PlayerTextFormat[playerid][0] == 0) return SendClientMessage(playerid, -1, "Вы не создавали текст через /pdo.");
		SendClientMessage(playerid, -1, "Текст успешно удален.");
		Delete3DTextLabel(Player3DTextDo[playerid]);
		PlayerTextFormat[playerid][0] = 0;
		return 1;
	}
	if(strcmp(cmd, "/delpme", true) == 0)
	{
		if(PlayerTextFormat[playerid][1] == 0) return SendClientMessage(playerid, -1, "Вы не создавали текст через /pme.");
		SendClientMessage(playerid, -1, "Текст успешно удален.");
		Delete3DTextLabel(Player3DText[playerid]);
		PlayerTextFormat[playerid][1] = 0;
		return 1;
	}
	if(strcmp(cmd, "/cdo", true) == 0)
	{
		new cdoseat = GetPlayerVehicleSeat(playerid);
		switch(gpvi(playerid,"cdo"))
		{
			case 0:
		    {
				new cdocar = GetPlayerVehicleID(playerid);
				if(cdoseat != 0) return SendClientMessage(playerid,COLOR_RED,"Вы не водитель автомобиля");
				new result[128];
				if(sscanf(params,"s[128]",result)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /cdo [текст] - описание особенностей Вашего Т/С.");
				glob_str = "";
                format(glob_str, sizeof(glob_str), "%s (( %s | ID: %d ))", result, PlayerInfo[playerid][pNickname], playerid);
                CDOText[cdocar] = Create3DTextLabel(glob_str, 0xB22222FF, 0.0,0.0,0.0,15.0,0,1);
                Attach3DTextLabelToVehicle(CDOText[cdocar],cdocar, 0.0, 0.0, 0.0 );
                SendClientMessage(playerid,-1,"Вы установили 3D текст на свой автомобиль. Для того, чтобы убрать этот текст, введите команду повторно.");
                SendClientMessage(playerid,-1,glob_str);
				glob_str = "";
                spvi(@p,"cdo",cdocar);
				return 1;
            }
			default:
            {
               	if(cdoseat != 0) return SendClientMessage(playerid,COLOR_RED,"Вы не водитель автомобиля");                
                Delete3DTextLabel(CDOText[gpvi(playerid,"cdo")]);
				DeletePVar(playerid,"cdo");
                SendClientMessage(playerid,-1,"Вы успешно убрали 3D текст с Вашего автомобиля.");
				return 1;
            }
		}
		return 1;
	}
	if(strcmp(cmd, "/pdo", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)	        {
				SendClientMessage(playerid, COLOR_GREY, "Вы не авторизовались на сервере!");
				return 1;	        }
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMuted] == 1)			{
				PlayerMuteMessage(playerid);
				return 1;			}
			//------------------------------------------------------------------------------
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /pdo [действие (Текст)]. Удалить текст - /delpdo.");
				return 1;
			}
			if(PlayerTextFormat[playerid][0] == 1)
			{
				Delete3DTextLabel(Player3DTextDo[playerid]);
				PlayerTextFormat[playerid][0] = 0;
			}
			new Float:PosX[3]; GetPlayerPos(playerid, PosX[0], PosX[1], PosX[2]);
			format_string = "";
			if(GetPVarInt(playerid,#P_Mask_On)) format(format_string, 256, "{FFFFFF}%s (( Человек в маске | ID: %d ))", (result), playerid);
			else format(format_string, 256, "{FFFFFF}%s (( %s | ID: %d ))", (result), NamePlayer[playerid], playerid);
			Player3DTextDo[playerid] = Create3DTextLabel(format_string, 0xB22222FF, PosX[0], PosX[1], PosX[2], 10.0, 0, 0);
			PlayerTextFormat[playerid][0] = 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/pme", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)	        {
				SendClientMessage(playerid, COLOR_GREY, "Вы не авторизовались на сервере!");
				return 1;	        }
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMuted] == 1)			{
				PlayerMuteMessage(playerid);
				return 1;			}
			//------------------------------------------------------------------------------
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /pme [действие (Текст)]. Удалить текст - /delpme.");
				return 1;
			}
			if(PlayerTextFormat[playerid][1] == 1)
			{
				Delete3DTextLabel(Player3DText[playerid]);
				PlayerTextFormat[playerid][1] = 0;
			}
			new Float:PosX[3]; GetPlayerPos(playerid, PosX[0], PosX[1], PosX[2]);
			format_string = "";
			format(format_string, 256, "%s  (( %s | ID: %d ))", (result, PlayerInfo[playerid][pNickname], playerid));
			Player3DText[playerid] = Create3DTextLabel(format_string, 0xB22222FF, PosX[0], PosX[1], PosX[2]+1.0, 10.0, 0, 0);
			Attach3DTextLabelToPlayer(Player3DText[playerid], playerid, 0.0, 0.0, 0.7);
			PlayerTextFormat[playerid][1] = 1;
			glob_str = "";
			format(glob_str,sizeof(glob_str),"Вы установили 3D текст над головой: %s",result);
			SCM(@p,-1,glob_str);
			glob_str = "";
		}
		return 1;
	}
	if(strcmp(cmd, "/gotoarz", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 478.9069,1122.5781,12.0500);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPPos(playerid, 478.9069,1122.5781,12.0500);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы в Арзамас!");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование этой команды!");
			}
		}
		return 1;
	}
	//================[Телепорт На ШС===========================================
	if(strcmp(cmd, "/gotomp", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 381.6268,507.7247,14.1125);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPPos(playerid, 381.6268,507.7247,14.1125);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы на сцену парка.");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование этой команды!");
			}
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/gotolyt", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2232.4412, 185.9097, 24.5617);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPPos(playerid, -2232.4412, 185.9097, 24.5617);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы в Лыткарино");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование этой команды!");
			}
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/gotobat", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1874.1675,2254.8105,15.2729);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPPos(playerid, 1874.1675,2254.8105,15.2729);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы в Батырево");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование этой команды!");
			}
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/gotoed", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2476.5464,2840.3281,37.6340);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPPos(playerid, -2476.5464,2840.3281,37.6340);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы в Эдово");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование этой команды!");
			}
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/gotorub", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -835.8726,1936.2589,45.5214);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPPos(playerid, -835.8726,1936.2589,45.5214);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы на рублёвку");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование этой команды!");
			}
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/gotoniz", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2617.4023,1981.1259,53.2180);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPPos(playerid, -2617.4023,1981.1259,53.2180);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы в Нижегородск");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование этой команды!");
			}
		}
		return 1;
	}
	//==============================[Выгнать из фракции]============================
	if(strcmp(cmd, "/uval", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid,COLOR_RED,"Вы не администратор!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /kickuninvite [Ник/Id]");
			return 1;
		}
		new playa;
		playa = ReturnUser(tmp);
		new PName[MAX_PLAYER_NAME];
		GetPlayerName(playerid,PName,sizeof(PName));
		GetPlayerName(playa, giveplayer, sizeof(giveplayer));
		format(string, sizeof(string), "* Вы уволили из фракции %s!", giveplayer);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Администратор %s уволил вас из фракции!", PName);
		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		PlayerInfo[playa][pMember] = 0;
		PlayerInfo[playa][pRank] = 0;
		PlayerInfo[playa][pChar] = 0;
		MedicBill[playa] = 0;
		format_string = "";
		new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
		format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

		mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Uval For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[playa], data);
		mysql_tquery(MySQLGo, format_string);
		SpawnPlayer(playa);
		return 1;
	}
	//=======================[Разбанить IP]==========================================
	if(strcmp(cmd,"/unbanip",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /unbanip [players ip]");
				return 1;
			}

			format(string,sizeof(string),"unbanip %s",tmp);
			SendRconCommand(string);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, 256, "Администратор %s разбанил IP %s", sendername,tmp);
			SendAdmHelpMessage(COLOR_GREEN,string);
		}
		return 1;
	}
	if(strcmp(cmd,"/unban",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext,idx);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_GRAD1,"/unban [players nick]");

			mysql_format(MySQLGo, format_string, 70, "DELETE FROM `banlist` WHERE `ban_name` = '%s'", tmp);
			mysql_function_query(MySQLGo, format_string, false, "", "");

			UnBan1(tmp);
			format(string, 256, "Администратор %s разблокировал игровой аккаунт '%s'.", sendername,tmp);
			SendAdmHelpMessage(COLOR_LIGHTBLUE,string);

			format_string = "";
			new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
			format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

			mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Unban For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
			mysql_tquery(MySQLGo, format_string);
		}
		return true;
	}
	if(strcmp(cmd,"/offban",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_GRAD1,"/offban [players nick] [кол-во дней]");
			new nick[24];
			strmid(nick, tmp, 0, strlen(tmp), MAX_PLAYER_NAME);
			tmp = strtok(cmdtext,idx);
			new days1 = strval(tmp);
			new querys[512];
			mysql_format(MySQLGo, querys, 512, "INSERT INTO `banlist` (`ban_name`, `admin_name_ban`, `reason`, `unbane_date`, `ban_date`) VALUES ('%s', '%s', 'Нарушения правил', '%i', '%i')", nick, NamePlayer[playerid], gettime() + days1*86400, gettime()-366);
			mysql_tquery(MySQLGo, querys);

			format(format_string, 256, "Администратор %s заблокировал %s на %d дней в оффлайн режиме.", NamePlayer[playerid],nick,days1);
			SendAdmHelpMessage(COLOR_LIGHTBLUE,format_string);

			format_string = "";
			new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
			format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

			mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','OffBan For Player','0','%s','%s')", NamePlayer[playerid], nick, data);
			mysql_tquery(MySQLGo, format_string);
		}
		return true;
	}
	if(!strcmp(cmdtext, "/aeee", true))
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Сначала нужно войти");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] >= 6)
			{
				if(eee[playerid] == 0)
				{
					eee[playerid] = 1;
					return 1;
				}
				else if(eee[playerid] == 1)
				{
					eee[playerid] = 0;
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/todo", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(PlayerInfo[playerid][pMuted] == 1)			{
				PlayerMuteMessage(playerid);
				return 1;			}
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /todo [текст*действие]");
				return 1;
			}
			if(strfind(result,"*",true,0) == -1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Вы не поставили символ разделения '*'");
				return 1;
			}
			new one[65];
			new two[65];
			new pos = strfind(result, "*" ,true);
			strmid(one, result, 0, pos);
			strmid(two, result, pos+1, 128);
			GetInitials(playerid);
			if(GetPVarInt(playerid,#P_Mask_On)) format(string, sizeof(string), "{C2A2DA}- {FFFFFF}%s {C2A2DA}- произнёс человек в маске, {C2A2DA}%s", one, two);
			else format(string, sizeof(string), "{C2A2DA}- {FFFFFF}%s {C2A2DA}- произнёс %s, {C2A2DA}%s", one, NamePlayer[playerid], two);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerChatBubble(playerid, result, COLOR_PURPLE, 20.0, 10000);
			printf("%s", string);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/try", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Ты не залогинился!");
				return 1;
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMuted] == 1)			{
				PlayerMuteMessage(playerid);
				return 1;			}
			//------------------------------------------------------------------------------
			if(TryChat[playerid] > 0)
			{
				format(string,sizeof(string),"Ты можешь использовать эту команду еще раз только через %d секунд!",TryChat[playerid]);
				SendClientMessage(playerid, COLOR_RED,string);
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /try [действие]");
				return 1;
			}
			new randa = random(2)+1;
			if(GetPVarInt(playerid,#P_Mask_On) == 1)
			{
				if(randa == 1) format(string, sizeof(string), "* Человек в маске попытался %s ({00FF00}Удачно{C2A2DA})", result);
				else format(string, sizeof(string), "{9900CC}* Человек в маске попытался %s ({FF0000}Неудачно{C2A2DA})", result);
			}
			else
			{
				if(randa == 1) format(string, sizeof(string), "* %s попытался %s ({00FF00}Удачно{C2A2DA})", sendername, result);
				else format(string, sizeof(string), "* %s попытался %s ({FF0000}Неудачно{C2A2DA})", sendername, result);
			}
			TryChat[playerid] = 10;//Игрок может использовать /try еще раз только через 40 сек
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			printf("%s", string);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/do", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не авторизированы!");
			if(PlayerInfo[playerid][pMuted])	return PlayerMuteMessage(playerid);
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /do [действие]");
			if(GetPVarInt(playerid,#P_Mask_On))format(string, sizeof(string), "* %s (( Человек в маске ))", result);
			else format(string, sizeof(string), "* %s (( %s ))",result,NamePlayer[@p]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 20.0, 10000);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/local", true) == 0 || strcmp(cmd, "/l", true) == 0 || strcmp(cmd, "/say", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			//------------------------------------------------------------------------------
			if(gPlayerLogged[playerid] == 0)	        {
				SendClientMessage(playerid, COLOR_GREY, " Вы не авторизированы!");
				return 1;	        }
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMuted] == 1)			{
				PlayerMuteMessage(playerid);
				return 1;			}
			//------------------------------------------------------------------------------
			if(IsMessageSent[playerid] == 1)    {
				SendClientMessage(playerid, COLOR_RED, "Не флудите в чат!.");
				return 0;   }
			else    {
				IsMessageSent[playerid] = 1;// интервал написания
				SetTimerEx("UnMutedX",interval*600,0,"d",playerid);	}
			//------------------------------------------------------------------------------
			GetInitials(playerid);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /l [текст]");
				return 1;
			}
			new dl = GetPlayerDrunkLevel(playerid);
			new ds = 100;
			if(dl >= 2000 && dl <= 10000) ds = random(100);
			else if(dl > 10000 && dl <= 20000) ds = random(80);
			else if(dl > 20000 && dl <= 30000) ds = random(60);
			else if(dl > 30000 && dl <= 40000) ds = random(40);
			else if(dl > 40000 && dl <= 50000) ds = random(30);
			if(GetPVarInt(playerid,#P_Mask_On) == 1)
			{
				if(ds <= 20)
				{
					format(string, sizeof(string), "Человек в маске что-то бормочет");
					ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					format(string, sizeof(string), "Человек в маске говорит: %s", result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				SetPlayerChatBubble(playerid,string,COLOR_FADE1,20,10);
			}
			else
			{
				if(ds <= 20)
				{
					format(string, sizeof(string), "%s что-то бормочет",firstname[playerid]);
					ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					format(string, sizeof(string), "%s говорит: %s", sendername, result);
					ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);					
				}
			}
			SetPlayerChatBubble(playerid,string,COLOR_FADE1,20,10);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/b", true) == 0)//local ooc
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не авторизированы!");
				return 1;
			}
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /b [local ooc chat]");
				return 1;
			}
			if(GetPVarInt(playerid,#P_Mask_On) == 1)
			{
				format(string, sizeof(string), "(( Человек в маске говорит: %s ))", result);
			}
			else
			{
				format(string, sizeof(string), "{FFFFFF}(( {99FF33}%s{FFFFFF}: %s ))", sendername, result);
			}
			//	SetPlayerChatBubble(playerid,string,COLOR_FADE1,20,10);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			printf("%s", string);
		}
		return 1;
	}
	/*if(strcmp(cmd, "/w", true) == 0 || strcmp(cmd, "/wi", true) == 0)
	{
			if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Войдите в игру!");
			if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_WHITE, "{DC143C}У вас бан чата!");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Помощь: /w [текст]");
			new romstring[128];
			format(string, sizeof(string), "{BDB76B}%s шепчет: %s", sendername, result);
			ProxDetector(2.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			format(romstring, sizeof(romstring), "{BDB76B}%s шепнул что-то", sendername, result);
			ProxDetector(10.0, playerid, romstring,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
			}
			SetPlayerChatBubble(playerid,result,COLOR_YELLOW,15.0,10000);
			return 1;
	}*/

	//==============================================================================
	if(strcmp(cmd, "/close", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			//------------------------------------------------------------------------------
			if(gPlayerLogged[playerid] == 0)	        {
				SendClientMessage(playerid, COLOR_GREY, "Вы не авторизированы!");
				return 1;	        }
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMuted] == 1)			{
				PlayerMuteMessage(playerid);
				return 1;			}
			//------------------------------------------------------------------------------
			GetInitials(playerid);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /ш [текст]");
				return 1;
			}
			new dl = GetPlayerDrunkLevel(playerid);
			new ds = 100;
			if(dl >= 2000 && dl <= 10000) ds = random(100);
			else if(dl > 10000 && dl <= 20000) ds = random(80);
			else if(dl > 20000 && dl <= 30000) ds = random(60);
			else if(dl > 30000 && dl <= 40000) ds = random(40);
			else if(dl > 40000 && dl <= 50000) ds = random(30);
			if(GetPVarInt(playerid,#P_Mask_On) == 1)
			{
				if(ds <= 20)
				{
					format(string, sizeof(string), "* Человек в маске что-то бормочет");
					ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					format(string, sizeof(string), "* Человек в маске произносит шепотом: %s", result);
					SetPlayerChatBubble(playerid, result, COLOR_FADE5, 50.0, 10000);
					ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
			}
			else
			{
				if(ds <= 20)
				{
					format(string, sizeof(string), "* %s что-то бормочет",firstname[playerid]);
					ProxDetector(3.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					format(string, sizeof(string), "%s произносит шепотом: %s", sendername, result);
					SetPlayerChatBubble(playerid, result, COLOR_FADE5, 50.0, 10000);//
					ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
			}
			printf("%s", string);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/shout", true) == 0 || strcmp(cmd, "/s", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			GetInitials(playerid);
			//------------------------------------------------------------------------------
			if(JustShout[playerid] == 1)	        {
				SendClientMessage(playerid, COLOR_RED, "Не флудите в чат!");
				return 1;	        }
			//------------------------------------------------------------------------------
			if(gPlayerLogged[playerid] == 0)	        {
				SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать эту команду, пока не авторизуетесь!");
				return 1;	        }
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMuted] == 1)			{
				PlayerMuteMessage(playerid);
				return 1;			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /s [текст]");
				return 1;
			}
			new dl = GetPlayerDrunkLevel(playerid);
			new ds = 100;
			if(dl >= 2000 && dl <= 10000) ds = random(100);
			else if(dl > 10000 && dl <= 20000) ds = random(80);
			else if(dl > 20000 && dl <= 30000) ds = random(60);
			else if(dl > 30000 && dl <= 40000) ds = random(40);
			else if(dl > 40000 && dl <= 50000) ds = random(30);
			if(GetPVarInt(playerid,#P_Mask_On) == 1)
			{
				if(ds <= 20)
				{
					format(string, sizeof(string), "* Человек в маске что-то бормочет");
					ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					format(string, sizeof(string), "* Человек в маске кричит: %s", result);
					ProxDetector(34.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
				}
				SetPlayerChatBubble(playerid,string,COLOR_FADE1,20,10);
			}
			else
			{
				if(ds <= 20)
				{
					format(string, sizeof(string), "* %s что-то бормочет",firstname[playerid]);
					ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					format(string, sizeof(string), "%s кричит: %s!!", sendername, result);
					SetPlayerChatBubble(playerid, result, COLOR_WHITE, 50.0, 10000);//
					ProxDetector(34.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
					ApplyAnimation(playerid,"RIOT","RIOT_shout",4.0,0,0,0,0,0);
					JustShout[playerid] = 1;
					SetTimerEx("ShoutReset", 1000, false, "i", playerid);//
				}
			}
			printf("%s", string);
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/megaphone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMuted] == 1) 
			{
				PlayerMuteMessage(playerid);
				return 1;
			}
			//------------------------------------------------------------------------------
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /m [megaphone chat]");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в автомобиле!");
			if(IsACop(playerid) || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17
					|| PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
			{
				format(string, sizeof(string), "[МЕГАФОН] - %s[%d]: %s",PlayerInfo[playerid][pNickname],playerid,result);
				ProxDetector(70.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать эту команду!");
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/udost", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Используйте: /udost [playerid/PartOfName]");
				return 1;
			}
			new member = PlayerInfo[playerid][pMember];
			new leader = PlayerInfo[playerid][pLeader];
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(5.0, playerid, giveplayerid))
					{
						if(member == 1||leader==1||member==2||leader==2||member==6||leader==6)
						{
							GetPlayerName(giveplayerid, playername, sizeof(playername));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new dtext[256];
							new ptext[256];
							if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
							{
								if(PlayerInfo[playerid][pDolj] == 1) { dtext = "МИ-ОБ ДПС"; }
								else if(PlayerInfo[playerid][pDolj] == 2) { dtext = "И-ОБ ДПС"; }
								else if(PlayerInfo[playerid][pDolj] == 3) { dtext = "СИ-ОБ ДПС"; }
								else if(PlayerInfo[playerid][pDolj] == 4) { dtext = "Заместитель начальника отдела кадров"; }
								else if(PlayerInfo[playerid][pDolj] == 5) { dtext = "Начальник отдела кадров"; }
								else if(PlayerInfo[playerid][pDolj] == 6) { dtext = "Заместитель командир СР-ОБ ДПС"; }
								else if(PlayerInfo[playerid][pDolj] == 7) { dtext = "Командир СР-ОБ ДПС"; }
								else if(PlayerInfo[playerid][pDolj] == 8) { dtext = "Заместитель командира ОБ-ДПС"; }
								else if(PlayerInfo[playerid][pDolj] == 9) { dtext = "Командир ОБ-ДПС"; }
								else if(PlayerInfo[playerid][pDolj] == 10) { dtext = "Заместитель начальника учебного центра"; }
								else if(PlayerInfo[playerid][pDolj] == 11) { dtext = "Начальник учебного центра"; }
								else if(PlayerInfo[playerid][pDolj] == 12) { dtext = "Заместитель начальника МРЭО"; }
								else if(PlayerInfo[playerid][pDolj] == 13) { dtext = "Начальник МРЭО"; }
								else if(PlayerInfo[playerid][pDolj] == 14) { dtext = "Заместитель начальника службы эвакуации"; }
								else if(PlayerInfo[playerid][pDolj] == 15) { dtext = "Начальник службы эвакуации"; }
								else if(PlayerInfo[playerid][pDolj] == 16) { dtext = "МИ СР-ОБ ДПС"; }
								else if(PlayerInfo[playerid][pDolj] == 17) { dtext = "И СР-ОБ ДПС"; }
								else if(PlayerInfo[playerid][pDolj] == 18) { dtext = "CИ СР-ОБ ДПС"; }
								else if(PlayerInfo[playerid][pDolj] == 19) { dtext = "Третий заместитель начальника отдела ГИБДД"; }
								else if(PlayerInfo[playerid][pDolj] == 20) { dtext = "Второй заместитель начальника отдела ГИБДД"; }
								else if(PlayerInfo[playerid][pDolj] == 21) { dtext = "Первый заместитель начальника отдела ГИБДД"; }
								else if(PlayerInfo[playerid][pDolj] == 22) { dtext = "Начальник отдела ГИБДД"; }
								else if(PlayerInfo[playerid][pDolj] == 23) { dtext = "Обучающийся в учебном центре"; }
								else { dtext = "Обучающийся в учебном центре"; }
							}
							if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 6)
							{
								if(PlayerInfo[playerid][pDolj] == 1) { ptext = "Младший патрульный ПООП"; }
								else if(PlayerInfo[playerid][pDolj] == 2) { ptext = "Патрульный ПООП"; }
								else if(PlayerInfo[playerid][pDolj] == 3) { ptext = "Старший патрульный ПООП"; }
								else if(PlayerInfo[playerid][pDolj] == 4) { ptext = "Младший оперуполномоченный УУР"; }
								else if(PlayerInfo[playerid][pDolj] == 5) { ptext = "Оперуполномоченный УУР"; }
								else if(PlayerInfo[playerid][pDolj] == 6) { ptext = "Старший оперуполномоченный УУР"; }
								else if(PlayerInfo[playerid][pDolj] == 7) { ptext = "Следователь юстиции"; }
								else if(PlayerInfo[playerid][pDolj] == 8) { ptext = "Стажер ОМОН"; }
								else if(PlayerInfo[playerid][pDolj] == 9) { ptext = "Боец ОМОН"; }
								else if(PlayerInfo[playerid][pDolj] == 10) { ptext = "Заместитель командира ОМОН"; }
								else if(PlayerInfo[playerid][pDolj] == 11) { ptext = "Командир ОМОН"; }
								else if(PlayerInfo[playerid][pDolj] == 12) { ptext = "Заместитель начальника ПООП"; }
								else if(PlayerInfo[playerid][pDolj] == 13) { ptext = "Начальник ПООП"; }
								else if(PlayerInfo[playerid][pDolj] == 14) { ptext = "Заместитель начальника СУ"; }
								else if(PlayerInfo[playerid][pDolj] == 15) { ptext = "Начальник СУ"; }
								else if(PlayerInfo[playerid][pDolj] == 16) { ptext = "Заместитель начальника УУР"; }
								else if(PlayerInfo[playerid][pDolj] == 17) { ptext = "Начальник УУР"; }
								else if(PlayerInfo[playerid][pDolj] == 18) { ptext = "Третий заместитель начальника УМВД"; }
								else if(PlayerInfo[playerid][pDolj] == 19) { ptext = "Второй заместитель начальника УМВД"; }
								else if(PlayerInfo[playerid][pDolj] == 20) { ptext = "Первый заместитель начальника УМВД"; }
								else if(PlayerInfo[playerid][pDolj] == 21) { ptext = "Начальник УМВД"; }
								else { ptext = "Младший патрульный ПООП"; }
							}
							new rtext[256];
							if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
							{
								if(PlayerInfo[playerid][pRank] == 1) { rtext = "Рядовой полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 2) { rtext = "Мл. сержант полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Сержант полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Ст. сержант полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Старшина полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Мл. лейтенант полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Лейтенант полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Ст. лейтенант полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Капитан полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции (ГИБДД)"; }
								else { rtext = "Рядовой полиции (ГИБДД)"; }
							}
							if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
							{
								if(PlayerInfo[playerid][pRank] == 1) { rtext = "Рядовой полиции"; }
								else if(PlayerInfo[playerid][pRank] == 2) { rtext = "Мл. сержант полиции"; }
								else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Сержант полиции"; }
								else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Ст. сержант полиции"; }
								else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Старшина полиции"; }
								else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Мл. лейтенант полиции"; }
								else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Лейтенант полиции"; }
								else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Ст. лейтенант полиции"; }
								else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Капитан полиции"; }
								else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции"; }
								else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции"; }
								else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции"; }
								else { rtext = "Рядовой полиции"; }
							}
							if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
							{
								if(PlayerInfo[playerid][pRank] == 1) { rtext = "Прапорщик ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 2) { rtext = "Ст. прапорщик ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Мл. лейтенант ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Лейтенант ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Ст. лейтенант ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Капитан ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Майор ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Подполковник ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Полковник ФСБ"; }
								else { rtext = "Полковник ФСБ"; }
							}
							GetInitials(playerid);
							if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader] == 1)
							{
								SendClientMessage(giveplayerid,COLOR_GREY, "***Служебное удостоверение***");
								format(string,sizeof(string),"Выдано: Отдел ГИБДД по Нижегородской Области",sendername);
								SendClientMessage(giveplayerid, COLOR_GREY, string);
								format(string, sizeof(string),"Имя: %s", firstname[playerid]);
								SendClientMessage(giveplayerid, COLOR_GREY, string);
								format(string, sizeof(string),"Фамилия: %s", secondname[playerid]);
								SendClientMessage(giveplayerid, COLOR_GREY, string);
								format(string,sizeof(string),"Звание: %s",rtext);
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								format(string,sizeof(string),"Подразделение: ДПС ГИБДД");
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								format(string,sizeof(string),"Должность: %s",dtext);
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								format(string,sizeof(string),"Дата выдачи: %s",PlayerInfo[playerid][pUdost1]);
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								format(string,sizeof(string),"Дейстительно до: %s",PlayerInfo[playerid][pUdost2]);
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								SendClientMessage(giveplayerid,COLOR_GREY, "---------------------------------------------------------------------");
							}
							if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
							{
								SendClientMessage(giveplayerid,COLOR_GREY, "***Служебное удостоверение***");
								format(string,sizeof(string),"Выдано: Отдел УФСБ по Нижегородской Области",sendername);
								SendClientMessage(giveplayerid, COLOR_GREY, string);
								format(string, sizeof(string),"Имя: %s", firstname[playerid]);
								SendClientMessage(giveplayerid, COLOR_GREY, string);
								format(string, sizeof(string),"Фамилия: %s", secondname[playerid]);
								SendClientMessage(giveplayerid, COLOR_GREY, string);
								format(string,sizeof(string),"Звание: %s",rtext);
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								format(string,sizeof(string),"Подразделение: ФСБ");
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								format(string,sizeof(string),"Должность: Оперативник ФСБ");
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								format(string,sizeof(string),"Дата выдачи: %s",PlayerInfo[playerid][pUdost1]);
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								format(string,sizeof(string),"Дейстительно до: %s",PlayerInfo[playerid][pUdost2]);
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								SendClientMessage(giveplayerid,COLOR_GREY, "---------------------------------------------------------------------");
							}
							else if(PlayerInfo[playerid][pMember] == 6||PlayerInfo[playerid][pLeader] == 6)
							{
								SendClientMessage(giveplayerid,COLOR_GREY, "***Служебное удостоверение***");
								format(string,sizeof(string),"Выдано: Отдел МВД г. Арзамас",sendername);
								SendClientMessage(giveplayerid, COLOR_GREY, string);
								format(string, sizeof(string),"Имя: %s", firstname[playerid]);
								SendClientMessage(giveplayerid, COLOR_GREY, string);
								format(string, sizeof(string),"Фамилия: %s", secondname[playerid]);
								SendClientMessage(giveplayerid, COLOR_GREY, string);
								format(string,sizeof(string),"Звание: %s",rtext);
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								format(string,sizeof(string),"Подразделение: МВД");
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								format(string,sizeof(string),"Должность: %s",ptext);
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								format(string,sizeof(string),"Дата выдачи: %s",PlayerInfo[playerid][pUdost1]);
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								format(string,sizeof(string),"Дейстительно до: %s",PlayerInfo[playerid][pUdost2]);
								SendClientMessage(giveplayerid,COLOR_GREY,string);
								SendClientMessage(giveplayerid,COLOR_GREY, "---------------------------------------------------------------------");
							}
							format(string, sizeof(string), "* %s показывает своё удостоверение %s.", sendername, playername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Вы не сотрудник ПО");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок не рядом с вами !");
						return 1;
					}

				}
				else
				{
					format(string, sizeof(string), "Игрок еще не вошел.");
					SendClientMessage(playerid, COLOR_GREY, string);
				}
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/r", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);	
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /r [текст]");
			new frak;
			if(PlayerInfo[playerid][pLeader] > 0) frak = PlayerInfo[playerid][pLeader];
			else frak = PlayerInfo[playerid][pMember];
			new rank = PlayerInfo[playerid][pRank];
			if(rank > 15) rank = 15;
			switch(frak)
			{
			case 1..6,9..13,19:
				{
					format(string, sizeof(string), "{FA8258}[Р] %s %s: %s, конец связи.",FrakInfo[frak-1][rank][rang],sendername, result);
					SendRadioMessage(frak, FrakInfo[frak-1][0][Rcolor], string);
					format(string, sizeof(string), "* %s [в рацию]: {FFFFFF}%s", sendername, result);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
			default: return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите во фракции / вашей организации не доступна рация.");
			}
			
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/radiobad", true) == 0 || strcmp(cmd, "/rb", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /rb [текст]");
				return 1;
			}
			new frak;
			if(PlayerInfo[playerid][pLeader] > 0) frak = PlayerInfo[playerid][pLeader];
			else frak = PlayerInfo[playerid][pMember];
			new rank = PlayerInfo[playerid][pRank];
			if(rank > 15) rank = 15;
			switch(frak)
			{
			case 1..6,9..13,19:
				{
					format(string, sizeof(string), "{FA8258}(( [Р] %s %s: %s ))",FrakInfo[frak-1][rank][rang],sendername, result);
					SendRadioMessage(frak, FrakInfo[frak-1][0][Rcolor], string);
					return 1;
				}
			default: return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите во фракции!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/departments", true) == 0 || strcmp(cmd, "/d", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMuted] == 1)			{
				PlayerMuteMessage(playerid);
				return 1;			}
			if(GetPVarInt(playerid,#TogDb) == 1) return SendClientMessage(playerid,COLOR_GRAD1,#Введите /togdb.);
			//------------------------------------------------------------------------------
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /d [текст]");
				return 1;
			}
			new frak;
			if(PlayerInfo[playerid][pLeader] > 0) frak = PlayerInfo[playerid][pLeader];
			else frak = PlayerInfo[playerid][pMember];
			new rank = PlayerInfo[playerid][pRank];
			if(rank > 15) rank = 15;
			switch(frak)
			{
			case 1..6,9..13,19:
				{
					format(string, sizeof(string), "{04B4AE}[Д] %s %s: %s, конец связи.",FrakInfo[frak-1][rank][rang],sendername, result);
					SendDepMessage(string);
					format(string, sizeof(string), "* %s сказал что-то в рацию", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
			default: return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите во фракции!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/togdb", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 ||
				PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 ||
				PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 19 ||
				PlayerInfo[playerid][pLeader] == 19)
		{
			switch(GetPVarInt(playerid,#TogDb))
			{
			case 0:
				{
					SetPVarInt(playerid,#TogDb,1);
					SendClientMessage(playerid,COLOR_YELLOW,#Вы выключили чат ООС департамента!);
					return 1;
				}
			case 1:
				{
					SetPVarInt(playerid,#TogDb,0);
					SendClientMessage(playerid,COLOR_YELLOW,#Вы включили чат ООС департамента!);
					return 1;
				}
			}
		}
		else return SendClientMessage(playerid,COLOR_GRAD1,#Вам недоступна данная команда.);
		return 1;
	}
	if(strcmp(cmd, "/departmentsbad", true) == 0 || strcmp(cmd, "/db", true) == 0)
	{
		if(GetPVarInt(playerid,#TogDb) == 1) return SendClientMessage(playerid,COLOR_GRAD1,#Введите /togdb.);
		if(IsPlayerConnected(playerid))
		{
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pMuted] == 1)			{
				PlayerMuteMessage(playerid);
				return 1;			}
			//------------------------------------------------------------------------------
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /db [текст]");
				return 1;
			}
			new frak;
			if(PlayerInfo[playerid][pLeader] > 0) frak = PlayerInfo[playerid][pLeader];
			else frak = PlayerInfo[playerid][pMember];
			new rank = PlayerInfo[playerid][pRank];
			if(rank > 15) rank = 15;
			switch(frak)
			{
			case 1..6,9..13,19:
				{
					format(string, sizeof(string), "{04B4AE}(( [Д] %s %s: %s ))",FrakInfo[frak-1][rank][rang],sendername, result);
					SendDepMessage(string);
					return 1;
				}
			default: return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите во фракции!");
			}			
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/mdc", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник полиции!");
			if(!PlayerToPoint(10.0, playerid, -101.2187,1483.6010,451.7260)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не в дежурной части");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /mdc [id игрока/часть ника]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок вышел!");
			if(PlayerInfo[giveplayerid][pWantedPoints] == 0)
			{
				format(string, sizeof(string), "%s чист", NamePlayer[giveplayerid]);
				SendClientMessage(playerid, COLOR_GRAD2,string);
			}
			else
			{
				format(string, sizeof(string), "Имя Фамилия: %s", NamePlayer[giveplayerid]);
				SendClientMessage(playerid, COLOR_GRAD2,string);
				format(string, sizeof(string), "Уровень розыска: %d", PlayerInfo[giveplayerid][pWantedPoints]);
				SendClientMessage(playerid, COLOR_GRAD2,string);
				glob_str = "";
			}
		}
		return 1;
	}
	//==============================================================================
	// Команды для сис-мы гаража (NEW)
	if(strcmp(cmd, "/addgarage", true) == 0)
	{
		new str[200], querygarage[1000];
		if(PlayerInfo[playerid][pAdmin] < 5) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		if(ALLGARAGE >= (MAX_GARAGE - 1)) return SendClientMessage(playerid, COLOR_GRAD1, "Создано максимальное кол-во гаражей!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addgarage [Сумма] [Уровень]");
		new money = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addgarage [Сумма] [Уровень]");
		new level = strval(tmp);

		//
		ALLGARAGE++;
		new i = ALLGARAGE, Float:POS[3]; GetPlayerPos(playerid, POS[0], POS[1], POS[2]);

		//
		strmid(Garage[i][gOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
		Garage[i][gPrice] = money,Garage[i][gLevel] = level, Garage[i][gInter] = i, Garage[i][gVirtual] = i;
		Garage[i][gX1] = POS[0], Garage[i][gY1] = POS[1], Garage[i][gZ1] = POS[2];
		Garage[i][gX4] = -1616.7437, Garage[i][gY4] = 1579.0582, Garage[i][gZ4] = 2005.3163;

		format(str, 200, "{FFFFFF}Гараж {2E9AFE}№%d {FFFFFF}продается!\nСтоимость: {2E9AFE}%dр{FFFFFF}\nУровень: {2E9AFE}%d", i, Garage[i][gPrice], Garage[i][gLevel]);
		Garage[i][gText] = CreateDynamic3DTextLabel(str,-1,Garage[i][gX1], Garage[i][gY1], Garage[i][gZ1], 10.0);
		Garage[i][gPickup] = CreatePickup(1239, 23, Garage[i][gX1], Garage[i][gY1], Garage[i][gZ1]);
		format(querygarage, 1000, "INSERT INTO `garage` (`ID`, `Owner`, `Price`, `Level`, `X1`, `Y1`, `Z1`, `Inter`, `Virtual`) VALUES ('%i', '%s', '%i', '%i', '%f', '%f', '%f', '%i', '%i')", i, Garage[i][gOwner], money, level, POS[0], POS[1], POS[2], i, i);
		mysql_tquery(MySQLGo, querygarage);

		//
		format(str, sizeof(str), "Гараж №%d успешно добавлен. Стоимость: %d рублей. Уровень: %d", i, money, level), SendClientMessage(playerid, -1, str);
		SendClientMessage(playerid, -1, "Не забудьте поставить координаты куда будет выезжать авто из гаража (/edgarage).");
		return true;
	}
	if(strcmp(cmd, "/delgarage", true) == 0)
	{
		new str[200];
		if(PlayerInfo[playerid][pAdmin] < 5) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Введите: /delgarage [ID гаража]");
		new idgarage = strval(tmp);
		if(idgarage > ALLGARAGE) return format(str, 128, "Максимальный ID гаража: {2E9AFE}%d.", ALLGARAGE), SendClientMessage(playerid, -1, str);

		new i = idgarage;
		Garage[i][gPrice] = 0,Garage[i][gLevel] = 0, Garage[i][gInter] = 0, Garage[i][gVirtual] = 0;
		Garage[i][gX1] = 0, Garage[i][gY1] = 0, Garage[i][gZ1] = 0;
		Garage[i][gX4] = -1616.7437, Garage[i][gY4] = 1579.0582, Garage[i][gZ4] = 2005.3163;

		//
		DestroyPickup(Garage[i][gPickup]);
		DestroyDynamic3DTextLabel(Garage[i][gText]);

		//
		format(str, sizeof(str), "Гараж №%d успешно удален.", i), SendClientMessage(playerid, -1, str);

		//
		format_string = "";
		mysql_format(MySQLGo, format_string, 70, "DELETE FROM `garage` WHERE `ID` = '%i'", i);
		mysql_function_query(MySQLGo, format_string, false, "", "");
		return 1;
	}
	if(strcmp(cmd, "/garage", true) == 0)
	{
		for(new i = 1; i <= ALLGARAGE; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 4.0, Garage[i][gX1], Garage[i][gY1], Garage[i][gZ1]))
			{
				if(Garage[i][gLock] == 0 && strcmp(NamePlayer[playerid], Garage[i][gOwner], true) == 0)
				{
					if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "Вы должны быть за рулем транпорта!");
					if(Garage[i][gLock] == 1) return SCM(playerid, -1, "Гараж закрыт.");
					new carid = GetPlayerVehicleID(playerid);
					Garage[i][gX2] = -1616.6235;
					Garage[i][gY2] = 1579.2520;
					Garage[i][gZ2] = 2005.3126;
					Garage[i][gR2] = 90.9617;
					new intr = Garage[i][gVirtual];
					SetVehiclePos(carid, Garage[i][gX2], Garage[i][gY2], Garage[i][gZ2]), SetVehicleZAngle(carid, Garage[i][gR2]);
					SetVehicleVirtualWorld(carid, intr), SetPlayerVirtualWorld(playerid, intr);
					SetPlayerInterior(playerid, 1), LinkVehicleToInterior(carid, 1);
					PutPlayerInVeh(playerid, carid, 0);
					SendClientMessage(playerid, -1, "Вы заехали в гараж!");
					SetPVarInt(playerid,#PG_id,i);
					if(Garage[i][gUL] > 0) PlayAudioStreamForPlayer(playerid, "http://www.zaycev.fm:9001/rnb/ZaycevFM(128)", 0.0, 0.0, 0.0, 50.0, 0);
					UpdateGarage(i);
				}
				else SCM(playerid,-1,"Вы не можете загнать машину в этот гараж/это не ваш гараж.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gmenu", true) == 0)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5, -1620.8104,1577.1882,2005.7100)) return ShowPlayerDialog(playerid, D_GAR+1, DIALOG_STYLE_LIST, "Панель управления", "1. Купить гараж\n2. Просмотр информации о гараже\n3. Закрыть / открыть гараж\n4. Продажа гаража государству\n5. Покупка улучшений для гаража\n6. Выехать из гаража", "Выбрать", "Отмена");
		return 1;
	}
	if(strcmp(cmd, "/flat", true) == 0)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5, -214.7046,2372.8638,-30.9847)) return ShowPlayerDialog(playerid, 8003, 2, "{2E9AFE}Меню квартиры","{808080}1. {FFFFFF}Купить квартиру\n{808080}2. {FFFFFF}Продать квартиру\n{808080}3. {FFFFFF}Квартплата\n{808080}4. {FFFFFF}Дверной замок\n{808080}5. {FFFFFF}Информация","Выбор","Закрыть");
		return 1;
	}
	if(strcmp(cmd, "/edgarage", true) == 0)
	{
		new str[128];
		if(!IsPlayerConnected(playerid)) return SendClientMessage(playerid, -1, "Вы не авторизированы!");
		if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, -1, "Отказано в доступе!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Введите: /edgarage [ID гаража]");
		new idgarage = strval(tmp);
		if(idgarage > ALLGARAGE) return format(str, 128, "Максимальный ID гаража: {2E9AFE}%d.", ALLGARAGE), SendClientMessage(playerid, -1, str);
		SetPVarInt(playerid, "GAR_ID", idgarage);
		ShowPlayerDialog(playerid, D_GAR+6, DIALOG_STYLE_LIST, "Панель управления администратора", "1. Изменить цену\n2. Продать гараж\n3. Изменить владельца\n4. Изменить место появления транспорта при выезде из гаража\n5. Открыть / закрыть гараж", "Далее", "Отмена");
		return true;
	}
	if(strcmp(cmd, "/repaircar", true) == 0)
	{
		if(!GetPlayerGarage(playerid)) return SendClientMessage(playerid, -1, "У Вас нет гаража!");
		new carid = GetPlayerVehicleID(playerid), id = GetPVarInt(playerid, "PlayerGarage");
		if(Garage[id][gUL] < 2) return SendClientMessage(playerid, -1, "Необходимо приобрести улучшение второго уровня!");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "Вы должны быть в транспорте!");
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, Garage[id][gX2], Garage[id][gY2], Garage[id][gZ2]) && GetPlayerVirtualWorld(playerid) != id) return SendClientMessage(playerid, -1, "Вы должны быть в своём гараже!");
		RepairVehicle(carid), SendClientMessage(playerid, -1, "Транспорт отремонтирован!");
		return true;
	}

	// Банкоматы
	if(strcmp(cmd, "/addatm", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 5) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		if(ALLATM >= (MAX_ATM-1)) return SendClientMessage(playerid, COLOR_GRAD1, "Созданно масксимальное кол-во банкоматов");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addatm [Сумма] [Уровень]");
		new money = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addatm [Сумма] [Уровень]");
		new level = strval(tmp);
		ALLATM++;
		new Float:x, Float:y, Float:z ,str[300], query[700]; GetPlayerPos(playerid, x, y, z);
		Atm[ALLATM][atmX] = x;
		Atm[ALLATM][atmY] = y;
		Atm[ALLATM][atmZ] = z;
		Atm[ALLATM][atmCena] = money;
		Atm[ALLATM][atmLevel] = level;

		format(str, 200, "{96e300}Банкомат №%i продается!\n\n{FFFFFF}Стоимость: {2E9AFE}%dр\n{FFFFFF}Уровень: {2E9AFE}%d", ALLATM, money, level);
		Atm[ALLATM][atmText] = CreateDynamic3DTextLabel(str,-1, Atm[ALLATM][atmX],Atm[ALLATM][atmY],Atm[ALLATM][atmZ], 10.0);

		format(query,sizeof(query),"INSERT INTO `atm` (`ID`,`owner`,`x`,`y`,`z`,`lvl`,`cena`) VALUES ('%i','None','%f','%f','%f','%i','%i')",ALLATM,x,y,z,level,money);
		mysql_tquery(MySQLGo, query);
		SFCM(playerid, -1, "Банкомат №%i успешно создан.", ALLATM);
		return 1;
	}
	if(strcmp(cmd, "/delatm", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 5) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Введите: /delatm [ID банкомата]");

		//
		new idatm = strval(tmp);
		strmid(Atm[idatm][atmOwner], "None", 0, 5, 5);
		Atm[idatm][atmX] = 0; Atm[idatm][atmY] = 0; Atm[idatm][atmZ] = 0;
		Atm[idatm][atmCena] = 0; Atm[idatm][atmLevel] = 0; Atm[idatm][atmOwned] = 0; Atm[idatm][atmLock] = 0; Atm[idatm][atmMoney] = 0;
		DestroyDynamic3DTextLabel(Atm[idatm][atmText]);

		//
		format_string = "";
		mysql_format(MySQLGo, format_string, 70, "DELETE FROM `atm` WHERE `ID` = '%i'", idatm);
		mysql_function_query(MySQLGo, format_string, false, "", "");
		return 1;
	}
	if(strcmp(cmd, "/atmenu", true) == 0)
	{
		new atmid = PlayerInfo[playerid][pAtm];
		if(atmid == 255) return SendClientMessage(playerid, -1, "У вас нет банкомата!");
		if(atmid > 0 && strcmp(NamePlayer[playerid], Atm[atmid][atmOwner], true) == 0)
		{
			if(!PlayerToPoint(5, playerid, Atm[atmid][atmX], Atm[atmid][atmY], Atm[atmid][atmZ])) return SendClientMessage(playerid, -1, "Вы не у своего банкомата!");
			ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_LIST, "Панель управления", "1. Статистика банкомата\n2. Открыть/Закрыть банкомат\n3. Снять со счета\n4. Положить на счет\n5. Продать банкомат", "Выбрать", "Отмена");
		}
		return 1;
	}
	if(strcmp(cmd,"/buyatm",true) == 0)
	{
		if(PlayerInfo[playerid][pAtm] != 255) return SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть банкомат.");
		for(new b = 0; b < sizeof(Atm); b++)
		{
			if(PlayerToPoint(5.0, playerid, Atm[b][atmX], Atm[b][atmY], Atm[b][atmZ]) && Atm[b][atmOwned] == 0)
			{
				if(PlayerInfo[playerid][pCash] < Atm[b][atmCena]) return SendClientMessage(playerid, COLOR_WHITE, "На Вашем счету нет столько денег!");
				if(PlayerInfo[playerid][pLevel] < Atm[b][atmLevel])
				{
					SFCM(playerid, -1, "У вас недостаточный уровен, нужен: %i", Atm[b][atmLevel]);
					return 1;
				}
				PlayerInfo[playerid][pAtm] = b;
				Atm[b][atmOwned] = 1; Atm[b][atmMoney] = 100; Atm[b][atmLock] = 0;
				strmid(Atm[b][atmOwner], NamePlayer[playerid], 0, strlen(NamePlayer[playerid]), 255);
				GivePlayerMoney(playerid, -Atm[b][atmCena]), PlayerInfo[playerid][pCash] -= Atm[b][atmCena];
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Поздравляем с успешной покупкой.");
				SendClientMessage(playerid, COLOR_GREEN, "Каждый час с вашего банкомата будет взыматься плата за электричество.");
				SendClientMessage(playerid, COLOR_WHITE, "(( Помощь по банкомата: /atmenu ))");
				UpdateAtm(b);
				mysql_function(MySQLGo,128,"UPDATE `accounts` SET `pAtm` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pAtm],PlayerInfo[playerid][pID]);
			}
		}
		return true;
	}
	if(strcmp(cmd,"/atmlock",true) == 0)
	{
		new atmid = PlayerInfo[playerid][pAtm];
		if(atmid == 255) return SendClientMessage(playerid, -1, "У вас нет банкомата!");
		if(atmid >= 0)
		{
			if(Atm[atmid][atmLock] == 1) return Atm[atmid][atmLock] = 0, UpdateAtm(atmid), SendClientMessage(playerid, 0x33aa33AA, "Вы открыли свой банкомат!");
			if(Atm[atmid][atmLock] == 0) return Atm[atmid][atmLock] = 1, UpdateAtm(atmid), SendClientMessage(playerid, 0xFF0000AA, "Вы закрыли свой банкомат!");
		}
		return true;
	}
	if(strcmp(cmd, "/atmsell", true) == 0)
	{
		new atmid = PlayerInfo[playerid][pAtm];
		if(atmid == 255) return SendClientMessage(playerid, -1, "У вас нет банкомата!");
		if(atmid > 0 && strcmp(NamePlayer[playerid], Atm[atmid][atmOwner], true) == 0)
		{
			if(!PlayerToPoint(3, playerid, Atm[atmid][atmX], Atm[atmid][atmY], Atm[atmid][atmZ])) return SendClientMessage(playerid, -1, "Вы не у своего банкомата!");
			Atm[atmid][atmOwned] = 0; Atm[atmid][atmMoney] = 0; Atm[atmid][atmLock] = 0;
			strmid(Atm[atmid][atmOwner], "None", 0, strlen("None"), 255);
			SFCM(playerid, -1, "Вы продали свой ларек за {2E9AFE}%i {FFFFFF}руб", Atm[atmid][atmCena]/2);
			PlayerInfo[playerid][pCash] += Atm[atmid][atmCena] / 2, GivePlayerMoney(playerid, Atm[atmid][atmCena] / 2);

			UpdateAtm(PlayerInfo[playerid][pAtm]);
			PlayerInfo[playerid][pAtm] = 255;
			mysql_function(MySQLGo,128,"UPDATE `accounts` SET `pAtm` = '%i' WHERE `id` = '%d' LIMIT 1",false,"","", PlayerInfo[playerid][pAtm],PlayerInfo[playerid][pID]);
		}
		return 1;
	}
	if(strcmp(cmd,"/getatmmoney",true) == 0)
	{
		new atmid = PlayerInfo[playerid][pAtm];
		if(atmid == 255) return SendClientMessage(playerid, -1, "У вас нет банкомата!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /getatmmoney [количество]");
		new atmtest = strval(tmp);
		if(atmid >= 0)
		{
			if(atmtest > Atm[atmid][atmMoney] || atmtest < 1)  return SendClientMessage(playerid, COLOR_GRAD2, "На счету банкомата нет столько денег!");
			if(!PlayerToPoint(3, playerid,Atm[atmid][atmX],Atm[atmid][atmY],Atm[atmid][atmZ])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от вашего банкомата!");
			PlayerInfo[playerid][pCash] += atmtest, GivePlayerMoney(playerid, -atmtest);
			Atm[atmid][atmMoney] -= atmtest;
			SFCM(playerid, 0x6495EDFF, "Вы сняли %d рублей на счёт вашего бизнеса. Остаток: %d рублей ", atmtest,Atm[atmid][atmMoney]);
			UpdateAtm(atmid);
		}
		return 1;
	}
	if(strcmp(cmd,"/setatmmoney",true) == 0)
	{
		new atmid = PlayerInfo[playerid][pAtm];
		if(atmid == 255) return SendClientMessage(playerid, -1, "У вас нет банкомата!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /setatmmoney [количество]");
		new atmtest = strval(tmp);
		if(atmid >= 0)
		{
			if(PlayerInfo[playerid][pCash] < atmtest) return SendClientMessage(playerid, -1, "У вас нету столько денег.");
			if(!PlayerToPoint(3, playerid,Atm[atmid][atmX],Atm[atmid][atmY],Atm[atmid][atmZ])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от вашего банкомата!");
			PlayerInfo[playerid][pCash] -= atmtest, GivePlayerMoney(playerid, -atmtest);
			Atm[atmid][atmMoney] += atmtest;
			SFCM(playerid, 0x6495EDFF, "Вы положили %d рублей на счёт вашего бизнеса. Баланс: %d рублей ", atmtest,Atm[atmid][atmMoney]);
			UpdateAtm(atmid);
		}
		return 1;
	}
	if(strcmp(cmd, "/addlarek", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 3) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		if(LAREKCOUNT >= (MAX_LAREK-1)) return SendClientMessage(playerid, COLOR_GRAD1, "Создано максимальное кол-во ларьков.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addlarek [Сумма] [Уровень]");
		new money = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addlarek [Сумма] [Уровень]");
		new level = strval(tmp);
		LAREKCOUNT++;
		new Float:x, Float:y, Float:z ,str[300], query[700]; GetPlayerPos(playerid, x, y, z);
		LarekInfo[LAREKCOUNT][larX] = x; LarekInfo[LAREKCOUNT][larY] = y; LarekInfo[LAREKCOUNT][larZ] = z;
		LarekInfo[LAREKCOUNT][larCena] = money; LarekInfo[LAREKCOUNT][larLevel] = level; LarekInfo[LAREKCOUNT][larProds] = 0; LarekInfo[LAREKCOUNT][larOwned] = 0; LarekInfo[LAREKCOUNT][larLock] = 0;
		strmid(LarekInfo[LAREKCOUNT][larOwner], "None", 0, 5, 5);
		format(str, 200, "{FFFFFF}Ларек {2E9AFE}№%d {FFFFFF}продается!\nСтоимость: {2E9AFE}%d рублей{FFFFFF}\nУровень: {2E9AFE}%d\n\n{bbbbbb}Для покупки введите /buylarek", LAREKCOUNT, LarekInfo[LAREKCOUNT][larCena], LarekInfo[LAREKCOUNT][larLevel]);
		LarekInfo[LAREKCOUNT][larText] = CreateDynamic3DTextLabel(str,-1,LarekInfo[LAREKCOUNT][larX], LarekInfo[LAREKCOUNT][larY], LarekInfo[LAREKCOUNT][larZ], 10.0);
		LarekInfo[LAREKCOUNT][larPickup] = CreatePickup(1239, 23, LarekInfo[LAREKCOUNT][larX], LarekInfo[LAREKCOUNT][larY], LarekInfo[LAREKCOUNT][larZ]);
		format(query,sizeof(query),"INSERT INTO `lareks` (`ID`,`owner`,`owned`,`x`,`y`,`z`,`lvl`,`cena`,`money`,`products`,`lock`) VALUES ('%i','None','0','%f','%f','%f','%i','%i','0','0','0')",LAREKCOUNT,x,y,z,level,money);
		mysql_tquery(MySQLGo, query);
		SFCM(playerid, -1, "Ларек №%i успешно создан.", LAREKCOUNT);
		return 1;
	}
	if(strcmp(cmd, "/dellarek", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 7) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Введите: /dellarek [ID ларька]");

		//
		new idlarek = strval(tmp);
		LarekInfo[idlarek][larX] = 0; LarekInfo[idlarek][larY] = 0; LarekInfo[idlarek][larZ] = 0;
		LarekInfo[idlarek][larCena] = 0; LarekInfo[idlarek][larLevel] = 0; LarekInfo[idlarek][larProds] = 0; LarekInfo[idlarek][larOwned] = 0; LarekInfo[idlarek][larLock] = 0;
		DestroyPickup(LarekInfo[idlarek][larPickup]);
		DestroyDynamic3DTextLabel(LarekInfo[idlarek][larText]);

		//
		format_string = "";
		mysql_format(MySQLGo, format_string, 70, "DELETE FROM `lareks` WHERE `ID` = '%i'", idlarek);
		mysql_function_query(MySQLGo, format_string, false, "", "");
		return 1;
	}
	if(strcmp(cmd, "/larmenu", true) == 0)
	{
		new larekid = PlayerInfo[playerid][pLarek];
		if(larekid == 255) return SendClientMessage(playerid, -1, "У вас нет ларька!");
		if(larekid > 0 && strcmp(NamePlayer[playerid], LarekInfo[larekid][larOwner], true) == 0)
		{
			if(!PlayerToPoint(3, playerid, LarekInfo[larekid][larX], LarekInfo[larekid][larY], LarekInfo[larekid][larZ])) return SendClientMessage(playerid, -1, "Вы не у своего ларька!");
			ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель управления", "1. Статистика ларька\n2. Открыть/Закрыть ларек\n3. Снять со счета\n4. Положить на счет\n5. Купить продукты\n6. Продать ларек", "Выбрать", "Отмена");
		}
		return 1;
	}
	if(strcmp(cmd,"/buylarek",true) == 0)
	{
		if(PlayerInfo[playerid][pLarek] != 255) return SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть ларек.");
		for(new b = 0; b < sizeof(LarekInfo); b++)
		{
			if(PlayerToPoint(2.0, playerid, LarekInfo[b][larX], LarekInfo[b][larY], LarekInfo[b][larZ]) && LarekInfo[b][larOwned] == 0)
			{
				if(PlayerInfo[playerid][pCash] < LarekInfo[b][larCena]) return SendClientMessage(playerid, COLOR_WHITE, "На Вашем счету нет столько денег!");
				if(PlayerInfo[playerid][pLevel] < LarekInfo[b][larLevel])
				{
					SFCM(playerid, -1, "У вас недостаточный уровен, нужен: %i", LarekInfo[b][larLevel]);
					return 1;
				}
				PlayerInfo[playerid][pLarek] = b;
				LarekInfo[b][larOwned] = 1; LarekInfo[b][larLock] = 0; LarekInfo[b][larMoney] = 100; LarekInfo[b][larProds] = 0;
				strmid(LarekInfo[b][larOwner], NamePlayer[playerid], 0, strlen(NamePlayer[playerid]), 255);
				GivePlayerMoney(playerid, -LarekInfo[b][larCena]), PlayerInfo[playerid][pCash] -= LarekInfo[b][larCena];
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Поздравляем с успешной покупкой.");
				SendClientMessage(playerid, COLOR_GREEN, "Каждый час с вашего ларька будет взыматься плата за электричество.");
				SendClientMessage(playerid, COLOR_WHITE, "(( Помощь по ларьку: /larmenu ))");
				UpdateLarek(b);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/lareksell", true) == 0)
	{
		new larekid = PlayerInfo[playerid][pLarek];
		if(larekid == 255) return SendClientMessage(playerid, -1, "У вас нет ларька!");
		if(larekid > 0 && strcmp(NamePlayer[playerid], LarekInfo[larekid][larOwner], true) == 0)
		{
			if(!PlayerToPoint(3, playerid,LarekInfo[larekid][larX], LarekInfo[larekid][larY], LarekInfo[larekid][larZ])) return SendClientMessage(playerid, -1, "Вы не у своего ларька!");
			LarekInfo[larekid][larLock] = 1; LarekInfo[larekid][larOwned] = 0; LarekInfo[larekid][larProds] = 0; LarekInfo[larekid][larMoney] = 0;
			strmid(LarekInfo[larekid][larOwner], "None", 0, strlen("None"), 255);
			SFCM(playerid, -1, "Вы продали свой ларек за {2E9AFE}{2E9AFE}%i {FFFFFF}рублей", LarekInfo[larekid][larCena]/2);
			PlayerInfo[playerid][pCash] += LarekInfo[larekid][larCena] / 2, GivePlayerMoney(playerid, LarekInfo[larekid][larCena] / 2);

			UpdateLarek(PlayerInfo[playerid][pLarek]);
			PlayerInfo[playerid][pLarek] = 255;
		}
		return 1;
	}
	if(strcmp(cmd,"/lareklock",true) == 0)
	{
		new larekid = PlayerInfo[playerid][pLarek];
		if(larekid == 255) return SendClientMessage(playerid, -1, "У вас нет ларька!");
		if(larekid >= 0)
		{
			if(LarekInfo[larekid][larLock] == 1) return LarekInfo[larekid][larLock] = 0, UpdateLarek(larekid), SendClientMessage(playerid, 0x33aa33AA, "Вы открыли свой ларек!");
			if(LarekInfo[larekid][larLock] == 0) return LarekInfo[larekid][larLock] = 1, UpdateLarek(larekid), SendClientMessage(playerid, 0xFF0000AA, "Вы закрыли свой ларек!");
		}
		return true;
	}
	if(strcmp(cmd,"/getlarekmoney",true) == 0)
	{
		new larekid = PlayerInfo[playerid][pLarek];
		if(larekid == 255) return SendClientMessage(playerid, -1, "У вас нет ларька!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /getlarekmoney [количество]");
		new larektest = strval(tmp);
		if(larekid >= 0)
		{
			if(larektest > LarekInfo[larekid][larMoney] || larektest < 1)  return SendClientMessage(playerid, COLOR_GRAD2, "На счету ларька нет столько денег!");
			if(!PlayerToPoint(3, playerid,LarekInfo[larekid][larX],LarekInfo[larekid][larY],LarekInfo[larekid][larZ])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от вашего ларька!");
			PlayerInfo[playerid][pCash] += larektest, GivePlayerMoney(playerid, larektest);
			LarekInfo[larekid][larMoney] -= larektest;
			SFCM(playerid, 0x6495EDFF, "Вы сняли %d рублей на счёт вашего бизнеса. Остаток: %d рублей ", larektest,LarekInfo[larekid][larMoney]);
			UpdateLarek(larekid);
		}
		return 1;
	}
	if(strcmp(cmd,"/setlarekmoney",true) == 0)
	{
		new larekid = PlayerInfo[playerid][pLarek];
		if(larekid == 255) return SendClientMessage(playerid, -1, "У вас нет ларька!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /setlarekmoney [количество]");
		new larektest = strval(tmp);
		if(larekid >= 0)
		{
			if(PlayerInfo[playerid][pCash] < larektest) return SendClientMessage(playerid, -1, "У вас нету столько денег.");
			if(!PlayerToPoint(3, playerid,LarekInfo[larekid][larX],LarekInfo[larekid][larY],LarekInfo[larekid][larZ])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от вашего ларька!");
			PlayerInfo[playerid][pCash] -= larektest, GivePlayerMoney(playerid, -larektest);
			LarekInfo[larekid][larMoney] += larektest;
			SFCM(playerid, 0x6495EDFF, "Вы положили %d рублей на счёт вашего бизнеса. Баланс: %d рублей ", larektest,LarekInfo[larekid][larMoney]);
			UpdateLarek(larekid);
		}
		return 1;
	}
	if(strcmp(cmd, "/addacc", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 5) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		if(ALLACC >= MAX_ACC) return SendClientMessage(playerid, COLOR_GRAD1, "Созданно максимальное кол-во бизнесов этого типа!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addacc [Сумма] [Уровень] [Интерьер]");
		new money = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addacc [Сумма] [Уровень] [Интерьер]");
		new level = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addacc [Сумма] [Уровень] [Интерьер]");
		new inter = strval(tmp);
		new Float:x, Float:y, Float:z ,str[700]; GetPlayerPos(playerid, x, y, z);
		AC[ALLACC][acEntX] = x, AC[ALLACC][acEntY] = y, AC[ALLACC][acEntZ] = z;
		AC[ALLACC][acOwned] = 0, AC[ALLACC][acLock] = 1, AC[ALLACC][acPrice] = money;
		AC[ALLACC][acLevel] = level, AC[ALLACC][acInter] = inter, AC[ALLACC][acWorld] = ALLACC;
		strmid(AC[ALLACC][acOwner], "None", 0, strlen("None"),strlen("None")+1);
		strmid(AC[ALLACC][acMess],"Магазин аксессуаров",0,strlen("Магазин аксессуаров"),strlen("Магазин аксессуаров")+1);
		format(str,sizeof(str),"{ffffff} Магазин аксессуаров:\n{2E9AFE}%s\n{FFFFFF}Цена: {2E9AFE}%d рублей\n{FFFFFF}Уровень: {2E9AFE}%d\n\n{FFFFFF}Бизнес продаётся, для покупки введите /buyacc",
		AC[ALLACC][acMess],AC[ALLACC][acPrice],AC[ALLACC][acLevel]);
		AC[ALLACC][acLab][0] = CreateDynamic3DTextLabel(str,-1,AC[ALLACC][acEntX], AC[ALLACC][acEntY], AC[ALLACC][acEntZ]+0.5, 10.0);
		AC[ALLACC][acMapIc] = CreateDynamicMapIcon(AC[ALLACC][acEntX], AC[ALLACC][acEntY], AC[ALLACC][acEntZ],39,0);
		AC[ALLACC][acPick][0] = CreateDynamicPickup(1239,23,AC[ALLACC][acEntX], AC[ALLACC][acEntY], AC[ALLACC][acEntZ], -1, -1, -1, 100.0);
		str = "";
		mysql_format(MySQLGo,str,sizeof(str),"INSERT INTO `biz_acc` (`acOwned`,`acOwner`,`acMess`,`acLevel`,`acLock`,`acPrice`,`acInter`,`acWorld`,`acEntX`,`acEntY`,`acEntZ`) \
		VALUES ('0','None','Магазин аксессуаров','%d','1','%d','%d','%d','%f','%f','%f')",level,money,inter,ALLACC,x,y,z);
		new Cache:p = mysql_query(MySQLGo,str);
		AC[ALLACC][acID] = cache_insert_id();
		cache_delete(p, MySQLGo);
		SFCM(playerid, -1, "Магазин аксессуаров ID[%i] успешно создан.", AC[ALLACC][acID]);
		SendClientMessage(playerid,-1,"Для установки точки торговли войдите в магазин и используйте /setbacc");
		ALLACC++;
		return 1;
	}
	if(strcmp(cmd, "/setbacc", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 5) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		new p = GetPVarInt(playerid,#P_BizAcc_Idx);
		if(GetPlayerVirtualWorld(playerid) != AC[p][acWorld]) return SendClientMessage(playerid, COLOR_GRAD1, "При использовании команды необходимо находиться в магазине!");
		new Float:x, Float:y, Float:z; GetPlayerPos(playerid, x, y, z);
		AC[p][acBuyX] = x, AC[p][acBuyY] = y, AC[p][acBuyZ] = z;
		if(IsValidDynamic3DTextLabel(AC[p][acLab][1])) DestroyDynamic3DTextLabel(AC[p][acLab][1]);
		if(IsValidDynamicPickup(AC[p][acPick][1])) DestroyDynamicPickup(AC[p][acPick][1]);
		AC[p][acLab][1] = CreateDynamic3DTextLabel("{ffffff}Для покупки введите:\n{0089FF}/buy",-1,AC[p][acBuyX], AC[p][acBuyY], AC[p][acBuyZ]+0.5, 10.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 0, AC[p][acWorld], AC[p][acInter]);
		AC[p][acPick][1] = CreateDynamicPickup(1239,23,AC[p][acBuyX], AC[p][acBuyY], AC[p][acBuyZ], AC[p][acWorld], AC[p][acInter], -1, 100.0);
		SFCM(playerid, -1, "Точка торговли для магазина ID[%i] успешно установлена.", AC[p][acID]);
		//дописать сохранение!
		SaveAcc(p);
		return 1;
	}
	if(strcmp(cmd, "/gacc", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 4) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /gacc [ид 0,1...] ");
		new idx1 = strval(tmp);
		if(idx1 >= MAX_ACC) return SendClientMessage(playerid,-1,#Uncorrect id);
		if(!AC[idx1][acID]) return SendClientMessage(playerid,-1,#Uncorrect id);
		SetPPos(playerid,AC[idx1][acEntX],AC[idx1][acEntY],AC[idx1][acEntZ]);
		return 1;
	}
	if(strcmp(cmd, "/buyacc", true) == 0)
	{
		if(PlayerInfo[playerid][pBizAcc] != 0) return SendClientMessage(playerid,-1,"У вас уже имеется бизнес такого типа!");
		for(new b = 0; b < sizeof(AC); b++)
		{
			if(PlayerToPoint(1.0, playerid, AC[b][acEntX], AC[b][acEntY], AC[b][acEntZ]))
			{
				if(AC[b][acOwned]) return SendClientMessage(playerid,-1,"У этого бизнеса уже есть владелец!");
				if(PlayerInfo[playerid][pCash] < AC[b][acPrice]) return SendClientMessage(playerid, COLOR_WHITE, "На Вашем счету нет столько денег!");
				if(PlayerInfo[playerid][pLevel] < AC[b][acLevel]) 
				{
					SFCM(playerid, -1, "У вас недостаточный уровень, нужен: %i", AC[b][acLevel]);
					return 1;
				}
				PlayerInfo[playerid][pBizAcc] = AC[b][acID];
				UpdatePlayerData(@p,"BizAcc",PlayerInfo[playerid][pBizAcc]);
				AC[b][acOwned] = 1; AC[b][acLock] = 0; AC[b][acTill] = 0;
				strmid(AC[b][acOwner], NamePlayer[playerid], 0, strlen(NamePlayer[playerid]), strlen(NamePlayer[playerid])+1);
				GivePlayerMoney(playerid, -AC[b][acPrice]), PlayerInfo[playerid][pCash] -= AC[b][acPrice];
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Поздравляем с успешной покупкой.");
				SendClientMessage(playerid, COLOR_GREEN, "Каждый час с вашего бизнеса будет взыматься плата за электричество.");
				SendClientMessage(playerid, COLOR_WHITE, "(( Помощь по бизнесу: /accp ))");
				static const str0[] = "{008cf0}Магазин аксессуаров:\n{FFFFFF}%s\n{008cf0}Владелец: {FFFFFF}%s\n{008cf0}Статус: %s";
				new str[sizeof(str0)+MAX_PLAYER_NAME+64+6+8];
				format(str,sizeof(str),str0,AC[b][acMess],AC[b][acOwner],	(AC[b][acLock]) ? ("{ff0000}Закрыт"):("{00ff00}Открыт"));				
				UpdateDynamic3DTextLabelText(AC[b][acLab][0], -1, str);
				SaveAcc(b);
				break;
			}
			else if(b == (sizeof(AC)-1)) return SendClientMessage(playerid,-1,#Необходимо находиться рядом с бизнесом!);
		}
	}
	if(strcmp(cmd, "/sellacc", true) == 0)
	{
		if(PlayerInfo[playerid][pBizAcc] == 0) return SendClientMessage(playerid,-1,"У вас нет бизнеса этого типа!");
		new b = GetAccIdx(PlayerInfo[playerid][pBizAcc]);
		if(b == -1) return SendClientMessage(playerid,-1,"Произошла ошибка обратитесь к Администрации.");
		PlayerInfo[playerid][pBizAcc] = 0;
		UpdatePlayerData(@p,"BizAcc",0);
		AC[b][acOwned] = 0; AC[b][acLock] = 1; AC[b][acTill] = 0;
		strmid(AC[b][acOwner], "None", 0, strlen("None"), strlen("None")+1);
		GivePlayerMoney(playerid, AC[b][acPrice]), PlayerInfo[playerid][pCash] += AC[b][acPrice];
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "Поздравляем вы продали свой бизнес.");
		static const str0[] = "{ffffff}Магазин аксессуаров:\n{2E9AFE}%s\n{FFFFFF}Цена: {2E9AFE}%dр\n{FFFFFF}Уровень: {2E9AFE}%d\n\n{FFFFFF}Бизнес продаётся, для покупки введите /buyacc";
		new str[sizeof(str0)+64+6+8];
		format(str,sizeof(str),str0,AC[b][acMess],AC[b][acPrice],AC[b][acLevel]);				
		UpdateDynamic3DTextLabelText(AC[b][acLab][0], -1, str);
		SaveAcc(b);
		return 1;
	}
	if(strcmp(cmd, "/delacc", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 4) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		for(new b = 0; b < sizeof(AC); b++)
		{
			if(PlayerToPoint(1.0, playerid, AC[b][acEntX], AC[b][acEntY], AC[b][acEntZ]))
			{
				format_string = "";
				mysql_format(MySQLGo, format_string, 70, "DELETE FROM `biz_acc` WHERE `acID` = '%i'", AC[b][acID]);
				mysql_function_query(MySQLGo, format_string, false, "", "");
				AC[b][acEntX] = 0.0, AC[b][acEntY] = 0.0, AC[b][acEntZ] = 0.0;
				AC[b][acOwned] = 0, AC[b][acLock] = 1, AC[b][acPrice] = 0;
				AC[b][acLevel] = 0, AC[b][acInter] = 0, AC[b][acWorld] = 0;
				strmid(AC[b][acOwned], "None", 0, strlen("None"),strlen("None")+1);
				if(IsValidDynamicMapIcon(AC[b][acMapIc])) DestroyDynamicMapIcon(AC[b][acMapIc]);
				if(IsValidDynamic3DTextLabel(AC[b][acLab][0])) DestroyDynamic3DTextLabel(AC[b][acLab][0]);
				if(IsValidDynamic3DTextLabel(AC[b][acLab][1])) DestroyDynamic3DTextLabel(AC[b][acLab][1]);
				if(IsValidDynamicPickup(AC[b][acPick][0])) DestroyDynamicPickup(AC[b][acPick][0]);
				if(IsValidDynamicPickup(AC[b][acPick][1])) DestroyDynamicPickup(AC[b][acPick][1]);
				SFCM(playerid, -1, "Магазин аксессуаров ID[%i] успешно удален.", AC[b][acID]);
				AC[b][acID] = 0;
				return 1;
			}
			else if(b == (sizeof(AC)-1)) return SendClientMessage(playerid,-1,#Необходимо находиться рядом с бизнесом!);
		}
		return 1;
	}
	if(strcmp(cmd, "/accp", true) == 0)
	{
		if(PlayerInfo[playerid][pBizAcc] == 0) return SendClientMessage(playerid,-1,"У вас нет бизнеса этого типа!");
		new b = GetAccIdx(PlayerInfo[playerid][pBizAcc]);
		if(b == -1) return SendClientMessage(playerid,-1,"Произошла ошибка обратитесь к Администрации.");
		if(!PlayerToPoint(1.0, playerid, AC[b][acEntX], AC[b][acEntY], AC[b][acEntZ])) return SendClientMessage(playerid,-1,#Необходимо находиться рядом с бизнесом!);
		SetPVarInt(playerid,#P_BizAcc_Idx,b);
		static const str0[] = "{ffffff}Панель управления «%s»";
		new str[sizeof(str0)+64];
		format(str,sizeof(str),str0,AC[b][acMess]);
		ShowPlayerDialog(playerid,1208,DIALOG_STYLE_LIST,str,"1. Статистика бизнеса\n2. Открыть/Закрыть бизнес\n3. Снять со счета бизнеаса\n4. Положить на счет бизнеса\n5. Установить цены на товары\n6. Продать бизнес\n7. Изменить название бизнеса","Выбор","Отмена");
	}
	if(strcmp(cmd,"/addpod",true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid,WHITE,"Вы не администратор!");
		if(AllPod == (MAX_POD-1)) return SendClientMessage(playerid,WHITE,"Превышен лимит максимального количества подъездов на сервере!");
		if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,WHITE,"Подъезд может быть создан только на улице!");
		if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid,WHITE,"Подъезд может быть создан только в нулевом вирт.мире!");
		new Float:pos[3],s[200];
		GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
		AllPod ++;
		PodInfo[AllPod][pID] = AllPod;
		PodInfo[AllPod][pPos][0] = pos[0];
		PodInfo[AllPod][pPos][1] = pos[1];
		PodInfo[AllPod][pPos][2] = pos[2];
		PodInfo[AllPod][pPos][3] = POD_X;
		PodInfo[AllPod][pPos][4] = POD_Y;
		PodInfo[AllPod][pPos][5] = POD_Z;
		PodInfo[AllPod][pInt] = AllPod;
		PodInfo[AllPod][pWorld] = AllPod;
		format(s,sizeof(s),"INSERT INTO `pod` (`ID`,`X`,`Y`,`Z`,`EX`,`EY`,`EZ`,`INT`,`WORLD`) VALUES ('%i','%f','%f','%f','%f','%f','%f','%i','%i')",PodInfo[AllPod][pID],PodInfo[AllPod][pPos][0],PodInfo[AllPod][pPos][1],
		PodInfo[AllPod][pPos][2],PodInfo[AllPod][pPos][3],PodInfo[AllPod][pPos][4],PodInfo[AllPod][pPos][5],PodInfo[AllPod][pInt],PodInfo[AllPod][pWorld]);
		mysql_function_query(MySQLGo, s, false, "", "");
		PodInfo[AllPod][pPickup][0] = CreatePickup(1559,23,PodInfo[AllPod][pPos][0],PodInfo[AllPod][pPos][1],PodInfo[AllPod][pPos][2],0);
		PodInfo[AllPod][pPickup][1] = CreatePickup(1559,23,PodInfo[AllPod][pPos][3],PodInfo[AllPod][pPos][4],PodInfo[AllPod][pPos][5],PodInfo[AllPod][pWorld]);
		format(s,20,"Подъезд №%i",PodInfo[AllPod][pID]);
		PodInfo[AllPod][p3DText] = Create3DTextLabel(s,GREEN,PodInfo[AllPod][pPos][0],PodInfo[AllPod][pPos][1],PodInfo[AllPod][pPos][2],8.0,0,1);
		return 1;
	}
	// Система бизнесов
	if(strcmp(cmd, "/fpanel", true) == 0)
	{
		if(PlayerInfo[playerid][pPbiskey] == 255) return SendClientMessage(playerid, -1, "У вас нет бизнеса!");
		if(strcmp(NamePlayer[playerid], FuelsInfo[GetFuelIdx(PlayerInfo[playerid][pPbiskey])][sbOwner], true) == 0)
		{
			new bouse = GetFuelIdx(PlayerInfo[playerid][pPbiskey]);
			if(!PlayerToPoint(3, playerid,FuelsInfo[bouse][sbEntranceX], FuelsInfo[bouse][sbEntranceY], FuelsInfo[bouse][sbEntranceZ])) return SendClientMessage(playerid, -1, "Вы не у своего бизнеса!");
			ShowPlayerDialog(playerid, 9357, DIALOG_STYLE_LIST, "Панель управления", "1. Статистика заправки\n2. Открыть/Закрыть заправку\n3. Снять со счета\n4. Положить на счет\n5. Установить цену на бензин\n6. Купить топливо\n7. Изменить название\n8. Продать заправку", "Выбрать", "Отмена");
		}
		return 1;
	}
	if(strcmp(cmd, "/addfuel", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 5) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addfuel [Сумма] [Уровень]");
		new money = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addfuel [Сумма] [Уровень]");
		new level = strval(tmp);
		ALLFUELS++;
		new Float:x, Float:y, Float:z ,str[300], query[700]; GetPlayerPos(playerid, x, y, z);
		FuelsInfo[ALLFUELS][sbEntranceX] = x; FuelsInfo[ALLFUELS][sbEntranceY] = y; FuelsInfo[ALLFUELS][sbEntranceZ] = z;
		FuelsInfo[ALLFUELS][sbOwned] = 0; FuelsInfo[ALLFUELS][sbLevelNeeded] = level; FuelsInfo[ALLFUELS][sbBuyPrice] = money; FuelsInfo[ALLFUELS][sbEntranceCost] = 0; FuelsInfo[ALLFUELS][sbTill] = 0;
		FuelsInfo[ALLFUELS][sbLocked] = 1; FuelsInfo[ALLFUELS][sbInterior] = 0; FuelsInfo[ALLFUELS][sbProducts] = 0; FuelsInfo[ALLFUELS][sbPriceProd] = 35; FuelsInfo[ALLFUELS][s2bTill] = 0; FuelsInfo[ALLFUELS][sbMafia] = 0;
		strmid(FuelsInfo[ALLFUELS][sbOwner], "None", 0, 5, 5);
		format(str,sizeof(str),"АЗС №%d",ALLFUELS);
		strmid(FuelsInfo[ALLFUELS][sbMessage], str, 0, strlen(str));
		format(str, 300, "{FFFFFF}Заправка: {2E9AFE}%s\n{FFFFFF}Цена: {2E9AFE}%dр\n\n{bbbbbb}Бизнес продаётся, для покупки введите /buyfuel", FuelsInfo[ALLFUELS][sbMessage], FuelsInfo[ALLFUELS][sbBuyPrice]);
		FuelsInfo[ALLFUELS][sbLabel] = CreateDynamic3DTextLabel(str,-1,FuelsInfo[ALLFUELS][sbEntranceX], FuelsInfo[ALLFUELS][sbEntranceY], FuelsInfo[ALLFUELS][sbEntranceZ], 10.0);
		FuelsInfo[ALLFUELS][sbPickup] = CreatePickup(1650, 23, FuelsInfo[ALLFUELS][sbEntranceX], FuelsInfo[ALLFUELS][sbEntranceY], FuelsInfo[ALLFUELS][sbEntranceZ]);
		format(query,sizeof(query),"INSERT INTO `fuels` (`sbEntranceX`,`sbEntranceY`,`sbEntranceZ`,`sbOwner`,`sbMessage`,`sbBuyPrice`,`sbLevelNeeded`,`sbPriceProd`,`sbLocked`) VALUES ('%f','%f','%f','None','%s','%i','%i','100','1')",x,y,z,FuelsInfo[ALLFUELS][sbMessage],money,level);
		new Cache:p = mysql_query(MySQLGo,query);
		FuelsInfo[ALLFUELS][sbID] = cache_insert_id();
		cache_delete(p, MySQLGo);
		SFCM(playerid, -1, "Заправка №%i успешно создана.", ALLFUELS);
		return 1;
	}
	if(strcmp(cmd, "/delfuel", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 5) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		for(new b = 0; b < sizeof(FuelsInfo); b++)
		{
			if(PlayerToPoint(1.0, playerid, FuelsInfo[b][sbEntranceX], FuelsInfo[b][sbEntranceY], FuelsInfo[b][sbEntranceZ]))
			{
				if(FuelsInfo[b][sbOwned]) return SCM(@p,-1,"Запрвка куплена, для продолжения необходимо продать!");
				FuelsInfo[b][sbEntranceX] = 0; FuelsInfo[b][sbEntranceY] = 0; FuelsInfo[b][sbEntranceZ] = 0;
				FuelsInfo[b][sbOwned] = 0; FuelsInfo[b][sbLevelNeeded] = 0; FuelsInfo[b][sbBuyPrice] = 0; FuelsInfo[b][sbEntranceCost] = 0; FuelsInfo[b][sbTill] = 0;
				FuelsInfo[b][sbLocked] = 0; FuelsInfo[b][sbInterior] = 0; FuelsInfo[b][sbProducts] = 0; FuelsInfo[b][sbPriceProd] = 0; FuelsInfo[b][s2bTill] = 0; FuelsInfo[b][sbMafia] = 0;
				strmid(FuelsInfo[b][sbOwner], "None", 0, 5, 5);
				strmid(FuelsInfo[b][sbMessage], "Gaz Filling", 0, 5, 5);
				format_string = "";
				mysql_format(MySQLGo, format_string, 70, "DELETE FROM `fuels` WHERE `sbID` = '%i'", FuelsInfo[b][sbID]);
				mysql_function_query(MySQLGo, format_string, false, "", "");
				if(IsValidDynamic3DTextLabel(FuelsInfo[b][sbLabel])) DestroyDynamic3DTextLabel(FuelsInfo[b][sbLabel]);
				DestroyPickup(FuelsInfo[b][sbPickup]);
				SFCM(playerid, -1, "Заправка ID[%i] успешно удалена.", FuelsInfo[b][sbID]);
				FuelsInfo[b][sbID] = 0;
				return 1;
			}
			else if(b == (sizeof(FuelsInfo)-1)) return SendClientMessage(playerid,-1,#Необходимо находиться рядом с бизнесом!);
		}
	}
	if(strcmp(cmd, "/sellfuel", true) == 0)
	{
		new str[200];
		if(PlayerInfo[playerid][pPbiskey] == 255) return SendClientMessage(playerid, -1, "У вас нет бизнеса!");
		if(strcmp(NamePlayer[playerid], FuelsInfo[GetFuelIdx(PlayerInfo[playerid][pPbiskey])][sbOwner], true) == 0)
		{
			new bouse = GetFuelIdx(PlayerInfo[playerid][pPbiskey]);
			if(!PlayerToPoint(3, playerid,FuelsInfo[bouse][sbEntranceX], FuelsInfo[bouse][sbEntranceY], FuelsInfo[bouse][sbEntranceZ])) return SendClientMessage(playerid, -1, "Вы не у своего бизнеса!");
			FuelsInfo[bouse][sbLocked] = 1; FuelsInfo[bouse][sbOwned] = 0; FuelsInfo[bouse][sbPriceProd] = 0; FuelsInfo[bouse][sbProducts] = 0; FuelsInfo[bouse][sbTill] = 0;
			strmid(FuelsInfo[bouse][sbOwner], "None", 0, strlen("None"), 255);
			SFCM(playerid, -1, "Вы продали свой бизнес за {2E9AFE}%i {FFFFFF}руб", FuelsInfo[bouse][sbBuyPrice]/2);
			PlayerInfo[playerid][pCash] += FuelsInfo[bouse][sbBuyPrice] / 2, GivePlayerMoney(playerid, FuelsInfo[bouse][sbBuyPrice] / 2);
			format(str, 200, "{FFFFFF}Заправка: {2E9AFE}%s\n{FFFFFF}Цена: {2E9AFE}%dр\n\n{bbbbbb}Бизнес продаётся, для покупки введите /buyfuel",FuelsInfo[bouse][sbMessage],FuelsInfo[bouse][sbBuyPrice]);
			UpdateDynamic3DTextLabelText(FuelsInfo[bouse][sbLabel], -1, str);
			OnPropUpdate(bouse);
			PlayerInfo[playerid][pPbiskey] = 255;
		}
		return 1;
	}
	if(strcmp(cmd,"/sbiz",true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 4) return true;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sbiz [ID бизнеса]");
		new biztest = strval(tmp);
		SetPPos(playerid,FuelsInfo[biztest][sbEntranceX],FuelsInfo[biztest][sbEntranceY],FuelsInfo[biztest][sbEntranceZ]);
		return true;
	}
	if(strcmp(cmd,"/statsfuel",true) == 0)
	{
		if(PlayerInfo[playerid][pPbiskey] == 255) return SendClientMessage(playerid, -1, "У вас нет бизнеса!");
		new bouse = GetFuelIdx(PlayerInfo[playerid][pPbiskey]);
		PrintFuelsInfo(playerid,bouse);
		return true;
	}
	if(strcmp(cmd,"/buyfuel",true) == 0)
	{
		if(PlayerInfo[playerid][pPbiskey] != 255) return SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть заправка либо бизнес.");
		for(new b = 0; b < sizeof(FuelsInfo); b++)
		{
			if(PlayerToPoint(2.0, playerid, FuelsInfo[b][sbEntranceX], FuelsInfo[b][sbEntranceY], FuelsInfo[b][sbEntranceZ]) && FuelsInfo[b][sbOwned] == 0)
			{
				if(PlayerInfo[playerid][pCash] < FuelsInfo[b][sbBuyPrice]) return SendClientMessage(playerid, COLOR_WHITE, "На Вашем счету нет столько денег!");
				if(PlayerInfo[playerid][pLevel] < FuelsInfo[b][sbLevelNeeded])
				{
					SFCM(playerid, -1, "У вас недостаточный уровен, нужен: %i", FuelsInfo[b][sbLevelNeeded]);
					return 1;
				}
				new str[300];
				PlayerInfo[playerid][pPbiskey] = FuelsInfo[b][sbID];
				FuelsInfo[b][sbOwned] = 1; FuelsInfo[b][sbLocked] = 0; FuelsInfo[b][sbPriceProd] = 35; FuelsInfo[b][sbProducts] = 0; FuelsInfo[b][sbTill] = 0;
				strmid(FuelsInfo[b][sbOwner], NamePlayer[playerid], 0, strlen(NamePlayer[playerid]), 255);
				GivePlayerMoney(playerid, -FuelsInfo[b][sbBuyPrice]), PlayerInfo[playerid][pCash] -= FuelsInfo[b][sbBuyPrice];
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Поздравляем с успешной покупкой.");
				SendClientMessage(playerid, COLOR_GREEN, "Каждый час с вашего бизнеса будет взыматься плата за электричество.");
				SendClientMessage(playerid, COLOR_WHITE, "(( Помощь по бизнесу: /fpanel ))");
				format(str, 300, "{FFFFFF}Заправка: {2E9AFE}%s\n{FFFFFF}Владелец: {2E9AFE}%s\n{FFFFFF}Цена бензина: {2E9AFE}%d {FFFFFF}рублей за литр\n\n{bbbbbb}Для заправки автомобиля введите: /fill", FuelsInfo[b][sbMessage], FuelsInfo[b][sbOwner], FuelsInfo[b][sbPriceProd]);
				UpdateDynamic3DTextLabelText(FuelsInfo[b][sbLabel], -1, str);
				OnPropUpdate(b);
			}
		}
		return true;
	}
	if(strcmp(cmd,"/fill",true) == 0)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new id_car = GetVehicleIdxByID(vehicleid);
		for(new b = 0; b < sizeof(FuelsInfo); b++)
		{
			if(PlayerToPoint(3.0, playerid, FuelsInfo[b][sbEntranceX], FuelsInfo[b][sbEntranceY], FuelsInfo[b][sbEntranceZ]))
			{
				if(FuelsInfo[b][sbProducts] <= 0) return SendClientMessage(playerid,COLOR_GRAD1,"Заправка не работает!");
				if(FuelsInfo[b][sbLocked] == 1) return SendClientMessage(playerid,COLOR_GRAD1,"Заправка закрыта!");
				if(id_car == -1) 
				{
					if(Fuel[vehicleid] >= 60) return SendClientMessage(playerid,COLOR_GRAD1,"Бак вашего автомобиля полон.");
				}
				else{
					if(aData[id_car][aFuel] >= 60) return SendClientMessage(playerid,COLOR_GRAD1,"Бак вашего автомобиля полон.");
				}
				if(PlayerInfo[playerid][pCash] < FuelsInfo[b][sbPriceProd]) return SendClientMessage(playerid,COLOR_GRAD1,"Недостаточно денег!");
				if(!IsPlayerInAnyVehicle(playerid)) return	SendClientMessage(playerid, COLOR_GRAD2, "Вы не в машине!");
				if(CarEngine[vehicleid] == 1) return	SendClientMessage(playerid, COLOR_GRAD2, "Необходимо заглушить двигатель перед заправкой!");
				SetTimerEx("@Fill", 1000, false, "iii",playerid,b,vehicleid);		
				TogglePlayerControllable(playerid,0);
			}
		}
		return true;
	}
	if(strcmp(cmd,"/lockfuel",true) == 0)
	{
		
		if(PlayerInfo[playerid][pPbiskey] == 255) return SendClientMessage(playerid, -1, "У вас нет бизнеса!");
		new bouse = GetFuelIdx(PlayerInfo[playerid][pPbiskey]);
		if(FuelsInfo[bouse][sbLocked] == 1) return FuelsInfo[bouse][sbLocked] = 0, OnPropUpdate(bouse), SendClientMessage(playerid, 0x33aa33AA, "Вы открыли свой бизнес!");
		if(FuelsInfo[bouse][sbLocked] == 0) return FuelsInfo[bouse][sbLocked] = 1, OnPropUpdate(bouse), SendClientMessage(playerid, 0xFF0000AA, "Вы закрыли свой бизнес!");
		return true;
	}
	if(strcmp(cmd,"/cenafuel",true) == 0)
	{
		new str[300];
		if(PlayerInfo[playerid][pPbiskey] == 255) return SendClientMessage(playerid, -1, "У вас нет бизнеса!");
		new bouse = GetFuelIdx(PlayerInfo[playerid][pPbiskey]);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /cenafuel [цена бензина]");
		new biztest = strval(tmp);
		if(biztest < 35 ||biztest > 45)  return SendClientMessage(playerid, COLOR_GREY, "Минимальная цена 35, максимальная 45 рублей");
		FuelsInfo[bouse][sbPriceProd] = biztest;
		format(str, 300, "{FFFFFF}Заправка: {2E9AFE}%s\n{FFFFFF}Владелец: {2E9AFE}%s\n{FFFFFF}Цена бензина: {2E9AFE}%d {FFFFFF}рублей за литр\n\n{bbbbbb}Для заправки введите: /fill", FuelsInfo[bouse][sbMessage], FuelsInfo[bouse][sbOwner],FuelsInfo[bouse][sbPriceProd]);
		UpdateDynamic3DTextLabelText(FuelsInfo[bouse][sbLabel], -1, str);
		SFCM(playerid, -1, "Цена бензина установлена на %d рублей", FuelsInfo[bouse][sbPriceProd]);
		OnPropUpdate(bouse);
		return true;
	}
	if(strcmp(cmd,"/getfuel",true) == 0)
	{
		if(PlayerInfo[playerid][pPbiskey] == 255) return SendClientMessage(playerid, -1, "У вас нет бизнеса!");
		new bouse = GetFuelIdx(PlayerInfo[playerid][pPbiskey]);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /getfuel [количество]");
		new biztest = strval(tmp);
		if(biztest > FuelsInfo[bouse][sbTill] || biztest < 1)  return SendClientMessage(playerid, COLOR_GRAD2, "На счету бизнеса нет столько денег!");
		if(!PlayerToPoint(3, playerid,FuelsInfo[bouse][sbEntranceX],FuelsInfo[bouse][sbEntranceY],FuelsInfo[bouse][sbEntranceZ])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от вашего бизнеса!");
		PlayerInfo[playerid][pCash] += biztest, GivePlayerMoney(playerid, -biztest);
		FuelsInfo[bouse][sbTill] -= biztest;
		SFCM(playerid, 0x6495EDFF, "Вы сняли %d рублей на счёт вашего бизнеса. Остаток: %d рублей ", biztest,FuelsInfo[bouse][sbTill]);
		OnPropUpdate(bouse);
		return 1;
	}
	if(strcmp(cmd,"/setfuel",true) == 0)
	{
		if(PlayerInfo[playerid][pPbiskey] == 255) return SendClientMessage(playerid, -1, "У вас нет бизнеса!");
		new bouse = GetFuelIdx(PlayerInfo[playerid][pPbiskey]);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /setfuel [количество]");
		new biztest = strval(tmp);
		if(PlayerInfo[playerid][pCash] < biztest) return SendClientMessage(playerid, -1, "У вас нету столько денег.");
		if(!PlayerToPoint(3, playerid,FuelsInfo[bouse][sbEntranceX],FuelsInfo[bouse][sbEntranceY],FuelsInfo[bouse][sbEntranceZ])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от вашего бизнеса!");
		PlayerInfo[playerid][pCash] -= biztest, GivePlayerMoney(playerid, -biztest);
		FuelsInfo[bouse][sbTill] += biztest;
		SFCM(playerid, 0x6495EDFF, "Вы положили %d рублей на счёт вашего бизнеса. Баланс: %d рублей ", biztest,FuelsInfo[bouse][sbTill]);
		OnPropUpdate(bouse);
		return 1;
	}
	if(strcmp(cmd,"/getbizstats",true) == 0)
	{
		for(new s = 0; s < sizeof(FuelsInfo); s++) { if (PlayerToPoint(10, playerid,FuelsInfo[s][sbEntranceX], FuelsInfo[s][sbEntranceY], FuelsInfo[s][sbEntranceZ])) PrintFuelsInfo(playerid,s); }
		return 1;
	}

	//
	if(strcmp(cmd, "/tc", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 6||PlayerInfo[playerid][pLeader] == 6||PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2||PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader] == 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /tc [id игрока]");
			giveplayerid = ReturnUser(tmp);

			//
			new query[700];
			mysql_format(MySQLGo, query, 700, "SELECT `ID`,`MoneyPlayer`,`Date`,`Reason` FROM `tickets` WHERE `NickName` = '%s'", NamePlayer[giveplayerid]);
			mysql_tquery(MySQLGo, query, "CheckTicketsPlayer", "ds", playerid, NamePlayer[giveplayerid]);
		}
		return 1;
	}
	if(strcmp(cmd, "/tickets", true) == 0)
	{
		new query[500];
		mysql_format(MySQLGo, query, 500, "SELECT `ID`,`MoneyPlayer`,`Date`,`Reason` FROM `tickets` WHERE `NickName` = '%s'", NamePlayer[playerid]);
		mysql_tquery(MySQLGo, query, "CheckTickets", "d", playerid);
		return 1;
	}
	if(strcmp(cmd, "/getsus", true) == 0)
	{
		if(!PlayerToPoint(10.0, playerid, -101.2187,1483.6010,451.7260)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не в дежурной части");
		if(PlayerInfo[@p][pMember] == 6 || PlayerInfo[@p][pLeader] == 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /getsus [id игрока]");
			giveplayerid = ReturnUser(tmp);

			//
			glob_str = "";
			mysql_format(MySQLGo, glob_str, sizeof(glob_str), "SELECT `Date`,`Reason`,`GivePlayer` FROM `suspects` WHERE `Name` = '%s'", NamePlayer[giveplayerid]);
			mysql_tquery(MySQLGo, glob_str, "CheckGetSus", "ds", playerid, NamePlayer[giveplayerid]);
			glob_str = "";
		}
		else return SCM(@p,-1,"Доступно только сотрудникам полиции.");
	}
	if(strcmp(cmd, "/suspect", true) == 0 || strcmp(cmd, "/su", true) == 0)
	{
		if(!IsACop(playerid)) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /su [id игрока] [причина]");
		giveplayerid = ReturnUser(tmp);
		if(playerid == giveplayerid) return 1;
		new length = strlen(cmdtext);
		while((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[128];
		while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /su [id игрока] [причина]");
		if(PlayerInfo[giveplayerid][pWantedPoints] > 5) return SendClientMessage(playerid,COLOR_WHITE,"У игрока и так максимальный уровень розыска!");
		format(string, sizeof(string), "Вы совершили преступление (%s). Сообщил: %s.",result,NamePlayer[playerid]);
		SendClientMessage(giveplayerid, COLOR_LIGHTRED,string);
		format(string, sizeof(string), "Внимание! Совершено преступление(%s). Подозреваемый: %s. Сообщил: %s.",result,NamePlayer[giveplayerid],NamePlayer[playerid]);
		SendTeamPoliceMessage(TEAM_BLUE_COLOR,string);
		PlayerInfo[giveplayerid][pWantedPoints] +=1;
		PlayerInfo[giveplayerid][pCrimes] +=1;
		WantedLevel[giveplayerid] += 1;
		SetPlayerWantedLevel(giveplayerid,WantedLevel[giveplayerid]);

		//
		new years, months, days, data[128], hours, minutes, tmpsecond; getdate(years, months, days); gettime(hours, minutes, tmpsecond);
		format(data, 128, "%02d/%02d/%04d %s%d:%s%d", days, months, years, (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes);
		glob_str = "";
		mysql_format(MySQLGo, glob_str, 700, "INSERT INTO `suspects` (`Name`,`Date`,`Reason`,`GivePlayer`) VALUES ('%s','%s','%s','%s')", NamePlayer[giveplayerid], data, result, NamePlayer[playerid]);
		mysql_tquery(MySQLGo, glob_str);
		glob_str = "";
		return 1;
	}
	if(strcmp(cmd, "/iznas", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "У вас нет прав для использования данной команды!");
			return 1;
		}
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /iznas [ID]");
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new para1 = strval(tmp);
		if(GetDistanceBetweenPlayers(playerid, para1) < 2)
		{
			if(playerid==para1)
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Никого нет рядом!");
				return 1;
			}
			else
			{
				SendClientMessage(playerid,0xFF0000AA,"Вы изнасиловали игрока!");
				SendClientMessage(para1,0x00FF00AA,"Вас изнасиловали!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid,0xFF0000AA,"Вы слишком далеко!");
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/exfem", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] > 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ты опять гражданский.");
				PlayerInfo[playerid][pMember] = 0;
				PlayerInfo[playerid][pRank] = 0;
				PlayerInfo[playerid][pChar] = 0; // бейс-геймс.ру
				MedicBill[playerid] = 0;
				SpawnPlayer(playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Ты не состоишь в банде/мафии");
			}
		}
		return 1;
	}
	//==============================================================================
	//---------------------------------[LOCK]-----------------------------------------------
	if(strcmp(cmd, "/lock", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new vehid = GetNearestVehicle(playerid);
			if(vehid == -1) return SCM(@p,-1,"Необходимо находиться рядом с машиной!");
			new id_car = GetVehicleIdxByID(vehid);
			if(id_car == -1) return SCM(@p,-1,"Замок сломан!");
			if(aData[id_car][aFrak])
			{
				new frak;
				if(PlayerInfo[@p][pLeader]) frak = PlayerInfo[@p][pLeader];
				else if(PlayerInfo[@p][pMember]) frak = PlayerInfo[@p][pMember];
				if(aData[id_car][aFrak] != frak) return SCM(@p,-1,"У вас нет ключей от этого автомобиля!");
				else return CheckLock(playerid,vehid,id_car);
			}
			else if(aData[id_car][aJobs] && aData[id_car][aJobs] != PlayerInfo[@p][pJob]) return SCM(@p,-1,"У вас нет ключей от этого автомобиля!");
			else if(aData[id_car][aJobs] && aData[id_car][aJobs] == PlayerInfo[@p][pJob]) return CheckLock(playerid,vehid,id_car);
			else if(PlayerInfo[playerid][pCKey] != aData[id_car][aKey]) return SendClientMessage(playerid, COLOR_GRAD1, "У вас нет ключей от этого автомобиля!");
			else if(PlayerInfo[playerid][pCKey] && PlayerInfo[playerid][pCKey] == aData[id_car][aKey]) return CheckLock(playerid,vehid,id_car);
		}
		return 1;
	}
	if(strcmp(cmd, "/account", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsNearBankomat(playerid))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Вы находитесь не возле банкомата!");
				return 1;
			}
			ShowPlayerDialog(playerid,5555,DIALOG_STYLE_INPUT,"Пополнение счета","Введите сумму которую хотите положить на счёт мобильного","Ок","Отмена");
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/withdraw", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLocal] == 103 || IsNearBankomat(playerid) || PlayerToPoint(3, playerid,-2032.5625,-101.0621,35.1641) || PlayerToPoint(3, playerid,-2022.6100,-100.9712,35.1641))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /withdraw [сумма]");
					format(string, sizeof(string), "У вас %d рублей на счету.", PlayerInfo[playerid][pAccount]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /withdraw [сумма]");
					format(string, sizeof(string), "У вас %d рублей на счету.", PlayerInfo[playerid][pAccount]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					return 1;
				}
				if(cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег!");
					return 1;
				}
				ConsumingMoney[playerid] = 1;
				GivePlayerMoney(playerid,cashdeposit);
				PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-cashdeposit;
				format(string, sizeof(string), "Вы сняли %d рублей с вашего счета в банке, остаток: %d рублей.", cashdeposit,PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				return 1;
			}
			else
			{SendClientMessage(playerid, COLOR_GREY, "Вы не в банке и не возле банкомата!");}
		}
		return 1;
	}
	//==============================================================================

	//==============================================================================
	if(strcmp(cmd, "/tpcor", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 3)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Вы не администратор");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Используйте: /tpcor координаты по [x] [y] [z]");
				return 1;
			}
			new coorx;
			coorx = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Используйте: /tpcor координаты по [x] [y] [z]");
				return 1;
			}
			new coory;
			coory = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Используйте: /tpcor координаты по [x] [y] [z]");
				return 1;
			}
			new coorz;
			coorz = strval(tmp);
			SetPPos(playerid, coorx,coory,coorz);
			format(string, sizeof(string), "Вы телепортировались", coorx,coory,coorz);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/bank", true) == 0 || strcmp(cmd, "/deposit", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLocal] != 103)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не находитесь в банке!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /bank [сумма]");
				format(string, sizeof(string), "Вы имеете %d рублей на счету.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /bank [сумма]");
				format(string, sizeof(string), "Вы имеете %d рублей на счету.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				return 1;
			}
			if(cashdeposit > eGetPlayerMoney(playerid) || cashdeposit < 0)
			{
				SendClientMessage(playerid, COLOR_GREY, " У Вас нет столько денег");
				return 1;
			}
			GivePlayerMoney(playerid,-cashdeposit);
			new curfunds = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount]=cashdeposit+PlayerInfo[playerid][pAccount];
			SendClientMessage(playerid, COLOR_WHITE, "|___________ BANK STATMENT ___________|");
			format(string, sizeof(string), "Старый баланс: %dр", curfunds);
			SendClientMessage(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Депозит: %dр",cashdeposit);
			SendClientMessage(playerid, COLOR_GRAD4, string);
			SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
			format(string, sizeof(string), "Новый баланс: %dр", PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/balance", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLocal] != 103)
			{
				SendClientMessage(playerid, COLOR_GREY, " Вы не находитесь в банке !");
				return 1;
			}
			format(string, sizeof(string), "Вы имеете %d рублей на счету.",PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/dice", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new dice = random(6)+1;
			if(gDice[playerid] == 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " %s Throws a Dice that lands on %d", sendername,dice);
				ProxDetector(5.0, playerid, string, TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You Don't Have A Dice");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/transfer", true) == 0 || strcmp(cmd, "/wiretransfer", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLevel] < 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Вы должны быть уровня 3 !");
				return 1;
			}
			if(PlayerInfo[playerid][pLocal] != 103)
			{
				SendClientMessage(playerid, COLOR_GREY, " Вы не в банке !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /transfer [id игрока/часть ника] [сумма]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /transfer [id игрока/часть ника] [сумма]");
				return 1;
			}
			moneys = strval(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					playermoney = PlayerInfo[playerid][pAccount] ;
					if(moneys > 0 && playermoney >= moneys)
					{
						PlayerInfo[playerid][pAccount] -= moneys;
						PlayerInfo[giveplayerid][pAccount] += moneys;
						format(string, sizeof(string), " Вы передали %dр to %s's на счет", moneys, giveplayer,giveplayerid);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), " Вы получили %dр to на свой счет от %s", moneys, sendername, playerid);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "%s передал %dр для %s", sendername, moneys, giveplayer);
						if(moneys >= 500000)
						{
							ABroadCast(COLOR_YELLOW,string,1);
						}
						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, " Invalid transaction amount.");
					}
				}
			}
			else
			{
				format(string, sizeof(string), " %d не активен.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/buy", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerToPoint(20.0, playerid,740.1365,801.2755,12.0256))//centerpoint 24-7
			{
				static const str0[] = "Телефонная книга - {808080}150 рублей.\
				\nФотоаппарат (33 снимка) - {808080}550 рублей.\
				\nОгнетушитель - {808080}1000 рублей.\
				\nБейсбольная бита -{808080} 700 рублей.\
				\nПерцовый балончик - {808080}1000 рублей.\
				\nSIM карта - {808080}300 рублей.\
				\nРация - {808080}5000 рублей.\
				\nАптечка - {808080}1000 рублей.\
				\nКанистра с бензином (10 литров) - {808080}600 рублей.\
				\nМаска - {808080}1000 рублей.\
				\nМагнитофон - {808080}1000 рублей.";
				new stringZ[sizeof(str0)];
				format(stringZ,sizeof(stringZ),str0);
				ShowPlayerDialog(playerid,24,DIALOG_STYLE_LIST,"{808080}Магазин 24/7.",stringZ,"Выбрать","Отмена");
				return 1;
			}
			else if(PlayerToPoint(5.0, playerid,AC[GetPVarInt(playerid,#P_BizAcc_Idx)][acBuyX],AC[GetPVarInt(playerid,#P_BizAcc_Idx)][acBuyY],AC[GetPVarInt(playerid,#P_BizAcc_Idx)][acBuyZ]))
			{
				GetListItems(playerid,2);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Вы не в магазине.");
			
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/sell123123213131", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ShowPlayerDialog(playerid,25,DIALOG_STYLE_LIST,"Продажа","\
			Золото\
			\nРыба\
			\nЕда\
			\nРация\
			\nЧасы\
			","Ок","Отмена");
		}
		return 1;
	}
	////////////////////////////////////////////////////////////////////////////////

	///ADMSAY
	if(strcmp(cmd, "/admsay", true) == 0)
	{
		new length = strlen(cmdtext);
		while((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[128];
		while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /admsay [Текст]");
			return 1;
		}
		if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
		{
			new text1[20];
			if(PlayerInfo[playerid][pAdmin] > 0) { text1 = "Администратор"; }
			else if(PlayerInfo[playerid][pHelper] > 0) { text1 = "Помощник по игре"; }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s %s: %s",text1,sendername,result);
			SendClientMessageToAll(COLOR_GREEN,string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вы не администратор сервера!");
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/adutysdasdasd", true) == 0 || strcmp(cmd, "/hduty", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
		{
			if((!adds1))
			{
				format(string, sizeof(string), " Попытайтесь попозже, %d секунд!",  (addtimer1/1000));
				SendClientMessage(playerid, COLOR_GREY, string);
				return 1;

			}
			new text1[20];
			if(PlayerInfo[playerid][pAdmin] >0) { text1 = "Администратор"; }
			else if(PlayerInfo[playerid][pHelper] >0) { text1 = "Помощник по игре"; }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s %s: Ув. игроки. Для получение подробной информации о сервере...",text1,sendername);
			SendClientMessageToAll(COLOR_GREEN,string);
			format(string, sizeof(string), "%s %s: ...посетите нашу группу: vk.com/trusty_crmp",text1,sendername);
			SendClientMessageToAll(COLOR_GREEN,string);
			format(string, sizeof(string), "%s %s: Если у вас есть вопрос, задайте его нам в /вопрос. Админ состав вам всегда ответит.",text1,sendername);
			SendClientMessageToAll(COLOR_GREEN,string);
			format(string, sizeof(string), "%s %s: Если у вас есть жалоба, оставьте ее нам в /report. Просьба не путать.",text1,sendername);
			SendClientMessageToAll(COLOR_GREEN,string);
			format(string, sizeof(string), "%s %s: В противном случае вы получите наказание в виде бана. Благодарю за внимание!",text1,sendername);
			SendClientMessageToAll(COLOR_GREEN,string);
			SetTimer("AddsOn1", addtimer1, 0);adds1 = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вы не администратор");
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/sellhouse", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!PlayerInfo[playerid][pNewHouse]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владелец дома.");
			if(PlayerInfo[playerid][pMarried]) return SendClientMessage(playerid, COLOR_GREY, "Вы женаты и не можете продать дом !");
			if(!PlayerInfo[playerid][pPasport]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет паспорта! Получите его в паспортном столе!");
			new summa;
			new houseid;
			houseid = GetHouseIdx(PlayerInfo[playerid][pNewHouse]);
			switch(House[houseid][hType])
			{
			case 1:summa = floatround(float(House[houseid][stoim]) * 0.75);
			case 2:summa = House[houseid][stoim]*1000;
			}
			SetPVarInt(@p,#P_HSumm,summa); 
			static const str0[] = "{ffffff}Вы действительно хотите продать свой дом за {048C3A}%d{ffffff} рублей?\n\n{B2B2B2}\
											Если ваш дом кто либо арендует, с ваших счетов будет списана неустойка \nза преждевременное расторжение договора аренды";
			new str[sizeof(str0)+8];
			format(str,sizeof(str),str0,summa);
			SPD(@p,1244,DIALOG_STYLE_MSGBOX,"Продажа дома",str,"Да","Нет");
			return 1;		
		}
		return 1;
	}
	//==============================================================================
	if(!strcmp(cmd, "/roliki", true))
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pRoliki] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "У Вас нет роликов!");
				return 1;
			}
			if(PlayerVRolikax[playerid] == 0)
			{
				if(PlayerInfo[playerid][pSex] == 1)
				{
					SetPlayerSkin(playerid,99);//Мужской скин
				}
				else
				{
					SetPlayerSkin(playerid,92);//Женский скин
				}
				PlayerVRolikax[playerid] = 1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s надевает ролики.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s снимает ролики.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				PlayerVRolikax[playerid] = 0;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/maskon", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
			foreach(new i:Player)
			{
				if(IsPlayerConnected(i))
				{
					ShowPlayerNameTagForPlayer(i, playerid, 0);
				}
			}
			SendClientMessage(playerid, COLOR_WHITE, " Ты одеваешь свою маску [/maskoff чтобы снять].");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "*%s одевает маску.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/maskoff", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			foreach(new i:Player)
			{
				if(IsPlayerConnected(i))
				{
					ShowPlayerNameTagForPlayer(i, playerid, 1);
				}
			}
			SendClientMessage(playerid, COLOR_WHITE, "Ты снимаешь маску [/maskon чтобы одеть].");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "*%s снимает маску.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/maskeds", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Замаскированные игроки онлайн:");
				foreach(new i:Player)
				{
					if(IsPlayerConnected(i))
					{
						if(GetPVarInt(i,#P_Mask_On) == 1)
						{
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, " ID: %d  %s", i, sendername);
							SendClientMessage(playerid, COLOR_GRAD2, string);
						}
					}
				}
			}
			return 1;
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	//==============================================================================
	if(strcmp(cmd, "/evict", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pNewHouse]>0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /evict [ID/Часть ника]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(!(IsPlayerConnected(giveplayerid)))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Игрок не подключён!");
					return 1;
				}
				if(!(gPlayerLogged[giveplayerid]==1))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Игрок не подключён!");
					return 1;
				}
				if(!(PlayerInfo[playerid][pNewHouse]==PlayerInfo[giveplayerid][pRentHouse]))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Игрок не арендует у вас дом!");
					return 1;
				}
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string,sizeof(string),"Игрок %s выселил вас из своего дома.",sendername);
				SendClientMessage(giveplayerid,COLOR_LIGHTBLUE,string);
				format(string,sizeof(string),"Вы выселили из дома игрока %s.",giveplayer);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				PlayerInfo[giveplayerid][pRentHouse]=0;
				UpdatePlayerData(giveplayerid,"pRentHouse",0);
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/spasti", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /spasti [ID]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Неправильный ID игрока!");
			if(playerid == giveplayerid) return SendClientMessage(playerid, COLOR_GRAD1, "Нельзя спасти самого себя!");
			if(GetPVarInt(giveplayerid,#P_Avto_A) != 1) return SendClientMessage(playerid, COLOR_GRAD1, "Этот игрок не нуждается в спасении!");
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_in",4.1,1,1,1,1,1);
			SetTimerEx("@Spasti", 4000, false, "ii",playerid,giveplayerid);
		}
		else return SendClientMessage(playerid,COLOR_GRAD1,#Команда доступна только пожарной инспекции);
	}
	if(strcmp(cmd, "/call", true) == 0)
	{
		if(!PlayerInfo[playerid][pPnumber]) return SendClientMessage(playerid,COLOR_GRAD1,"В вашем телефоне нет SIM карты. Купить ее можно в магазине 24/7."); 
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GREY, "Используйте: /call [Номер телефона] [Текст]");
				SendClientMessage(playerid, COLOR_GREY, "МЧС - 01");
				SendClientMessage(playerid, COLOR_GREY, "Полиция / ГИБДД - 02");
				SendClientMessage(playerid, COLOR_GREY, "Скорая Медицинская Помощь - 03");
				SendClientMessage(playerid, COLOR_GREY, "Такси - 065");
				SendClientMessage(playerid, COLOR_GREY, "Механики - 093");
				SendClientMessage(playerid, COLOR_GREY, "Автошкола - 103");
				SendClientMessage(playerid, COLOR_GREY, "Единая служба спасения - 112");
				return 1;
			}
			new server_tick = GetTickCount();			
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new phonenumb = strval(tmp);
			if(phonenumb == 112)
			{
				if(GetPVarInt(playerid, "player_flood1") > server_tick) return SendClientMessage(playerid,-1,#Нельзя звонить так часто!);
				new length = strlen(cmdtext);
				while((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /call 112 [текст] ");
				new plname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, plname, sizeof(plname));
				format(string, sizeof(string), "Внимание всем постам! Поступил звонок от %s. Оригинал сообщения:", sendername);
				SendFamilyMessage(6, COLOR_GREEN, string);
				SendFamilyMessage(1, COLOR_GREEN, string);
				SendFamilyMessage(19, COLOR_GREEN, string);
				SendFamilyMessage(4, COLOR_GREEN, string);
				format(string, sizeof(string), "%s", (result));
				SendFamilyMessage(6, COLOR_GREEN, string);
				SendFamilyMessage(1, COLOR_GREEN, string);
				SendFamilyMessage(19, COLOR_GREEN, string);
				SendFamilyMessage(4, COLOR_GREEN, string);
				format(string, sizeof(string), "Контактные данные вызывавшего: %d, конец связи.", PlayerInfo[playerid][pPnumber]);
				SendFamilyMessage(6, COLOR_GREEN, string);
				SendFamilyMessage(1, COLOR_GREEN, string);
				SendFamilyMessage(19, COLOR_GREEN, string);
				SendFamilyMessage(4, COLOR_GREEN, string);				
				format(string, sizeof(string), "Вы отправили сообщение в службу спасения");
				SendClientMessage(playerid, TEAM_AZTECAS_COLOR, string);
				SetPVarInt(playerid, "player_flood1",server_tick+180000);
			}
			else if(phonenumb == 09)
			{
				SendClientMessage(playerid, COLOR_GREY, "МЧС - 01");
				SendClientMessage(playerid, COLOR_GREY, "Полиция / ГИБДД - 02");
				SendClientMessage(playerid, COLOR_GREY, "Скорая Медицинская Помощь - 03");
				SendClientMessage(playerid, COLOR_GREY, "Такси - 065");
				SendClientMessage(playerid, COLOR_GREY, "Механики - 093");
				SendClientMessage(playerid, COLOR_GREY, "Узнать баланс телефона - 102");
				SendClientMessage(playerid, COLOR_GREY, "Единая служба спасения - 112");
			}
			if(phonenumb == 01)
			{
				if(GetPVarInt(playerid, "player_flood1") > server_tick) return SendClientMessage(playerid,-1,#Нельзя звонить так часто!);
				new length = strlen(cmdtext);
				while((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /call 01 [текст] ");
					return 1;
				}
				new plname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, plname, sizeof(plname));
				format(string, sizeof(string), "Внимание всем постам! Поступил звонок от %s. Оригинал сообщения:", sendername);
				SendFamilyMessage(19, COLOR_RED, string);
				format(string, sizeof(string), "%s", (result));
				SendFamilyMessage(19, COLOR_RED, string);
				format(string, sizeof(string), "Контактные данные вызывавшего: %d, конец связи.", PlayerInfo[playerid][pPnumber]);
				SendFamilyMessage(19, COLOR_RED, string);
				format(string, sizeof(string), "Вы отправили сообщение МЧС.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SetPVarInt(playerid, "player_flood1",server_tick+180000);
			}
			if(phonenumb == 008)
			{
				if(GetPVarInt(playerid, "player_flood1") > server_tick) return SendClientMessage(playerid,-1,#Нельзя звонить так часто!);
				new length = strlen(cmdtext);
				while((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /call 008 [текст] ");
					return 1;
				}
				new plname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, plname, sizeof(plname));
				format(string, sizeof(string), "Новое сообщение от %s. Оригинал сообщения:", sendername);
				SendFamilyMessage(9, COLOR_ORANGE, string);
				format(string, sizeof(string), "%s", (result));
				SendFamilyMessage(9, COLOR_ORANGE, string);
				format(string, sizeof(string), "Контактные данные вызывавшего: %d, конец связи.", PlayerInfo[playerid][pPnumber]);
				SendFamilyMessage(9, COLOR_ORANGE, string);
				format(string, sizeof(string), "Вы отправили сообщение в Радиовещательную компанию.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SetPVarInt(playerid, "player_flood1",server_tick+180000);
			}
			if(phonenumb == 103)
			{
				if(GetPVarInt(playerid, "player_flood1") > server_tick) return SendClientMessage(playerid,-1,#Нельзя звонить так часто!);
				new length = strlen(cmdtext);
				while((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /call 103 [текст] ");
					return 1;
				}
				new plname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, plname, sizeof(plname));
				format(string, sizeof(string), "Внимание всем сотрудникам! Поступил звонок от %s. Оригинал сообщения:", sendername);
				SendFamilyMessage(11, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s", (result));
				SendFamilyMessage(11, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Контактные данные вызывавшего: %d, конец связи.", PlayerInfo[playerid][pPnumber]);
				SendFamilyMessage(11, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Вы отправили сообщение Автошколе");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SetPVarInt(playerid, "player_flood1",server_tick+180000);
			}
			if(phonenumb == 02)
			{
				if(GetPVarInt(playerid, "player_flood1") > server_tick) return SendClientMessage(playerid,-1,#Нельзя звонить так часто!);
				new length = strlen(cmdtext);
				while((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /call 02 [текст] ");
					return 1;
				}
				new plname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, plname, sizeof(plname));
				format(string, sizeof(string), "Внимание всем постам! Поступил звонок от %s. Оригинал сообщения:", sendername);
				SendFamilyMessage(6, COLOR_NEWSF, string);
				format(string, sizeof(string), "%s", (result));
				SendFamilyMessage(6, COLOR_NEWSF, string);
				format(string, sizeof(string), "Контактные данные вызывавшего: %d, конец связи.", PlayerInfo[playerid][pPnumber]);
				SendFamilyMessage(6, COLOR_NEWSF, string);
				format(string, sizeof(string), "Внимание всем постам! Поступил звонок от %s. Оригинал сообщения:", sendername);
				SendFamilyMessage(1, COLOR_NEWSF, string);
				format(string, sizeof(string), "%s", (result));
				SendFamilyMessage(1, COLOR_NEWSF, string);
				format(string, sizeof(string), "Контактные данные вызывавшего: %d, конец связи.", PlayerInfo[playerid][pPnumber]);
				SendFamilyMessage(1, COLOR_NEWSF, string);
				format(string, sizeof(string), "Внимание всем постам! Поступил звонок от %s. Оригинал сообщения:", sendername);
				SendFamilyMessage(20, COLOR_NEWSF, string);
				format(string, sizeof(string), "%s", (result));
				SendFamilyMessage(20, COLOR_NEWSF, string);
				format(string, sizeof(string), "Контактные данные вызывавшего: %d, конец связи.", PlayerInfo[playerid][pPnumber]);
				SendFamilyMessage(20, COLOR_NEWSF, string);
				format(string, sizeof(string), "Вы отправили сообщение полиции.");
				SendClientMessage(playerid, TEAM_AZTECAS_COLOR, string);
				SetPVarInt(playerid, "player_flood1",server_tick+180000);
			}
			if(phonenumb == 03)
			{
				if(GetPVarInt(playerid, "player_flood1") > server_tick) return SendClientMessage(playerid,-1,#Нельзя звонить так часто!);
				new length = strlen(cmdtext);
				while((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /call 03 [текст] ");
					return 1;
				}
				new plname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, plname, sizeof(plname));
				format(string, sizeof(string), "Внимание всем постам! Поступил звонок от %s. Оригинал сообщения:", sendername);
				SendFamilyMessage(4, COLOR_RED, string);
				format(string, sizeof(string), "%s", (result));
				SendFamilyMessage(4, COLOR_RED, string);
				format(string, sizeof(string), "Контактные данные вызывавшего: %d, конец связи.", PlayerInfo[playerid][pPnumber]);
				SendFamilyMessage(4, COLOR_RED, string);
				format(string, sizeof(string), "Вы отправили сообщение Скорой Медицинской Помощи.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SetPVarInt(playerid, "player_flood1",server_tick+180000);
			}
			if(phonenumb == 065)
			{
				if(GetPVarInt(playerid, "player_flood1") > server_tick) return SendClientMessage(playerid,-1,#Нельзя звонить так часто!);
				new length = strlen(cmdtext);
				while((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /call 065 [текст] ");
					return 1;
				}
				new plname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, plname, sizeof(plname));
				format(string, sizeof(string), "Поступил вызов от %s. Сообщение:", sendername);
				SendFamilyMessage(5, TEAM_AZTECAS_COLOR, string);
				format(string, sizeof(string), "%s", (result));
				SendFamilyMessage(5, TEAM_AZTECAS_COLOR, string);
				format(string, sizeof(string), "Контактные данные вызывавшего: %d.", PlayerInfo[playerid][pPnumber]);
				SendFamilyMessage(5, TEAM_AZTECAS_COLOR, string);
				format(string, sizeof(string), "Вы отправили сообщение Таксомоторному парку №5. ");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SetPVarInt(playerid, "player_flood1",server_tick+180000);
			}
			if(phonenumb == 093)
			{
				if(GetPVarInt(playerid, "player_flood1") > server_tick) return SendClientMessage(playerid,-1,#Нельзя звонить так часто!);
				new length = strlen(cmdtext);
				while((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /call 093 [текст] ");
					return 1;
				}
				new plname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, plname, sizeof(plname));
				format(string, sizeof(string), "Внимание всем постам! Поступил звонок от %s. Оригинал сообщения:", sendername);
				SendJobMessage(7, TEAM_AZTECAS_COLOR, string);
				format(string, sizeof(string), "%s", (result));
				SendJobMessage(7, TEAM_AZTECAS_COLOR, string);
				format(string, sizeof(string), "Контактные данные вызывавшего: %d, конец связи.", PlayerInfo[playerid][pPnumber]);
				SendJobMessage(7, TEAM_AZTECAS_COLOR, string);
				format(string, sizeof(string), "Вы отправили сообщение Механикам ");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SetPVarInt(playerid, "player_flood1",server_tick+180000);
			}
			if(phonenumb == 102)
			{
				new mobiakk = PlayerInfo[playerid][pTA];
				format(string, 300, "SMS: Ваш баланс составляет %d рублей. Отправитель: Оператор.", mobiakk);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				return 1;
			}
			if(phonenumb == PlayerInfo[playerid][pPnumber]) return SendClientMessage(playerid, COLOR_GRAD2, "Занято...");
			if(Mobile[playerid] != 255) return SendClientMessage(playerid, COLOR_GRAD2, "Вы уже звоните!");
			foreach(new i:Player)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						if(!IsPlayerConnected(i)) continue;
						Mobile[playerid] = i; //caller connecting
						if(PhoneOnline[i] > 0) return SendClientMessage(playerid, COLOR_GREY, "Абонент временно недоступен...");
						if(Mobile[i] == 255)
						{
							format(string, sizeof(string), "У вас входящий вызов. Введите /p чтобы ответить. Вызывающий: %d", PlayerInfo[playerid][pPnumber]);
							SendClientMessage(i, COLOR_YELLOW, string);
							GetPlayerName(i, sendername, sizeof(sendername));
							RingTone[i] = 10;
							format(string, sizeof(string), "* У %s Зазвонил телефон", sendername);							
							ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							CellTime[playerid] = 1;
							return 1;
						}

					}
				}
			}
		}
		return 1;
	}
	//=========================================================================
	if(strcmp(cmd, "/txt", true) == 0 || strcmp(cmd, "/t", true) == 0 || strcmp(cmd, "/sms", true) == 0)
	{
		if(!PlayerInfo[playerid][pPnumber]) return SendClientMessage(playerid,COLOR_GRAD1,"В вашем телефоне нет SIM карты. Купить ее можно в магазине 24/7.");
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, " Сначала войдите в игру !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sms [номер телефона] [текст чата]");
				return 1;
			}
			if(PhoneOnline[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Ваш мобильник выключен! Прежде чем пользоваться, включите его! (/togphone)");
				return 1;
			}
			if(PlayerInfo[playerid][pJailed] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "У вас отобрали телефон на время заключения.");
				return 1;
			}
			if(PlayerCuffed[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не можете написать смс!");
				return 1;
			}
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "Нельзя писать смс пока вы звоните!");
				return 1;
			}
			if(txtcost > PlayerInfo[playerid][pTA])
			{
				SendClientMessage(playerid, COLOR_RED, "На вашей SIM карте закончились деньги. Вам необходимо пополнить баланс.");
				SendClientMessage(playerid, COLOR_RED, "Подсказка: Это можно сделать в любом терминале.");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s достает телефон.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new phonenumb = strval(tmp);
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sms [телефонный номер] [текст чата]");
				return 1;
			}
			foreach(new i:Player)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								//------------------------------------------------------------------------------
								if(PhoneOnline[giveplayerid] > 0)
								{
									SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в игре!");
									return 1;
								}
								//------------------------------------------------------------------------------
								if(PlayerInfo[playerid][pMuted] == 1)
								{
									PlayerMuteMessage(playerid);
									return 1;
								}
								//------------------------------------------------------------------------------
								format(string, sizeof(string), "SMS: %s, Отправитель: %s (%d)", result,sendername,PlayerInfo[playerid][pPnumber]);
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								RingTone[giveplayerid] =20;
								SendClientMessage(playerid, COLOR_LIGHTBLUE, "Сообщение доставлено");
								SendClientMessage(giveplayerid, COLOR_YELLOW, string);
								SendClientMessage(playerid,  COLOR_YELLOW, string);
								format(string, sizeof(string), "~y~€a SMS co c¤e¦a cЈњca®o %d py—ћeќ", txtcost);
								GameTextForPlayer(playerid, string, 5000, 1);
								PlayerInfo[playerid][pTA] -= 50;
								PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								Mobile[playerid] = 255;
								return 1;
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GREY, "Доставка сообщения невозможна...");
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/chatpm", true) == 0)
	{
		if(!PlayerInfo[@p][pAdmin]) return SCM(@p,COLOR_GREY,"Вам недоступна данная команда");
		if(gpvi(@p,#P_PMChat)) return SCM(@p,-1,"Прослушка pm выключена") & DeletePVar(@p,#P_PMChat);
		else return SCM(@p,-1,"Прослушка pm включена") & spvi(@p,#P_PMChat,1);
	}
	if(strcmp(cmd, "/pm", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted]) return PlayerMuteMessage(playerid);
		new tmpp;
		if(sscanf(params,"ds[256]",tmpp,string)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /pm [id игрока] [текст] ");
		if(!IsPlayerConnected(tmpp)) return SCM(@p,COLOR_GREY,"Игрок не в сети.");
		if(@p == tmpp) return SCM(@p,COLOR_GREY,"Неверный ид!");
		if(HidePM[tmpp]>=1) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок отключил приём личных сообщений!");
		glob_str = "";
		format(glob_str, sizeof(glob_str), "{2E9AFE}PM | от игрока {FFFFFF}%s{2E9AFE}: [ID: %d] %s", NamePlayer[@p],@p,string);
		SendClientMessage(tmpp, COLOR_YELLOW, glob_str);
		format(glob_str, sizeof(glob_str), "{2E9AFE}PM | для игрока {FFFFFF}%s{2E9AFE}: [ID: %d] %s", NamePlayer[tmpp],tmpp,string);
		SendClientMessage(playerid, COLOR_YELLOW, glob_str);
		foreach(new i:Player)
		{
			if(gpvi(i,#P_PMChat))
			{
				format(glob_str, sizeof(glob_str), "{2E9AFE}PM | от {FFFFFF}%s{2E9AFE}[ID: %d] к {FFFFFF}%s{2E9AFE}[ID: %d]: %s", NamePlayer[@p],@p,NamePlayer[tmpp],tmpp,string);
				SCM(i,0x2E9AFEAA,glob_str);
			}
		}
		glob_str = "";
		PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
		PlayerPlaySound(tmpp, 1084, 0.0, 0.0, 0.0);
		printf("ICQ ot %s k %s: %s",NamePlayer[@p],NamePlayer[tmpp],glob_str);
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/pickup", true) == 0 || strcmp(cmd, "/p", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вам никто не звонил!");
				return 1;
			}
			foreach(new i:Player)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
						if(PlayerInfo[playerid][pMuted]) return PlayerMuteMessage(playerid);
						Mobile[playerid] = i; //caller connecting
						SendClientMessage(i,  COLOR_LIGHTBLUE, "Абонент ответил на звонок");
						GetPlayerName(playerid, sendername, sizeof(sendername));
						SendClientMessage(playerid,  COLOR_LIGHTBLUE, "Вы ответили на звонок.");
						format(string, sizeof(string), "* %s отвечает на звонок", sendername);
						if(MnePizda[playerid] != 1) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						RingTone[playerid] = 0;
					}

				}
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/hangup", true) == 0 || strcmp(cmd, "/h", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
				if(caller != INVALID_PLAYER_ID)
				{
					if(caller != 255)
					{
						if(caller < 255)
						{
							SendClientMessage(caller,  COLOR_LIGHTBLUE, "Абонент положил трубку.");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  COLOR_LIGHTBLUE, "Вы положили трубку.");
							Mobile[caller] = 255;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s убирает телефон в карман", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							if(MnePizda[playerid] != 1)
							{
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
							}
						}
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						return 1;
					}
				}
			}
			SendClientMessage(playerid,  COLOR_GREY, "Ваш телефон находится в кармане");

		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/fixr", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			PlayerFixRadio(playerid);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/ra", true) == 0)
	{
		if(!PlayerInfo[playerid][pRadio1][0]) return SendClientMessage(playerid,-1,"У вас нет рации");
		if(!PlayerInfo[playerid][pRadio1][1]) return SendClientMessage(playerid,-1,#Ваша рация отключена);
		new length = strlen(cmdtext);
		while((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[128];
		while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /ra [text]");
			return 1;
		}
		new str[144];
		format(str,sizeof(str),"{04B486}** [Р][Канал-%d] %s: %s, конец связи.**",PlayerInfo[playerid][pRadio1][1],NamePlayer[playerid],result);
		SendRaRadioMessage(PlayerInfo[playerid][pRadio1][1],COLOR_LIGHTGREEN,str);
		return 1;
	}
	if(strcmp(cmd, "/taxi", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(PlayerInfo[@p][pJob] != 3) return SCM(@p,-1,#Вы не таксист!);
		if(!strlen(tmp)) return SendClientMessage(@p,-1,#Используйте /taxi [id]);
		giveplayerid = ReturnUser(tmp);
		if(giveplayerid == @p) return SendClientMessage(@p,-1,#Неверный id!);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(@p,-1,#Неверный id!);
		if(GetPlayerVehicleID(@p) != GetPlayerVehicleID(giveplayerid)) return SendClientMessage(@p,-1,#Этот человек не в вашем такси);
		if(GetPVarType(@p,#P_Taxi_IDPass)) return SCM(@p,-1,#У вас уже есть пассажир!);
		SetPVarInt(@p,#P_Taxi_IDPass,giveplayerid);
		SetPVarInt(GetPVarInt(@p,#P_Taxi_IDPass),#P_Taxi_Drive,1);
		ShowPlayerDialog(@p,1232,DIALOG_STYLE_LIST,"{ffffff}Выбор маршрута","{808080}1.{ffffff} Предложить пассажиру выбрать точку на карте.\n{808080}1.{ffffff} Я знаю дорогу.","Выбор","Отмена");
		return 1;
	}
	if(strcmp(cmd, "/tsetting", true) == 0)
	{
		if(PlayerInfo[@p][pJob] != 3) return SCM(@p,-1,#Вы не таксист!);
		if(GetPVarInt(@p,#P_Taxi_CarID) != GetPlayerVehicleID(@p)) return SCM(@p,-1,#Вы не на работе!);
		ShowPlayerDialog(@p,1233,DIALOG_STYLE_LIST,"{ffffff}Настройки такси","{808080}1.{ffffff} Изменить тариф.\n{808080}2.{ffffff} Перейти на договорную оплату.\n{808080}3.{ffffff}Временно приостановить деятельность.","Выбор","Отмена");
		
	}
	if(strcmp(cmd, "/fuelcar", true) == 0)
	{
		if(!PlayerInfo[@p][pAdmin]) return SCM(@p,COLOR_GREY,"Вам недоступна данная команда!");
		new carid;
		if(sscanf(params,"d",carid)) return SCM(@p,COLOR_GREY,"Use: /fuelcar id car");
		if(!IsValidVehicle(carid)) return SCM(@p,COLOR_GREY,"Авто не существует!");
		new id_car = GetVehicleIdxByID(carid);
		if(id_car == -1) Fuel[carid] = 60;
		else aData[id_car][aFuel] = 60;
		SCM(@p,COLOR_GREEN,"Автомобиль успешно заправлен!");
		return 1;
	}
	if(strcmp(cmd, "/test", true) == 0)
	{
		new tttt;
		if(sscanf(params,"d",tttt)) return 1;
		spvi(@p,"AutoExam",1);
		spvi(@p,"LessonSlot",0);
		spvi(@p,"Category",tttt);
		SCM(@p,-1,"set");
		return 1;
	}
	if(strcmp(cmd, "/inv", true) == 0)
	{
		ShowPlayerDialog(playerid,1215,DIALOG_STYLE_LIST,"{2E9AFE}Инвентарь персонажа.","{808080}1.{ffffff} Аксессуары\n{808080}2.{ffffff} Предметы\n{808080}3.{ffffff} Документы","Выбор","Отмена");
		return 1;
	}
	if(strcmp(cmd, "/nosilki", true) == 0)
	{
		if(!(PlayerInfo[@p][pMember] == 4 || PlayerInfo[@p][pLeader] == 4)) return SCM(@p,-1,"Доступно только медикам.");
		if(PlayerInfo[@p][pRank] < 3) return SCM(@p,-1,"Ранг должен быть больше 3");
		new vehid = GetNearestVehicle(@p);
		new id_car = GetVehicleIdxByID(vehid);
		if(id_car == -1) return SCM(@p,-1,"Необходимо находиться рядом с каретой скорой помощи");
		if(!IsAnAmbulance(id_car)) return SCM(@p,-1,"Необходимо находиться рядом с каретой скорой помощи");
		if(GetPVarType(@p,#M_Nos_Obj) && IsValidDynamicObject(gpvi(@p,#M_Nos_Obj)))
		{
			DestroyDynamicObject(gpvi(@p,#M_Nos_Obj));
			spvi(@p,#M_Nos_Obj,-1);
			SCM(@p,-1,"Носилки успешно убраны");
			return 1;
		}
		else
		{
			new Float:pos[4];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			GetPlayerFacingAngle(playerid, pos[3]);
			pos[0] += floatsin(-pos[3], degrees);
			pos[1] += floatcos(-pos[3], degrees);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
			spvi(@p,#M_Nos_Obj,CreateDynamicObject(3187, pos[0], pos[1], pos[2], 0, 0, 0));
			SCM(@p,-1,"Носилки успешно установлены.");
			return 1;
		}
	}
	if(strcmp(cmd, "/sellgun", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 9) return SCM(@p,-1,"Доступно только для оружейных диллеров");
		new selgun[3];
		SCM(playerid,-1,"Подсказка: Пистолет 'Макарова' - 24 ид, Двуствольное ружье - 25 ид, Автомат АКС-74У - 29 ид, Автомат AK-47 - 30 ид");
		if(sscanf(params,"dd",selgun[0],selgun[1])) return SCM(playerid, -1, "Используйте: /sellgun [id] [ID оружия]");
		if(!IsPlayerConnected(selgun[0])) return SCM(@p,-1,"Игрок не найден");
		if(PlayerInfo[selgun[0]][pLevel] < 3) return SCM(@p,-1,"Продать оружие можно только игроку, который достиг 3-его уровня!");
		switch(selgun[1])
		{
		case 24, 25, 29, 30:
			{
				if(!ProxDetectorS(5,@p,selgun[0])) return SCM(@p,-1,"Человек далеко от вас!"); 
				//if(selgun[2] < 1 || selgun[2] > 100) return SCM(@p,-1,"Количество патронов от 1 до 100.");
				new gunname[24],mats;
				switch(selgun[1])
				{
				case 24:gunname = "Пистолет 'Макарова'",selgun[2] = 50, mats = 150;
				case 25:gunname = "Двуствольное ружьё",selgun[2] = 50, mats = 200;
				case 29:gunname = "Автомат АКС-74У",selgun[2] = 200, mats = 200;
				case 30:gunname = "Автомат АК-47",selgun[2] = 250, mats = 600;
				}
				if(PlayerInfo[playerid][pMats] < mats) return SCM(playerid, COLOR_GRAD2, "У вас недостаточно материалов");
				PlayerInfo[playerid][pMats] -= mats;
				GivePlayerWeapon(selgun[0],selgun[1],selgun[2]);
				glob_str = "";
				format(glob_str,sizeof(glob_str),"Вы получили от %s %s с %d патронов.",NamePlayer[@p],gunname,selgun[2]);
				SCM(selgun[0],-1,glob_str);
				format(glob_str,sizeof(glob_str),"Вы передали %s %s с %d патронами. Затрачено %d материалов.",NamePlayer[selgun[0]],gunname,selgun[2],mats);
				SCM(@p,-1,glob_str);
				glob_str = "";
				format(glob_str,sizeof(glob_str),"[SellGun-Log] Игрок %s продал игроку %s оружие %s.", NamePlayer[@p], NamePlayer[selgun[0]], gunname);
				SendAdmHelpMessage(COLOR_GRAD1,glob_str);
				return 1;				
			}
		default: return SCM(@p,-1,"Некорректный ID оружия!");
		}
		return 1;	
	}
	if(strcmp(cmd, "/spawn", true) == 0)
	{
		if(!PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid,-1,"Premisson denied");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) 
		{
			SpawnPlayer(playerid);
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid,-1,"Неверный id!");
		SpawnPlayer(giveplayerid);
		return 1;
	}
	if(strcmp(cmd, "/jtime", true) == 0)
	{
		if(!PlayerInfo[playerid][pJailTime]) return SendClientMessage(playerid,-1,#Вы не под арестом!);
		format(string, sizeof(string), "~w~Jail Time Left: %d sec", PlayerInfo[playerid][pJailTime]-10);
		GameTextForPlayer(playerid, string, 5000, 1);
	}
	new carid2 = GetPlayerVehicleID(playerid);
	if(strcmp(cmd, "/exit", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			//------------------------------------------------------------------------------
			if(IsAHarvest(carid2))
			{
				if(carid2 != 0)
				{
					SetVehicleToRespawn(carid2);
				}
				if(FarmerPickup[playerid][0] >= 1 && FarmerPickup[playerid][0] <= 22)
				{
					FarmerPickup[playerid][0]--;
				}
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				FarmerVar[playerid] = 0;
				DisablePlayerCheckpoint(playerid);

			}
			if(Engine[gLastCar[playerid]] == 0)
			{
				if(!IsAPlane(gLastCar[playerid]))
				{
					TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
				}
			}
			//------------------------------------------------------------------------------
			if(IsASweeper(carid2))
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
			}
			//------------------------------------------------------------------------------
			if((GetPlayerVehicleID(playerid) >= Rent[0] && GetPlayerVehicleID(playerid) <= Rent[1]) || (GetPlayerVehicleID(playerid) >= RentSF[0] && GetPlayerVehicleID(playerid) <= RentSF[1]))
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
			}
			else if(GetPlayerVehicleID(playerid) >= 71 && GetPlayerVehicleID(playerid) <= 77)
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
			}
			//------------------------------------------------------------------------------
			else if(PlayerToPoint(6.0, playerid,-1404.5299,-259.0602,1043.6563))
			{
				SetPlayerInterior(playerid,0);
				SetPPos(playerid,2695.6235,-1704.6960,11.8438);
			}
			//------------------------------------------------------------------------------
			else if(PlayerToPoint(8.0, playerid,-1443.0554,-581.1879,1055.0472))
			{
				SetPlayerInterior(playerid,0);
				SetPPos(playerid,-2111.5686,-443.9720,38.7344);
			}
			//------------------------------------------------------------------------------
			else if(PlayerToPoint(8.0, playerid,-1464.7732,1557.5533,1052.5313))
			{
				SetPlayerInterior(playerid,0);
				SetPPos(playerid,-2080.3079,-406.0309,38.7344);
			}
			//------------------------------------------------------------------------------
			else if(PlayerToPoint(8.0, playerid,1481.0206,-1771.1138,18.7958))//место выхода с Правительсва
			{
				SetPlayerInterior(playerid,0);
				SetPPos(playerid,1481.0206,-1769.5138,18.7958);// позиция куда выедет
			}
			//------------------------------------------------------------------------------
			else if(NoFuel[playerid] == 1)
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				NoFuel[playerid] = 0;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/chat", true) == 0 && PlayerInfo[playerid][pAdmin] >= 3)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!BigEar[playerid])
			{
				BigEar[playerid] = 1;
				SendClientMessage(playerid, COLOR_GREY, "Теперь вы слышите все чаты.");
			}
			else if(BigEar[playerid])
			{
				(BigEar[playerid] = 0);
				SendClientMessage(playerid, COLOR_GREY, "Теперь вы слышите нормально.");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/getip", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /getip [ID игрока]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			if(strcmp(giveplayer, "Denis_Korsakov", true) == 0 || strcmp(giveplayer, "Igor_Shunevich", true) == 0 || strcmp(giveplayer, "Anna_Klimova", true) == 0) return true;
			format(string, sizeof(string), "Игрок: %s IP: %s",giveplayer, PlayerInfo[giveplayerid][pNowIp]);
			SendClientMessage(playerid,COLOR_YELLOW,string);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/regip", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /regip [ID игрока]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			if(strcmp(giveplayer, "Igor_Shunevich", true) == 0 || strcmp(giveplayer, "Denis_Korsakov", true) == 0 || strcmp(giveplayer, "Anna_Klimova", true) == 0) return SendClientMessage(playerid,COLOR_RED,"ЕГО НЕЛЬЗЯ!");
			format(string, sizeof(string), "Игрок: %s REG IP: %s",giveplayer, PlayerInfo[giveplayerid][pRegIp]);
			SendClientMessage(playerid,COLOR_YELLOW,string);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/agetip", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[72];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /agetip [Ник игрока]");
				return 1;
			}
			if(strcmp(result, "Ivan_Chernov", true) == 0 || strcmp(result, "Takage", true) == 0 || strcmp(result, "Anna_Klimova", true) == 0) return true;
			new query[128];
			mysql_format(MySQLGo, query, sizeof(query), "SELECT `pRegIp`, `pLastIp` FROM `accounts` WHERE `pNickname` = '%s';", result);
			mysql_tquery(MySQLGo, query, "agetipinfo", "ds", playerid, result);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/getfake", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[72];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /getfake [IP]");
				return 1;
			}
			new query[128];
			mysql_format(MySQLGo, query, sizeof(query), "SELECT `pNickname`, `pLastIp` FROM `accounts` WHERE `pRegIp` LIKE '%s%s';", result, "%");
			mysql_tquery(MySQLGo, query, "agetfakeinfo", "ds", playerid, result);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/uncon", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SetCamBack(playerid);
		}
		return 1;
	}
	if(!strcmp(cmd, "/lpanel", true))
	{
		if(!PlayerInfo[@p][pLeader]) return SCM(@p,COLOR_GRAD1,"Доступно только лидерам");
		SPD(@p,1251,DIALOG_STYLE_LIST,"{ffffff}Панель лидера","{808080}1. {ffffff}Сотрудники оффлайн\n{808080}2. {ffffff}Уволить оффлайн","Выбор","Отмена");
		return 1;
	}
	if(!strcmp(cmd, "/apanel", true))
	{
		if(!PlayerInfo[@p][pAdmin]) return SCM(@p,0xff0000aa,#Access denied);
		SPD(@p,1248,DIALOG_STYLE_LIST,"{ffffff}Панель администратора","{808080}1. {ffffff}Список команд\n{808080}2. {ffffff}Сменить погоду\n{808080}3. {ffffff}PayDay\n{808080}4. {ffffff}Рестарт и сохранение","Выбор","Отмена");
		return 1;
	}
	if(!strcmp(cmd, "/cheat",true))
	{
		if(PlayerInfo[@p][pAdmin] < 2) return SCM(@p,COLOR_GREY,"Вам недоступна данная команда");
		glob_str = "";
		SCM(@p,COLOR_GRAD1,"* Подозреваемые:");
		new c = 0;
		for(new i = 0; i < M_CINFO; i++)
		{
			if(PCI[i][c_id] != -1)
			{
				format(glob_str,sizeof(glob_str),"%s[%d]",PCI[i][c_name],PCI[i][c_id]);
				SCM(@p,COLOR_GRAD1,glob_str);
				c++;
			}			
		}
		if(!c) SCM(@p,COLOR_GRAD1,"* Список пуст..");
		glob_str = "";
		return 1;
	}
	if(strcmp(cmd, "/setvnull", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 4) return SCM(@p,COLOR_GREY,"Вам недоступна данная команда!");
		if(sscanf(params,"d",giveplayerid)) return SCM(@p,COLOR_GREY,"Используйте: /setvnull [id]");
		if(!IsPlayerConnected(giveplayerid)) return SCM(@p,COLOR_GREY,"Игрок не найден");
		if(!PlayerInfo[giveplayerid][pCKey]) return SCM(@p,COLOR_GREY,"У игрока нет авто!");
		PlayerInfo[giveplayerid][pCKey] = 0;
		UpdatePlayerData(giveplayerid,"pCKey",0);
		SCM(@p,-1,"Успешно обнулено!");
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0 || strcmp(cmd, "//", true) == 0)
	{

		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] == 1)
			{
				new length = strlen(cmdtext);
				while((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GREEN, "Используйте: (/a)dmin [модераторский чат]");
					return 1;
				}

				format(string, sizeof(string),"[АДМИН-ЧАТ] %s: %s", PlayerInfo[playerid][pNickname], result);
				SendAdmHelpMessage(COLOR_GREEN, string);
				printf("cmd %s: %s", PlayerInfo[playerid][pNickname], result);
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/admnews", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				new length = strlen(cmdtext);
				while((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /admnews [текст]");
					return 1;
				}
				Delete3DTextLabel(PlayerInfo[playerid][pAdmText]);
				format(string, 128, "%s", result);
				PlayerInfo[playerid][pAdmText] = Create3DTextLabel(string,0xFFC801C8,2224.2058,-1142.8691,1025.7969,20.0,0,1);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cnn", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /cnn [cnn textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}
				format(string, sizeof(string), "~b~%s: ~w~%s",sendername,result);
				foreach(new i:Player)
				{
					if(IsPlayerConnected(i))
					{
						GameTextForPlayer(i, string, 5000, 6);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/lift", true) == 0)
	{
		if(lczanyat==1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Лифт занят..попробуйте позже");
			return 1;
		}
		if(lcstatus==0&&IsPlayerInRangeOfPoint(playerid,3.0,2133.64,-1963.16,20.47))
		{
			MoveObject(ld1,2132.54,-1963.21,20.47,1.0);
			MoveObject(ld2,2134.74,-1963.16,20.47,1.0);
			MoveObject(ld3,2132.54,-1963.29,20.47,1.0);
			MoveObject(ld4,2134.74,-1963.23,20.47,1.0);
			dtimer1 = SetTimer("DoorTimer1",7000,false);
			lczanyat=1;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s вызвал лифт", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		if(lcstatus==1&&IsPlayerInRangeOfPoint(playerid,3.0,2133.64,-1963.16,20.47))
		{
			ltimer3 = SetTimer("CTimer2",7000,false);
			lczanyat=1;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s вызвал лифт", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		if(lcstatus==1&&IsPlayerInRangeOfPoint(playerid,3.0,2133.64,-1963.2,188.37))
		{
			MoveObject(ld5,2134.63,-1963.2,188.35,1.0);
			MoveObject(ld6,2132.63,-1963.2,188.35,1.0);
			MoveObject(ld3,2132.63,-1963.29,188.35,1.0);
			MoveObject(ld4,2134.63,-1963.25,188.35,1.0);
			dtimer3 = SetTimer("DoorTimer3",7000,false);
			lczanyat=1;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s вызвал лифт", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы вызвали лифт, пожалуйста подождите");
			return 1;
		}
		if(lcstatus==0&&IsPlayerInRangeOfPoint(playerid,3.0,2133.64,-1963.2,188.37))
		{
			ltimer1 = SetTimer("CTimer1",2000,false);
			lczanyat=1;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s вызвал лифт", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы вызвали лифт, пожалуйста подождите");
			return 1;
		}
		SendClientMessage(playerid,COLOR_GRAD1,"Вы не рядом с лифтом");
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/demorgan", true) == 0 || strcmp(cmd, "/jail", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new playa,money,result[64];
			if(sscanf(params,"dds[64]",playa,money,result)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /demorgan [id] [время(в секундах)] [причина]");			
			if(!IsPlayerConnected(playa)) return SCM(@p,COLOR_GREY,"Игрок не в сети!");
			if(!(PlayerInfo[playerid][pAdmin] || PlayerInfo[playerid][pHelper])) return SCM(@p,COLOR_GREY,"Вам недоступна данная команда!");
			format(string, sizeof(string), "Ты посадил %s.", NamePlayer[playa]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			format(string, sizeof(string), "Вы были посажены в деморган администратором %s. Узнать сколько осталось сидеть можно, введя команду /jtime.", NamePlayer[playerid]);
			SendClientMessage(playa, COLOR_LIGHTRED, string);
			ResetWeapons(playa);
			WantedPoints[playa] = 0;
			PlayerInfo[playerid][pWantedPoints] = 0;
			PlayerInfo[playa][pJailed] = 1;
			PlayerInfo[playa][pJailTime] = money;
			SetPlayerInterior(playa, 0);
			PlayerInfo[playa][pInt] = 0;
			SetPPos(playa, 2617.4414,1785.5770,-51.4266);
			format(string, sizeof(string), "Вас посадили на %d секунд.", money);
			SendClientMessage(playa, COLOR_GREY, string);
			format(string, 256, "Игрок %s был посажен в деморган администратором %s. Причина: %s", NamePlayer[playa], NamePlayer[playerid], (result));
			SendAdmHelpMessage(COLOR_RED,string);
			format_string = "";
			new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
			format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

			mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Ajail For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
			mysql_tquery(MySQLGo, format_string);
			format(string, sizeof(string), "AdmCmd: %s has been Admin-jailed by %s [Reason: %s]", NamePlayer[playa], NamePlayer[playerid], (result));
			printf("%s",string);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/tod", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /tod [время дня] (0-23) -1 для возврата к нормальному времени.");
				return 1;
			}
			new hour;
			hour = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(hour == -1) uptime = 0;
				else
				{
					SetWorldTime(hour);
					format(string, sizeof(string), "Время на сервере установлено на %d часов.", hour);
					BroadCast(COLOR_LIGHTBLUE, string);
					uptime = 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/startlotto", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 6)
			{
				format(string, sizeof(string), "Новости лотереи: мы начали лотерейную партию.");
				OOCOff(COLOR_YELLOW, string);
				new rand = random(80);
				if(rand < 77) { rand += 3; }
				Lotto(rand);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/setstat", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /setstat [id игрока] [код] [значение]");
				SendClientMessage(playerid, COLOR_GRAD1, "|1 Уровень |2 Респекты |3 Очки апгрейда |4 Номер телефона ");
				SendClientMessage(playerid, COLOR_GRAD1, "|7 Уровень VIP |8 Модель игрока |9 Начальное здоровье |10 Скилл Детектив |11 Скилл адвоката");
				SendClientMessage(playerid, COLOR_GRAD1, "|12 Скилл Механика |13 Скилл Работника радио |14 Скилл Автоугонщика |15 Скилл продавца наркотиков |16 Скилл Sex");
				SendClientMessage(playerid, COLOR_GRAD1, "|17 Скил Торговца оружием");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /setstat [id игрока] [код] [значение]");
						SendClientMessage(playerid, COLOR_GRAD1, "|1 Уровень |2 Респекты |3 Очки апгрейда |4 Номер телефона");
						SendClientMessage(playerid, COLOR_GRAD1, "|7 VIP Аккаунт |8 Модель игрока |9 Начальное здоровье |10 Скилл Детектива |11 Скилл адвоката");
						SendClientMessage(playerid, COLOR_GRAD1, "|12 Скилл Механика |13 Скилл Работника радио |14 Скилл Автоугонщика |15 Скилл продавца наркотиков |16 Скилл Sex");
						SendClientMessage(playerid, COLOR_GRAD1, "|17 Скил Торговца оружием");
						return 1;
					}
					new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /setstat [id игрока] [код] [значение]");
						SendClientMessage(playerid, COLOR_GRAD1, "|1 Уровень |2 Респекты |3 Очки апгрейда |4 Номер телефона");
						SendClientMessage(playerid, COLOR_GRAD1, "|7 VIP Аккаунт |8 Модель игрока |9 Начальное здоровье |10 Скилл Детектива |11 Скилл адвоката");
						SendClientMessage(playerid, COLOR_GRAD1, "|12 Скилл Механика |13 Скилл Работника радио |14 Скилл Автоугонщика |15 Скилл продавца наркотиков |16 Скилл Sex");
						SendClientMessage(playerid, COLOR_GRAD1, "|17 Скил Торговца оружием");
						return 1;
					}
					new amount;
					amount = strval(tmp);
					new playa;
					playa = ReturnUser(tmp);
					if(PlayerInfo[playerid][pAdmin] >= 4)
					{
						switch (stat)
						{
							//------------------------------------------------------------------------------
						case 1:
							{
								PlayerInfo[giveplayerid][pLevel] = amount;
								format(string, sizeof(string), "Вы получили от администратора %s%d уровень!", sendername, amount);
								SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							}
							//------------------------------------------------------------------------------
						case 2:
							{
								PlayerInfo[giveplayerid][pExp] = amount;
								format(string, sizeof(string), "Очки уважения(респекты) игрока установлены %d", amount);
							}
							//------------------------------------------------------------------------------
						case 3:
							{
								PlayerInfo[giveplayerid][gPupgrade] = amount;
								format(string, sizeof(string), "Игрок получил  %d очков улучшений (апгрейдов)", amount);
							}
							//------------------------------------------------------------------------------
						case 4:
							{
								PlayerInfo[giveplayerid][pPnumber] = amount;
								format(string, sizeof(string), "Номер телефона игрока теперь: %d", amount);
							}
						case 8:
							{
								PlayerInfo[giveplayerid][pModel] = amount;
								format(string, sizeof(string), "Модель игрока установлена %d", amount);
							}
							//------------------------------------------------------------------------------
						case 9:
							{
								PlayerInfo[giveplayerid][pSHealth] = amount;
								format(string, sizeof(string), "У игрока теперь %d начального здоровья.", amount);
							}
							//------------------------------------------------------------------------------
						case 10:
							{
								PlayerInfo[giveplayerid][pDetSkill] = amount;
								format(string, sizeof(string), "Детективный навык игрока установлен %d", amount);
							}
							//------------------------------------------------------------------------------
						case 13:
							{
								PlayerInfo[giveplayerid][pNewsSkill] = amount;
								format(string, sizeof(string), " Скилл работника радио игрока установлен %d", amount);
							}
						case 15:
							{
								PlayerInfo[giveplayerid][pDrugsSkill] = amount;
								format(string, sizeof(string), " Скилл продавца наркотиков игрока установлен %d", amount);
							}
							//------------------------------------------------------------------------------
						case 17:
							{
								PlayerInfo[giveplayerid][pGunSkill] = amount;
								format(string, sizeof(string), " Скил Торговца оружием установлен %d", amount);
							}
							//------------------------------------------------------------------------------
						case 7:
							{
								PlayerInfo[giveplayerid][pDonateRank] = amount;
								format(string, sizeof(string), "VIP-аккаунт игрока теперь равен %d.", amount);
							}
							//------------------------------------------------------------------------------
						case 102:
							{
								PlayerInfo[giveplayerid][pAccount] = amount;
								format(string, sizeof(string), "Банковский cчет игрока установлен %d рублей.", amount);
							}
						default:
							{
								format(string, sizeof(string), "Невозможное значение", amount);
							}

						}
						format_string = "";
						new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
						format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

						mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Sestat For Player','%d','%s','%s')", NamePlayer[playerid], stat, NamePlayer[giveplayerid], data);
						mysql_tquery(MySQLGo, format_string);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно прав для того, чтобы использовать эту команду!");
					}
				}
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/setint", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /setint [id игрока] [id интерьера]");
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new intid;
			intid = strval(tmp);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /setint [id игрока] [id интерьера]");
			if(PlayerInfo[playerid][pAdmin])
			{
				SetPlayerInterior(playa,intid);
				PlayerInfo[playa][pInt] = intid;
				format(string, sizeof(string), "Интерьер игроку %s установлен на %d.", NamePlayer[playa],intid);
				SendClientMessage(@p, COLOR_YELLOW, string);
				format(string, sizeof(string), "Администратор %s установил вам интерьер %d.", NamePlayer[@p],intid);
				SendClientMessage(playa, COLOR_YELLOW, string);
				return 1;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Нет прав на использование команды!");
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/setvw", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /setvw [ID игрока] [виртуальный мир]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			new virid;
			tmp = strtok(cmdtext, idx);
			virid = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						SetPlayerVirtualWorld(playa, virid);
						format(string, sizeof(string), "Ты поставил виртуальный мир %s на %d.", giveplayer, virid);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "%s поставил твой виртуальный мир на %d.", sendername, virid);
						SendClientMessage(playa, COLOR_GRAD1, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ты не авторизован для использования этой команды!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/skydive", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				GetPlayerPos(playerid, rx, ry, rz);
				if(IsPlayerConnected(playerid))
				{
					GiveWeapon(playerid, 46, 0);
					SetPPos(playerid,rx, ry, rz+1500);
					SendClientMessage(playerid, COLOR_YELLOW, "GO!! GO!! GO!!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/createobject", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 3) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, 0xFfa500AA, "Введите:{FFFFFF} /createobject [слот] [id объекта]");
		new params1 = strval(tmp);
		tmp = strtok(cmdtext, idx);
		new objects = strval(tmp);
		if(!strlen(tmp)) return SendClientMessage(playerid, 0xFfa500AA, "Введите:{FFFFFF} /createobject [слот] [id объекта]");
		if(SlotObject[params1] != 0 || params1 > 200) return 1;
		new Float:x1,Float:y1,Float:z1; GetPlayerPos(playerid,x1,y1,z1);
		SlotObject[params1] = CreateObject(objects, x1, y1, z1, 0.0,0.0,0.0);
		return true;
	}
	if(strcmp(cmd, "/deleteobject", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 3) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, 0xFfa500AA, "Введите:{FFFFFF} /deleteobject [слот]");
		new params1 = strval(tmp);
		if(SlotObject[params1] != 0) DestroyObject(SlotObject[params1]); SlotObject[params1] = 0;
		return true;
	}
	if(strcmp(cmd, "/editobject", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 3) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, 0xFfa500AA, "Введите:{FFFFFF} /editobject [слот]");
		new params1 = strval(tmp);
		if(SlotObject[params1] != 0) EditObject(playerid,SlotObject[params1]);
		return true;
	}
	if(strcmp(cmd, "/fourdive", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /fourdive [id игрока 1] [id игрока 2] [id игрока 3] [id игрока 4]");
				return 1;
			}
			new para1;
			new para2;
			new para3;
			new para4;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para3 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para4 = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 6)
			{
				if(IsPlayerConnected(para1)){ GiveWeapon(para1, 46, 0); SetPPos(para1,1536.0, -1360.0, 1350.0);SetPlayerInterior(para1,0);PlayerInfo[para1][pInt] = 0;SendClientMessage(para1, COLOR_WHITE, "GO!! GO!! GO!!");}
				if((IsPlayerConnected(para2)) && (para2>0)) { GiveWeapon(para2, 46, 0); SetPPos(para2,1536.0, -1345.0, 1350.0);SetPlayerInterior(para2,0);PlayerInfo[para2][pInt] = 0;SendClientMessage(para2, COLOR_RED, "GO!! GO!! GO!!");}
				if((IsPlayerConnected(para3)) && (para3>0)) { GiveWeapon(para3, 46, 0); SetPPos(para3,1552.0, -1345.0, 1350.0);SetPlayerInterior(para3,0);PlayerInfo[para3][pInt] = 0;SendClientMessage(para3, COLOR_RED, "GO!! GO!! GO!!");}
				if((IsPlayerConnected(para4)) && (para4>0)) { GiveWeapon(para4, 46, 0); SetPPos(para4,1552.0, -1360.0, 1350.0);SetPlayerInterior(para4,0);PlayerInfo[para4][pInt] = 0;SendClientMessage(para4, COLOR_RED, "GO!! GO!! GO!!");}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нет прав на использование команды!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/donate", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ShowPlayerDialog(playerid,DONATE,DIALOG_STYLE_LIST,"Донат-меню","{808080}1.{ffffff} Использование донат-очков\n{808080}2.{ffffff} Информация\n{2E9AFE}Действует акция X2 при пополнении баланса!","Далее","Отмена");
		}
		return 1;
	}
	if(strcmp(cmd, "/givedonate", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid,COLOR_GREY,"Вы не гл. администратор сервера.");
		new target,summ;
		if(sscanf(params,"dd",target,summ)) return SendClientMessage(playerid,COLOR_GREY,"Используйте /givedonate [ID] [кол-во]");
		if(!IsPlayerConnected(target)) return SCM(@p,COLOR_GREY,"Игрок не найден!");
		if(!summ)
		{
			PlayerInfo[target][pDm] = 0;
			glob_str = "";
			format(glob_str,sizeof(glob_str),"Вы обнулили игроку %s ДО",NamePlayer[target]);
			SCM(@p,COLOR_GREEN,glob_str);
			format(glob_str,sizeof(glob_str),"Администратор %s обнулил вам счет ДО",NamePlayer[@p]);
			SCM(target, COLOR_GREEN,glob_str);
			glob_str = "";
			return 1;
		}
		else
		{
			PlayerInfo[target][pDm] += summ;
			glob_str = "";
			format(glob_str,sizeof(glob_str),"Вы пополнили счет ДО игрока %s на %d ДО",NamePlayer[target],summ);
			SCM(@p,COLOR_GREEN,glob_str);
			format(glob_str,sizeof(glob_str),"Администратор %s пополнил ваш ДО счет на %d ДО",NamePlayer[@p],summ);
			SCM(target, COLOR_GREEN,glob_str);
			glob_str = "";
			return 1;
		}
	}
	if(strcmp(cmd, "/offgivedonate", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid,COLOR_GREY,"Вы не гл. администратор сервера.");
		new summ;
		if(sscanf(params,"s[24]d",sendername,summ)) return SendClientMessage(playerid,COLOR_GREY,"Используйте /offgivedonate [Name] [кол-во]");
		if(IsPlayerConnected(GetPlayerID(sendername))) return SCM(@p,COLOR_GREY,"Игрок онлайн!");
		mysql_format(MySQLGo,glob_str,sizeof(glob_str),"SELECT `pDM` FROM `accounts` WHERE `pNickname` = '%e'",sendername);
		new Cache:p = mysql_query(MySQLGo,glob_str,true);
		if(!cache_num_rows()) return SCM(@p,COLOR_GREY,"Неправильный ник!");
		new don = cache_get_field_content_int(0, "pDM", MySQLGo);
		cache_delete(p);
		if(!summ)
		{
			mysql_format(MySQLGo,glob_str,sizeof(glob_str),"UPDATE `accounts` SET `pDM` = '0' WHERE `pNickname` = '%e'",sendername);
			mysql_tquery(MySQLGo,glob_str);
			format(glob_str,sizeof(glob_str),"Вы обнулили счет ДО игроку %s в оффлайне",sendername);
			SCM(@p,COLOR_GREY,glob_str);
			return 1;
		}
		else
		{
			don+= summ;
			mysql_format(MySQLGo,glob_str,sizeof(glob_str),"UPDATE `accounts` SET `pDM` = '%d' WHERE `pNickname` = '%e'",don,sendername);
			mysql_tquery(MySQLGo,glob_str);
			format(glob_str,sizeof(glob_str),"Вы выдали %s в оффлайне %d ДО",sendername,summ);
			SCM(@p,COLOR_GREY,glob_str);
			return 1;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/invite", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /invite [playerid/PartOfName]");
				return 1;
			}
			new para1;
			new ftext[40];
			para1 = strval(tmp);
			if(PlayerInfo[playerid][pLeader] >= 1)
			{
				if(PlayerInfo[para1][pJob] > 0) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок имеет работу. Он должен уволиться. (/quitjob)");
				if(PlayerInfo[para1][pMember] > 0) return SendClientMessage(playerid, -1, "Игрок уже состоит во фракции.");
				if(PlayerInfo[playerid][pLeader] == 6) {  ftext = "на службу в полицию (УМВД)"; ChosenSkin[para1] = 281; SetPlayerSkin(para1, 281); }
				else if(PlayerInfo[playerid][pLeader] == 2) {  ftext = "на службу в ФСБ"; ChosenSkin[para1] = 285; SetPlayerSkin(para1, 285); }
				else if(PlayerInfo[playerid][pLeader] == 3) {  ftext = "на службу в армию"; ChosenSkin[para1] = 287; SetPlayerSkin(para1, 287); }
				else if(PlayerInfo[playerid][pLeader] == 20) {  ftext = "СОБР"; ChosenSkin[para1] = 280; SetPlayerSkin(para1, 280); }
				else if(PlayerInfo[playerid][pLeader] == 4) {  ftext = "в скорую помощь"; ChosenSkin[para1] = 276; SetPlayerSkin(para1, 276); }
				else if(PlayerInfo[playerid][pLeader] == 5) {  ftext = "в АТП"; ChosenSkin[para1] = 22; SetPlayerSkin(para1, 22); }
				else if(PlayerInfo[playerid][pLeader] == 1) {  ftext = "на службу в ОГИБДД"; ChosenSkin[para1] = 284; SetPlayerSkin(para1, 284); }
				else if(PlayerInfo[playerid][pLeader] == 7) {  ftext = "в нотариальную контору"; ChosenSkin[para1] = 17; SetPlayerSkin(para1, 17); }
				else if(PlayerInfo[playerid][pLeader] == 8) {  ftext = "Киллеры"; ChosenSkin[para1] = 124; SetPlayerSkin(para1, 124); }
				else if(PlayerInfo[playerid][pLeader] == 9) {  ftext = "в ЕОТРК «Маяк»"; ChosenSkin[para1] = 188; SetPlayerSkin(para1, 188); }
				else if(PlayerInfo[playerid][pLeader] == 10) {  ftext = "в ТМК Форсаж"; ChosenSkin[para1] = 24; SetPlayerSkin(para1, 24); }
				else if(PlayerInfo[playerid][pLeader] == 11) {  ftext = "в автошколу"; ChosenSkin[para1] = 59; SetPlayerSkin(para1, 59); }
				else if(PlayerInfo[playerid][pLeader] == 12) {  ftext = "в АТУ"; ChosenSkin[para1] = 27; SetPlayerSkin(para1, 27); }
				else if(PlayerInfo[playerid][pLeader] == 13) {  ftext = "в ООО 'Нижстрой'"; ChosenSkin[para1] = 16; SetPlayerSkin(para1, 16); }
				else if(PlayerInfo[playerid][pLeader] == 14) {  ftext = "в сammora"; ChosenSkin[para1] = 117; SetPlayerSkin(para1, 117); }
				else if(PlayerInfo[playerid][pLeader] == 15) {  ftext = "в Арзамасовскую братву"; ChosenSkin[para1] = 110; SetPlayerSkin(para1, 110); }
				else if(PlayerInfo[playerid][pLeader] == 16) {  ftext = "в Русскую Мафию"; ChosenSkin[para1] = 108; SetPlayerSkin(para1, 108); }
				else if(PlayerInfo[playerid][pLeader] == 17) {  ftext = "в СТО"; ChosenSkin[para1] = 50; SetPlayerSkin(para1, 50); }
				else if(PlayerInfo[playerid][pLeader] == 18) {  ftext = "в Металла-База"; ChosenSkin[para1] = 286; SetPlayerSkin(para1, 286); }
				else if(PlayerInfo[playerid][pLeader] == 19) {  ftext = "в СВПЧ №31"; ChosenSkin[para1] = 278; SetPlayerSkin(para1, 278); }
				else if(PlayerInfo[playerid][pLeader] == 21) {  ftext = "в Сибирскую Мафию"; ChosenSkin[para1] = 110; SetPlayerSkin(para1, 110); }
				else { return 1; }
				GetPlayerName(para1, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				PlayerInfo[para1][pMember] = PlayerInfo[playerid][pLeader];
				PlayerInfo[para1][pRank] = 1;
				printf("AdmCmd: %s Принял %s в %s.", sendername, giveplayer, ftext);
				format(string, sizeof(string), "Вы были приняты лидером %s.", ftext, sendername);
				SendClientMessage(para1, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Вы приняли %s игрока %s",ftext, giveplayer);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SetPlayerInterior(para1,0);
				SelectChar[para1] = 255;
				PlayerInfo[para1][pDolj] = 1;
				SelectCharID[para1] = PlayerInfo[para1][pMember];
				SelectCharPlace[para1] = 1;
				PlayerInfo[para1][pModel] = ChosenSkin[para1];
				PlayerInfo[para1][pChar] = ChosenSkin[para1];
				TogglePlayerControllable(para1, 1);
				format_string = "";
				new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
				format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

				mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Команда invite','%d','%s','%s')", NamePlayer[playerid],PlayerInfo[playerid][pLeader],giveplayer,data);
				mysql_tquery(MySQLGo, format_string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование этой команды!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/uninvite", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /uninvite [ID игрока]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if(PlayerInfo[playerid][pLeader] >= 1 || PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[para1][pMember] > 0)
						{
							if(PlayerInfo[para1][pMember] == PlayerInfo[playerid][pLeader] || PlayerInfo[playerid][pAdmin] >= 3)
							{
								GetPlayerName(para1, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								printf("AdmCmd: %s has uninvited %s.", sendername, giveplayer);
								format(string, sizeof(string), "Вы были уволены из организации лидером %s. Вы снова гражданский.", sendername);
								SendClientMessage(para1, COLOR_LIGHTBLUE, string);
								format_string = "";
								new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
								format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

								mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Команда uninvite','%d','%s','%s')", NamePlayer[playerid],PlayerInfo[playerid][pLeader],giveplayer,data);
								mysql_tquery(MySQLGo, format_string);
								PlayerInfo[para1][pMember] = 0;
								PlayerInfo[para1][pLeader] = 0;
								PlayerInfo[para1][pRank] = 0;
								PlayerInfo[para1][pChar] = 24;
								PlayerInfo[para1][pDolj] = 0;
								PlayerInfo[para1][pUdost] = 0;
								PlayerInfo[para1][pUdost1] = 0;
								PlayerInfo[para1][pUdost2] = 0;
								MedicBill[para1] = 0;
								ResetWeapons(giveplayerid);
								SpawnPlayer(para1);
								format(string, sizeof(string), "Bы уволили %s из организации.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							}
							else
							{
								SendClientMessage(playerid, COLOR_LIGHTRED, "Вы не можете уволить!");
								return 1;
							}
						}
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не лидер!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/makehelper", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Введите: /makehelper [id] [1-Дать хелперку | 0-Снять хелперку]");
				return 1;
			}
			new para1;
			new level;
			new szName[32];
			GetPlayerName(playerid,szName,32);
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			//if(!strcmp(szName,"Magomed_Malikov",true)||!strcmp(szName,"Maga_Magagaga",true)||!strcmp(szName,"Maga_Magagaga1",true)||!strcmp(szName,"Maga_Magagaga11",true))
			if(PlayerInfo[playerid][pAdmin] == 4)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pHelper] = level;
						if(level < 0 || level > 1) return SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 1.");
						if(level == 0)
						{
							format(string, sizeof(string), "{0066FF}Вы были сняты с поста помощника по игре администратором %s.", sendername);
							SendClientMessage(para1, COLOR_DBLUE, string);
							format(string, sizeof(string), "{0066FF}Вы сняли %s с поста помощника по игре.", giveplayer);
							SendClientMessage(playerid, COLOR_DBLUE, string);
						}
						else if(level == 1)
						{
							format(string, sizeof(string), "{0066FF}Вы были назначены на пост помощника по игре администратором %s.", sendername);
							SendClientMessage(para1, COLOR_DBLUE, string);
							format(string, sizeof(string), "{0066FF}Вы назначили %s на пост помощника по игре.", giveplayer);
							SendClientMessage(playerid, COLOR_DBLUE, string);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вам недоступна эта функция!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/makeadmin", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /makeadmin [id игрока/часть ника] [level(0-3)]");
				return 1;
			}
			new para1;
			new level;
			new szName[32];
			GetPlayerName(playerid,szName,32);
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pAdmin] >= 6)
			{
				if(level > 4 || level < 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 4!"); return 1;
				}
			}
			//------------------------------------------------------------------------------
			if(!strcmp(szName,"Denis_Korsakov",true)||!strcmp(szName,"Igor_Shunevich",true)||!strcmp(szName,"Vladimir_Dunaew",true)||!strcmp(szName,"Nikolay_Korneev",true))
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						new makeadmin[90];
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pAdmin] = level;
						format_string = "";
						new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
						format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

						mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Makeadmin For Player','%d','%s','%s')", NamePlayer[playerid], level, NamePlayer[para1], data);
						mysql_tquery(MySQLGo, format_string);
						printf("AdmCmd: %s has giverank %s to %d rank", sendername, giveplayer, level);
						format(string, sizeof(string), "Администратор %s установил вам %d уровень администратора.", PlayerInfo[playerid][pNickname], level);
						SendClientMessage(para1, COLOR_GREEN, string);
						format(makeadmin, sizeof(makeadmin), "Вы установили игроку %s %d уровень администратора.", PlayerInfo[para1][pNickname], level);
						SendClientMessage(playerid, COLOR_GREEN, makeadmin);
						UpdatePlayerData(para1,"pAdmin",level);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/makeleader", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /makeleader [playerid] [0-Снять, 1-ГИБДД, 2-none, 3-none, 4-Скорая помощь, 5-none, 6-ООО 'Нижстрой', 7-Нот. контора,");
				SendClientMessage(playerid, COLOR_GRAD2, "8-none, 9-none, 10-none, 11-none, 12-none, 13-Полиция, 14-Арзамасовская братва, 15-Пожарники, 16-СТО №23, 17-none.");
				return 1;
			}
			new para1;
			new level;
			new szName[32];
			GetPlayerName(playerid,szName,32);
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 18 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "Цифра не может быть меньше 0 или больше 18!"); return 1; }
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						//PlayerInfo[para1][pLeader] = level;
						if(level == 17)
						{
							format(string, sizeof(string), "Вы были назначены лидером фракции администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначены лидером текущей фракции игрока %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[para1][pLeader] = PlayerInfo[para1][pMember];
							PlayerInfo[para1][pMember] = 0;
						}
						else if(level == 0)
						{
							PlayerInfo[para1][pChar] = 14;
							if(GetPVarType(@p,#P_Jobs)) DeletePVar(@p,#P_Jobs);
							PlayerInfo[para1][pMember] = 0;
							PlayerInfo[para1][pLeader] = 0;
							format(string, sizeof(string), "Вы были сняты с поста лидера организации администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы сняли %s с поста лидера организации.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(level == 13)
						{
							PlayerInfo[para1][pChar] = 288;
							SetPVarInt(playerid,#P_Jobs,1);
							SendClientMessage(playerid,COLOR_LIGHTBLUE,#Рабочий день начат!);
							PlayerInfo[para1][pLeader] = 6;
							PlayerInfo[para1][pMember] = 6;
							PlayerInfo[para1][pRank] = 13;
							format(string, sizeof(string), "Вы были назначены лидером полиции администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером УМВД.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //  Полиция
						else if(level == 2)
						{
							PlayerInfo[para1][pChar] = 295;
							PlayerInfo[para1][pLeader] = 2;
							format(string, sizeof(string), "Вы были назначены лидером ФСБ администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером ФСБ.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //  ФСБ
						else if(level == 3)
						{ 
							PlayerInfo[para1][pChar] = 287;
							PlayerInfo[para1][pLeader] = 3;
							format(string, sizeof(string), "Вы были назначены лидером Армии администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером Армии.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //  ФСБ
						else if(level == 4)
						{ 
							PlayerInfo[para1][pChar] = 70;
							SetPVarInt(playerid,#P_Jobs,1);
							SendClientMessage(playerid,COLOR_LIGHTBLUE,#Рабочий день начат!);
							PlayerInfo[para1][pLeader] = 4;
							PlayerInfo[para1][pMember] = 4;
							PlayerInfo[para1][pRank] = 15;
							format(string, sizeof(string), "Вы были назначены лидером Скорой помощи администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером Скорой помощи.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //   МЕДИКИ
						else if(level == 5)
						{ 
							PlayerInfo[para1][pChar] = 223;
							PlayerInfo[para1][pLeader] = 5;
							format(string, sizeof(string), "Вы были назначены лидером АТП администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером АТП.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //  ЛКН
						else if(level == 1)
						{
							PlayerInfo[para1][pChar] = 280;
							SetPVarInt(playerid,#P_Jobs,1);
							SendClientMessage(playerid,COLOR_LIGHTBLUE,#Рабочий день начат!);
							PlayerInfo[para1][pLeader] = 1;
							PlayerInfo[para1][pMember] = 1;
							PlayerInfo[para1][pRank] = 13;
							format(string, sizeof(string), "Вы были назначены лидером ГИБДД администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером ГИБДД.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //  ЯКУДЗА
						else if(level == 7)
						{ 
							PlayerInfo[para1][pChar] = 147;
							PlayerInfo[para1][pLeader] = 7;
							format(string, sizeof(string), "Вы были назначены лидером нотариальной конторы администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером нотариальной конторы.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //  Правительство
						else if(level == 8)
						{ 
							PlayerInfo[para1][pChar] = 249;
							PlayerInfo[para1][pLeader] = 9;
							format(string, sizeof(string), "Вы были назначены лидером Репортеров администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером Репортеров.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //   РЕПОРТЁРЫ
						else if(level == 9)
						{ 
							PlayerInfo[para1][pChar] = 22;
							PlayerInfo[para1][pLeader] = 10;
							format(string, sizeof(string), "Вы были назначены лидером Такси администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером Такси.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //Taxi Cab Company
						else if(level == 10)
						{ 
							PlayerInfo[para1][pChar] = 189;
							PlayerInfo[para1][pLeader] = 11;
							format(string, sizeof(string), "Вы были назначены лидером Инструкторов администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером Инструкторов.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //  ЛИЦЕНЗЁРЫ
						else if(level == 11)
						{ 
							PlayerInfo[para1][pChar] = 16;
							PlayerInfo[para1][pLeader] = 12;
							format(string, sizeof(string), "Вы были назначены лидером АТУ администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером АТУ.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //   Street Race
						else if(level == 6)
						{ 
							PlayerInfo[para1][pChar] = 27;
							PlayerInfo[para1][pLeader] = 13;
							format(string, sizeof(string), "Вы были назначены лидером ООО 'НижСтрой' администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером ООО 'НижСтрой'.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //  Доки
						else if(level == 12)
						{ 
							PlayerInfo[para1][pChar] = 46;
							PlayerInfo[para1][pLeader] = 14;
							format(string, sizeof(string), "Вы были назначены лидером Camorra администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером Camorra.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(level == 14)
						{ 
							PlayerInfo[para1][pChar] = 113;
							PlayerInfo[para1][pLeader] = 15;
							format(string, sizeof(string), "Вы были назначены лидером Арзамасовской братвы администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером Арзамасовской братвы.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} //  Шпана
						else if(level == 16)
						{ 
							PlayerInfo[para1][pChar] = 46;
							PlayerInfo[para1][pLeader] = 17;
							format(string, sizeof(string), "Вы были назначены лидером Станции Технического Обсуживания №23 администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером Станции Технического Обсуживания №23.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(level == 15)
						{ 
							PlayerInfo[para1][pChar] = 279;
							SetPVarInt(playerid,#P_Jobs,1);
							SendClientMessage(playerid,COLOR_LIGHTBLUE,#Рабочий день начат!);
							PlayerInfo[para1][pLeader] = 19;
							PlayerInfo[para1][pMember] = 19;
							PlayerInfo[para1][pRank] = 15;
							format(string, sizeof(string), "Вы были назначены лидером Пожарников администратором %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером Пожарников.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(level == 17)
						{ 
							PlayerInfo[para1][pChar] = 113;
							PlayerInfo[para1][pLeader] = 16;
							format(string, sizeof(string), "Вы были назначены лидером Горковской ОПГ %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером Горковской ОПГ.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						else if(level == 18)
						{ 
							PlayerInfo[para1][pChar] = 110;
							PlayerInfo[para1][pLeader] = 21;
							format(string, sizeof(string), "Вы были назначены лидером Горьковской ОПГ %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером Горьковской ОПГ.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						format_string = "";
						new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
						format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

						mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Makeleader For Player','%d','%s','%s')", NamePlayer[playerid], PlayerInfo[para1][pLeader], NamePlayer[para1], data);
						mysql_tquery(MySQLGo, format_string);
						if(level) SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
						else SetPlayerSkin(para1, PlayerInfo[para1][pModel]);
						//SpawnPlayer(para1);
						UpdatePlayerData(para1,"pChar",PlayerInfo[para1][pChar]);
						UpdatePlayerData(para1,"pLeader",PlayerInfo[para1][pLeader]);
						UpdatePlayerData(para1,"pRank",PlayerInfo[para1][pRank]);
						UpdatePlayerData(para1,"pMember",PlayerInfo[para1][pMember]);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}


	//==============================================================================
	
	///RADAR
	if(strcmp(cmd, "/radar", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /radar [1 - включить, 0 - выключить]");
			return 1;
		}
		if(!(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader] == 1))
		{
			SendClientMessage(playerid,COLOR_GREY,"Вы не сотрудник ДПС!");
			return 1;
		}
		if(strval(tmp)==1)
		{
			radart[playerid]=1;
			TextDrawShowForPlayer(playerid,ratext);
		}
		if(strval(tmp)==0)
		{
			TextDrawHideForPlayer(playerid,ratext);
			radart[playerid]=0;
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/givedolj", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
			{
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GREY, "Используйте: /givedolj [id игрока] [1-23]");
					return 1;
				}
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pLeader] == 1)   			{
				if(level > 23 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 23!"); return 1;				}			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pLeader] == 1)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[para1][pMember] == PlayerInfo[playerid][pLeader] || para1 == playerid || PlayerInfo[para1][pLeader] == PlayerInfo[playerid][pLeader] || para1 == playerid)
						{
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new oldrank = PlayerInfo[para1][pDolj];
							PlayerInfo[para1][pDolj] = level;
							new rtext[400];
							if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
							{
								switch(level)
								{
								case 1:{ rtext = "МИ-ОБ ДПС"; }
								case 2:{ rtext = "И-ОБ ДПС"; }
								case 3:{ rtext = "СИ-ОБ ДПС"; }
								case 4:{ rtext = "Заместитель начальника отдела кадров"; }
								case 5:{ rtext = "Начальник отдела кадров"; }
								case 6:{ rtext = "Заместитель командир СР-ОБ ДПС"; }
								case 7:{ rtext = "Командир СР-ОБ ДПС"; }
								case 8:{ rtext = "Заместитель командира ОБ-ДПС"; }
								case 9:{ rtext = "Командир ОБ-ДПС"; }
								case 10:{ rtext = "Заместитель начальника учебного центра"; }
								case 11:{ rtext = "Начальник учебного центра"; }
								case 12:{ rtext = "Заместитель начальника МРЭО"; }
								case 13:{ rtext = "Начальник МРЭО"; }
								case 14:{ rtext = "Заместитель начальника службы эвакуации"; }
								case 15:{ rtext = "Начальник службы эвакуации"; }
								case 16:{ rtext = "МИ СР-ОБ ДПС"; }
								case 17:{ rtext = "И СР-ОБ ДПС"; }
								case 18:{ rtext = "СИ СР-ОБ ДПС"; }
								case 19:{ rtext = "Третий заместитель начальника отдела ГИБДД"; }
								case 20:{ rtext = "Второй заместитель начальника отдела ГИБДД"; }
								case 21:{ rtext = "Первый заместитель начальника отдела ГИБДД"; }
								case 22:{ rtext = "Начальник отдела ГИБДД"; }
								case 23:{ rtext = "Обучающийся в учебном центре"; }
								default: { rtext = "МИ-ОБ ДПС"; }
								}
							}
							format(string, sizeof(string), "Вы выдали %s должность « %s »", giveplayer,rtext);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							if(level>oldrank)
							{
								format(string, sizeof(string), "Вы были повышены в должности до « %s » лидером %s.",rtext,sendername);
							}
							else
							{
								format(string, sizeof(string), "Вы были понижены в должности до « %s » лидером %s.",rtext,sendername);
							}
							SendClientMessage(para1,COLOR_LIGHTBLUE,string);
							format_string = "";
							new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
							format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

							mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','givedolj oldrank = %d newrank = %d','%d','%s','%s')", NamePlayer[playerid],oldrank,level,PlayerInfo[para1][pMember],giveplayer,data);
							mysql_tquery(MySQLGo, format_string);
						}
						else SendClientMessage(playerid, COLOR_GRAD1, "Этот игрок не в вашей фракции!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не лидер.");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/givedoljpps", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GREY, "Используйте: /givedoljpps [id игрока] [1-15]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pLeader] == 1)   			{
				if(level > 15 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 15!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 6)   			{
				if(level > 21 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 15!"); return 1;				}			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pLeader] == 6)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[para1][pMember] == PlayerInfo[playerid][pLeader] || para1 == playerid || PlayerInfo[para1][pLeader] == PlayerInfo[playerid][pLeader] || para1 == playerid)
						{
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new oldrank = PlayerInfo[para1][pDolj];
							PlayerInfo[para1][pDolj] = level;
							new rtext[256];
							if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
							{
								switch(level)
								{
								case 1:{ rtext = "Младший патрульный ПООП"; }
								case 2:{ rtext = "Патрульный ПООП"; }
								case 3:{ rtext = "Старший патрульный ПООП"; }
								case 4:{ rtext = "Младший оперуполномоченный УУР"; }
								case 5:{ rtext = "Оперуполномоченный УУР"; }
								case 6:{ rtext = "Старший оперуполномоченный УУР"; }
								case 7:{ rtext = "Следователь юстиции"; }
								case 8:{ rtext = "Стажер ОМОН"; }
								case 9:{ rtext = "Боец ОМОН"; }
								case 10:{ rtext = "Заместитель командира ОМОН"; }
								case 11:{ rtext = "Командир ОМОН"; }
								case 12:{ rtext = "Заместитель начальника ПООП"; }
								case 13:{ rtext = "Начальник ПООП"; }
								case 14:{ rtext = "Заместитель начальника СУ"; }
								case 15:{ rtext = "Начальник СУ"; }
								case 16:{ rtext = "Заместитель начальника УУР"; }
								case 17:{ rtext = "Начальник УУР"; }
								case 18:{ rtext = "Третий заместитель начальника УМВД"; }
								case 19:{ rtext = "Второй заместитель начальника УМВД"; }
								case 20:{ rtext = "Первый заместитель начальника УМВД"; }
								case 21:{ rtext = "Начальник УМВД"; }
								default: { rtext = "Младший патрульный ПООП"; }
								}
							}
							format(string, sizeof(string), "Вы выдали %s должность « %s »", giveplayer,rtext);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							if(level>oldrank)
							{
								format(string, sizeof(string), "Вы были повышены в должности до « %s » лидером %s.",rtext,sendername);
							}
							else
							{
								format(string, sizeof(string), "Вы были понижены в должности до « %s » лидером %s.",rtext,sendername);
							}
							SendClientMessage(para1,COLOR_LIGHTBLUE,string);
						}
						else SendClientMessage(playerid, COLOR_GRAD1, "Этот игрок не в вашей фракции!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не лидер!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/giverank", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /giverank [id игрока] [ранг]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pLeader] == 6)   			{
				if(level > 12 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 12!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 2)   			{
				if(level > 9 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 9!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 3)   			{
				if(level > 19 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 19!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 4)   			{
				if(level > 15 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 15!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 5)   			{
				if(level > 13 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 13!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 1)  			{
				if(level > 12 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 12!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 7)   			{
				if(level > 7 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 7!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 8)   			{
				if(level > 12 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 12!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 9) 			{
				if(level > 25 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 25!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 10)  			{
				if(level > 8 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 8!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 11)   			{
				if(level > 11 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 11!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 12)  			{
				if(level > 21 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 21!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 13)   			{
				if(level > 9 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 9!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 14)   			{
				if(level > 10 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 10!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 15)  			{
				if(level > 13 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 13!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 16)   			{
				if(level > 13 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 13!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 17)   			{
				if(level > 9 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 9!"); return 1;		}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 18)  			{
				if(level > 8 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 8!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 19)   			{
				if(level > 15 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 15!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 20)   			{
				if(level > 15 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 15!"); return 1;				}			}
			//------------------------------------------------------------------------------
			/*else if(PlayerInfo[playerid][pLeader] == 21)  			{
			if(level > 5 || level < 0)				{
			SendClientMessage(playerid, COLOR_GREY, " Не меньше 0 и не больше 5!"); return 1;			}			}*/
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 22)   		{
				if(level > 10 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 10!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 30)  			{
				if(level > 13 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 13!"); return 1;				}			}
			//------------------------------------------------------------------------------
			else if(PlayerInfo[playerid][pLeader] == 21)  			{
				if(level > 10 || level < 0)				{
					SendClientMessage(playerid, COLOR_GREY, "Не меньше 0 и не больше 10!"); return 1;				}			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pLeader] >= 1)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[para1][pMember] == PlayerInfo[playerid][pLeader] || para1 == playerid || PlayerInfo[para1][pLeader] == PlayerInfo[playerid][pLeader] || para1 == playerid /*|| PlayerInfo[playerid][pAdmin] >= 6*/)
						{
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new rtext[256];
							if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
							{
								switch(level)
								{
								case 1:{ rtext = "Рядовой полиции (ГИБДД)"; }
								case 2:{ rtext = "Мл. сержант полиции (ГИБДД)"; }
								case 3:{ rtext = "Сержант полиции (ГИБДД)"; }
								case 4:{ rtext = "Ст. сержант полиции (ГИБДД)"; }
								case 5:{ rtext = "Старшина полиции (ГИБДД)"; }
								case 6:{ rtext = "Мл. лейтенант полиции (ГИБДД)"; }
								case 7:{ rtext = "Лейтенант полиции (ГИБДД)"; }
								case 8:{ rtext = "Ст. лейтенант полиции (ГИБДД)"; }
								case 9:{ rtext = "Капитан полиции (ГИБДД)"; }
								case 10:{ rtext = "Майор полиции (ГИБДД)"; }
								case 11:{ rtext = "Подполковник полиции (ГИБДД)"; }
								case 12:{ rtext = "Полковник полиции (ГИБДД)"; }
								default: { rtext = "Рядовой полиции (ГИБДД)"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
							{
								switch(level)
								{
								case 15:{ rtext = "Заведующий больницей"; }
								case 14:{ rtext = "Помощник заведующего больницей"; }
								case 13:{ rtext = "Главный врач"; }
								case 12:{ rtext = "Заведующий отделением"; }
								case 11:{ rtext = "Врач-специалист"; }
								case 10:{ rtext = "Хирург"; }
								case 9:{ rtext = "Эндокринолог"; }
								case 8:{ rtext = "Невролог"; }
								case 7:{ rtext = "Психиатр"; }
								case 6:{ rtext = "Окулист"; }
								case 5:{ rtext = "Терапевт"; }
								case 4:{ rtext = "Интерн"; }
								case 3:{ rtext = "Фельдшер"; }
								case 2:{ rtext = "Водитель"; }
								case 1:{ rtext = "Практикант"; }
								default: { rtext = "Практикант"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)//ФСР Ranks
							{
								switch(level)
								{
								case 1:{ rtext = "Прапорщик ФСБ"; }
								case 2:{ rtext = "Ст. прапорщик ФСБ"; }
								case 3:{ rtext = "Мл. лейтенант ФСБ"; }
								case 4:{ rtext = "Лейтенант ФСБ"; }
								case 5:{ rtext = "Ст. лейтенант ФСБ"; }
								case 6:{ rtext = "Капитан ФСБ"; }
								case 7:{ rtext = "Майор ФСБ"; }
								case 8:{ rtext = "Подполковник ФСБ"; }
								case 9:{ rtext = "Полковник ФСБ"; }
								default: { rtext = "Рядовой ФСБ"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//FBI Ranks
							{
								switch(level)
								{
								case 19:{ rtext = "Генерал Армии"; }
								case 18:{ rtext = "Генерал-полковник"; }
								case 17:{ rtext = "Генерал-лейтенант"; }
								case 16:{ rtext = "Генерал-майор"; }
								case 15:{ rtext = "Полковник"; }
								case 14:{ rtext = "Подполковник"; }
								case 13:{ rtext = "Майор"; }
								case 12:{ rtext = "Капитан"; }
								case 11:{ rtext = "Ст. лейтенант"; }
								case 10:{ rtext = "Лейтенант"; }
								case 9:{ rtext = "Мл. лейтенант"; }
								case 8:{ rtext = "Ст.Прапорщик"; }
								case 7:{ rtext = "Прапорщик"; }
								case 6:{ rtext = "Старшина"; }
								case 5:{ rtext = "Ст. сержант"; }
								case 4:{ rtext = "Сержант"; }
								case 3:{ rtext = "Мл. сержант"; }
								case 2:{ rtext = "Ефрейтор"; }
								case 1:{ rtext = "Рядовой"; }
								default: { rtext = "Рядовой"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)//FBI Ranks
							{
								switch(level)
								{
								case 1:{ rtext = "Ученик водителя"; }
								case 2:{ rtext = "Кондуктор"; }
								case 3:{ rtext = "Водитель"; }
								case 4:{ rtext = "Диспетчер"; }
								case 5:{ rtext = "Ревизор по БДД"; }
								case 6:{ rtext = "Начальник Калонны"; }
								case 7:{ rtext = "Помошник Механика"; }
								case 8:{ rtext = "Механик"; }
								case 9:{ rtext = "Сотрудник ТО"; }
								case 10:{ rtext = "Начальник ТО"; }
								case 11:{ rtext = "Инструктор"; }
								case 12:{ rtext = "Заместитель директора"; }
								case 13:{ rtext = "Генеральный директор"; }
								default: { rtext = "Генеральный директор"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)//FBI Ranks
							{
								switch(level)
								{
								case 1:{ rtext = "Монтёр пути"; }
								case 2:{ rtext = "Сигналист"; }
								case 3:{ rtext = "Дежурный по переезду"; }
								case 4:{ rtext = "Начальник ПЧ"; }
								case 5:{ rtext = "Слесарь"; }
								case 6:{ rtext = "Электромеханник"; }
								case 7:{ rtext = "Начальник ТЧР"; }
								case 8:{ rtext = "Кассир-контролёр"; }
								case 9:{ rtext = "Помощник машиниста"; }
								case 10:{ rtext = "Машинист 3 класса"; }
								case 11:{ rtext = "Машинист 2 класса"; }
								case 12:{ rtext = "Машинист 1 класса"; }
								case 13:{ rtext = "Машинист-инструктор"; }
								case 14:{ rtext = "Дежурный по депо"; }
								case 15:{ rtext = "Начальник депо"; }
								case 16:{ rtext = "Дежурный по станции"; }
								case 17:{ rtext = "Начальник станции"; }
								case 18:{ rtext = "Поездной диспетчер"; }
								case 19:{ rtext = "Старший диспетчер"; }
								case 20:{ rtext = "Начальник ДУД"; }
								case 21:{ rtext = "Начальник дороги"; }
								default: { rtext = "Монтёр пути"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)//FBI Ranks
							{
								switch(level)
								{
								case 1:{ rtext = "Охранник"; }
								case 2:{ rtext = "Секретарь"; }
								case 3:{ rtext = "Юрист-Консультант"; }
								case 4:{ rtext = "Нотариус"; }
								case 5:{ rtext = "Бухгалтер"; }
								case 6:{ rtext = "Заместитель директора конторы"; }
								case 7:{ rtext = "Директор конторы"; }
								default: { rtext = "Охранник"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)//FBI Ranks
							{
								switch(level)
								{
								case 12:{ rtext = "Директор агенства"; }
								case 11:{ rtext = "Зам. директора"; }
								case 10:{ rtext = "Правая рука"; }
								case 9:{ rtext = "Секретный агентй"; }
								case 8:{ rtext = "Начальник агентов"; }
								case 7:{ rtext = "Агент со стажем"; }
								case 6:{ rtext = "Агент"; }
								case 5:{ rtext = "Мл. агент"; }
								case 4:{ rtext = "Ст. киллер"; }
								case 3:{ rtext = "Киллер"; }
								case 2:{ rtext = "Мл. киллер"; }
								case 1:{ rtext = "Новичек"; }
								default: { rtext = "Директор агенства"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)//Сиб.Маф Ranks
							{
								switch(level)
								{
								case 10:{ rtext = "Криминальный Авторитет"; }
								case 9:{ rtext = "Вор в законе"; }
								case 8:{ rtext = "Сваояк"; }
								case 7:{ rtext = "Смотрящий"; }
								case 6:{ rtext = "Арестант"; }
								case 5:{ rtext = "Босяк"; }
								case 4:{ rtext = "Жиган"; }
								case 3:{ rtext = "Вышибала"; }
								case 2:{ rtext = "Барыга"; }
								case 1:{ rtext = "Шестёрка"; }
								default: { rtext = "Шестёрка"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)//FBI Ranks
							{
								switch(level)
								{
								case 25:{ rtext = "Генеральный директор"; }
								case 24:{ rtext = "Исполнительный Директор"; }
								case 23:{ rtext = "Коммерческий Директор"; }
								case 22:{ rtext = "Директор по маркетингу"; }
								case 21:{ rtext = "Директор по кадрам"; }
								case 20:{ rtext = "Директор по эфирам"; }
								case 19:{ rtext = "Топ-менеджер"; }
								case 18:{ rtext = "Пресс-менеджер"; }
								case 17:{ rtext = "Арт-Директор"; }
								case 16:{ rtext = "Зам.Арт-Директора"; }
								case 15:{ rtext = "Организатор мероприятий"; }
								case 14:{ rtext = "Тамада"; }
								case 13:{ rtext = "Помощник организатора"; }
								case 12:{ rtext = "Главный Редактор"; }
								case 11:{ rtext = "Шеф-Редактор"; }
								case 10:{ rtext = "Журналист"; }
								case 9:{ rtext = "Корреспондент"; }
								case 8:{ rtext = "Репортер"; }
								case 7:{ rtext = "Программный Директор"; }
								case 6:{ rtext = "Зам.Программный Директор"; }
								case 5:{ rtext = "Главный DJ"; }
								case 4:{ rtext = "Главный звукооператор"; }
								case 3:{ rtext = "DJ"; }
								case 2:{ rtext = "Звукооператор"; }
								case 1:{ rtext = "Практикант"; }
								default: { rtext = "Практикант"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)//FBI Ranks
							{
								switch(level)
								{
								case 8:{ rtext = "Директор комании"; }
								case 7:{ rtext = "Заместитель директора"; }
								case 6:{ rtext = "Руководитель автопарка"; }
								case 5:{ rtext = "Диспетчер"; }
								case 4:{ rtext = "Таксист 1 класса"; }
								case 3:{ rtext = "Таксист 2 класса"; }
								case 2:{ rtext = "Таксист 3 класса"; }
								case 1:{ rtext = "Практикант"; }
								default: { rtext = "Практикант"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)//FBI Ranks
							{
								switch(level)
								{
								case 11:{ rtext = "Директор"; }
								case 10:{ rtext = "Заместитель директора"; }
								case 9:{ rtext = "Бухгалтер"; }
								case 8:{ rtext = "Старший менеджер"; }
								case 7:{ rtext = "Менеджер"; }
								case 6:{ rtext = "Начальник охраны"; }
								case 5:{ rtext = "Инструктор 1 класса"; }
								case 4:{ rtext = "Инструктор 2 класса"; }
								case 3:{ rtext = "Инструктор 3 класса"; }
								case 2:{ rtext = "Охранник"; }
								case 1:{ rtext = "Практикант"; }
								default: { rtext = "Практикант"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)//FBI Ranks
							{
								switch(level)
								{
								case 9:{ rtext = "Директор"; }
								case 8:{ rtext = "Заместитель директора"; }
								case 7:{ rtext = "Проектировщик"; }
								case 6:{ rtext = "Главный бухгалтер"; }
								case 5:{ rtext = "Бухгалтер"; }
								case 4:{ rtext = "Сотрудник ОК"; }
								case 3:{ rtext = "Секретарь"; }
								case 2:{ rtext = "Строитель"; }
								case 1:{ rtext = "Водитель"; }
								default: { rtext = "Водитель"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
							{
								switch(level)
								{
								case 1:{ rtext = "Рядовой полиции"; }
								case 2:{ rtext = "Мл. сержант полиции"; }
								case 3:{ rtext = "Сержант полиции"; }
								case 4:{ rtext = "Ст. сержант полиции"; }
								case 5:{ rtext = "Старшина полиции"; }
								case 6:{ rtext = "Мл. лейтенант полиции"; }
								case 7:{ rtext = "Лейтенант полиции"; }
								case 8:{ rtext = "Ст. лейтенант полиции"; }
								case 9:{ rtext = "Капитан полиции"; }
								case 10:{ rtext = "Майор полиции"; }
								case 11:{ rtext = "Подполковник полиции"; }
								case 12:{ rtext = "Полковник полиции"; }
								default: { rtext = "Рядовой полиции"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)//FBI Ranks
							{
								switch(level)
								{
								case 1:{ rtext = "Новицио"; }
								case 2:{ rtext = "Ассосиато"; }
								case 3:{ rtext = "Сомбаттенте"; }
								case 4:{ rtext = "Солдато"; }
								case 5:{ rtext = "Боец"; }
								case 6:{ rtext = "Cотто Капо"; }
								case 7:{ rtext = "Капо"; }
								case 8:{ rtext = "Младший Босс"; }
								case 9:{ rtext = "Консильере"; }
								case 10:{ rtext = "Дон"; }
								default: { rtext = "Дон"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
							{
								switch(level)
								{
								case 1:{ rtext = "Барыга"; }
								case 2:{ rtext = "Фраер"; }
								case 3:{ rtext = "Вышибала"; }
								case 4:{ rtext = "Боец"; }
								case 5:{ rtext = "Блатной"; }
								case 6:{ rtext = "Жиган"; }
								case 7:{ rtext = "Смотрящий"; }
								case 8:{ rtext = "Менеджер"; }
								case 9:{ rtext = "Авторитет"; }
								case 10:{ rtext = "Вор в законе"; }
								case 11:{ rtext = "Отец мафии"; }
								default: { rtext = "Отец мафии"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
							{
								switch(level)
								{
								case 1:{ rtext = "Молодой"; }
								case 2:{ rtext = "Боец"; }
								case 3:{ rtext = "Барыга"; }
								case 4:{ rtext = "Браток"; }
								case 5:{ rtext = "Бывалый"; }
								case 6:{ rtext = "Арестант"; }
								case 7:{ rtext = "Зам. бригадира"; }
								case 8:{ rtext = "Бригадир"; }
								case 9:{ rtext = "Исполнитель"; }
								case 10:{ rtext = "Смотрящий"; }
								case 11:{ rtext = "Авторитет"; }
								case 12:{ rtext = "Правая рука вора"; }
								case 13:{ rtext = "Вор в законе"; }
								default: { rtext = "Молодой"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
							{
								switch(level)
								{
								case 1:{ rtext = "Сторож"; }
								case 2:{ rtext = "Приемщик"; }
								case 3:{ rtext = "Оценщик"; }
								case 4:{ rtext = "Кассир"; }
								case 5:{ rtext = "Бухгалтер"; }
								case 6:{ rtext = "Начальник ОК"; }
								case 7:{ rtext = "Замиститель Директора"; }
								case 8:{ rtext = "Генеральный Директор"; }
								default: { rtext = "Генеральный Директор"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
							{
								switch(level)
								{
								case 1:{ rtext = "Стажер"; }
								case 2:{ rtext = "Шиномонтажник"; }
								case 3:{ rtext = "Автомойщик"; }
								case 4:{ rtext = "Автомоляр"; }
								case 5:{ rtext = "Автомеханик"; }
								case 6:{ rtext = "Инженер"; }
								case 7:{ rtext = "Главный инженер"; }
								case 8:{ rtext = "Зам.директора"; }
								case 9:{ rtext = "Директор"; }
								default: { rtext = "Директор"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)//FBI Ranks
							{
								switch(level)
								{
								case 1:{ rtext = "Рядовой МЧС"; }
								case 2:{ rtext = "Ефрейтор МЧС"; }
								case 3:{ rtext = "Мл. сержант МЧС"; }
								case 4:{ rtext = "Сержант МЧС"; }
								case 5:{ rtext = "Ст. сержант МЧС"; }
								case 6:{ rtext = "Старшина МЧС"; }
								case 7:{ rtext = "Прапорщик МЧС"; }
								case 8:{ rtext = "Ст. прапорщик МЧС"; }
								case 9:{ rtext = "Мл. лейтенант МЧС"; }
								case 10:{ rtext = "Лейтенант МЧС"; }
								case 11:{ rtext = "Ст. лейтенант МЧС"; }
								case 12:{ rtext = "Капитан МЧС"; }
								case 13:{ rtext = "Майор МЧС"; }
								case 14:{ rtext = "Подполковник МЧС"; }
								case 15:{ rtext = "Полковник МЧС"; }
								default: { rtext = "Рядовой МЧС"; }
								}
							}
							if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)//FBI Ranks
							{
								switch(level)
								{
								case 1:{ rtext = "Рядовой СОБР"; }
								case 2:{ rtext = "Ейрейтор СОБР"; }
								case 3:{ rtext = "Мл. сержант СОБР"; }
								case 4:{ rtext = "Сержант СОБР"; }
								case 5:{ rtext = "Ст. сержант СОБР"; }
								case 6:{ rtext = "Старшина СОБР"; }
								case 7:{ rtext = "Ст. прапорщик СОБР"; }
								case 8:{ rtext = "Мл. лейтенант СОБР"; }
								case 9:{ rtext = "Лейтенант СОБР"; }
								case 10:{ rtext = "Ст. лейтенант СОБР"; }
								case 11:{ rtext = "Капитан СОБР"; }
								case 12:{ rtext = "Майор СОБР"; }
								case 13:{ rtext = "Подполковник СОБР"; }
								case 14:{ rtext = "Полковник СОБР"; }
								case 15:{ rtext = "Генерал-Майор СОБР"; }
								default: { rtext = "Рядовой СОБР"; }
								}
							}
							new oldrank = PlayerInfo[para1][pRank];
							PlayerInfo[para1][pRank] = level;
							//format(string, sizeof(string), "Вы были повышены лидером %s до %d ранга.", sendername,level);
							//SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы выдали %s ранг: %s", giveplayer,rtext);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							if(level>oldrank)
							{
								format(string, sizeof(string), "Вы были повышены до < %s > ранга лидером %s.",rtext,sendername);
							}
							else
							{
								format(string, sizeof(string), "Вы были понижены до < %s > ранга лидером %s.",rtext,sendername);
							}
							SendClientMessage(para1,COLOR_LIGHTBLUE,string);
							format_string = "";
							new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
							format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

							mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','giverank oldrank = %d newrank = %d','%d','%s','%s')", NamePlayer[playerid],oldrank,level,PlayerInfo[para1][pMember],giveplayer,data);
							mysql_tquery(MySQLGo, format_string);

						}
						else SendClientMessage(playerid, COLOR_GRAD1, "Этот игрок не в вашей фракции!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не авторизованы для использования этой команды!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/goto", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /goto [id игрока]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if(IsPlayerConnected(plo))
			{
				if(plo != INVALID_PLAYER_ID)
				{
					if(!gPlayerLogged[plo]) return SendClientMessage(playerid,COLOR_LIGHTRED,#Игрок не авторизован!);
					if(PlayerInfo[playerid][pAdmin] >= 1)
					{
						new tmpp=ReturnUser(tmp);
						if(HideTP[tmpp]>=1)
						{
							SendClientMessage(playerid, COLOR_GREY, "Этот игрок запретил к нему телепортироваться!");
							return 1;
						}
						if(Spectate[playerid] != 255)
						{
							Spectate[playerid] = 256;
						}
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(PlayerInfo[plo][pInt] > 0)
						{
							SetPlayerInterior(playerid,PlayerInfo[plo][pInt]);
							PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
							PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(playerid,0);
						}
						if(plocz > 530.0 && PlayerInfo[plo][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(playerid,1);
							PlayerInfo[playerid][pInt] = 1;
						}
						if(GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPPos(playerid,plocx,plocy+2, plocz);
						}
						SendClientMessage(playerid, COLOR_GREY, "Вы телепортировали себя к заданному игроку.");
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "Игрок не в сети!");
				SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/mark", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы установили точку телепорта (используте /gotomark для тп в неё).");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/gotomark", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы телепортировались.");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/entercar", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /entercar [id машины]");
				return 1;
			}
			new testcar = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				PutPlayerInVeh(playerid, testcar, 1);
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вы не можете использовать эту команду!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/gotocar", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /gotocar [carid]");
				return 1;
			}
			new testcar = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				new Float:cwx2,Float:cwy2,Float:cwz2;
				GetVehiclePos(testcar, cwx2, cwy2, cwz2);
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, cwx2, cwy2, cwz2);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPPos(playerid, cwx2, cwy2, cwz2);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы к указанному автомобилю.");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вы не можете использовать эту команду!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/getcar", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /getcar [carid]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(plo,plocx,plocy+4, plocz);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование этой команды!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/gotoin", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1416.107000,0.268620,1000.926000);
				}
				else
				{
					SetPPos(playerid, 1416.107000,0.268620,1000.926000);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы");
				SetPlayerInterior(playerid,1);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вы не можете использовать эту команду!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/gotostad", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1435.75, -652.664, 1054.94);
				}
				else
				{
					SetPPos(playerid, -1435.75, -652.664, 1054.94);
				}
				SetPlayerInterior(playerid,4);
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вы не можете использовать эту команду!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/gotojet", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34);
				}
				else
				{
					SetPPos(playerid, 1.71875, 30.4062, 1200.34);
				}
				SetPlayerInterior(playerid,1);
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/gethere", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /gethere [id игрока]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if(IsPlayerConnected(plo))
			{
				if(plo != INVALID_PLAYER_ID)
				{
					if(!gPlayerLogged[plo]) return SendClientMessage(playerid,COLOR_LIGHTRED,#Игрок не авторизован!);
					if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] == 1)
					{
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(PlayerInfo[playerid][pInt] > 0)
						{
							SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
							PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
							PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(plo,1);
							PlayerInfo[plo][pInt] = 1;
						}
						if(GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
						}
						else
						{
							SetPPos(plo,plocx,plocy+2, plocz);
						}
						SendClientMessage(plo, COLOR_WHITE, "Вы были телепортированы администратором сервера.");
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "Игрок не в сети!");
				SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/fuelcars", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				for(new c=0;c<CAR_AMOUNT;c++)
				{
					Gas[c] = GasMax;
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Автомобили сервера заправлены!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно прав для того, чтобы использовать эту команду!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/givegun", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Подсказка: /givegun [ID/Имя] [ID Оружия] [Кол-во патронов]");
				return 1;
			}
			new playa;
			new gun;
			new ammo;
			//new PyxiTime[MAX_PLAYERS];
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Подсказка: /givegun [ID/Имя] [id] [ammo]");
				SendClientMessage(playerid, COLOR_GRAD1, "1(кастет) 2(клюшка) 3(дубинка) 4(нож) 5(бита)");
				SendClientMessage(playerid, COLOR_GRAD1, "6(лопата) 7(кий) 8(катана) 9(пила) 10-13(фаллосы) 14(букет)");
				SendClientMessage(playerid, COLOR_GRAD1, "15(трость) 16(гранаты) 17(дым) 18(коктейль молотова)");
				SendClientMessage(playerid, COLOR_GRAD1, "22(кольт) 23(глушитель) 24(пустынный орел) 25(дробовик)");
				SendClientMessage(playerid, COLOR_GRAD1, "26(обрезы) 27(дробовик) 28(узи) 29(МР5)");
				SendClientMessage(playerid, COLOR_GRAD1, "30(АК47) 31(М16) 32(ТЕС9) 33(винтовка)");
				SendClientMessage(playerid, COLOR_GRAD1, "34(сн.винтовка) 35(базука) 36(базука с СР) 37(огнемет)");
				SendClientMessage(playerid, COLOR_GRAD1, "41(спрей) 42(огнетушитель) 43(фотокамера)");
				SendClientMessage(playerid, COLOR_GRAD1, "44(ПНВ) 45(ПТВ) 46(прашут)");
				return 1;
			}
			if(gun < 1||gun > 46||gun==19||gun==20||gun==21||gun==40)
			{ SendClientMessage(playerid, COLOR_GRAD1, "Неверный ID оружия"); return 1; }
			tmp = strtok(cmdtext, idx);
			ammo = strval(tmp);
			if(ammo <1||ammo > 9999)
			{ SendClientMessage(playerid, COLOR_GRAD1, "Кол-во патронов от 1 до 9999"); return 1; }
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						PyxiTime[playa] = 5;
						GiveWeapon(playa, gun, ammo);
						SetPVarInt(playa, "givegunsfromadm", 1);
						SendClientMessage(playerid, COLOR_RED, "Оружие было выдано игроку.");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет доступа к этой команде");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/setarmor", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /setarmor [playerid/PartOfName] [armor]");
				return 1;
			}
			new playa;
			new health;
			playa = strval(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						SetPlayerArmour(playa, health);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование этой команды!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/givedrugs", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /givedrugs [id] [кол-во наркотиков] ");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /givedrugs [id] [кол-во наркотиков]");
					return 1;
				}
				new playa;
				GetPlayerName(playa, sendername, sizeof(sendername));
				playa = ReturnUser(tmp);
				moneys = strval(tmp);
				PlayerInfo[giveplayerid][pDrugs] = moneys;
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "Администратор %s дал %s %d грамм наркотиков. ", sendername,giveplayer,moneys);
				ABroadCast(COLOR_YELLOW,string,1);
				format_string = "";
				new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
				format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

				mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','GiveDrugs For Player','%d','%s','%s')", NamePlayer[playerid], moneys, NamePlayer[giveplayerid], data);
				mysql_tquery(MySQLGo, format_string);
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/givemats", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /givemats [id игрока] [кол-во] ");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /givemats [id игрока] [кол-во] ");
					return 1;
				}
				new playa;
				GetPlayerName(playa, sendername, sizeof(sendername));
				playa = ReturnUser(tmp);
				moneys = strval(tmp);
				PlayerInfo[giveplayerid][pMats] = moneys;
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "Администратор: %s дал %s %d материалов. ", sendername,giveplayer,moneys);
				ABroadCast(COLOR_YELLOW,string,1);
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/update", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
			foreach(new i:Player)
			{
				SaveAccounts();
				SaveVehicle(i);
				SendClientMessage(playerid, COLOR_YELLOW, "Все аккаунты игроков были сохранены.");
				format_string = "";
				new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
				format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

				mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','SaveAll','0','None','%s')", NamePlayer[playerid], data);
				mysql_tquery(MySQLGo, format_string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/give", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /give [название] [id игрока] (кол-во) ");
				SendClientMessage(playerid, COLOR_WHITE, "Наименования: наркотики, верёвка, сигарета, пиво.");
				return 1;
			}
			//------------------------------------------------------------------------------
			if(strcmp(x_nr,"наркотики",true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /give наркотики [id игрока] [кол-во] ");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						new Float:x, Float:y, Float:z;
						GetPlayerPos(giveplayerid,x,y,z);
						if(!PlayerToPoint(5, playerid, x, y, z))
						{
							SendClientMessage(playerid, COLOR_GREY, " Этот игрок находится далеко от Вас! ");
							return 1;
						}
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /give наркотики [id игрока] [кол-во] ");
							return 1;
						}
						//------------------------------------------------------------------------------
						if(strval(tmp) < 0 || strval(tmp) > 999)			{
							SendClientMessage(playerid, COLOR_GREY, " Минимальное кол-во  0р, Максимальное 999 рублей.");
							return 1;			}
						//------------------------------------------------------------------------------
						new dammount;
						dammount = strval(tmp);
						if(dammount > PlayerInfo[playerid][pDrugs]) { SendClientMessage(playerid, COLOR_GREY, " У вас нет столько наркотиков "); return 1; }
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						PlayerInfo[playerid][pDrugs] -= dammount;
						PlayerInfo[giveplayerid][pDrugs] += dammount;
						if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s достал что-то и передал %s.", sendername, giveplayer); }
						else { format(string, sizeof(string), "* %s достала что-то и передала %s.", sendername, giveplayer); }
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, " Этого человека нет в игре ");
					return 1;
				}
			}
			else if(strcmp(x_nr, "сигарета", true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				new sigi = strval(tmp);
				if(Spectate[playerid] < 253){SendClientMessage(playerid, COLOR_GREY, " В режиме наблюдателя нельзя использовать эту команду !");return 1;}
				if(!strlen(tmp)){SendClientMessage(playerid, COLOR_GRAD1,   "Используйте: /give сигарета [id игрока] [количество]");return 1;}
				if(PlayerInfo[playerid][pSigs] < sigi){SendClientMessage(playerid, COLOR_GREY, " У вас нету столько Сигарет!");return 1;}
				if(sigi < 1 && sigi > 20){SendClientMessage(playerid, COLOR_GREY, " Нельзя передать меньше 1 и больше 20 сигарет!!");return 1;}
				new tmpsigi = 20 - PlayerInfo[giveplayerid][pSigs];
				if(sigi > tmpsigi){SendClientMessage(playerid, COLOR_GREY, " Он не может нести столько сигарет!");return 1;}
				PlayerInfo[playerid][pSigs] -= sigi;
				PlayerInfo[giveplayerid][pSigs] += sigi;

				new plname[32];
				new giveplname[32];
				GetPlayerName(playerid, plname, sizeof(plname));
				GetPlayerName(giveplayerid, giveplname, sizeof(giveplname));
				format(string, sizeof(string), "Вы %s дал сигарету %s.", plname, giveplname);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Вам %s дали сигарету %s.", plname, giveplname);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);

				format(string, sizeof(string), "* %s дал сигарету %s", plname, giveplname);
				ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			//--------------------------------------------------------------------------------
			else if(strcmp(x_nr, "пиво", true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				new banka = strval(tmp);
				if(Spectate[playerid] < 253){SendClientMessage(playerid, COLOR_GREY, " В режиме наблюдателя нельзя использовать эту команду !");return 1;}
				if(!strlen(tmp)){SendClientMessage(playerid, COLOR_GRAD1,   "Используйте: /give пиво [id игрока] [количество]");return 1;}
				if(PlayerInfo[playerid][pPivo] < banka){SendClientMessage(playerid, COLOR_GREY, " У вас нету столько пива!");return 1;}
				if(banka < 1 && banka > 4){SendClientMessage(playerid, COLOR_GREY, " Нельзя передать меньше 1 и больше 4 бутылок пива!");return 1;}
				new tmppivko = 4 - PlayerInfo[giveplayerid][pPivo];
				if(banka > tmppivko){SendClientMessage(playerid, COLOR_GREY, " Он не может нести столько бутылок пива!");return 1;}
				PlayerInfo[playerid][pPivo] -= banka;
				PlayerInfo[giveplayerid][pPivo] += banka;

				new plname[32];
				new giveplname[32];
				GetPlayerName(playerid, plname, sizeof(plname));
				GetPlayerName(giveplayerid, giveplname, sizeof(giveplname));

				format(string, sizeof(string), "Вы %s дали бутылку пива %s.", plname, giveplname);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Вам %s дал бутылку пива %s.", plname, giveplname);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);

				format(string, sizeof(string), "* %s дал %s бутылку пива", plname, giveplname);
				ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /give [название] [id игрока] [кол-во] ");
				SendClientMessage(playerid, COLOR_WHITE, "Наименования: наркотики, веревка, ключи.");
				return 1;
			}

		}
		return 1;
	}
	if(strcmp("/setnumber", cmdtext, true, 10) == 0) {
		new Float:x,Float:y,Float:z,Float:ang;
		GetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);
		GetVehicleZAngle(GetPlayerVehicleID(playerid),ang);
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,0xFFFFFFFF,"You're not in a vehicle!");
		ShowPlayerDialog(playerid,4321,DIALOG_STYLE_INPUT,"{EE7777}Vehicle Numberplate","{00CC66}Input your new vehicle numberplate below.","Yes","Cancel");
		return 1; }

	//==============================================================================
	if(strcmp(cmd, "/pol", true)==0)
	{
		tmp=strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /пол [мужской/женский]");
		if(strcmp(tmp, "мужской", true)==0)
		{
			PlayerInfo[playerid][pSex]=1;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, " Вы сменили свой пол на Мужской!");
			return 1;
		}
		if(strcmp(tmp, "женский", true)==0)
		{
			PlayerInfo[playerid][pSex]=2;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы сменили свой пол на Женский!");
			return 1;
		}
		return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /пол [мужской/женский]");
	}
	//==============================================================================
	if(strcmp(cmd, "/sethp", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sethp [id] [кол-во здоровья]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						ServerGivePlayerHealth(playa, health);
						format(string, sizeof(string), "Вы получили от администратора %s %d очков здоровья!", sendername, health);
						SendClientMessage(playa, COLOR_YELLOW, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sethunger", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid,-1,#Вам недоступна данная команда!);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sethunger [id] [0-100]");
		new playa;
		playa = ReturnUser(tmp);
		if(!IsPlayerConnected(playa)) return SendClientMessage(playerid,-1,"Игрок не найден!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sethunger [id] [0-100]");
		new sat = strval(tmp);			  
		PlayerInfo[playa][pSatiety] = sat;
		SetPlayerProgressBarValue(playa, pbar_sat, float(PlayerInfo[playa][pSatiety]));
		if(PlayerInfo[playa][pSatiety] >= 0 && PlayerInfo[playa][pSatiety] <= 7)
		{
			ApplyAnimation(playa,"CRACK","crckdeth1",4.1,1,1,1,1,1);				
			if(!GetPVarInt(playa,#P_Hung_Ob)) SendClientMessage(playa,COLOR_LIGHTRED,"Внимание! У вас случился голодный обморок! Вам требуется медицинская помощь.");
			SetPVarInt(playa,#P_Hung_Ob,1);
		}
		static const str0[] = "Вы установили %s уровень сытости %d";
		new str[sizeof(str0)+MAX_PLAYER_NAME+3];
		format(str,sizeof(str),str0,NamePlayer[playa],sat);
		SendClientMessage(playerid,-1,str);
		static const str1[] = "Администратор %s установил вам уровень сытости %d";
		new str2[sizeof(str1)+MAX_PLAYER_NAME+3];
		format(str2,sizeof(str2),str1,NamePlayer[playerid],sat);
		SendClientMessage(playa,-1,str2);
		return 1;
	}
	if(strcmp(cmd, "/heal", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pMember] == 19)
			{
				if(gpvi(@p,#P_Heal_Tick) > gettime()) return SCM(@p,COLOR_GREY,"Команду можно использовать раз в 3 минуты!");
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /heal [id] [цена от 1 до 1500]");
				new playa = ReturnUser(tmp);
				if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GRAD1, "Игрок не найден!");
				SetPVarInt(playa,#P_Heal_ID,@p);
				tmp = strtok(cmdtext, idx);
				new price = strval(tmp);
				if(price < 1 || price > 1500) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /heal [id] [цена от 1 до 1500]");
				glob_str = "";
				format(glob_str,sizeof(glob_str),"Вы предложили вылечиться %s за %d рублей",NamePlayer[playa],price);
				SCM(@p,-1,glob_str);
				SetPVarInt(playa,#P_Heal_Price,price);
				format(glob_str,sizeof(glob_str),"{ffffff}Вам предложил вылечиться сотрудник СМП %s за %d рублей.\nВы согласны?",NamePlayer[@p],price);
				SPD(playa,1246,DIALOG_STYLE_MSGBOX,"Лечение",glob_str,"Да","Нет");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Вы не врач/спасатель!");
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/veh", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Подсказка: /veh [carid] [color1] [color2]");
				new car = strval(tmp);
				if(car < 400 || car > 615) return SendClientMessage(playerid, COLOR_GREY, "От 400 до 601!");
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Подсказка: /veh [carid] [color1] [color2]");
				new color1 = strval(tmp);
				if(color1 < 0 || color1 > 300) return SendClientMessage(playerid, COLOR_GREY, "Цвет от 0 до 300!");
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Подсказка: /veh [carid] [color1] [color2]");
				new color2 = strval(tmp);
				if(color2 < 0 || color2 > 300) return SendClientMessage(playerid, COLOR_GREY, "Цвет от 0 до 300!");

				for(new c; c < sizeof CreatedCars; c++)
				{
					if(CreatedCars[c]) continue;
					new Float:X, Float:Y, Float:Z, Float:Angl;
					GetPlayerPos(playerid, X, Y, Z);
					GetPlayerFacingAngle(@p,Angl);
					//CreatedCars[c] = CreateVehicle(car, X+1, Y+1, Z, 0.0, color1, color2, 60000);
					CreatedCars[c] = CreateVehicle(car, X, Y, Z, Angl, color1, color2, 60000);
					SetVehicleVirtualWorld(CreatedCars[c],GetPlayerVirtualWorld(@p));
					LinkVehicleToInterior(CreatedCars[c], GetPlayerInterior(@p));
					PutPlayerInVeh(@p, CreatedCars[c] , 0);
					CarEngine[CreatedCars[c]] = 1;
					Fuel[CreatedCars[c]] = 60;
					GetVehicleParamsEx(CreatedCars[c],engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(CreatedCars[c],true,lights,alarm,doors,bonnet,boot,objective);
					format(string, sizeof(string), "Машина %d создана.", CreatedCars[c]);
					SendClientMessage(playerid, COLOR_GREY, string);
					SendClientMessage(playerid, -1, "Машины, созданные через /veh, удалять ТОЛЬКО с помощью команды /delveh.");
					format_string = "";
					new years, months, days, hours, minutes, seconds, data[128];
					getdate(years, months, days);
					gettime(hours, minutes, seconds);
					format(data, sizeof data, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

					mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','CreateVeh','%d','None','%s')", NamePlayer[playerid], car, data);
					mysql_tquery(MySQLGo, format_string);
					return 1;
				}
				return SendClientMessage(playerid, COLOR_GREY, "Невозможно создать кар, так как был превышен лимит.");
			}
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/delveh", true) ==0 )
	{
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(PlayerInfo[playerid][pAdmin] < 4) return 1;
		new vehicleid = GetPlayerVehicleID(playerid);
		for(new c; c < sizeof CreatedCars; c++)
		{
			if(CreatedCars[c] != vehicleid) continue;
			DestroyVehicle(vehicleid);
			format_string = "";
			new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
			format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

			mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Delete CreateVeh','0','None','%s')", NamePlayer[playerid], data);
			mysql_tquery(MySQLGo, format_string);
			return 1;
		}
		return SendClientMessage(playerid, COLOR_GREY, "Через команду /delveh можно удалить только транспорт, созданный командой /veh.");
	}
	//==============================================================================
	if(strcmp(cmd, "/fixveh", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "У вас нет прав на использование этой команды!");
				return 1;
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
				tmp = strtok(cmdtext, idx);
				new carid = strval(tmp);
				if(!strlen(tmp)) carid = GetPlayerVehicleID(playerid);
				tmp = strtok(cmdtext, idx);
				new Float:heal = floatstr(tmp);
				if(!strlen(tmp)) heal = 1000.0;
				SetVehicleHealth(carid, heal);
				RepairVehicle(carid);
				SendClientMessage(playerid, COLOR_GREY, "Транспорт был отремонтирован!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/fracgps", true) == 0)
	{
		switch(PlayerInfo[playerid][pMember])
		{
			case 1,3,4,6,19: SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы включили отображение всех своих коллег на GPS карте!"), FracColor(playerid);			
		}
		return 1;
	}
	if(strcmp(cmd, "/fracgpsoff", true) == 0)
	{
		switch(PlayerInfo[playerid][pMember])
		{
			case 1,3,4,6,19: SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы отключили отображение всех своих коллег на GPS карте!"), FracColorOff(playerid); // ГИБДД			
		}
		return 1;
	}
	if(strcmp(cmd, "/fracbank", true) == 0)
	{
		new lid = PlayerInfo[playerid][pLeader];
		if(!lid || lid > 21 || lid < 0) return SCM(@p,COLOR_GREY,"Вам недоступна данная команда");
		format(string, sizeof(string), "В казне вашей организации: %d рублей", FracBank[lid]), SendClientMessage(playerid, 0x6495EDFF, string);
		return 1;
	}
	if(strcmp(cmd, "/bankget", true) == 0)
	{
		if(!PlayerInfo[playerid][pLeader]) return SendClientMessage(playerid, -1, "Вы не лидер какой либо организации.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /bankget [сумма]");
		new summamoney = strval(tmp);
		if(summamoney < 1 || summamoney > 100000) return SendClientMessage(playerid, -1, "Значение не может быть 0 и больше 100.000 рублей.");
		if(FracBank[PlayerInfo[playerid][pLeader]] < summamoney) return SendClientMessage(playerid, -1, "В банке недостаточно денег.");
		PlayerInfo[playerid][pCash] += summamoney; GivePlayerMoney(playerid, summamoney);
		format(string, sizeof(string), "Вы сняли с банка фракции: %d рублей", summamoney), SendClientMessage(playerid, 0x6495EDFF, string);
		FracBank[PlayerInfo[playerid][pLeader]] -= summamoney;
		SaveBank();
		return 1;
	}
	if(strcmp(cmd, "/bankput", true) == 0)
	{
		if(!PlayerInfo[playerid][pLeader]) return SendClientMessage(playerid, -1, "Вы не лидер какой либо организации.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /bankput [сумма]");
		new summamoney = strval(tmp);
		if(summamoney < 1 || summamoney > 100000) return SendClientMessage(playerid, -1, "Значение не может быть 0 и больше 100.000 рублей.");
		if(PlayerInfo[playerid][pCash] < summamoney) return SendClientMessage(playerid, -1, "У вас недостаточно денег.");
		PlayerInfo[playerid][pCash] -= summamoney; GivePlayerMoney(playerid, -summamoney);
		format(string, sizeof(string), "Вы положили на счет организации: %d рублей", summamoney), SendClientMessage(playerid, 0x6495EDFF, string);
		FracBank[PlayerInfo[playerid][pLeader]] += summamoney;
		SaveBank();
		return 1;
	}
	if(strcmp(cmd, "/tcoplata", true) == 0)
	{
		new query[140];
		mysql_format(MySQLGo, query, 140, "SELECT `ID`,`MoneyPlayer` FROM `tickets` WHERE `NickName` = '%s'", NamePlayer[playerid]);
		mysql_tquery(MySQLGo, query, "oplatamoney", "d", playerid);
		return 1;
	}
	if(strcmp(cmd, "/flat", true) == 0)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5, -214.7046,2372.8638,-30.9847)) return ShowPlayerDialog(playerid, 8003, 2, "{96e300}Меню квартиры","{2E9AFE}1. {FFFFFF}Купить квартиру\n{2E9AFE}2. {FFFFFF}Продать квартиру\n{2E9AFE}3. {FFFFFF}Квартплата\n{2E9AFE}4. {FFFFFF}Дверной замок\n{2E9AFE}5. {FFFFFF}Информация","Выбор","Закрыть");
		return 1;
	}
	if(strcmp(cmd, "/tunecar", true) == 0)
	{
	    SendClientMessage(playerid,COLOR_RED,"Команда временно отключена администрацией.");
		/*if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
		{
			if(!PlayerToPoint(30.0,playerid,-475.1214,989.5999,12.1953)) return SendClientMessage(playerid,COLOR_GRAD2,"Вы не в автомастерской!");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /tunecar [id машины]");
			new vehid = strval(tmp);
            if(aData[vehid][aFrak] || aData[vehid][aJobs]) return SendClientMessage(playerid, COLOR_GRAD2, "Затюниговать можно только личный автомобиль!");
			if(!IsValidVehicle(vehid)) return SendClientMessage(playerid, COLOR_GRAD1, "Авто не существует!");
			new Float:x, Float:y, Float:z;
			GetVehiclePos(vehid,x,y,z);
			if(!PlayerToPoint(5, playerid, x, y, z)) return SendClientMessage(playerid,COLOR_GRAD2,"Вы должны быть рядом с автомобилем!");
			SetPVarInt(playerid,#P_TuneCar_ID,vehid);
			TuneDialog(playerid);
			return 1;
		}
		else return SendClientMessage(playerid,COLOR_GRAD1,#Доступно только сотрудникам СТО);*/
	}
	if(strcmp(cmd, "/paintjob", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не администратор!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /paintjob [id машины] [Номер работы 1 - 2 - 3]");
			SendClientMessage(playerid, COLOR_GRAD1, "Допускается использование работ 0 - 4 - 5");
			return 1;
		}
		new vehid = strval(tmp);
		if(!IsValidVehicle(vehid)) return SendClientMessage(playerid, COLOR_GRAD1, "Автомобиля не существует!");
		tmp = strtok(cmdtext, idx);
		new jobs = strval(tmp);
		if(0 < jobs > 5) return SendClientMessage(playerid, COLOR_GRAD1, "Допускается использование работ 0 - 1 - 2 - 3 - 4 - 5");
		ChangeVehiclePaintjob(vehid,jobs);
		new id_car = GetVehicleIdxByID(vehid);
		if(id_car != -1)
		{
			aData[id_car][aPj] = jobs;
			SaveVehicle(id_car);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/musstart", true) == 0)
	{
		if(GetPVarInt(playerid,#Mus_Job) == 0) return SendClientMessage(playerid, COLOR_GREY,"Для начала нужно устроить на работу водителем мусоровоза!");
		if(GetPVarInt(playerid,#Mus_Start) == 1) return SendClientMessage(playerid, COLOR_GREY,"Рабочий день уже начат!");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY,"Вы должны быть в автомобиле!");
		new newcar = GetPlayerVehicleID(playerid);
		new id_car = GetVehicleIdxByID(newcar);
		if(id_car != -1 && aData[id_car][aJobs] == 22)
		{
			new p = random(10);
			while(p == GetPVarInt(playerid,#Mus_Idx))
			{
				p = random(10);
			}
			SetPVarInt(playerid,#Mus_Idx,p);
			SetPVarInt(playerid,#Mus_Count,0);
			SetPVarInt(playerid,#Mus_Start,1);
			SendClientMessage(playerid,COLOR_GREEN,"Рабочий день начат, отправляйтесь собирать мусор по чекпоинтам (они отмечены красным на вашей мини-карте).");
			SetPlayerCheckpoint(playerid,mus_pos[p][0],mus_pos[p][1],mus_pos[p][2],7.0);
			SetPVarInt(playerid,#Mus_Car,newcar);
		}
		else return SendClientMessage(playerid, COLOR_GREY,"Вы должны быть в мусоровозе!");
		return 1;
	}
	if(strcmp(cmd, "/storepair", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
		{
			if(!PlayerToPoint(30.0,playerid,-475.1214,989.5999,12.1953)) return SendClientMessage(playerid,COLOR_GRAD2,"Вы не в автомастерской!");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_GRAD2,"Используй: /storepair [ID авто]");
			new trailer = strval(tmp);
			if(!IsValidVehicle(trailer)) return SendClientMessage(playerid, COLOR_GRAD1, "Автомобиль не существует!");
			SetVehicleHealth(trailer, 1000.0);
			RepairVehicle(trailer);
			SendClientMessage(playerid, COLOR_GREY,#Вы отремонтировали автомобиль);
			static const dlg_str[] = "Механик {D0800E}%s{ffffff} починил ваш автомобиль.";
			new str[sizeof(dlg_str)+24];
			format(str,sizeof(str),dlg_str,NamePlayer[playerid]);
			foreach(new i:Player)
			{
				if(IsPlayerInVehicle(i,trailer))
				{
					if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
					{
						SendClientMessage(i,-1,str);
						break;
					}
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY,"Вам недоступна данная команда!");
		return 1;
	}
	if(strcmp(cmd, "/stochcolor", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
		{
			if(!PlayerToPoint(7.0,playerid,-517.6740,977.2807,12.2003)) return SendClientMessage(playerid,COLOR_GRAD2,"Вы не в боксе для покраски!");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /stochcolor [ID авто] [0-255] [0-255]");
			new trailer = strval(tmp);
			if(!IsValidVehicle(trailer)) return SendClientMessage(playerid, COLOR_GRAD1, "Автомобиль не существует!");
			tmp = strtok(cmdtext, idx);
			new para1, para2;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para2 = strval(tmp);
			if(para1 < 0 || para1 > 255 && para2 < 0 || para2 > 255) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /stochcolor [ID авто] [0-255] [0-255]");
			ChangeVehicleColor(trailer ,para1, para2);
			new id_car = GetVehicleIdxByID(trailer);
			if(aData[id_car][aOwned] > 0)
			{
				aData[id_car][aColor1] = para1;
				aData[id_car][aColor2] = para2;
				SaveVehicle(id_car);
			}
			SendClientMessage(playerid, COLOR_GREY, #Вы изменили цвет автомобиля);
			static const dlg_str[] = "Механик {D0800E}%s{ffffff} изменил цвет вашего автомобиля.";
			new str[sizeof(dlg_str)+24];
			format(str, sizeof(str), dlg_str, NamePlayer[playerid]);
			foreach(new i:Player)
			{
				if(IsPlayerInVehicle(i, trailer))
				{
					if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
					{
						SendClientMessage(i, -1, str);
						break;
					}
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY,"Вам недоступна данная команда!");
		return 1;
	}
	//==============================================================================
	if(!strcmp(cmd, "/jailcar", true))
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) SendClientMessage(playerid, COLOR_GRAD2, "Используй: /jailcar [ID авто]");
		new trailer = strval(tmp);
		if(!PlayerToPoint(50.0, playerid, -94.0509,315.2636,12.0953)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не на штрафстоянке.");
		SetPVarInt(playerid, "shtraf1", trailer);
		if(GetCop(playerid) == 0) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не сотрудник службы эвакуации.");
		new id_car = GetVehicleIdxByID(trailer);
		if(id_car == -1) return SendClientMessage(playerid, COLOR_GRAD2, "На штраф стоянку можно ставить только личный транспорт."); 
		if(aData[id_car][aArrest] == 1) return SendClientMessage(playerid, COLOR_GRAD2, "Транспорт уже находится на штрафстоянке.");
		return ShowPlayerDialog(playerid, 2314, 1, "Арест автомобиля", "Введите причину ареста автомобиля:", "Ввод", "Отмена");
	}
	if(!strcmp(cmd, "/freecar", true))
	{
		if(GetCop(playerid) == 0) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не сотрудник службы эвакуации.");
		tmp = strtok(cmdtext, idx);
		new newcar = strval(tmp);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используй: /freecar [ID авто]");
		if(!PlayerToPoint(50.0, playerid, -94.0509,315.2636,12.0953)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не на штрафстоянке.");
		new id_car = GetVehicleIdxByID(newcar);
		if(id_car == -1) return SendClientMessage(playerid, COLOR_GRAD2, "Транспорт не закреплен на штрафстоянке.");
		if(aData[id_car][aArrest] == 0) return SendClientMessage(playerid, COLOR_GRAD2, "Транспорт не закреплен на штрафстоянке.");
		new str[256];
		format(str,sizeof(str),"Автомобиль игрока: %s\nПричина ареста: %s\nАрестовал: %s\nНомер автомобиля: %s", aData[id_car][aOwner], aData[id_car][aPArrest], aData[id_car][aPArrestName], aData[id_car][aNumber]);
		ShowPlayerDialog(playerid,2315,0,"Транспорт арестован",str,"Снять","Выйти");
		SetPVarInt(playerid, "shtraf", newcar);
		return 1;
	}
	if(strcmp(cmd, "/setweather", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 3)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Используйте: /setweather [weatherid]");
				return 1;
			}
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "ID погоды от 0 до 45!"); return 1; }
			SetWeather(weather);
			SendClientMessage(playerid, COLOR_GREY, "Вы сменили погоду!");
			format_string = "";
			new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
			format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

			mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Set Weather All','%d','None','%s')", NamePlayer[playerid], weather, data);
			mysql_tquery(MySQLGo, format_string);
		}
		return 1;
	}
	if(strcmp(cmd, "/money", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /money [id] [сумма]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] < 5) return 1;
			ResetPlayerMoney(playa);
			ConsumingMoney[playa] = 1;
			GivePlayerMoney(playa, money);
			PlayerInfo[playa][pCash]=money;
			format_string = "";
			new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
			format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

			mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','GiveMoney For Player','%d','%s','%s')", NamePlayer[playerid], money, NamePlayer[playa], data);
			mysql_tquery(MySQLGo, format_string);
		}
		return 1;
	}
	if(strcmp(cmd, "/slap", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /slap [id игрока]");
				return 1;
			}
			format(string, sizeof(string), "SL¦AP‹ED");
			new playa;
			new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] == 1)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerHealth(playa, shealth);
						ServerGivePlayerHealth(playa, shealth-5);
						GetPlayerPos(playa, slx, sly, slz);
						SetPPos(playa, slx, sly, slz+5);
						PlayerPlaySound(playa, 1130, slx, sly, slz+5);
						printf("%s slapped %s",sendername,  giveplayer);
						format(string, sizeof(string), "Администратор/помощник по игре %s дал пинка игроку %s",sendername,giveplayer);
						ABroadCast(COLOR_RED,string,1);
						GameTextForPlayer(playerid, "~w~SLAPPED", 5000, 1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/mute", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /mute [id игрока] [время] [причина]");
				return 1;
			}
			new playa,money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] == 1)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						new length = strlen(cmdtext);
						while((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /mute [id игрока] [время] [причина]");
							return 1;
						}
						if(money < 1 || money > 99999)
						{
							SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 минуты или больше 99999 минут.");
							return 1;
						}
						format(string, sizeof(string), "Возможность писать в чат отключена администратором/помощником по игре %s на %d минут. Причина: %s", NamePlayer[@p], money, (result));
						SendClientMessage(playa, COLOR_RED, string);
						ResetWeapons(playa);
						WantedPoints[playa] = 0;
						PlayerInfo[playa][pMuted] = 1;
						PlayerInfo[playa][pMutedTime] = money*60;
						format(string, sizeof(string), "%s был заблокирован в чате администратором/помощником по игре %s на %d минут. Причина: %s ",NamePlayer[playa],NamePlayer[@p], money, (result));
						SendClientMessageToAll(COLOR_RED, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/unmute", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /unmute [id игрока]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] == 1)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[playa][pMuted] == 1)
						{
							PlayerInfo[playa][pMutedTime] =0;
							PlayerInfo[playa][pMuted] = 0;
							printf("AdmCmd: %s silenced %s",sendername,  giveplayer);
							format(string, sizeof(string), "%s был разглушен администратором/помощником по игре %s.",PlayerInfo[playa][pNickname],PlayerInfo[playerid][pNickname]);
							SendClientMessageToAll(COLOR_RED,string);
						}
						else {SendClientMessage(playerid, COLOR_GREY, "Этот игрок не заглушен!");return 1;}
					}
					else {SendClientMessage(playerid, COLOR_GREY, "Неправильный ID!");return 1;}
				}
				else {SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети!");return 1;}
			}
			else {SendClientMessage(playerid, COLOR_GREY, "Ваш уровень слишком низок!");return 1;}
		}
		else {SendClientMessage(playerid, COLOR_GREY, "Вы ещё не вошли в игру!");return 1;}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/kick", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!(PlayerInfo[playerid][pAdmin] || PlayerInfo[playerid][pHelper])) return SCM(@p,COLOR_GREY,"Вам недоступна данная команда");
			new result[64];
			if(sscanf(params,"ds[64]",giveplayerid,result)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /kick [id игрока/часть ника] [причина]");			
			if(!IsPlayerConnected(giveplayerid)) return SCM(@p,COLOR_GREY,"Игрок не в сети!");
			new year, month,day;
			getdate(year, month, day);
			format(string, sizeof(string), "%s кикнут администратором/помощником по игре %s. Причина: %s", NamePlayer[giveplayerid], NamePlayer[@p], result);
			SendClientMessageToAll(COLOR_RED,string);						
			KickEx(giveplayerid);
			format_string = "";
			new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
			format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

			mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Kick For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
			mysql_tquery(MySQLGo, format_string);
			return 1;
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/skick", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /skick [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						//------------------------------------------------------------------------------
						if(PlayerInfo[giveplayerid][pAdmin] >= 1)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не можете кикнуть администратора!");
							return 1;
						}
						//------------------------------------------------------------------------------
						format(string, sizeof(string), "[A]: %s был отсоединен от сервера невидимо администратором %s.", giveplayer, sendername);
						ABroadCast(COLOR_YELLOW,string,1);
						SaveAccounts();//Сохранение акков
						KickEx(giveplayerid);
						format_string = "";
						new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
						format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

						mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Shout Kick For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
						mysql_tquery(MySQLGo, format_string);
					}
				}
			}
			else
			{
				format(string, sizeof(string), "%d не в сети.", giveplayerid);
				SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/warn", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /warn [id] [причина]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						//------------------------------------------------------------------------------
						if(PlayerInfo[giveplayerid][pAdmin] >= 3)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не можете выдать предупреждние администратору высокого уровня!");
							return 1;
						}
						//------------------------------------------------------------------------------
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /warn [id] [причина]");
							return 1;
						}
						new banstring[100];
						PlayerInfo[giveplayerid][pWarns] += 1;
						if(PlayerInfo[giveplayerid][pWarns] >= 3)
						{
							new year, month,day;
							getdate(year, month, day);
							format(string, sizeof(string), "%s заблокирован администратором %s. (%s | 3/3)", NamePlayer[giveplayerid], NamePlayer[playerid], result);
							SendClientMessageToAll(COLOR_RED,string);
							PlayerInfo[giveplayerid][pWarns] = 0;
							format(string, sizeof(string),"Вы были заблокированы администратором %s (3/3 предупреждений) на 5 дней за: %s", NamePlayer[playerid], result);
							SendClientMessage(giveplayerid, COLOR_RED, string);
							// banned
							ban_variable[giveplayerid][bUnban_Date] = gettime() + 5*86400; // На 5 дней
							ban_variable[giveplayerid][bBan_Date] = gettime()-366;

							new querys[512];
							mysql_format(MySQLGo, querys, 512, "INSERT INTO `banlist` (`ban_name`, `admin_name_ban`, `reason`, `unbane_date`, `ban_date`) VALUES ('%s', '%s', '%s', '%i', '%i')", NamePlayer[giveplayerid], NamePlayer[playerid], (result), ban_variable[giveplayerid][bUnban_Date], ban_variable[giveplayerid][bBan_Date]);
							mysql_tquery(MySQLGo, querys);

							format_string = "";
							new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
							format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

							mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Ban (3/3Warn) For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
							mysql_tquery(MySQLGo, format_string);
							KickEx(giveplayerid);
							return 1;
						}
						format(string, sizeof(string), "%s получил предупреждение от администратора %s (%s | %d/3)",NamePlayer[giveplayerid],NamePlayer[playerid],result,PlayerInfo[giveplayerid][pWarns]);
						SendClientMessageToAll(COLOR_RED,string);
						format(banstring, sizeof(banstring), "Вы получили предупреждение от администратора %s. Причина: %s", sendername, (result));
						SendClientMessage(giveplayerid, COLOR_YELLOW, banstring);
						format_string = "";
						new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
						format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

						mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Warn For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
						mysql_tquery(MySQLGo, format_string);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "Игрок не в сети!");
				SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/unwarn", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /unwarn [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[giveplayerid][pWarns] <= 0)
						{
							SendClientMessage(playerid,COLOR_GREY,"У игрока отсутствуют предупреждения.");
							return 1;
						}
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[giveplayerid][pWarns] = PlayerInfo[giveplayerid][pWarns] - 1;
						format(string, sizeof(string), "Вы сняли предупреждение с игрока %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Админинстратор %s снял с вас предупреждение. У вас осталось %d предупреждений.", sendername,PlayerInfo[playerid][pWarns]);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format_string = "";
						new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
						format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

						mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Unwarn For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
						mysql_tquery(MySQLGo, format_string);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "%d не в сети.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/unwarns", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 3) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Введите: /unwarns [ник]");
		new query[128];
		mysql_format(MySQLGo, query, sizeof(query), "SELECT `id` FROM `accounts` WHERE `pNickname` = '%s'", tmp);
		mysql_tquery(MySQLGo, query, "unwarnplayer", "ds",playerid, tmp);
		return true;
	}
	if(strcmp(cmd, "/delflat", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 5) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Введите: /delflat [ID квартиры]");

		//
		new idflat = strval(tmp);
		FlatInfo[idflat][pXpic] = 0;
		FlatInfo[idflat][pYpic] = 0;
		FlatInfo[idflat][pZpic] = 0;
		FlatInfo[idflat][kworld] = 0;
		DestroyDynamic3DTextLabel(FlatInfo[idflat][dtextss]);

		//
		format_string = "";
		mysql_format(MySQLGo, format_string, 70, "DELETE FROM `flat` WHERE `kid` = '%i'", idflat);
		mysql_function_query(MySQLGo, format_string, false, "", "");
		return 1;
	}
	if(strcmp(cmd, "/addflat", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 5) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		if(ALLKVARTIRI >= (MAX_KVART - 1)) return SendClientMessage(playerid, COLOR_GRAD1, "Создано маскимальное кол-во квартир.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addflat [Сумма] [Уровень]");
		new money = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /addflat [Сумма] [Уровень]");
		new level = strval(tmp);
		new Float:x, Float:y, Float:z ,YCMDstr[256]; GetPlayerPos(playerid, x, y, z);
		ALLKVARTIRI++;
		FlatInfo[ALLKVARTIRI][pXpic] = x;
		FlatInfo[ALLKVARTIRI][kid] = ALLKVARTIRI;
		FlatInfo[ALLKVARTIRI][pYpic] = y;
		FlatInfo[ALLKVARTIRI][pZpic] = z;
		FlatInfo[ALLKVARTIRI][lvl] = level;
		FlatInfo[ALLKVARTIRI][cena] = money;
		strmid(FlatInfo[ALLKVARTIRI][vladelec], "None", 0, 5, 5);
		FlatInfo[ALLKVARTIRI][lock] = 0;
		FlatInfo[ALLKVARTIRI][plata] = 0;
		FlatInfo[ALLKVARTIRI][kworld] = GetPlayerVirtualWorld(playerid);
		FlatInfo[ALLKVARTIRI][virtmir] = GetPlayerVirtualWorld(playerid);
		format(YCMDstr, 256 ,"{2E9AFE}[Квартира №%i]\n Выставлена на продажу!\n{2E9AFE}Стоимость: {FFFFFF}%iр\n{bbbbbb}Чтобы войти нажмите клавишу {96e300}L.ALT",ALLKVARTIRI, FlatInfo[ALLKVARTIRI][cena]);
		FlatInfo[ALLKVARTIRI][dtextss] = CreateDynamic3DTextLabel(YCMDstr,-1, x,y,z+1, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,FlatInfo[ALLKVARTIRI][kworld] , -1, -1, 100.0);
		new query[700];
		format(query,sizeof(query),"INSERT INTO `flat` (`kid`,`pXpic`,`pYpic`,`pZpic`,`vladelec`,`lock`,`plata`,`virtmir`,`kworld`,`cena`,`lvl`) VALUES ('%i','%f','%f','%f','None','0','0','%d','%d','%d','%d')",ALLKVARTIRI,x,y,z,GetPlayerVirtualWorld(playerid),GetPlayerVirtualWorld(playerid),money,level);
		mysql_tquery(MySQLGo, query);
		SFCM(playerid, -1, "Квартира №%i успешно создана.", ALLKVARTIRI);
		return 1;
	}
	if(strcmp(cmd, "/offuninvite", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 3) return  SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав для использования команды.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Введите: /offuninvite [ник]");
		new query[128];
		mysql_format(MySQLGo, query, sizeof(query), "SELECT `id` FROM `accounts` WHERE `pNickname` = '%s'", tmp);
		mysql_tquery(MySQLGo, query, "offuninvite", "ds", playerid, tmp);
		return true;
	}
	if(strcmp(cmd,"/light",true)==0)
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(IsPlayerInAnyVehicle(playerid)&&(GetPlayerState(playerid)==PLAYER_STATE_DRIVER))
		{
			if(LightPwr[vehicle] == 0)
			{
				GetVehicleParamsEx(vehicle,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(vehicle,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
				LightPwr[vehicle] = 1;
			}
			else if(LightPwr[vehicle] == 1)
			{
				GetVehicleParamsEx(vehicle,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(vehicle,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
				LightPwr[vehicle] = 0;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/konvoi", true) == 0)
	{
		new frak;
		if(PlayerInfo[playerid][pLeader] > 0) frak = PlayerInfo[playerid][pLeader];
		else frak = PlayerInfo[playerid][pMember];
		tmp = strtok(cmdtext, idx);
		switch(frak)
		{
		case 1,6:
			{
				goto cmd_konv;
			}
		default: return SendClientMessage(playerid,COLOR_GRAD1,#Вам недоступна данная команда);
		}
		cmd_konv:
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /konvoi [ID игрока]");
		giveplayerid = strval(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid,-1,#Неверный ID!);
		if(playerid == giveplayerid) return SendClientMessage(playerid,-1,#Неверный ID!);
		if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid,-1,#Игрок далеко от вас!);
		if(GetPVarInt(playerid,#P_Konvoiren) && GetPVarInt(playerid,#P_Konv_ID) != giveplayerid) return SendClientMessage(playerid,-1,#Можно конвоировать только одного игрока!);
		if(GetPVarInt(giveplayerid,#P_Konvoiren)) return SendClientMessage(playerid,-1,#Этот игрок уже под конвоем!);
		if(GetPVarInt(playerid,#P_Konvoir) && GetPVarInt(playerid,#P_Konv_ID) == giveplayerid)
		{
			DeletePVar(playerid,#P_Konvoir);
			DeletePVar(giveplayerid,#P_Konvoiren);
			DeletePVar(playerid,#P_Konv_ID);
			DeletePVar(giveplayerid,#P_Konv_ID);
			KillTimer(GetPVarInt(giveplayerid,#P_Konv_Tim));
			TogglePlayerControllable(giveplayerid,1);
			static const str0[] = "Вы освободили игрока {D0800E}%s {ffffff}из под стражи";
			new str[sizeof(str0)+MAX_PLAYER_NAME];
			format(str,sizeof(str),str0,NamePlayer[giveplayerid]);
			SendClientMessage(playerid,-1,str);
			static const str1[] = "Вас освободил {D0800E}%s {ffffff}из под стражи";
			format(str,sizeof(str),str1,NamePlayer[playerid]);
			SendClientMessage(giveplayerid,-1,str);
			#pragma unused str
			#pragma unused str0
			#pragma unused str1
			return 1;
		}
		SetPVarInt(playerid,#P_Konvoir,1);
		SetPVarInt(giveplayerid,#P_Konvoiren,1);
		SetPVarInt(playerid,#P_Konv_ID,giveplayerid);
		SetPVarInt(giveplayerid,#P_Konv_ID,playerid);
		new tim = SetTimerEx("@Konvoi", 1000, 1, "i", giveplayerid);
		SetPVarInt(giveplayerid,#P_Konv_Tim,tim);
		static const str0[] = "Вы взяли игрока {D0800E}%s {ffffff}под стражу";
		new str[sizeof(str0)+MAX_PLAYER_NAME];
		format(str,sizeof(str),str0,NamePlayer[giveplayerid]);
		SendClientMessage(playerid,-1,str);
		static const str1[] = "Вас взял {D0800E}%s {ffffff}под стражу";
		format(str,sizeof(str),str1,NamePlayer[playerid]);
		SendClientMessage(giveplayerid,-1,str);
		return 1;		
	}
	if(strcmp(cmd, "/unkonvoi", true) == 0)
	{
		new frak;
		if(PlayerInfo[playerid][pLeader] > 0) frak = PlayerInfo[playerid][pLeader];
		else frak = PlayerInfo[playerid][pMember];
		tmp = strtok(cmdtext, idx);
		switch(frak)
		{
		case 1,6:
			{
				goto cmd_unkonv;
			}
		default: return SendClientMessage(playerid,COLOR_GRAD1,#Вам недоступна данная команда);
		}
		cmd_unkonv:
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /unkonvoi [ID игрока]");
		giveplayerid = strval(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid,-1,#Неверный ID!);
		if(playerid == giveplayerid) return SendClientMessage(playerid,-1,#Неверный ID!);
		if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid,-1,#Игрок далеко от вас!);
		if(!GetPVarInt(giveplayerid,#P_Konvoiren)) return SendClientMessage(playerid,-1,#Этот игрок не под конвоем!);
		new p = GetPVarInt(giveplayerid,#P_Konv_ID);
		DeletePVar(p,#P_Konvoir);
		DeletePVar(giveplayerid,#P_Konvoiren);
		DeletePVar(p,#P_Konv_ID);
		DeletePVar(giveplayerid,#P_Konv_ID);
		KillTimer(GetPVarInt(giveplayerid,#P_Konv_Tim));
		TogglePlayerControllable(giveplayerid,1);
		static const str0[] = "Вы освободили игрока {D0800E}%s {ffffff}из под стражи";
		new str[sizeof(str0)+MAX_PLAYER_NAME];
		format(str,sizeof(str),str0,NamePlayer[giveplayerid]);
		SendClientMessage(playerid,-1,str);
		static const str1[] = "Вас освободил {D0800E}%s {ffffff}из под стражи";
		format(str,sizeof(str),str1,NamePlayer[playerid]);
		SendClientMessage(giveplayerid,-1,str);
		return 1;
	}
	if(strcmp(cmd, "/ban", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /ban [ID игрока] [срок бана(в днях)] [причина]");
		giveplayerid = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /ban [ID игрока] [срок бана(в днях)] [причина]");
		new chislo = strval(tmp);
		if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не администратор.");
		if(PlayerInfo[giveplayerid][pAdmin] >= 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете забанить администратора!");
		new length = strlen(cmdtext);
		while((idx < length) && (cmdtext[idx] <= ' ')) idx++;
		new offset = idx;
		new result[128];
		while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		ban_variable[giveplayerid][bUnban_Date] = gettime() + chislo*86400;
		ban_variable[giveplayerid][bBan_Date] = gettime()-366;

		new querys[512];
		mysql_format(MySQLGo, querys, 512, "INSERT INTO `banlist` (`ban_name`, `admin_name_ban`, `reason`, `unbane_date`, `ban_date`) VALUES ('%s', '%s', '%s', '%i', '%i')", NamePlayer[giveplayerid], NamePlayer[playerid], (result), ban_variable[giveplayerid][bUnban_Date], ban_variable[giveplayerid][bBan_Date]);
		mysql_tquery(MySQLGo, querys);
		
		format_string = "";
		new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
		format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

		new strings[246];
		format(strings, sizeof(strings), "%s заблокирован администратором %s. (%d дней | %s)", NamePlayer[giveplayerid], NamePlayer[playerid], chislo, result);
		SendClientMessageToAll(COLOR_RED,strings);
		format(string,sizeof(strings),"Вы были заблокированы администратором %s на %d дней за: %s", NamePlayer[playerid], chislo, result);
		SendClientMessage(giveplayerid,COLOR_RED,strings);
		mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Ban For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
		mysql_tquery(MySQLGo, format_string);
		KickEx(giveplayerid);
	}
	if(strcmp(cmd, "/sban", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sban [id] [причина]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						//------------------------------------------------------------------------------
						if(PlayerInfo[giveplayerid][pAdmin] >= 4)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не можете забанить администратора!");
							return 1;
						}
						//------------------------------------------------------------------------------
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /sban [id] [причина]");
							return 1;
						}
						new year, month,day;
						getdate(year, month, day);
						format(string, sizeof(string), "%s был забанен администратором %s, причина: %s (%d-%d-%d)", giveplayer, sendername, (result),month,day,year);
						format(string, sizeof(string), "%s забанен невидимо администратором %s", giveplayer, sendername);
						ABroadCast(COLOR_RED,string,1);
						format_string = "";
						new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
						format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

						mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Shout Ban For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
						mysql_tquery(MySQLGo, format_string);

						Ban(giveplayerid);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "%d такого игрока нету.", giveplayerid);
				SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/sb", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Вы не находитесь в машине");
				return 1;
			}
			if(GetPVarInt(playerid,"Seatbelt") == 1)
			{
				SetPVarInt(playerid,"Seatbelt",0);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new sbelt[100];
				format(sbelt, sizeof(sbelt), "* %s отстегнул ремень безопасности.", sendername);
				SendClientMessage(playerid, COLOR_YELLOW, "Вы отстегнули ремень безопасности.");
				ProxDetector(15.0, playerid, sbelt, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				return 1;
			}
			if(GetPVarInt(playerid,"Seatbelt") == 0)
			{
				SetPVarInt(playerid,"Seatbelt",1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new sbelt[100];
				format(sbelt, sizeof(sbelt), "* %s пристегнул ремень безопасности.", sendername);
				SendClientMessage(playerid, COLOR_YELLOW, "Вы пристегнули ремень безопасности.");
				ProxDetector(15.0, playerid, sbelt, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/csb", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			giveplayerid = ReturnUser(tmp);
			new romavend[100];
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1,"Подсказка: /csb [id]");
				return 1;
			}
			if(GetPlayerState(giveplayerid) == PLAYER_STATE_ONFOOT)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Игрок не в автомобиле");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			if(GetPVarInt(giveplayerid,"Seatbelt") == 1)
			{
				format(romavend, sizeof(romavend), "Игрок %s {33AA33}пристегнут", giveplayer);
				SendClientMessage(playerid, COLOR_YELLOW, romavend);
			}
			if(GetPVarInt(giveplayerid,"Seatbelt") == 0)
			{
				format(romavend, sizeof(romavend),"Игрок %s {FF0000}не пристегнут", giveplayer);
				SendClientMessage(playerid, COLOR_YELLOW, romavend);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/banip", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new hour,minuite,second;
			gettime(hour,minuite,second);
			FixHour(hour);
			hour = shifthour;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /ban [ID игрока/ЧастьИмени] [причина]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[giveplayerid][pAdmin] >= 2)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не можете забанить администратора высокого уровня!");
				return 1;
			}
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /ban [ID игрока/ЧастьИмени] [причина]");
							return 1;
						}
						new year, month,day;
						getdate(year, month, day);
						new PlayerNick[MAX_PLAYER_NAME], PlayerBan[MAX_PLAYER_NAME];
						GetPlayerName(playerid, PlayerNick, MAX_PLAYER_NAME);
						GetPlayerName(giveplayerid, PlayerBan, MAX_PLAYER_NAME);
						new playersip[256];
						GetPlayerIp( giveplayerid,playersip,sizeof(playersip));
						format(string, sizeof(string), "Игрок %s был заблокирован администратором %s по IP. Причина: %s", giveplayer, sendername, (result));
						SendAdmHelpMessage(COLOR_RED,string);
						format(string, sizeof(string), "Последний IP адрес игрока: %s", giveplayer, playersip);
						SendAdminMessage(COLOR_RED, string);
						format_string = "";
						new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
						format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

						mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','BanIP For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
						mysql_tquery(MySQLGo, format_string);
						AddBan1(giveplayerid, PlayerBan, PlayerNick, 999999999999, result);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "Игрок не в сети!");
				SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/deleteakk", true)==0)
	{
		if((IsPlayerAdmin(playerid)) || PlayerInfo[playerid][pAdmin] == 4)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /deleteakk [ник игрока]");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, 256, "Администратор: %s удалил игровой аккаунт '%s'", sendername,tmp);
			ABroadCast(COLOR_LIGHTRED,string,1);
			mysql_format(MySQLGo, format_string, 70, "DELETE FROM `accounts` WHERE `pNickname` = '%s'", tmp);
			mysql_function_query(MySQLGo, format_string, false, "", "");
			format_string = "";
			new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
			format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

			mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','DeleteAkk For Player','0','%s','%s')", NamePlayer[playerid], tmp, data);
			mysql_tquery(MySQLGo, format_string);
		}
		return 1;
	}
	//==========================================Check===============================
	if(strcmp(cmd, "/checkw2", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "You are not authorized");
			return 1;
		}
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /checkweapons [id]");
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if(giveplayerid == INVALID_PLAYER_ID)
		{
			SendClientMessage(playerid, COLOR_GREY, " Игрока нет на сервере");
			return 1;
		}
		new sweapon, sammo;
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		format(string, sizeof(string), " %s имеет следующее оружие:", giveplayer);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		for (new i=0; i<9; i++)
		{
			GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
			if(sweapon != 0)
			{
				format(string, sizeof(string), " %d: id оружия: %d [кол-во патрон: %d]", i, sweapon, sammo);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	//========================[Проверка оружия у игрока]============================
	if(strcmp(cmd,"/checkw",true)==0)//
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Используйте: /checkweapons [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new weap[13];
					new ammotup;
					new vstringa[13][64];
					new weapname[47][32] =
					{
						"Кулаки,",
						"Кастет,",
						"Клюшка для гольфа,",
						"Резиновая дубинка,",
						"Складной нож,",
						"Бейсбольная бита,",
						"Лопата,",
						"Кий,",
						"Katana,",
						"Бензопила,",
						"Purple Dildo,",
						"Small White Vibrator,",
						"Large White Vibrator,",
						"Silver Vibrator,",
						"Цветы,",
						"Трость,",
						"Граната(ы),",
						"Tear Gas,",
						"Molotov Cocktail,",
						"Vehicle Missile,",
						"Hydra Flare,",
						"Jetpack,",
						"Пистолет,",
						"Пистолет с глушителем,",
						"Пистолет 'Макарова',",
						"Двухствольное ружье,",
						"Sawnoff Shotgun,",
						"Combat Shotgun,",
						"Micro SMG (Uzi),",
						"Автомат АКС-74У,",
						"Автомат АК-47,",
						"Автомат АЕК 973-s,",
						"Tec9,",
						"Country Rifle,",
						"Снайперская винтовка,",
						"Rocket Launcher,",
						"HS Rocket Launcher,",
						"Flamethrower,",
						"Minigun,",
						"Satchel Charge,",
						"Detonator,",
						"Spraycan,",
						"Fire Extinguisher,",
						"Фотоаппарат,",
						"Nightvision Goggles,",
						"Infrared Vision,",
						"Parachute,"
					};
					for(new c = 0; c < 13; c++)
					{
						GetPlayerWeaponData(giveplayerid,c,weap[c],ammotup);
						if(weap[c] != 0)
						{
							format(vstringa[c], sizeof(string), "%s", weapname[weap[c]]);
						}
					}
					format(string,sizeof(string), "Оружие у %s: %s %s %s %s %s %s %s %s %s %s %s %s",giveplayer, vstringa[0], vstringa[1],vstringa[2],vstringa[3],vstringa[4],vstringa[5],vstringa[6],vstringa[7],vstringa[8],vstringa[9],vstringa[10],vstringa[11],vstringa[12]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/help", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE,"Основные: /help /stats /pay /mn /househelp /gps /id");
		SendClientMessage(playerid, COLOR_WHITE,"Чаты: /me /do /todo /try /b /l /s /pme /pdo");
		SendClientMessage(playerid, COLOR_WHITE,"Автомобиль: /park /fill /cdo /sellcar /car /findmycar /pts /showdocs");
		SendClientMessage(playerid, COLOR_WHITE,"Телефон: /call /p /h /number");
		if(PlayerInfo[playerid][pDonateRank] == 1)
		{
			SendClientMessage(playerid,COLOR_WHITE,"VIP: /togpm /togphone /steelass");
		}
		if(PlayerInfo[playerid][pJob] == 1) {
			SendClientMessage(playerid,COLOR_WHITE,"Работа: /find"); }
		else if(PlayerInfo[playerid][pJob] == 2) {
			SendClientMessage(playerid,COLOR_WHITE,"Работа: /free"); }
		else if(PlayerInfo[playerid][pJob] == 3) {
			SendClientMessage(playerid,COLOR_WHITE,"Работа: /taxi, /tsetting"); }
		else if(PlayerInfo[playerid][pJob] == 4) {
			SendClientMessage(playerid,COLOR_WHITE,"Работа: /get drugs, /selldrugs"); } //торговец нарко
		else if(PlayerInfo[playerid][pJob] == 5) {
			SendClientMessage(playerid,COLOR_WHITE,"Работа: /dropcar"); }//                угонщик автомобилей
		else if(PlayerInfo[playerid][pJob] == 7) {
			SendClientMessage(playerid,COLOR_WHITE,"Работа: /at /dt /repairp /refill /duty"); } // механик
		else if(PlayerInfo[playerid][pJob] == 8) {
			SendClientMessage(playerid,COLOR_CGREEN3d,"РАБОТА: /guard"); }
		else if(PlayerInfo[playerid][pJob] == 9) {
			SendClientMessage(playerid,COLOR_WHITE,"Работа: /materials /sellgun"); }// продавец оружия
		else if(PlayerInfo[playerid][pJob] == 10) {
			SendClientMessage(playerid,COLOR_CGREEN3d,"РАБОТА: /prodcarn"); }//            продавец автомобилей
		else if(PlayerInfo[playerid][pJob] == 12) {
			SendClientMessage(playerid,COLOR_CGREEN3d,"РАБОТА: /fight /boxstats"); }//    боксёр
		else if(PlayerInfo[playerid][pJob] == 14) {
			SendClientMessage(playerid,COLOR_CGREEN3d,"РАБОТА: /busstart /busstop"); }
		else if(PlayerInfo[playerid][pJob] == 15) {
			SendClientMessage(playerid,COLOR_CGREEN3d,"РАБОТА: /papers /bring /deliver"); }
		else if(PlayerInfo[playerid][pJob] == 16) {
			SendClientMessage(playerid,COLOR_WHITE,"Работа: /dalstart"); }
		else if(PlayerInfo[playerid][pJob] == 19) {
			SendClientMessage(playerid,COLOR_CGREEN3d,"РАБОТА: /startharvest , /stopharvest"); }
		else if(PlayerInfo[playerid][pJob] == 24) {
			SendClientMessage(playerid,COLOR_CGREEN3d,"РАБОТА: /givestrah"); }
		if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//Полиция
		{
			SendClientMessage(playerid, COLOR_WHITE, "Фракция: /r /rb /d /db /m /mdc /arrest /tazer /cuff /uncuff /incar");
			SendClientMessage(playerid, COLOR_WHITE, "Фракция: /wanted /kpz /frisk /take /ticket /popen /udost");
			if(PlayerInfo[playerid][pLeader] == 6)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Лидерские: /invite /uninvite /giverank /givedoljpps /giveudost /snews");
			}
		}
		else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)//ФСБ
		{
			SendClientMessage(playerid, COLOR_GREEN, "ФСБ: /r[чат ФСБ] /d[чат Гор.Структур] /m[мегафон] /su[розыск] /mdc[мобильный компьютер] /arrest[арестовать]");
			SendClientMessage(playerid, COLOR_GREEN, "ФСБ: /wanted[список преступников] /cuff[наручники] /uncuff[снять наручники]");
			SendClientMessage(playerid, COLOR_GREEN, "ФСБ: /frisk[обыскать] /take[забрать] /ticket[выписать штраф] /snews[новости]");
			SendClientMessage(playerid, COLOR_GREEN, "ФСБ: /tazer[электро-шок] /incar[затащить в машину] /udost[показать удостоверение]");
			if(PlayerInfo[playerid][pLeader] == 2)
			{
				SendClientMessage(playerid, COLOR_GREEN, "ФСБ: /giveudost[выдать удостоверение]");
			}
		}
		else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//армия
		{
			SendClientMessage(playerid, COLOR_GREEN, "АРМИЯ: /r[чат армии] /d[чат Гор.Структур] /m[мегафон] /su[розыск] /mdc[мобильный компьютер] /arrest[арестовать]");
			SendClientMessage(playerid, COLOR_GREEN, "АРМИЯ: /wanted[список преступников] /cuff[наручники] /uncuff[снять наручники]");
			SendClientMessage(playerid, COLOR_GREEN, "АРМИЯ: /aopen [откр. ворота1] /aopen2 [откр. ворота2] /frisk[обыскать]");
			SendClientMessage(playerid, COLOR_GREEN, "АРМИЯ: /tazer[электро-шок] /incar[затащить в машину]");
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)//медики
		{
			SendClientMessage(playerid, COLOR_WHITE, "Фракция: /r /rb /d /db /m /heal /nosilki");
			SendClientMessage(playerid, COLOR_WHITE, "Фракция: /givemk /editmk");
			if(PlayerInfo[playerid][pLeader] == 4)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Лидерские: /invite /uninvite /giverank /snews");
			}
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)//ЛКН
		{
			SendClientMessage(playerid, COLOR_WHITE, "Фракция: /r /rb /atpopen /setmarsh");
			if(PlayerInfo[playerid][pLeader] == 5)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Лидерские: /invite /uninvite /giverank /snews");
			}
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//ГИБДД
		{
			SendClientMessage(playerid, COLOR_WHITE, "Фракция: /r /rb /d /db /m /mdc /arrest /tazer /cuff /uncuff /incar /at /dt /shtrafopen");
			SendClientMessage(playerid, COLOR_WHITE, "Фракция: /wanted /carcheck /frisk /take /ticket /tc /udost /takelicense /jailcar /freecar");
			SendClientMessage(playerid, COLOR_WHITE, "Фракция: /conus /delconus /stinger /delstinger /givecarnumber /givelicense");
			if(PlayerInfo[playerid][pLeader] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Лидерские: /invite /uninvite /giverank /givedolj /giveudost /snews");
				SendClientMessage(playerid, COLOR_WHITE, "Лидерские: /perexvat /perexvathw /perexvatarz");
			}
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)//Правительство
		{
			SendClientMessage(playerid,COLOR_WHITE,"Фракция: /obmen");
			if(PlayerInfo[playerid][pLeader] == 7)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Лидерские: /invite /uninvite /giverank /snews");
			}
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)//репортёры
		{
			SendClientMessage(playerid,COLOR_GREEN,"РЕПОРТЕРЫ: /news(вести эфир), /live(пригласить в эфир)");
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)//Такси
		{
			SendClientMessage(playerid, COLOR_GREEN, "ТАКСИ: /fare (поставить трафик)  /accept taxi (принять вызов) /taksiopen(открыть ворота)");
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)//лицензеры
		{
			SendClientMessage(playerid,COLOR_GREEN,"АВТОШКОЛА: /startlesson[начать урок] /stoplesson[остановить урок] /giveash[выдача справки] /licopen[открытие ворот автошколы]");
			SendClientMessage(playerid,COLOR_GREEN,"АВТОШКОЛА: /snews[новости]");
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)// Стрит Рейсеры.
		{
			SendClientMessage(playerid,COLOR_GREEN,"АТУ: /snews дать новость(с 5 ранга)(Остальные Команды В разработке))");
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)// Groove Street
		{
			SendClientMessage(playerid,COLOR_WHITE,"Фракция: /conus, /barricade");
			if(PlayerInfo[playerid][pLeader] == 13)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Лидерские: /invite /uninvite /giverank /snews");
			}
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)// MS 13
		{
			SendClientMessage(playerid, COLOR_GREEN,"КАМОРРА: /mask(надеть маску), /tie(связать игрока)");
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)// Vagos
		{
			SendClientMessage(playerid,COLOR_WHITE,"Арзамасовская братва: /aopen, /tie, /untie");
			if(PlayerInfo[playerid][pLeader] == 15)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Лидерские: /invite /uninvite /giverank");
			}
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)// Ballas
		{
			SendClientMessage(playerid,COLOR_GREEN,"Горковская ОПГ: vk.com/trusty_crmp");
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)// FC
		{
			SendClientMessage(playerid,COLOR_WHITE,"Фракция: /storepair, /stochcolor, /tunecar, /dl");
			if(PlayerInfo[playerid][pLeader] == 17)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Лидерские: /invite /uninvite /giverank /snews");
			}
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)// Трияда
		{
			SendClientMessage(playerid,COLOR_GREEN,"МЕТАЛЛА БАЗА: vk.com/trusty_crmp");
		}
		//------------------------------------------------------------------------------
		else if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)// МЧС
		{
			SendClientMessage(playerid,COLOR_WHITE,"Фракция: /r /rb /d /db /m /spasti /heal");
			if(PlayerInfo[playerid][pLeader] == 19)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Лидерские: /invite /uninvite /giverank /snews");
			}
		}
		if(PlayerInfo[playerid][pRentHouse] > 1)
		{
			SendClientMessage(playerid,COLOR_WHITE,"Аренда дома: /househelp");
		}
		if(GetPlayerGarage(playerid))
		{
			SendClientMessage(playerid, -1, "Гараж: /gmenu - Меню управления.");
			SendClientMessage(playerid, -1, "Гараж: /garage - Загнать авто в гараж (Нужно быть около гаража в машине).");
			SendClientMessage(playerid, -1, "Гараж: /repaircar - Починить авто (Нужно улучшение 2 уровня).");
		}
		return 1;
	}
	if(strcmp(cmd, "/skin", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /skin [id игрока/ник] [id скина]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 299 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Неправильный ID скина!"); return 1; }
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pModel] = level;
						format(string, sizeof(string), "Ваш постоянный скин был изменен администратором сервера %s.", sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Вы сменили постоянный скин игроку %s на %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
      					SetPlayerSkin(para1, PlayerInfo[para1][pModel]);
						format_string = "";
						new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
						format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

						mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','SetSkin For Player','%d','%s','%s')", NamePlayer[playerid], level, NamePlayer[para1], data);
						mysql_tquery(MySQLGo, format_string);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены использовать эту команду!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/healcar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			new health;
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);

			SetVehicleHealth(GetPlayerVehicleID(playerid), health * 10);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			ABroadCast(COLOR_YELLOW,string,1);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/setjob", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Подсказка: /setjob [ID игрока] [ID работы]");
				SendClientMessage(playerid, COLOR_GRAD2, " 1 - Инкассатор || 2 - Адвокат || 3 - Проститутка || 4 - Наркоторговец");
				SendClientMessage(playerid, COLOR_GRAD2, " 5 - Автодиллер || 6 - Репортер || 7 - Механник || 8 - Охранник");
				SendClientMessage(playerid, COLOR_GRAD2, " 9 - Гандиллер || 12 - Боксер || 14 - Водитель");
				SendClientMessage(playerid, COLOR_GRAD2, " 16 - Дальнобойщик || 24 - Страховой агент");
				return 1;
			}
			new para1;
			new jobid;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			jobid = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pJob] = jobid;
						format(string, 256, "Администратор %s установил работу %s на %d.", sendername,giveplayer,jobid);
						ABroadCast(COLOR_YELLOW,string,1);
						SendClientMessage(playerid, COLOR_GRAD1, "Работа игрока установлена!");
						format_string = "";
						new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
						format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

						mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Kick For Player','%d','%s','%s')", NamePlayer[playerid], jobid, NamePlayer[para1], data);
						mysql_tquery(MySQLGo, format_string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Нет доступа!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd,"/qjob",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /qjob [id игрока]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Вас уволил с работы администратор %s!", sendername);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[giveplayerid][pJob] = 0;
				PlayerInfo[giveplayerid][pChar] = 0;
				PlayerInfo[giveplayerid][pContractTime] = 0;
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Администратор %s уволил с работы игрока %s.",sendername, giveplayer);
				ABroadCast(COLOR_YELLOW ,string,1);
			}
		} //not connected
		else
		{SendClientMessage(playerid, COLOR_GREY,"Недостаточно прав!");}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/freeze", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /freeze [id]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			//------------------------------------------------------------------------------
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 0);
						format(string, sizeof(string), "Администратор %s заморозил игрока %s.",sendername,  giveplayer);
						printf("%s",string);
						format(string, sizeof(string), "Администратор %s заморозил игрока %s.",sendername,  giveplayer);
						ABroadCast(COLOR_RED,string,1);
						format_string = "";
						new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
						format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

						mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','Freeze For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[playa], data);
						mysql_tquery(MySQLGo, format_string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}

	//==============================================================================
	if(strcmp(cmd, "/unfreeze", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /unfreeze [id]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 1);
						format(string, sizeof(string), "Администратор %s размарозил игрока %s",sendername,  giveplayer);
						printf("%s",string);
						format(string, sizeof(string), "Администратор %s разморозил игрока %s.",sendername,  giveplayer);
						ABroadCast(COLOR_RED,string,1);
						format_string = "";
						new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
						format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

						mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','UnFreeze For Player','0','%s','%s')", NamePlayer[playerid], NamePlayer[playa], data);
						mysql_tquery(MySQLGo, format_string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/endround", true) == 0 || strcmp(cmd, "/restart", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string,sizeof(string),"AdmCmd: %s сделал рестарт сервера.",sendername);
					SendClientMessageToAll(COLOR_RED,string);
					SendClientMessageToAll(COLOR_RED, "Перезайдите на сервер через 1 минуту.");
					SaveAccounts();
					GameModeInitExitFunc();
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
				}
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/gmx", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] == 4)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string,sizeof(string),"AdmCmd: %s перезапустил гейм-мод сервера.",sendername);
				SendClientMessageToAll(COLOR_RED,string);
				GameModeExit();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(!strcmp(cmd, "/mutelist", true)) {
		if(PlayerInfo[playerid][pAdmin] < 2) { SendClientMessage(playerid, COLOR_GREY, "Вы не администратор."); return 1; }
		new countmute = 0;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Список игроков с блокировкой чата:");
		for(new i=0;i<MAX_PLAYERS;i++) {
			if(PlayerInfo[i][pMuted] == 1 && IsPlayerConnected(i)) {
				GetPlayerName(i, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s [ID: %d].", sendername, i);
				countmute++;
				SendClientMessage(playerid, COLOR_YELLOW, string); }
		}
		if(countmute == 0) SendClientMessage(playerid, COLOR_GREY, "В данный момент игроков с блокировкой чата не найдено!");
		else {
			format(string, sizeof(string), "В данный момент %d игроков имеют блокировку чата.", countmute);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);}
	}
	//==============================================================================
	if(strcmp(cmd, "/onjail", true) == 0 || strcmp(cmd, "/onj", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pAdmin] < 2){SendClientMessage(playerid, COLOR_GREY, "Вы не администратор.");return 1;}
			//------------------------------------------------------------------------------
			SendClientMessage(playerid, COLOR_GREEN, "В тюрьме сидят:");
			foreach(new i:Player)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pJailed] != 0)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Заключенному %s[%d] осталось %d секунд.",sendername, i, PlayerInfo[i][pJailTime]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/agivecarnumber", true) == 0)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "Вы не в машине.");
		if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, -1, "Недоступно.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /agivecarnumber [id игрока] [номер (для админа)] ");
		new tmpp = ReturnUser(tmp);
		if(!IsPlayerConnected(tmpp)) return 1;
		if(PlayerInfo[tmpp][pCKey] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет личного автомобиля!");
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) != 6) return SendClientMessage(playerid, COLOR_GREY, "Номер дожен иметь строго 6 символов!");

		GetPlayerName(tmpp, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "Вы выдали %s гос. номер %s.", giveplayer, tmp);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		format(string, sizeof(string), "Администратор %s выдал вам гос. номер %s.", sendername, tmp);
		SendClientMessage(tmpp, COLOR_LIGHTRED, string);
		new vehidx = GetVehicleIdxByKey(PlayerInfo[tmpp][pCKey]), str[32];
		format(aData[vehidx][aNumber], 7, tmp);
		format(str, sizeof(str), "{ffffff}%s | {2E9AFE}52RUS", tmp);
		UpdateDynamic3DTextLabelText(aData[vehidx][aNumPlate], COLOR_YELLOW, str);
		SaveVehicle(vehidx);
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/givecarnumber", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!PlayerToPoint(10.0, playerid, -2306.4600,1990.8551,59.0172)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не в кабинете МРЭО");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /givecarnumber [id игрока]");
			new playa;
			playa = ReturnUser(tmp);
			if(playa == INVALID_PLAYER_ID) return 1;
			if(PlayerInfo[playa][pCKey] == 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет личного автомобиля!");
			if(!PlayerToPoint(15.0, playa, -2307.9226,1989.3586,59.0172)) return SendClientMessage(playerid, COLOR_GRAD2, "Игрок не около кабинета МРЭО");

			if(PlayerInfo[playerid][pLeader] != 1 && PlayerInfo[playerid][pMember] != 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник полиции");
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не сержант ГИБДД!");

			new rtext[32];
			if(PlayerInfo[playerid][pRank] == 1) rtext = "Рядовой полиции (ГИБДД)";
			else if(PlayerInfo[playerid][pRank] == 2) rtext = "Мл. сержант полиции (ГИБДД)";
			else if(PlayerInfo[playerid][pRank] == 3) rtext = "Сержант полиции (ГИБДД)";
			else if(PlayerInfo[playerid][pRank] == 4) rtext = "Ст. сержант полиции (ГИБДД)";
			else if(PlayerInfo[playerid][pRank] == 5) rtext = "Старшина полиции (ГИБДД)";
			else if(PlayerInfo[playerid][pRank] == 6) rtext = "Мл. лейтенант полиции (ГИБДД)";
			else if(PlayerInfo[playerid][pRank] == 7) rtext = "Лейтенант полиции (ГИБДД)";
			else if(PlayerInfo[playerid][pRank] == 8) rtext = "Ст. лейтенант полиции (ГИБДД)";
			else if(PlayerInfo[playerid][pRank] == 9) rtext = "Капитан полиции (ГИБДД)";
			else if(PlayerInfo[playerid][pRank] == 10) rtext = "Майор полиции (ГИБДД)";
			else if(PlayerInfo[playerid][pRank] == 11) rtext = "Подполковник полиции (ГИБДД)";
			else if(PlayerInfo[playerid][pRank] == 12) rtext = "Полковник полиции (ГИБДД)";

			new vehid = GetVehicleIdxByKey(PlayerInfo[playa][pCKey]), str[32];
			if(!strcmp(aData[vehid][aNumber], "ТРАНЗИТ", true))
			{
				GetPlayerName(playa, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(aData[vehid][aNumber], 16, "%s%d%d%d%s%s", randomchar(), random(9), random(9), random(9), randomchar(), randomchar());
				format(string, sizeof(string), "Вы выдали %s гос. номер %s.", giveplayer, aData[vehid][aNumber]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s %s выдал вам гос. номер %s.", rtext, sendername, aData[vehid][aNumber]);
				SendClientMessage(playa, COLOR_LIGHTBLUE, string);
				format(str, sizeof(str), "{ffffff}%s | {2E9AFE}52RUS", aData[vehid][aNumber]);
				UpdateDynamic3DTextLabelText(aData[vehid][aNumPlate], COLOR_YELLOW, str);
				SaveVehicle(vehid);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Автомобиль данного игрока уже стоит на учете!");
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/smoke", true) == 0) {
		xxx = strtok(cmdtext, idx);
		animationplayed = strval(xxx);
		if(animationplayed < 1 || animationplayed > 2)
		{
			SendClientMessage(playerid,COLOR_GRAD1,"Используйте: /smoke [1-2]");
			return 1;
		}
		if(PlayerInfo[playerid][pSigs] <= 0)
		{
			SendClientMessage(playerid,COLOR_GREY,"У вас нет сигарет. Вы можете купить их в магазине г. Южного.");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"SMOKING", "M_smklean_loop",4.1,1,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",4.1,1,1,1,1,1);
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
		format(string, sizeof(string), "* %s курит", sendername);
		ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerInfo[playerid][pSigs]--;
		return 1;
	}
	if(strcmp(cmd, "/online111", true) == 0)
	{
		ShowPlayerDialog(playerid, 9413, DIALOG_STYLE_LIST, "Директория", "Сотрудники нотариальной конторы\nЛидеры\nАдминистраторы", "Вперед", "Отмена");
		return 1;
	}

	//==============================================================================
	else if(strcmp(cmd, "/admins", true) == 0)
	{
		new alllstring[1025], ttext[50];
		foreach (new i : Player)
		{
			ttext[0] = 0;
			if(!IsPlayerConnected(i) || IsPlayerNPC(i) || PlayerInfo[i][pAdmin] <= 0 || PlayerInfo[i][pAdmin] >= 5) continue;
			switch(PlayerInfo[i][pAdmin])
			{
			case 1: ttext = "{00CC00}Младший игровой администратор";
			case 2: ttext = "{00CC00}Игровой администратор";
			case 3: ttext = "{00CC00}Старший игровой администратор";
			case 4: ttext = "{FF0000}Главный администратор";
			}
			format(alllstring,sizeof(alllstring),"%s%s {FFFFFF}- %s [%d].\n", alllstring, ttext, PlayerInfo[i][pNickname],i);
		}
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pHelper] >= 1 && IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
				format(alllstring,sizeof(alllstring),"%s{0066FF}Помощник по игре {FFFFFF}- %s [%d].\n", alllstring, PlayerInfo[i][pNickname],i);
			}
		}
		ShowPlayerDialog(playerid, 8888, DIALOG_STYLE_MSGBOX, "Список администраторов онлайн", alllstring, "Ок", "");
		return true;
	}
	if(strcmp(cmd, "/povazka", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /povazka [id игрока]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(giveplayerid == playerid) { return 1; }
					if(BlindFold[giveplayerid] == 0)
					{
						if(PlayerTied[giveplayerid] == 1)
						{
							if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid))
							{
								SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в автомобиле, чтобы использовать эту команду");
								return 1;
							}
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							SetPlayerCameraPos(giveplayerid, 2000,-2000,2000);
							SetPlayerCameraLookAt(giveplayerid, 2000,-2000,2000);
							BlindFold[giveplayerid] = 1;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s накинул на глаза %s повязку и завязал ее", sendername, giveplayer); }
							else { format(string, sizeof(string), "* %s накинула на глаза %s повязку и завязала ее", sendername, giveplayer); }
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть связан");
							return 1;
						}
					}
					else
					{
						new Float:x, Float:y, Float:z;
						GetPlayerPos(giveplayerid,x,y,z);
						if(PlayerToPoint(5, playerid, x, y, z))
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							SetCameraBehindPlayer(giveplayerid);
							BlindFold[giveplayerid] = 0;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s снял повязку с %s", sendername, giveplayer); }
							else { format(string, sizeof(string), "* %s сняла повязку с %s", sendername, giveplayer); }
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
							return 1;
						}
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/trunk",true)==0)
	{
		new x_nr[256];
		x_nr = strtok(cmdtext, idx);
		if(!strlen(x_nr)) {
			SendClientMessage(playerid, COLOR_WHITE,"Используйте: /trunk [название]");
			SendClientMessage(playerid, COLOR_WHITE, "Доступные названия: info, putdrugs, takedrugs, putmat, takemat, putgun, takegun.");
			return 1;
		}
		new ta4a = 0;
		new res;
		for(new i; i != MAX_VEHICLES; i++)
		{
			new disto = CheckPlayerDistanceToVehicle(3.0, playerid, i);
			if(disto)
			{
				res = i;
				ta4a++;
			}
		}
		if(ta4a == 0)
		{
			SendClientMessage(playerid,COLOR_GREY,"Вы не рядом с автомобилем!");
			return 1;
		}
		if(ta4a == 1)
		{
			if(lockedcar[res] == 1)
			{
				SendClientMessage(playerid,COLOR_GREY,"Багажник закрыт, открыть/закрыть багажник /ключбаг");
				return 1;
			}
			GetPlayerName(playerid,sendername,sizeof(sendername));
			if(strcmp(x_nr,"info",true) == 0)
			{
				SendClientMessage(playerid,COLOR_WHITE,"Содержимое багажника автомобиля:");
				format(string,sizeof(string),"Наркотики: %d грамм. Материалы: %d штук.",dru[res],mater[res]);
				SendClientMessage(playerid,COLOR_WHITE,string);
				if((orugie[0][res] == 0) && (orugie[1][res] == 0) && (orugie[2][res] == 0) && (orugie[3][res] == 0) && (orugie[4][res] == 0) && (orugie[5][res] == 0) && (orugie[6][res] == 0) && (orugie[7][res] == 0) && (orugie[8][res] == 0) && (orugie[9][res] == 0) &&
				(orugie[10][res] == 0) && (orugie[11][res] == 0) && (orugie[12][res] == 0) )
				{
					SendClientMessage(playerid,COLOR_WHITE,"Оружие в багажнике отсутствует.");
				}
				else
				{
					new WeapName[40];
					for(new slot = 0; slot < 12; slot++)
					{
						if(orugie[slot][res] != 0)
						{
							new ololo = orugie[slot][res];
							GetWeaponName(ololo, WeapName, sizeof(WeapName));
							format(string,sizeof(string),"Оружие: %s (ID: %d). Количество патронов: %d.",WeapName,ololo,patrons[slot][res]);
							SendClientMessage(playerid,COLOR_WHITE,string);
						}
					}
				}
				format(string, sizeof(string), "* %s открыл багажник автомобиля.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			if(strcmp(x_nr,"putgun",true) == 0)
			{
				tmp = strtok(cmdtext,idx);
				if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_GREY,"Используйте: /bag putgun [id оружия]");
				new weapo = strval(tmp);
				if(!IsValidWeapon(weapo)) return SendClientMessage(playerid,COLOR_LIGHTRED2,"Неверный ID оружия!");
				new ammo[13],weap[13];
				new WeapName[40];
				GetPlayerWeaponData(playerid, 0, weap[0], ammo[0]);
				GetPlayerWeaponData(playerid, 1, weap[1], ammo[1]);
				GetPlayerWeaponData(playerid, 2, weap[2], ammo[2]);
				GetPlayerWeaponData(playerid, 3, weap[3], ammo[3]);
				GetPlayerWeaponData(playerid, 4, weap[4], ammo[4]);
				GetPlayerWeaponData(playerid, 5, weap[5], ammo[5]);
				GetPlayerWeaponData(playerid, 6, weap[6], ammo[6]);
				GetPlayerWeaponData(playerid, 7, weap[7], ammo[7]);
				GetPlayerWeaponData(playerid, 8, weap[8], ammo[8]);
				GetPlayerWeaponData(playerid, 9, weap[9], ammo[9]);
				GetPlayerWeaponData(playerid, 10, weap[10], ammo[10]);
				GetPlayerWeaponData(playerid, 11, weap[11], ammo[11]);
				GetPlayerWeaponData(playerid, 12, weap[12], ammo[12]);
				if(weapo == weap[0])
				{
					orugie[0][res] = weapo;
					patrons[0][res] = ammo[0];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[1],ammo[1]);
					GiveWeapon(playerid,weap[2],ammo[2]);
					GiveWeapon(playerid,weap[3],ammo[3]);
					GiveWeapon(playerid,weap[4],ammo[4]);
					GiveWeapon(playerid,weap[5],ammo[5]);
					GiveWeapon(playerid,weap[6],ammo[6]);
					GiveWeapon(playerid,weap[7],ammo[7]);
					GiveWeapon(playerid,weap[8],ammo[8]);
					GiveWeapon(playerid,weap[9],ammo[9]);
					GiveWeapon(playerid,weap[10],ammo[10]);
					GiveWeapon(playerid,weap[11],ammo[11]);
					GiveWeapon(playerid,weap[12],ammo[12]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), "* %s положил оружие в багажник автомобиля.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(weapo == weap[1])
				{
					orugie[1][res] = weapo;
					patrons[1][res] = ammo[1];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[0],ammo[0]);
					GiveWeapon(playerid,weap[2],ammo[2]);
					GiveWeapon(playerid,weap[3],ammo[3]);
					GiveWeapon(playerid,weap[4],ammo[4]);
					GiveWeapon(playerid,weap[5],ammo[5]);
					GiveWeapon(playerid,weap[6],ammo[6]);
					GiveWeapon(playerid,weap[7],ammo[7]);
					GiveWeapon(playerid,weap[8],ammo[8]);
					GiveWeapon(playerid,weap[9],ammo[9]);
					GiveWeapon(playerid,weap[10],ammo[10]);
					GiveWeapon(playerid,weap[11],ammo[11]);
					GiveWeapon(playerid,weap[12],ammo[12]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), "* %s положил оружие в багажник автомобиля.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(weapo == weap[2])
				{
					orugie[2][res] = weapo;
					patrons[2][res] = ammo[2];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[0],ammo[0]);
					GiveWeapon(playerid,weap[1],ammo[1]);
					GiveWeapon(playerid,weap[3],ammo[3]);
					GiveWeapon(playerid,weap[4],ammo[4]);
					GiveWeapon(playerid,weap[5],ammo[5]);
					GiveWeapon(playerid,weap[6],ammo[6]);
					GiveWeapon(playerid,weap[7],ammo[7]);
					GiveWeapon(playerid,weap[8],ammo[8]);
					GiveWeapon(playerid,weap[9],ammo[9]);
					GiveWeapon(playerid,weap[10],ammo[10]);
					GiveWeapon(playerid,weap[11],ammo[11]);
					GiveWeapon(playerid,weap[12],ammo[12]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), "* %s положил оружие в багажник автомобиля.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(weapo == weap[3])
				{
					orugie[3][res] = weapo;
					patrons[3][res] = ammo[3];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[0],ammo[0]);
					GiveWeapon(playerid,weap[1],ammo[1]);
					GiveWeapon(playerid,weap[2],ammo[2]);
					GiveWeapon(playerid,weap[4],ammo[4]);
					GiveWeapon(playerid,weap[5],ammo[5]);
					GiveWeapon(playerid,weap[6],ammo[6]);
					GiveWeapon(playerid,weap[7],ammo[7]);
					GiveWeapon(playerid,weap[8],ammo[8]);
					GiveWeapon(playerid,weap[9],ammo[9]);
					GiveWeapon(playerid,weap[10],ammo[10]);
					GiveWeapon(playerid,weap[11],ammo[11]);
					GiveWeapon(playerid,weap[12],ammo[12]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), "* %s положил оружие в багажник автомобиля.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(weapo == weap[4])
				{
					orugie[4][res] = weapo;
					patrons[4][res] = ammo[4];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[0],ammo[0]);
					GiveWeapon(playerid,weap[1],ammo[1]);
					GiveWeapon(playerid,weap[2],ammo[2]);
					GiveWeapon(playerid,weap[3],ammo[3]);
					GiveWeapon(playerid,weap[5],ammo[5]);
					GiveWeapon(playerid,weap[6],ammo[6]);
					GiveWeapon(playerid,weap[7],ammo[7]);
					GiveWeapon(playerid,weap[8],ammo[8]);
					GiveWeapon(playerid,weap[9],ammo[9]);
					GiveWeapon(playerid,weap[10],ammo[10]);
					GiveWeapon(playerid,weap[11],ammo[11]);
					GiveWeapon(playerid,weap[12],ammo[12]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), " %s положил оружие в багажник автомобиля.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(weapo == weap[5])
				{
					orugie[5][res] = weapo;
					patrons[5][res] = ammo[5];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[0],ammo[0]);
					GiveWeapon(playerid,weap[1],ammo[1]);
					GiveWeapon(playerid,weap[2],ammo[2]);
					GiveWeapon(playerid,weap[3],ammo[3]);
					GiveWeapon(playerid,weap[4],ammo[4]);
					GiveWeapon(playerid,weap[6],ammo[6]);
					GiveWeapon(playerid,weap[7],ammo[7]);
					GiveWeapon(playerid,weap[8],ammo[8]);
					GiveWeapon(playerid,weap[9],ammo[9]);
					GiveWeapon(playerid,weap[10],ammo[10]);
					GiveWeapon(playerid,weap[11],ammo[11]);
					GiveWeapon(playerid,weap[12],ammo[12]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), " %s положил оружие в багажник автомобиля.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(weapo == weap[6])
				{
					orugie[6][res] = weapo;
					patrons[6][res] = ammo[6];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[0],ammo[0]);
					GiveWeapon(playerid,weap[1],ammo[1]);
					GiveWeapon(playerid,weap[2],ammo[2]);
					GiveWeapon(playerid,weap[3],ammo[3]);
					GiveWeapon(playerid,weap[4],ammo[4]);
					GiveWeapon(playerid,weap[5],ammo[5]);
					GiveWeapon(playerid,weap[7],ammo[7]);
					GiveWeapon(playerid,weap[8],ammo[8]);
					GiveWeapon(playerid,weap[9],ammo[9]);
					GiveWeapon(playerid,weap[10],ammo[10]);
					GiveWeapon(playerid,weap[11],ammo[11]);
					GiveWeapon(playerid,weap[12],ammo[12]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), " %s положил оружие в багажник автомобиля", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(weapo == weap[7])
				{
					orugie[7][res] = weapo;
					patrons[7][res] = ammo[7];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[0],ammo[0]);
					GiveWeapon(playerid,weap[1],ammo[1]);
					GiveWeapon(playerid,weap[2],ammo[2]);
					GiveWeapon(playerid,weap[3],ammo[3]);
					GiveWeapon(playerid,weap[4],ammo[4]);
					GiveWeapon(playerid,weap[5],ammo[5]);
					GiveWeapon(playerid,weap[6],ammo[6]);
					GiveWeapon(playerid,weap[8],ammo[8]);
					GiveWeapon(playerid,weap[9],ammo[9]);
					GiveWeapon(playerid,weap[10],ammo[10]);
					GiveWeapon(playerid,weap[11],ammo[11]);
					GiveWeapon(playerid,weap[12],ammo[12]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), " %s положил оружие в багажник автомобиля.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(weapo == weap[8])
				{
					orugie[8][res] = weapo;
					patrons[8][res] = ammo[8];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[0],ammo[0]);
					GiveWeapon(playerid,weap[1],ammo[1]);
					GiveWeapon(playerid,weap[2],ammo[2]);
					GiveWeapon(playerid,weap[3],ammo[3]);
					GiveWeapon(playerid,weap[4],ammo[4]);
					GiveWeapon(playerid,weap[5],ammo[5]);
					GiveWeapon(playerid,weap[6],ammo[6]);
					GiveWeapon(playerid,weap[7],ammo[7]);
					GiveWeapon(playerid,weap[9],ammo[9]);
					GiveWeapon(playerid,weap[10],ammo[10]);
					GiveWeapon(playerid,weap[11],ammo[11]);
					GiveWeapon(playerid,weap[12],ammo[12]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), " %s положил оружие в багажник автомобиля.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(weapo == weap[9])
				{
					orugie[9][res] = weapo;
					patrons[9][res] = ammo[9];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[0],ammo[0]);
					GiveWeapon(playerid,weap[1],ammo[1]);
					GiveWeapon(playerid,weap[2],ammo[2]);
					GiveWeapon(playerid,weap[3],ammo[3]);
					GiveWeapon(playerid,weap[4],ammo[4]);
					GiveWeapon(playerid,weap[5],ammo[5]);
					GiveWeapon(playerid,weap[6],ammo[6]);
					GiveWeapon(playerid,weap[7],ammo[7]);
					GiveWeapon(playerid,weap[8],ammo[8]);
					GiveWeapon(playerid,weap[10],ammo[10]);
					GiveWeapon(playerid,weap[11],ammo[11]);
					GiveWeapon(playerid,weap[12],ammo[12]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), " %s положил оружие в багажник автомобиля.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(weapo == weap[10])
				{
					orugie[10][res] = weapo;
					patrons[10][res] = ammo[10];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[0],ammo[0]);
					GiveWeapon(playerid,weap[1],ammo[1]);
					GiveWeapon(playerid,weap[2],ammo[2]);
					GiveWeapon(playerid,weap[3],ammo[3]);
					GiveWeapon(playerid,weap[4],ammo[4]);
					GiveWeapon(playerid,weap[5],ammo[5]);
					GiveWeapon(playerid,weap[6],ammo[6]);
					GiveWeapon(playerid,weap[7],ammo[7]);
					GiveWeapon(playerid,weap[8],ammo[8]);
					GiveWeapon(playerid,weap[9],ammo[9]);
					GiveWeapon(playerid,weap[11],ammo[11]);
					GiveWeapon(playerid,weap[12],ammo[12]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), " %s положил оружие в багажник автомобиля.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(weapo == weap[11])
				{
					orugie[11][res] = weapo;
					patrons[11][res] = ammo[11];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[0],ammo[0]);
					GiveWeapon(playerid,weap[1],ammo[1]);
					GiveWeapon(playerid,weap[2],ammo[2]);
					GiveWeapon(playerid,weap[3],ammo[3]);
					GiveWeapon(playerid,weap[4],ammo[4]);
					GiveWeapon(playerid,weap[5],ammo[5]);
					GiveWeapon(playerid,weap[6],ammo[6]);
					GiveWeapon(playerid,weap[7],ammo[7]);
					GiveWeapon(playerid,weap[8],ammo[8]);
					GiveWeapon(playerid,weap[9],ammo[9]);
					GiveWeapon(playerid,weap[10],ammo[10]);
					GiveWeapon(playerid,weap[12],ammo[12]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), " %s положил оружие в багажник автомобиля.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(weapo == weap[12])
				{
					orugie[12][res] = weapo;
					patrons[12][res] = ammo[12];
					ResetWeapons(playerid);
					GiveWeapon(playerid,weap[0],ammo[0]);
					GiveWeapon(playerid,weap[1],ammo[1]);
					GiveWeapon(playerid,weap[2],ammo[2]);
					GiveWeapon(playerid,weap[3],ammo[3]);
					GiveWeapon(playerid,weap[4],ammo[4]);
					GiveWeapon(playerid,weap[5],ammo[5]);
					GiveWeapon(playerid,weap[6],ammo[6]);
					GiveWeapon(playerid,weap[7],ammo[7]);
					GiveWeapon(playerid,weap[8],ammo[8]);
					GiveWeapon(playerid,weap[9],ammo[9]);
					GiveWeapon(playerid,weap[10],ammo[10]);
					GiveWeapon(playerid,weap[11],ammo[11]);
					GetWeaponName(weapo, WeapName, sizeof(WeapName));
					format(string,sizeof(string),"Вы положили в багажник %s (ID: %d).",WeapName,weapo);
					SendClientMessage(playerid,COLOR_WHITE,string);
					format(string, sizeof(string), " %s положил оружие в багажник автомобиля.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					SendClientMessage(playerid,COLOR_LIGHTRED2,"У вас нет такого оружия!");
				}
				return 1;
			}
			if(strcmp(x_nr,"takegun",true) == 0)
			{
				tmp = strtok(cmdtext,idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid,COLOR_GREY,"Используйте: /bag takegun [id оружия]");
				}
				new weapo = strval(tmp);
				if(!IsValidWeapon(weapo))
				{
					SendClientMessage(playerid,COLOR_LIGHTRED2,"Неверный ID оружия!");
					return 1;
				}
				new WeapName[40];
				for(new slot = 0; slot < 12; slot++)
				{
					if(orugie[slot][res] == weapo)
					{
						GiveWeapon(playerid,orugie[slot][res],patrons[slot][res]);
						orugie[slot][res] = 0;
						patrons[slot][res] = 0;
						GetWeaponName(weapo, WeapName, sizeof(WeapName));
						format(string,sizeof(string),"Вы забрали из багажника оружие - %s (ID: %d).",WeapName,weapo);
						SendClientMessage(playerid,COLOR_WHITE,string);
						format(string, sizeof(string), " %s взял оружие из багажника автомобиля.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
				return 1;
			}
			if(strcmp(x_nr,"putdrugs",true) == 0)
			{
				tmp = strtok(cmdtext,idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid,COLOR_GREY,"Используйте: /bag putdrugs [грамм]");
				}
				new dr = strval(tmp);
				if(PlayerInfo[playerid][pDrugs] < dr)
				{
					SendClientMessage(playerid,COLOR_GREY,"У вас нет столько грамм наркотиков.");
					return 1;
				}
				if(dru[res]+dr > 100)
				{
					SendClientMessage(playerid,COLOR_GREY,"Максимум в машине можно спрятать 100 грамм наркотиков.");
					return 1;
				}
				dru[res] += dr;
				PlayerInfo[playerid][pDrugs] -= dr;
				format(string,sizeof(string),"Вы положили %d грамм наркотиков в багажник автомобиля.",dr);
				SendClientMessage(playerid,COLOR_WHITE,string);
				format(string, sizeof(string), " %s положил наркотики в багажник автомобиля.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			if(strcmp(x_nr,"takedrugs",true) == 0)
			{
				tmp = strtok(cmdtext,idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid,COLOR_GREY,"Используйте: /bag takedrugs [количество грамм]");
				}
				new dr = strval(tmp);
				if(dru[res] < dr)
				{
					SendClientMessage(playerid,COLOR_LIGHTRED2,"В багажнике нету столько наркотиков!");
					return 1;
				}
				dru[res] -= dr;
				PlayerInfo[playerid][pDrugs] += dr;
				format(string,sizeof(string),"Вы забрали %d грамм наркоты из багажника автомобиля.",dr);
				SendClientMessage(playerid,COLOR_WHITE,string);
				format(string, sizeof(string), " %s забрал наркотики из багажника автомобиля.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			if(strcmp(x_nr,"putmat",true) == 0)
			{
				tmp = strtok(cmdtext,idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid,COLOR_GREY,"Используйте: /bag putmat [количество]");
				}
				new mattt = strval(tmp);
				if(PlayerInfo[playerid][pMats] < mattt)
				{
					SendClientMessage(playerid,COLOR_LIGHTRED2,"У вас нет столько материалов!");
					return 1;
				}
				mater[res] += mattt;
				PlayerInfo[playerid][pMats] -= mattt;
				format(string,sizeof(string),"Вы положили %d материалов в багажник автомобиля.",mattt);
				SendClientMessage(playerid,COLOR_WHITE,string);
				format(string, sizeof(string), " %s положил материалы в багажник автомобиля.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			if(strcmp(x_nr,"takemat",true) == 0)
			{
				tmp = strtok(cmdtext,idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid,COLOR_GREY,"Используйте: /bag takemat [количество]");
				}
				new mattt = strval(tmp);
				if(mater[res] < mattt)
				{
					SendClientMessage(playerid,COLOR_LIGHTRED2,"В багажнике нет столько материалов!");
					return 1;
				}
				mater[res] -= mattt;
				PlayerInfo[playerid][pMats] += mattt;
				format(string,sizeof(string),"Вы забрали %d материалов из багажника автомобиля.",mattt);
				SendClientMessage(playerid,COLOR_WHITE,string);
				format(string, sizeof(string), " %s забрал материалы из багажника автомобиля.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
		}
		if(ta4a > 1)
		{
			SendClientMessage(playerid,COLOR_LIGHTRED2,"Вокруг вас слишком много автомобилей!");
		}
		return 1;
	}
	if(strcmp(cmd, "/alarm", true) == 0)
	{
		if(PlayerInfo[@p][pMember] == 19 || PlayerInfo[@p][pLeader] == 19)
		{
			if(!PlayerToPoint(8.0,playerid,165.2006,1262.9058,12.2131)) return SCM(@p,-1,#Вы не около пожарной части);
			if(!siren)
			{
				PlayerPlaySound(@p,42801,165.2006,1262.9058,12.2131);
				siren = 1;
				SCM(@p,-1,#Сирена включена!);
			}
			else siren = 0, SCM(@p,-1,#Сирена выключена!);
		}
	}
	//=======================================СИСТЕМА БАГАЖНИКА=============================================================================================
	if(strcmp(cmd, "/rescar", true) == 0)
	{
		if(!PlayerInfo[playerid][pCKey]) return SendClientMessage(playerid, COLOR_GRAD1, "У вас нет личной машины!");
		if(PlayerInfo[playerid][pCash] < 150000) return SendClientMessage(playerid, COLOR_GRAD1, "У вас недостаточно денег. Стоимость доставки автомобиля составляет 150.000 рублей.");

		new vehidx = GetVehicleIdxByKey(PlayerInfo[playerid][pCKey]);
		foreach(new i:Player)
		{
			if(IsPlayerConnected(i))
			{
				if(IsPlayerInVehicle(i, aData[vehidx][aCarid])) return SendClientMessage(playerid, COLOR_GRAD1, "В машине кто-то находится!");
			}
		}
		if(aData[vehidx][aArrest] == 1)
		{
			new str[128];
			format(str,128,"Транспорт на штрафстоянке, обратитесь в полицию. (/call 02)");
			SendClientMessage(playerid,COLOR_GRAD2,str);
			format(str,128,"ID вашего транспорта %d", vehidx);
			SendClientMessage(playerid,COLOR_GRAD2,str);
			return 1;
		}
		else
		{
			GivePlayerMoney(playerid,-150000);
			PlayerInfo[playerid][pCash]-=150000;
			SendClientMessage(playerid, COLOR_GREY, "Теперь машина стоит там, где была припаркована.");
			SetVehiclePos(aData[vehidx][aCarid], aData[vehidx][aPos][0], aData[vehidx][aPos][1], aData[vehidx][aPos][2]);
			SetVehicleZAngle(aData[vehidx][aCarid], aData[vehidx][aPos][3]);
			SetVehicleVirtualWorld(aData[vehidx][aCarid], aData[vehidx][aWorld]);
			LinkVehicleToInterior(aData[vehidx][aCarid], aData[vehidx][aInt]);
			UpdatePlayerData(@p,"pCash",PlayerInfo[playerid][pCash]);
			return 1;
		}

	}
	if(strcmp(cmd,"/findmycar",true)==0)
	{
		new l;
		l = PlayerInfo[playerid][pCKey];
		if(l == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нет личного авто!");
		new vehid = GetVehicleIdxByKey(PlayerInfo[playerid][pCKey]);
		if(vehid == -1) return SCM(@p,-1,"Произошла ошибка, обратитесь к Администрации сервера.");
		if(aData[vehid][aArrest] == 1) return SendClientMessage(playerid, COLOR_GRAD2, "Ваше авто стоит на штрафной стоянке. Обратитесь в полицию (/call 02)");
		else
		{
			new Float:pos[3];
			GetVehiclePos(aData[vehid][aCarid], pos[0], pos[1], pos[2]);
			SetPlayerCheckpoint(playerid, pos[0], pos[1], pos[2], 5.0);
			FindCar[playerid] = 1;
			SendClientMessage(playerid,COLOR_YELLOW,"Маркер, где находится ваш автомобиль, обозначен на карте.");
			return 1;
		}
	}	
	//==============================/arescar========================================
	if(strcmp(cmd, "/scar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не администратор.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, -1, "/scar [carid]");
		new carid = strval(tmp);
		new id_car = GetVehicleIdxByID(carid);
		if(id_car == -1) return SetVehicleToRespawn(carid);
		if(aData[id_car][aKey] == 0) return SetVehicleToRespawn(carid);
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Теперь машина стоит там, где была припаркована.");
			SetVehiclePos(carid, aData[id_car][aPos][0], aData[id_car][aPos][1], aData[id_car][aPos][2]);
			SetVehicleZAngle(carid, aData[id_car][aPos][3]);
			SetVehicleVirtualWorld(carid, aData[id_car][aWorld]);
			LinkVehicleToInterior(carid, aData[id_car][aInt]);
		}
		return 1;
	}
	if(strcmp(cmd, "/apark", true) ==0 )
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
			if(!IsPlayerInAnyVehicle(playerid)) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			new id_car = GetVehicleIdxByID(vehicleid);
			GetVehiclePos(vehicleid, aData[id_car][aPos][0], aData[id_car][aPos][1], aData[id_car][aPos][2]);
			GetVehicleZAngle(vehicleid, aData[id_car][aPos][3]);
			SendClientMessage(playerid, COLOR_GRAD1, "Машина перепаркована!");
			SaveVehicle(id_car);
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Вы не можете перепарковать эту машину!");
		return 1;
	}
	if(strcmp(cmd, "/exits", true) == 0)
	{
		if(!IsPlayerInAnyVehicle(playerid)){return 1;}
		new vehicleid = GetPlayerVehicleID(playerid);
		if(vehicleid)
		{
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
		}
		return 1;
	}
	if(strcmp(cmd, "/park", true) ==0 )
	{
		if(PlayerInfo[playerid][pCKey] > 0)
		{
			new vehidx = GetVehicleIdxByKey(PlayerInfo[playerid][pCKey]);
			if(vehidx == -1) return SCM(@p,-1,"Произошла ошибка, обратитесь к Администрации сервера.");
			if(GetPlayerVehicleID(playerid) != aData[vehidx][aCarid]) return SendClientMessage(playerid, COLOR_GRAD1, "Вы должны находиться в купленной машине");

			GetVehiclePos(aData[vehidx][aCarid], aData[vehidx][aPos][0], aData[vehidx][aPos][1], aData[vehidx][aPos][2]);
			GetVehicleZAngle(aData[vehidx][aCarid], aData[vehidx][aPos][3]);
			aData[vehidx][aWorld] = GetPlayerVirtualWorld(playerid);
			aData[vehidx][aInt] = GetPlayerInterior(playerid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы припарковали ваше транспортное средство в этом месте!");
			SaveVehicle(vehidx);
		}
		else SendClientMessage(playerid,COLOR_GRAD1,"У вас нет личной машины!");
		return 1;
	}
	//	new vehid;
	if(strcmp(cmd, "/sellcar", true) ==0 )
	{
		new carid = GetPlayerVehicleID(playerid);
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Вы не в машине.");
		if(!PlayerInfo[playerid][pCKey]) return SendClientMessage(playerid,-1,"У вас нет личного т/с.");
		new id_car = GetVehicleIdxByKey(PlayerInfo[playerid][pCKey]);
		if(id_car == -1) return SCM(@p,-1,"Произошла ошибка, обратитесь к Администрации сервера.");
		if(carid != aData[id_car][aCarid]) return SendClientMessage(playerid, COLOR_GRAD2, "Вы должны быть в своём автомобиле.");
		ShowPlayerDialog(playerid,9898,DIALOG_STYLE_MSGBOX,"{0066FF}Информация","{FFFFFF}Вы действительно хотите продать ваше транспортное средство?","Да","Нет");
	}
	if(strcmp(cmd, "/addcar", true) ==0 )
	{
		if(PlayerInfo[playerid][pAdmin] != 4) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не являетесь главным администратором сервера");
		new vehiclemodel,color1,color2,price;
		if(sscanf(params,"dddd",vehiclemodel,color1,color2,price)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /addcar [ID авто] [Цвет 1] [Цвет 2] [Цена]");
		for(new i = 0; i < sizeof aData; i++)
		{
			if(aData[i][aKey] != 0) continue;
			GetPlayerPos(playerid, aData[i][aPos][0], aData[i][aPos][1], aData[i][aPos][2]);
			GetPlayerFacingAngle(playerid, aData[i][aPos][3]);

			aData[i][aModel] = vehiclemodel;
			aData[i][aColor1] = color1;
			aData[i][aColor2] = color2;
			aData[i][aPrice] = price;
			aData[i][aOwned] = 0;
			aData[i][aLock] = 0;
			aData[i][aMigPos][0] = 0;
			aData[i][aMigPos][1] = 0;
			aData[i][aMigPos][2] = 0;
			aData[i][aMigPos][3] = 0;
			aData[i][aMigPos][4] = 0;
			aData[i][aMigPos][5] = 0;
			aData[i][aMiglo] = 0;
			aData[i][aArrest] = 0;
			aData[i][aFuel] = 60;
			aData[i][aWorld] = GetPlayerVirtualWorld(playerid);
			aData[i][aInt] = GetPlayerInterior(playerid);
			aData[i][aFrak] = 0;
			aData[i][aJobs] = 0;
			strmid(aData[i][aPArrest], "Nones", 0, strlen("Nones"));
			strmid(aData[i][aPArrestName],"Nones",0, strlen("Nones"));
			strmid(aData[i][aOwner], "dealercar", 0, strlen("dealercar"));
			strmid(aData[i][aNumber], "ТРАНЗИТ", 0, strlen("ТРАНЗИТ"));
			aData[i][aCarid] = CreateVehicle(aData[i][aModel], aData[i][aPos][0]+1.0, aData[i][aPos][1]+1.0, aData[i][aPos][2], aData[i][aPos][3], aData[i][aColor1], aData[i][aColor2], 600000);
			SetVehicleVirtualWorld(aData[i][aCarid], aData[i][aWorld]);
			LinkVehicleToInterior(aData[i][aCarid], aData[i][aInt]);
			aData[i][aNumPlate] = CreateDynamic3DTextLabel("{ffffff}ТРАНЗИТ", COLOR_YELLOW, 0.0, 0.0, 1.2, 15.0, INVALID_PLAYER_ID, aData[i][aCarid], 0);
			glob_str = "";
			mysql_format(MySQLGo,glob_str,sizeof(glob_str),"INSERT INTO `vehicles` (`Model`) VALUES ('%d')",aData[i][aModel]);
			new Cache:p = mysql_query(MySQLGo,glob_str);			
			aData[i][aKey] = cache_insert_id();
			SendClientMessage(playerid, COLOR_GRAD2, "Автомобиль успешно создан.");
			cache_delete(p, MySQLGo);
			glob_str = "";
			SaveVehicle(i);
			return 1;
		}
		return SendClientMessage(playerid, COLOR_GRAD1, "Нельзя создать машину, так как был превышен лимит.");
	}
	if(strcmp(cmd, "/addfcar", true) ==0 )
	{
		if(PlayerInfo[playerid][pAdmin] != 4) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не являетесь главным администратором сервера");
		new vehiclemodel,color1,color2,price;
		if(sscanf(params,"dddd",vehiclemodel,color1,color2,price)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /addfcar [ID авто] [Цвет 1] [Цвет 2] [Фракция]");
		if(!price) return SCM(@p,COLOR_GRAD1,"Для создания просто автомобиля испоользуйте: /addcar");
		for(new i = 0; i < sizeof aData; i++)
		{
			if(aData[i][aKey] != 0) continue;
			GetPlayerPos(playerid, aData[i][aPos][0], aData[i][aPos][1], aData[i][aPos][2]);
			GetPlayerFacingAngle(playerid, aData[i][aPos][3]);
			aData[i][aModel] = vehiclemodel;
			aData[i][aColor1] = color1;
			aData[i][aColor2] = color2;
			aData[i][aPrice] = 0;
			aData[i][aOwned] = 1;
			aData[i][aLock] = 1;
			aData[i][aMigPos][0] = 0;
			aData[i][aMigPos][1] = 0;
			aData[i][aMigPos][2] = 0;
			aData[i][aMigPos][3] = 0;
			aData[i][aMigPos][4] = 0;
			aData[i][aMigPos][5] = 0;
			aData[i][aMiglo] = 0;
			aData[i][aArrest] = 0;
			aData[i][aFuel] = 60;
			aData[i][aWorld] = GetPlayerVirtualWorld(playerid);
			aData[i][aInt] = GetPlayerInterior(playerid);
			aData[i][aFrak] = price;
			aData[i][aJobs] = 0;
			strmid(aData[i][aPArrest], "Nones", 0, strlen("Nones"));
			strmid(aData[i][aPArrestName],"Nones",0, strlen("Nones"));
			new ttext[32];
			switch(price)
			{
			case 1: ttext = "ОГИБДД";
			case 2: ttext = "ФСБ";
			case 3: ttext = "Армия";
			case 4: ttext = "Скорая Помощь";
			case 5: ttext = "Арзамасовская братва";
			case 6: ttext = "Полиция";
			case 7: ttext = "Администрация";
			case 8: ttext = "Киллеры";
			case 9: ttext = "Репортеры";
			case 10: ttext = "Такси Мустанг";
			case 11: ttext = "Лицензёры";
			case 12: ttext = "Стритрейсеры";
			case 13: ttext = "Доки";
			case 14: ttext = "Южная братва";
			case 15: ttext = "ООО Нижстрой";
			case 16: ttext = "East Side Ballas";
			case 17: ttext = "Flaming Cobra";
			case 18: ttext = "Триада";
			case 19: ttext = "МЧС";
			case 20: ttext = "Горковская ОПГ";
			case 21: ttext = "The NewGeneration Mafia";
			case 22: ttext = "Admins Gangs";
			default: return SCM(@p,-1,"Неправильный ид фракции!");
			}
			strmid(aData[i][aOwner],ttext,0,strlen(ttext));
			if(price == 1 || price == 6)format(aData[i][aNumber], 8, "%s%d%d%d%d", randomchar(), random(9), random(9), random(9),random(9));
			else format(aData[i][aNumber], 8, "%s%d%d%d%s%s", randomchar(), random(9), random(9), random(9), randomchar(), randomchar());
			format(string, sizeof(string), "{ffffff}%s | {2E9AFE}52RUS", aData[i][aNumber]);
			aData[i][aCarid] = CreateVehicle(aData[i][aModel], aData[i][aPos][0]+1.0, aData[i][aPos][1]+1.0, aData[i][aPos][2], aData[i][aPos][3], aData[i][aColor1], aData[i][aColor2], 600000);
			SetVehicleVirtualWorld(aData[i][aCarid], aData[i][aWorld]);
			LinkVehicleToInterior(aData[i][aCarid], aData[i][aInt]);
			aData[i][aNumPlate] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, 0.0, 0.0, 1.2, 15.0, INVALID_PLAYER_ID, aData[i][aCarid], 0);
			glob_str = "";
			mysql_format(MySQLGo,glob_str,sizeof(glob_str),"INSERT INTO `vehicles` (`Model`) VALUES ('%d')",aData[i][aModel]);
			new Cache:p = mysql_query(MySQLGo,glob_str);			
			aData[i][aKey] = cache_insert_id();
			glob_str = "";
			format(glob_str,sizeof(glob_str),"Автомобиль для фракции %s успешно создан",ttext);
			SendClientMessage(playerid, COLOR_GRAD2, glob_str);
			cache_delete(p, MySQLGo);
			glob_str = "";
			SaveVehicle(i);
			return 1;
		}
		return SendClientMessage(playerid, COLOR_GRAD1, "Нельзя создать машину, так как был превышен лимит.");
	}
	if(strcmp(cmd, "/addjcar", true) ==0 )
	{
		if(PlayerInfo[playerid][pAdmin] != 4) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не являетесь главным администратором сервера");
		new vehiclemodel,color1,color2,price;
		if(sscanf(params,"dddd",vehiclemodel,color1,color2,price)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /addjcar [ID авто] [Цвет 1] [Цвет 2] [Работа]");
		if(!price) return SCM(@p,COLOR_GRAD1,"Для создания простого автомобиля испоользуйте: /addcar");
		for(new i = 0; i < sizeof aData; i++)
		{
			if(aData[i][aKey] != 0) continue;
			GetPlayerPos(playerid, aData[i][aPos][0], aData[i][aPos][1], aData[i][aPos][2]);
			GetPlayerFacingAngle(playerid, aData[i][aPos][3]);
			aData[i][aModel] = vehiclemodel;
			aData[i][aColor1] = color1;
			aData[i][aColor2] = color2;
			aData[i][aPrice] = 0;
			aData[i][aOwned] = 1;
			aData[i][aLock] = 1;
			aData[i][aMigPos][0] = 0;
			aData[i][aMigPos][1] = 0;
			aData[i][aMigPos][2] = 0;
			aData[i][aMigPos][3] = 0;
			aData[i][aMigPos][4] = 0;
			aData[i][aMigPos][5] = 0;
			aData[i][aMiglo] = 0;
			aData[i][aArrest] = 0;
			aData[i][aFuel] = 60;
			aData[i][aWorld] = GetPlayerVirtualWorld(playerid);
			aData[i][aInt] = GetPlayerInterior(playerid);
			aData[i][aFrak] = 0;
			aData[i][aJobs] = price;
			strmid(aData[i][aPArrest], "Nones", 0, 128, 128);
			format(aData[i][aPArrestName], 32, "Nones");
			new jtext[20];
			switch(price)
			{
			case 1: { jtext = "Детектив"; }
			case 2: { jtext = "Юрист"; }
			case 3: { jtext = "Водитель такси"; }
			case 4: { jtext = "Неизвестно."; }
			case 5: { jtext = "Автоугонщика"; }
			case 6: { jtext = "Репортёра новостей"; }
			case 7: { jtext = "Механика"; }
			case 8: { jtext = "Телохранитель"; }
			case 9: { jtext = "Оружейного диллера"; }
			case 10: { jtext = "Продавеца машин"; }
			case 12: { jtext = "Боксёр"; }
			case 13: { jtext = "Оружейного диллера"; }
			case 14: { jtext = "Водителя автобуса"; }
			case 15: { jtext = "Бумажный мальчик"; }
			case 16: { jtext = "Дальнобойщика"; }
			case 17: { jtext = "Машиниста трамвая"; }
			case 19: { jtext = "Фермера"; }
			case 21: { jtext = "Уборщика улиц"; }
			case 22: { jtext = "Водителя мусоровоза"; }
			case 30: { jtext = "Развозчика пиццы"; }
			default: return SCM(@p,-1,"Неправильный ид работы!");
			}
			strmid(aData[i][aOwner],jtext,0,strlen(jtext));
			format(aData[i][aNumber], 8, "%s%d%d%d%s%s", randomchar(), random(9), random(9), random(9), randomchar(), randomchar());
			format(string, sizeof(string), "{ffffff}%s | {2E9AFE}52RUS", aData[i][aNumber]);
			aData[i][aCarid] = CreateVehicle(aData[i][aModel], aData[i][aPos][0]+1.0, aData[i][aPos][1]+1.0, aData[i][aPos][2], aData[i][aPos][3], aData[i][aColor1], aData[i][aColor2], 600000);
			SetVehicleVirtualWorld(aData[i][aCarid], aData[i][aWorld]);
			LinkVehicleToInterior(aData[i][aCarid], aData[i][aInt]);
			aData[i][aNumPlate] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, 0.0, 0.0, 1.2, 15.0, INVALID_PLAYER_ID, aData[i][aCarid], 0);
			glob_str = "";
			mysql_format(MySQLGo,glob_str,sizeof(glob_str),"INSERT INTO `vehicles` (`Model`) VALUES ('%d')",aData[i][aModel]);
			new Cache:p = mysql_query(MySQLGo,glob_str);			
			aData[i][aKey] = cache_insert_id();
			glob_str = "";
			format(glob_str,sizeof(glob_str),"Автомобиль для работы %s успешно создан",jtext);
			SendClientMessage(playerid, COLOR_GRAD2, glob_str);
			cache_delete(p, MySQLGo);
			glob_str = "";
			SaveVehicle(i);
			return 1;
		}
		return SendClientMessage(playerid, COLOR_GRAD1, "Нельзя создать машину, так как был превышен лимит.");
	}
	if(strcmp(cmd, "/buycar", true) == 0)
	{
		new buycar;
		GetPlayerName(playerid, playername, sizeof(playername));
		buycar = GetVehicleIdxByID(GetPlayerVehicleID(playerid));
		if(buycar == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Эту машину нельзя купить.");
		if(!GetPlayerVehicleID(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Для начала сядьте в транспортное средство.");
		if(aData[buycar][aOwned]) return SendClientMessage(playerid, COLOR_GRAD1, "Эта машина не продаётся.");
		if(!PlayerInfo[playerid][pPasport]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет паспорта! Получите его в паспортном столе!");
		if(PlayerInfo[playerid][pCKey]) return SendClientMessage(playerid, COLOR_GRAD1, "У вас уже есть машина!");
		if(aData[buycar][aPrice] > eGetPlayerMoney(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "У вас недостаточно денег!");

		strmid(aData[buycar][aOwner], NamePlayer[@p], 0, strlen(NamePlayer[@p]));
		aData[buycar][aOwned] = 1;
		GivePlayerMoney(playerid, -aData[buycar][aPrice]);
		PlayerInfo[playerid][pCash] -= aData[buycar][aPrice];
		SendClientMessage(playerid, COLOR_GREY, "{808080}Вы успешно приобрели данное транспортное средство. Не забудьте перепарковать ваш автомобиль...");
		SendClientMessage(playerid, COLOR_GREY, "{808080}...  с помощью команды {FFFFFF}'/park'{808080}, чтобы его не эвакуировали.");
		SendClientMessage(playerid, COLOR_GREY, "{808080}Для того, чтобы ознакомиться с командами, связанными с т/с, воспользуйтесь командой {FFFFFF}'/help'{808080}.");
		TogglePlayerControllable(playerid, 1);
		PlayerInfo[playerid][pCKey] = aData[buycar][aKey];
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		UpdatePlayerData(@p,"pCKey",PlayerInfo[playerid][pCKey]);
		SaveVehicle(buycar);
		return 1;
	}
	//==========================================================================
	if(strcmp(cmd, "/leaders", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Список лидеров онлайн:");
			foreach(new i:Player)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pLeader] == 6)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер УМВД России по Арзамасскому району %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 2)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер ФСБ %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 3)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Армии %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 4)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер ГКБ №3 г.Арзамас %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 5)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Таксомоторного парка №5 %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 1)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер ОГИБДД России г.Нижегородск %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 7)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Нотарильной конторы %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 8)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Киллеров %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 9)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Телерадиокомпания «Мечта» %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 10)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Такси %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 11)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Автошколы %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 12)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Арзамасского Трамвайного Управления %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 13)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер ООО 'Нижстрой' %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 14)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Camorra %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 15)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Арзамасовской братвы %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 16)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Арзамасовской братвы %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 17)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер СТО №23 %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 18)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Металла-базы %s.",sendername);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
					else if(PlayerInfo[i][pLeader] == 19)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер СВПЧ №31 %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else if(PlayerInfo[i][pLeader] == 20)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер СОБР %s.",sendername);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
					else if(PlayerInfo[i][pLeader] == 21)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Лидер Арзамасовской братвы %s.",sendername);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			//SendClientMessage(playerid, COLOR_YELLOW, "-----------------------------------------");
		}
		return 1;
	}
	///STINGER
	if(strcmp(cmd, "/stinger", true) == 0)
	{
		if(!(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вы не ГИБДД!");
			return 1;
		}
		if(PlayerInfo[playerid][pRank]<7)
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы должны дослужиться до лейтенанта, чтобы ставить шипы!");
			return 1;
		}
		if(totalstinger==(MAX_STINGERS-1))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Шипы закончились, уберите другие шипы!");
			return 1;
		}
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вы должны выйти из машины!");
			return 1;
		}

		new rtext[256];
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//
		{
			if(PlayerInfo[playerid][pRank] == 1) { rtext = "Рядовой полиции (ГИБДД)"; }
			else if(PlayerInfo[playerid][pRank] == 2) { rtext = "Мл. сержант полиции (ГИБДД)"; }
			else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Сержант полиции (ГИБДД)"; }
			else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Ст. сержант полиции (ГИБДД)"; }
			else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Старшина полиции (ГИБДД)"; }
			else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Мл. лейтенант полиции (ГИБДД)"; }
			else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Лейтенант полиции (ГИБДД)"; }
			else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Ст. лейтенант полиции (ГИБДД)"; }
			else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Капитан полиции (ГИБДД)"; }
			else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции (ГИБДД)"; }
			else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции (ГИБДД)"; }
			else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции (ГИБДД)"; }
			else { rtext = "Полковник полиции (ГИБДД)"; }
		}
		totalstinger=totalstinger+1;
		new Float:xA,Float:yA,Float:zA,Float:rot;
		GetPlayerPos(playerid,xA,yA,zA);
		GetPlayerFacingAngle(playerid,rot);
		GetPlayerName(playerid,sendername,sizeof(sendername));
		stinger[totalstinger]= CreateObject(2899,xA,yA,(zA-0.87),0.0,0.0,rot);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 1, 2000, 1);
		format(string, sizeof(string), "* %s %s установил шипы на дорогу",rtext,sendername);
		ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

		if(MAX_STINGERS-totalstinger>0){
			format(string,sizeof(string), "Осталось %d шипов.", (MAX_STINGERS-1-totalstinger));
		}
		else
		{
			format(string,sizeof(string), "Осталось 0 шипов.");
		}
		SendClientMessage(playerid,COLOR_WHITE,string);
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/delstinger", true) == 0)
	{
		if(!(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вы не ГИБДД!");
			return 1;
		}
		new Float:xA,Float:yA,Float:zA;
		for(new id=0; id<MAX_STINGERS; id++)
		{
			if(IsValidObject(stinger[id]))
			{
				GetObjectPos(stinger[id],xA,yA,zA);
				if(IsPlayerInRangeOfPoint(playerid,1.2,xA,yA,zA))
				{
					new rtext[256];
					if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//
					{
						if(PlayerInfo[playerid][pRank] == 1) { rtext = "Рядовой полиции (ГИБДД)"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rtext = "Мл. сержант полиции (ГИБДД)"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Сержант полиции (ГИБДД)"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Ст. сержант полиции (ГИБДД)"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Старшина полиции (ГИБДД)"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Мл. лейтенант полиции (ГИБДД)"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Лейтенант полиции (ГИБДД)"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Ст. лейтенант полиции (ГИБДД)"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Капитан полиции (ГИБДД)"; }
						else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции (ГИБДД)"; }
						else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции (ГИБДД)"; }
						else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции (ГИБДД)"; }
						else { rtext = "Полковник полиции (ГИБДД)"; }
					}
					GetPlayerName(playerid,sendername,sizeof(sendername));
					DestroyObject(stinger[id]);
					totalstinger-=1;
					format(string, sizeof(string), "* %s %s убрал шипы",rtext,sendername);
					ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 1, 2000, 1);
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string,sizeof(string), "Осталось %d шипов", (MAX_STINGERS-1-totalstinger));
					SendClientMessage(playerid,COLOR_WHITE,string);
					return 1;
				}
			}
		}
		SendClientMessage(playerid, COLOR_GRAD1, "Вы не возле шипов");
		return 1;
	}
	//==================================================================================
	//CONUS
	if(strcmp(cmd, "/barricade", true) == 0)
	{
		if(!(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1)) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не сотрудник полиции");
		new j = -1;
		for(new i = 0; i < 10; i++)
		{
			if(bar_obj[i] == -1) 
			{
				j = i;
				break;
			}
		}
		if(j == -1) return SCM(@p,-1,"Достигнут лимит на установку баррикад, необходимо удалить старые");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Используйте: /barricade [1 - 4]");
		new type = strval(tmp);
		if(type < 1 || type > 4) return SendClientMessage(playerid, COLOR_WHITE, "Используйте: /barricade [1 - 4]");
		new Float:pos[4];
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		GetPlayerFacingAngle(playerid, pos[3]);
		pos[0] += floatsin(-pos[3], degrees);
		pos[1] += floatcos(-pos[3], degrees);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
		switch(type)
		{
		case 1: bar_obj[j] = CreateDynamicObject(997, pos[0], pos[1], pos[2]-1.0, 0.0, 0.0, 0.0);
		case 2: bar_obj[j] = CreateDynamicObject(1237, pos[0], pos[1], pos[2]-1.0, 0.0, 0.0, 0.0);
		case 3: bar_obj[j] = CreateDynamicObject(1423, pos[0], pos[1], pos[2]-0.3, 0.0, 0.0, 0.0);
		case 4: bar_obj[j] = CreateDynamicObject(1422, pos[0], pos[1], pos[2]-0.49, 0.0, 0.0, 0.0);
		}
		glob_str = "";
		format(glob_str,sizeof(glob_str),"Дорожное заграждение № %d. Установил %s",j,NamePlayer[@p]);
		bar_text[j] = CreateDynamic3DTextLabel(glob_str,-1,pos[0], pos[1], pos[2]-0.7,10.0);
		glob_str = "";
		new rank = PlayerInfo[@p][pRank];
		if(rank > 15) rank = 15;
		format(glob_str,sizeof(glob_str),"[R] %s %s установил дорожное заграждение",FrakInfo[0][rank][rang],NamePlayer[@p]);
		SendRadioMessage(1, FrakInfo[0][0][Rcolor], glob_str);
		glob_str = "";
		SCM(@p,-1,"Заграждение успешно установлено, чтобы удалить используйте: /delbar");
		return 1;	
	}
	if(strcmp(cmd, "/delbar", true) == 0)
	{
		if(!(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1)) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не сотрудник полиции");
		new Float:pos[4];
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		for(new i = 0; i < 10; i++)
		{
			if(bar_obj[i] != -1) 
			{
				Streamer_GetDistanceToItem(pos[0], pos[1], pos[2],2,bar_obj[i],pos[3]);
				if(pos[3] <= 3.0)
				{
					if(IsValidDynamic3DTextLabel(bar_text[i])) DestroyDynamic3DTextLabel(bar_text[i]);
					if(IsValidDynamicObject(bar_obj[i])) DestroyDynamicObject(bar_obj[i]);
					bar_obj[i] = -1;
					new rank = PlayerInfo[@p][pRank];
					if(rank > 15) rank = 15;
					format(glob_str,sizeof(glob_str),"[R] %s %s убрал дорожное заграждение",FrakInfo[0][rank][rang],NamePlayer[@p]);
					SendRadioMessage(1, FrakInfo[0][0][Rcolor], glob_str);
					glob_str = "";
					SCM(@p,-1,"Установленное Вами заграждение было успешно удалено");
					return 1;
				}
			}
		}
		return SCM(@p,-1,"Необходимо находиться около заграждения");
	}	
	if(strcmp(cmd, "/conus", true) == 0)
	{
		if(!(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1||PlayerInfo[playerid][pMember]==13||PlayerInfo[playerid][pLeader]==13)) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не сотрудник полиции/строитель");
		if(totalconus==(MAX_CONUS-1)) return SendClientMessage(playerid, COLOR_GRAD1, "Конусы закончились, уберите другие");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Вы должны выйти из машины");
		new rtext[50];
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//
		{
			switch(PlayerInfo[playerid][pRank])
			{
			case 1:rtext = "Рядовой полиции (ГИБДД)";
			case 2:rtext = "Мл. сержант полиции (ГИБДД)";
			case 3:rtext = "Сержант полиции (ГИБДД)";
			case 4:rtext = "Ст. сержант полиции (ГИБДД)";
			case 5:rtext = "Старшина полиции (ГИБДД)";
			case 6:rtext = "Мл. лейтенант полиции (ГИБДД)";
			case 7:rtext = "Лейтенант полиции (ГИБДД)";
			case 8:rtext = "Ст. лейтенант полиции (ГИБДД)";
			case 9:rtext = "Капитан полиции (ГИБДД)";
			case 10:rtext = "Майор полиции (ГИБДД)";
			case 11:rtext = "Подполковник полиции (ГИБДД)";
			case 12:rtext = "Полковник полиции (ГИБДД)";
			default:rtext = "Полковник полиции (ГИБДД)";
			}
		}
		if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)//
		{
			switch(PlayerInfo[playerid][pRank])
			{
			default:rtext = "Строитель";
			}
		}
		new idx_con = -1;
		for(new id=0; id < MAX_CONUS; id++)
		{
			if(conus[id] == -1)
			{
				idx_con = id;
				break;
			}
		}
		if(idx_con == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нет доступных конусов для установки.");
		totalconus++;
		new Float:xA,Float:yA,Float:zA,Float:rot;
		GetPlayerPos(playerid,xA,yA,zA);
		GetPlayerFacingAngle(playerid,rot);
		GetPlayerName(playerid,sendername,sizeof(sendername));
		conus[idx_con] = CreateDynamicObject(18318,xA,yA,(zA-0.65), 0.0,0.0,0.0);
		printf("conus[idx_con = %d] = %d ",idx_con,conus[idx_con]);
		format(string, sizeof(string), "* %s %s поставил конус",rtext,sendername);
		ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		if(MAX_CONUS-totalconus>0) format(string,sizeof(string), "Осталось %d конусов", (MAX_CONUS-1-totalconus));
		else format(string,sizeof(string), "Осталось 0 конусов");
		SendClientMessage(playerid,COLOR_WHITE,string);
		return 1;
	}

	///DELCONUS
	if(strcmp(cmd, "/delconus", true) == 0)
	{
		if(!(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1||PlayerInfo[playerid][pMember]==13||PlayerInfo[playerid][pLeader]==13)) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не сотрудник полиции/строитель");
		new Float:xA,Float:yA,Float:zA;
		for(new id = 0; id < MAX_CONUS; id++)
		{
			printf("conus[id = %d] = %d ",conus[id],id);
			printf("validate_ob %d",IsValidDynamicObject(conus[id]));
			if(IsValidDynamicObject(conus[id]))
			{
				GetDynamicObjectPos(conus[id],xA,yA,zA);
				printf("позиция %d",IsPlayerInRangeOfPoint(playerid,1.2,xA,yA,zA));
				if(IsPlayerInRangeOfPoint(playerid,1.2,xA,yA,zA))
				{
					new rtext[64];
					if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//
					{
						switch(PlayerInfo[playerid][pRank])
						{
						case 1:rtext = "Рядовой полиции (ГИБДД)";
						case 2:rtext = "Мл. сержант полиции (ГИБДД)";
						case 3:rtext = "Сержант полиции (ГИБДД)";
						case 4:rtext = "Ст. сержант полиции (ГИБДД)";
						case 5:rtext = "Старшина полиции (ГИБДД)";
						case 6:rtext = "Мл. лейтенант полиции (ГИБДД)";
						case 7:rtext = "Лейтенант полиции (ГИБДД)";
						case 8:rtext = "Ст. лейтенант полиции (ГИБДД)";
						case 9:rtext = "Капитан полиции (ГИБДД)";
						case 10:rtext = "Майор полиции (ГИБДД)";
						case 11:rtext = "Подполковник полиции (ГИБДД)";
						case 12:rtext = "Полковник полиции (ГИБДД)";
						default:rtext = "Полковник полиции (ГИБДД)";
						}
					}
					if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)//
					{
						switch(PlayerInfo[playerid][pRank])
						{
						default:rtext = "Строитель";
						}
					}
					GetPlayerName(playerid,sendername,sizeof(sendername));
					if(IsValidDynamicObject(conus[id]))
					{
						DestroyDynamicObject(conus[id]);
						conus[id]=-1;
						totalconus-=1;
						format(string, sizeof(string), "* %s %s убрал конус",rtext,sendername);
						ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						format(string,sizeof(string), "Осталось %d конусов", (MAX_CONUS-1-totalconus));
						SendClientMessage(playerid,COLOR_WHITE,string);
						return 1;
					}
					else return SCM(@p,-1,"Произошла ошибка при удалении! Невалидный обьект");
				}
			}
		}
		SendClientMessage(playerid, COLOR_GRAD1, "Вы не возле конуса");
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd,"/members",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			new teamnumber;
			if(PlayerInfo[playerid][pLeader] != 0) teamnumber = PlayerInfo[playerid][pLeader];
			else if(PlayerInfo[playerid][pMember] != 0) teamnumber = PlayerInfo[playerid][pMember];
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вы не состоите в организации.");
				return 1;
			}
			SendClientMessage(playerid, COLOR_YELLOW, "Список игроков вашей организации, находящихся в сети:");
			foreach(new i:Player)
			{
				if(IsPlayerConnected(i))
				{
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "");
					if(PlayerInfo[i][pLeader] == teamnumber) format(string, sizeof(string), "%s (Лидер)",sendername);
					else if(PlayerInfo[i][pMember] == teamnumber) format(string, sizeof(string), "%s, Ранг: %d.",sendername, PlayerInfo[i][pRank]);
					if(strlen(string) > 1) SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/househelp", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Доступные команды недвижимости:");
			SendClientMessage(playerid,COLOR_WHITE,"/rentable{808080} - включить/выключить аренду, {FFFFFF}/setrent{808080} - установить стоимость аренды");
			SendClientMessage(playerid,COLOR_WHITE,"/chbank{808080} - узнать счёт дома, {FFFFFF}/evict{808080} - выселить игрока из дома");
			SendClientMessage(playerid,COLOR_WHITE,"/checkrent{808080} - посмотреть список арендующих, {FFFFFF}/unrent{808080} - выселиться из дома");
			SendClientMessage(playerid,COLOR_WHITE,"/houselock{808080} - открыть/закрыть дом, {FFFFFF}/sellhouse{808080} - продать дом");
			return 1;
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/hhelp", true) == 0 || strcmp(cmd, "/hh", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			//------------------------------------------------------------------------------
			if(PlayerInfo[playerid][pHelper] == 1)
			{
				SendClientMessage(playerid, 0x0066FFAA,"Помощник по игре: /hot [id] [текст] - ответить на вопрос.");
				SendClientMessage(playerid, 0x0066FFAA,"Помощник по игре: /admsay [текст] - писать от имени помощника по игре (видят все игроки).");
				SendClientMessage(playerid, 0x0066FFAA,"Помощник по игре: /kick [id] [причина] - кикнуть игрока, /a - чат администраторов.");
			}
			//------------------------------------------------------------------------------
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			//----------------------------------------------------------------------------—
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				SendClientMessage(playerid, COLOR_WHITE,"1 lvl: /a /check /spec /slap /kick /warn /admsay /demorgan /scar /freeze /unfreeze");
				SendClientMessage(playerid, COLOR_WHITE,"1 lvl: /resetgun /checkw /goto /gethere /mute /unmute");
			}
			//----------------------------------------------------------------------------—
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				SendClientMessage(playerid, COLOR_WHITE,"2 lvl: /skin /ban /unban /getip /regip /getfake /agetip /banip /unbanip");
				SendClientMessage(playerid, COLOR_WHITE,"2 lvl: /spasti /onj /fuelcars /getcar /gotocar");
			}
			//----------------------------------------------------------------------------—
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				SendClientMessage(playerid, COLOR_WHITE,"3 lvl: /fixveh /uval /makeleader /unwarn /sethp /offban /setweather /spasti /chat");
				SendClientMessage(playerid, COLOR_WHITE,"3 lvl: /sethunger /offuninvite /setarmor /skick /sban /givedrugs /givemats /getcar");
			}
			//----------------------------------------------------------------------------—
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				SendClientMessage(playerid, COLOR_WHITE,"4 lvl: /setstat /deleteakk /addcar /addpod /addflat /delfat /delcar /mark /gotomark");
			}
			//----------------------------------------------------------------------------—
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd,"/showdocs",true)==0 || strcmp(cmd,"/showdrivelicense",true)==0)
	{
		new string1[256];
		new string11[256];
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "ПОДСКАЗКА: /showdocs [playerid/PartOfName]");
				return true;
			}
			//if(PlayerInfo[playerid][pCarLic] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "У вас никогда небыло водительских прав.");
			giveplayerid = strval(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new text32[20];
						new text33[20];
						new text34[20];
						new text35[20];
						if(PlayerInfo[playerid][pKatA]) { text32 = "A"; } else { text32 = ""; }
						if(PlayerInfo[playerid][pKatB]) { text33 = "B"; } else { text33 = ""; }
						if(PlayerInfo[playerid][pKatC]) {  text34 = "C"; } else { text34 = ""; }
						if(PlayerInfo[playerid][pKatD]) {  text35 = "D"; } else { text35 = ""; }
						format(string1, sizeof(string1), "ВОДИТЕЛЬСКОЕ УДОСТОВЕРЕНИЕ | DRIVER'S LICENSE");
						SendClientMessage(giveplayerid, COLOR_WHITE, string1);
						if(PlayerInfo[playerid][pCarLic] == 1){ format(string11, sizeof(string11), "Действительны");} else {format(string11, sizeof(string11), "Изъяты");}
						format(string1, sizeof(string1), "1. Фамилия водителя: %s", sendername);
						SendClientMessage(giveplayerid, COLOR_GREY, string1);

						format(string1, sizeof(string1), "Местожительство: Нижегородская область", sendername);
						SendClientMessage(giveplayerid, COLOR_GREY, string1);

						format(string1, sizeof(string1), "-подпись владельца-", sendername);
						SendClientMessage(giveplayerid, COLOR_GREY, string1);

						format(string1, sizeof(string1), "2. Статус: %s", string11);
						SendClientMessage(giveplayerid, COLOR_GREY, string1);

						format(string1, sizeof(string1), "3. Дата выдачи: %s",PlayerInfo[playerid][pCarLic3]);
						SendClientMessage(giveplayerid, COLOR_GREY, string1);
						format(string1, sizeof(string1), "4. Кем выдано: %s",PlayerInfo[playerid][pCarLic2]);
						SendClientMessage(giveplayerid, COLOR_GREY, string1);
						format(string1, sizeof(string1), "5. Полученные категории: %s %s %s %s",text32,text33,text34,text35);
						SendClientMessage(giveplayerid, COLOR_GREY, string1);

						if(PlayerInfo[playerid][pCarLic] == -1)
						{
							format(string1, sizeof(string1), "Дата изъятия: %s",PlayerInfo[playerid][pCarLic4]);
							SendClientMessage(giveplayerid, COLOR_GREY, string1);
							format(string1, sizeof(string1), "Кем изъяты: %s",PlayerInfo[playerid][pCarLic21]);
							SendClientMessage(giveplayerid, COLOR_GREY, string1);
						}

						format(string1, sizeof(string1), "* Игрок %s показал водительское удостоверение %s.", sendername,giveplayer);
						ProxDetector(30.0, playerid, string1, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок далеко от вас!");
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Этот игрок оффлайн!");
				return true;
			}
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd,"/showmk",true)==0)
	{
		new string1[256];
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "ПОДСКАЗКА: /showmk [playerid/PartOfName]");
				return true;
			}
			if(PlayerInfo[playerid][pMK] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "У вас нет мед. карты!");
			giveplayerid = strval(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string1, sizeof(string1), "|__________ Медицинская карта %s __________|", sendername);
						SendClientMessage(giveplayerid, COLOR_GREY, string1);
						format(string1, sizeof(string1), "Дата выдачи: %s",PlayerInfo[playerid][pMK3]);
						SendClientMessage(giveplayerid, COLOR_GREY, string1);
						format(string1, sizeof(string1), "Кем выдано: %s",PlayerInfo[playerid][pMK2]);
						SendClientMessage(giveplayerid, COLOR_GREY, string1);
						format(string1, sizeof(string1), "История болезней: %s",PlayerInfo[playerid][pMK4]);
						SendClientMessage(giveplayerid, COLOR_GREY, string1);
						SendClientMessage(giveplayerid, COLOR_GREY, "|______________________________________________|");
						format(string1, sizeof(string1), "* %s показал медицинскую карту.", sendername);
						ProxDetector(30.0, playerid, string1, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок не около вас! !");
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Этот игрок оффлайн !");
				return true;
			}
		}
		return true;
	}
	//==============================================================================
	if(strcmp(cmd, "/giveashess", true) == 0 || strcmp(cmd, "/giveash", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsAnInstructor(playerid))
			{
				if(PlayerInfo[playerid][pRank] < 6)
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 3 ранга или выше!");
					return 1;
				}
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_GREY, "Используйте: /giveash (A,B,C,D) [ID]");
					return 1;
				}
				if(strcmp(x_nr,"A",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GREY, "Используйте: /givecilense A [ID]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s A категорию.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник автошколы %s выдал вам A категорию.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pKategA] = 1;
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере!");
						return 1;
					}
				}
				else if(strcmp(x_nr,"B",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GREY, "Используй: /giveash B [ID]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s B категорию.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник автошколы %s выдал вам B категорию.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pKategB] = 1;
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере!");
						return 1;
					}
				}
				else if(strcmp(x_nr,"C",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GREY, "Используй: /giveash C [ID]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s C категорию.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник автошколы %s выдал вам C категорию.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pKategC] = 1;
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере!");
						return 1;
					}
				}
				else if(strcmp(x_nr,"D",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GREY, "Используй: /giveash D [ID]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s D категорию.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник автошколы %s выдал вам D категорию.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pKategD] = 1;
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не инструктор!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/givelicense", true) == 0 || strcmp(cmd, "/gl", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
   			if(!PlayerToPoint(10.0, playerid, -101.2187,1483.6010,451.7260) || !PlayerToPoint(10.0, playerid, -302.4022,1162.1583,579.0229)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не в дежурной части");
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
			if(PlayerInfo[playerid][pRank] >= 6)
			{
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_GREY, "Используйте: /givelicense (A, B, C, D, Оружие) [id игрока]");
					return 1;
				}
				if(strcmp(x_nr,"Права",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GREY, "Используйте: /givelicense A [id игрока]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(!ProxDetectorS(3.0, playerid, giveplayerid)) return SendClientMessage(playerid, -1, "Вы слишком далеко друг от друга.");
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s А категорию. Описание: Можно водить мотоциклы",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник %s МРЭО-ГИБДД выдал вам А категорию. Описание: Разрешение водить мотоциклы",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pKatA] = 1;
							PlayerInfo[giveplayerid][pKatB] = 1;
							PlayerInfo[giveplayerid][pKatC] = 1;
							PlayerInfo[giveplayerid][pKatD] = 1;
							PlayerInfo[giveplayerid][pCarLic] = 1;
							format_string = "";
							new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
							format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

							mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','GiveLicense Kategory: ALL','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
							mysql_tquery(MySQLGo, format_string);
							new year,month,day,hour,minute,second;
							new mtext[20];
							new dtext[20];
							getdate(year, month, day);
							if(month == 1) { mtext = "01"; }
							else if(month == 2) { mtext = "02"; }
							else if(month == 3) { mtext = "03"; }
							else if(month == 4) { mtext = "04"; }
							else if(month == 5) { mtext = "05"; }
							else if(month == 6) { mtext = "06"; }
							else if(month == 7) { mtext = "07"; }
							else if(month == 8) { mtext = "08"; }
							else if(month == 9) { mtext = "09"; }
							else if(month == 10) { mtext = "10"; }
							else if(month == 11) { mtext = "11"; }
							else if(month == 12) { mtext = "12"; }
							if(day == 1) { dtext = "01"; }
							else if(day == 2) { dtext = "02"; }
							else if(day == 3) { dtext = "03"; }
							else if(day == 4) { dtext = "04"; }
							else if(day == 5) { dtext = "05"; }
							else if(day == 6) { dtext = "06"; }
							else if(day == 7) { dtext = "07"; }
							else if(day == 8) { dtext = "08"; }
							else if(day == 9) { dtext = "09"; }
							else if(day == 10) { dtext = "10"; }
							else if(day == 11) { dtext = "11"; }
							else if(day == 12) { dtext = "12"; }
							else if(day == 13) { dtext = "13"; }
							else if(day == 14) { dtext = "14"; }
							else if(day == 15) { dtext = "15"; }
							else if(day == 16) { dtext = "16"; }
							else if(day == 17) { dtext = "17"; }
							else if(day == 18) { dtext = "18"; }
							else if(day == 19) { dtext = "19"; }
							else if(day == 20) { dtext = "20"; }
							else if(day == 21) { dtext = "21"; }
							else if(day == 22) { dtext = "22"; }
							else if(day == 23) { dtext = "23"; }
							else if(day == 24) { dtext = "24"; }
							else if(day == 25) { dtext = "25"; }
							else if(day == 26) { dtext = "26"; }
							else if(day == 27) { dtext = "27"; }
							else if(day == 28) { dtext = "28"; }
							else if(day == 29) { dtext = "29"; }
							else if(day == 30) { dtext = "30"; }
							else if(day == 31) { dtext = "31"; }
							gettime(hour,minute,second);
							if(PlayerInfo[giveplayerid][pCarLic]==0)
							{
								format(PlayerInfo[giveplayerid][pCarLic5],256, "%d%d%d%d%d%d%d%d", random(9), random(9), random(9), random(9), random(9), random(9), random(9), random(9));
							}
							format(PlayerInfo[giveplayerid][pCarLic3],256,"%s.%s.%d  %d:%d:%d",dtext,mtext,year,hour,minute, second);
							new lname[MAX_PLAYER_NAME];
							GetPlayerName(playerid, lname, sizeof(lname));
							format(PlayerInfo[giveplayerid][pCarLic2],256,"%s",lname);
							SaveAccounts();
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере!");
						return 1;
					}
				}
				if(strcmp(x_nr,"A",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "ИСПОЛЬЗОВАНИЕ: /givelicense A [id_игрока/ЧастьИмени]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(!ProxDetectorS(3.0, playerid, giveplayerid)) return SendClientMessage(playerid, -1, "Вы слишком далеко друг от друга.");
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s А категорию. Описание: Можно водить мотоциклы",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник %s МРЭО-ГИБДД выдал вам А категорию. Описание: Разрешение водить мотоциклы",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pKatA] = 1;
							PlayerInfo[giveplayerid][pCarLic] = 1;
							prava[giveplayerid] = 2;
							format_string = "";
							new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
							format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

							mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','GiveLicense Kategory: A','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
							mysql_tquery(MySQLGo, format_string);
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере!");
						return 1;
					}
				}
				if(strcmp(x_nr,"B",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "ИСПОЛЬЗОВАНИЕ: /givelicense B [id_игрока/ЧастьИмени]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(!ProxDetectorS(3.0, playerid, giveplayerid)) return SendClientMessage(playerid, -1, "Вы слишком далеко друг от друга.");
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s B категорию. Описание: Разрешение водить легковые автомобили.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник %s МРЭО-ГИБДД выдал вам B категорию. Описание: Разрешение водить легковой автомобиль.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format_string = "";
							new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
							format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

							mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','GiveLicense Kategory: B','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
							mysql_tquery(MySQLGo, format_string);
							PlayerInfo[giveplayerid][pKatB] = 1;
							PlayerInfo[giveplayerid][pCarLic] = 1;
							prava[giveplayerid] = 2;
							new year,month,day,hour,minute,second;
							new mtext[20];
							new dtext[20];
							getdate(year, month, day);
							if(month == 1) { mtext = "01"; }
							else if(month == 2) { mtext = "02"; }
							else if(month == 3) { mtext = "03"; }
							else if(month == 4) { mtext = "04"; }
							else if(month == 5) { mtext = "05"; }
							else if(month == 6) { mtext = "06"; }
							else if(month == 7) { mtext = "07"; }
							else if(month == 8) { mtext = "08"; }
							else if(month == 9) { mtext = "09"; }
							else if(month == 10) { mtext = "10"; }
							else if(month == 11) { mtext = "11"; }
							else if(month == 12) { mtext = "12"; }
							if(day == 1) { dtext = "01"; }
							else if(day == 2) { dtext = "02"; }
							else if(day == 3) { dtext = "03"; }
							else if(day == 4) { dtext = "04"; }
							else if(day == 5) { dtext = "05"; }
							else if(day == 6) { dtext = "06"; }
							else if(day == 7) { dtext = "07"; }
							else if(day == 8) { dtext = "08"; }
							else if(day == 9) { dtext = "09"; }
							else if(day == 10) { dtext = "10"; }
							else if(day == 11) { dtext = "11"; }
							else if(day == 12) { dtext = "12"; }
							else if(day == 13) { dtext = "13"; }
							else if(day == 14) { dtext = "14"; }
							else if(day == 15) { dtext = "15"; }
							else if(day == 16) { dtext = "16"; }
							else if(day == 17) { dtext = "17"; }
							else if(day == 18) { dtext = "18"; }
							else if(day == 19) { dtext = "19"; }
							else if(day == 20) { dtext = "20"; }
							else if(day == 21) { dtext = "21"; }
							else if(day == 22) { dtext = "22"; }
							else if(day == 23) { dtext = "23"; }
							else if(day == 24) { dtext = "24"; }
							else if(day == 25) { dtext = "25"; }
							else if(day == 26) { dtext = "26"; }
							else if(day == 27) { dtext = "27"; }
							else if(day == 28) { dtext = "28"; }
							else if(day == 29) { dtext = "29"; }
							else if(day == 30) { dtext = "30"; }
							else if(day == 31) { dtext = "31"; }
							gettime(hour,minute,second);
							if(PlayerInfo[giveplayerid][pCarLic]==0)
							{
								format(PlayerInfo[giveplayerid][pCarLic5],256, "%d%d%d%d%d%d%d%d", random(9), random(9), random(9), random(9), random(9), random(9), random(9), random(9));
							}
							format(PlayerInfo[giveplayerid][pCarLic3],256,"%s.%s.%d  %d:%d:%d",dtext,mtext,year,hour,minute, second);
							new lname[MAX_PLAYER_NAME];
							GetPlayerName(playerid, lname, sizeof(lname));
							format(PlayerInfo[giveplayerid][pCarLic2],256,"%s",lname);
							SaveAccounts();
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в сети!");
						return 1;
					}
				}
				if(strcmp(x_nr,"C",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "ИСПОЛЬЗОВАНИЕ: /givelicense C [id_игрока/ЧастьИмени]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(!ProxDetectorS(3.0, playerid, giveplayerid)) return SendClientMessage(playerid, -1, "Вы слишком далеко друг от друга.");
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s C категорию. Описание: Разрешение водить тягачи/фургоны.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник %s МРЭО-ГИБДД выдал вам C категорию. Описание: Разрешение водить тягачи/фургоны.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format_string = "";
							new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
							format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

							mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','GiveLicense Kategory: C','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
							mysql_tquery(MySQLGo, format_string);
							PlayerInfo[giveplayerid][pKatC] = 1;
							PlayerInfo[giveplayerid][pCarLic] = 1;
							prava[giveplayerid] = 2;
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере!");
						return 1;
					}
				}
				if(strcmp(x_nr,"D",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "Использование: /givelicense D [id_игрока/ЧастьИмени]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(!ProxDetectorS(3.0, playerid, giveplayerid)) return SendClientMessage(playerid, -1, "Вы слишком далеко друг от друга.");
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s D категорию. Описание: Разрешение водить автобусы/маршрутки.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник %s МРЭО-ГИБДД выдал вам D категорию. Описание: Разрешение водить автобусы/маршрутки.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format_string = "";
							new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
							format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

							mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','GiveLicense Kategory: D','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
							mysql_tquery(MySQLGo, format_string);
							PlayerInfo[giveplayerid][pKatD] = 1;
							PlayerInfo[giveplayerid][pCarLic] = 1;
							prava[giveplayerid] = 2;
							return 1;
						}
					}

				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник полиции!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/giveashess", true) == 0 || strcmp(cmd, "/giveash", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsAnInstructor(playerid))
			{
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_GREY, "Используйте: /giveash (A,B,C,D) [ID]");
					return 1;
				}
				if(strcmp(x_nr,"A",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GREY, "Используйте: /givecilense A [ID]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s A категорию.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник автошколы %s выдал вам A категорию.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pKategA] = 1;
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере!");
						return 1;
					}
				}
				else if(strcmp(x_nr,"B",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GREY, "Используй: /giveash B [ID");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s B категорию.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник автошколы %s выдал вам B категорию.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pKategB] = 1;
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере!");
						return 1;
					}
				}
				else if(strcmp(x_nr,"C",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GREY, "Используй: /giveash C [ID");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s C категорию.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник автошколы %s выдал вам C категорию.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pKategC] = 1;
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере!");
						return 1;
					}
				}
				else if(strcmp(x_nr,"D",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GREY, "Используй: /giveash D [ID");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы выдали игроку %s D категорию.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Сотрудник автошколы %s выдал вам D категорию.",sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pKategD] = 1;
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не инструктор!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/showashess", true) == 0 || strcmp(cmd, "/showash", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /showash [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						//if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_WHITE, "Подсказка: Чтобы проверить свои категории, Используйте: /showash"); return 1; }
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new text22[20];
						new text23[20];
						new text24[20];
						new text25[20];
						if(PlayerInfo[playerid][pKategA]) { text22 = "A"; } else { text22 = ""; }
						if(PlayerInfo[playerid][pKategB]) { text23 = "B"; } else { text23 = ""; }
						if(PlayerInfo[playerid][pKategC]) {  text24 = "C"; } else { text24 = ""; }
						if(PlayerInfo[playerid][pKategD]) {  text25 = "D"; } else { text25 = ""; }
						format(string, sizeof(string), "------ Свидетельство об окончании автошколы ------", sendername);
						SendClientMessage(giveplayerid, 0xAAAAAAFF, string);
						format(string, sizeof(string), "Имя,Фамилия: %s", sendername);
						SendClientMessage(giveplayerid, 0xAAAAAAFF, string);
						format(string, sizeof(string), "Категории: %s %s %s %s", text22, text23, text24, text25);
						SendClientMessage(giveplayerid, 0xAAAAAAFF, string);
						SendClientMessage(giveplayerid, 0xAAAAAAFF, "Название оконченной автошколы: РОСТО ДОСААФ РОССИИ");
						SendClientMessage(giveplayerid, 0xAAAAAAFF, "Данное свидетельство означает,что его владелец прошёл обучение вождению и теории в автошколе,");
						SendClientMessage(giveplayerid, 0xAAAAAAFF, "сдав внутренние экзамены и готов к сдаче экзаменов ГИБДД");
						SendClientMessage(giveplayerid, 0xAAAAAAFF, "-----------------------------------------------------");
						format(string, sizeof(string), " %s показал Вам свидетельство об окончании автошколы.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), " Вы показали своё свидетельство об окончании автошколы %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Вы показали игроку %s свидетельство об окончании автошколы",giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок не около вас!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " Игрок не в сети!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/startlesson", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Используйте: /startlesson [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = strval(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* Вы начали %s урок.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Инструктор %s начал с вами урок.",sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						TakingLesson[giveplayerid] = 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не инспектор МРЭО.");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/stoplesson", true) == 0 || strcmp(cmd, "/stp", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /stp [id игрока]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(TakingLesson[giveplayerid] != 1)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не принимаете урок у этого игрока!");
							return 1;
						}
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* Вы закончили урок %s.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Инструктор %s закончил ваш урок.",sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						TakingLesson[giveplayerid] = 0;
						RemovePlayerFromVehicle(giveplayerid);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не инструктор!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/camera", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsACop(playerid))
			{
				if(!PlayerToPoint(8.0,playerid,211.6222,1811.9565,21.8594))
				{
					SendClientMessage(playerid, COLOR_GREY, "   Вы не возле Панели Безопасности Area51 !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "Используйте: /camera [number 1 - 6]  (6 = OFF)");
					return 1;
				}
				new number = strval(tmp);
				if(number < 1 || number > 6) { SendClientMessage(playerid, COLOR_WHITE, "   Номер Камеры может быть от 1 до 6 !"); return 1; }
				TogglePlayerControllable(playerid, 0);
				GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
				if(number == 1) { SetPlayerCameraPos(playerid, 118.1011,1931.3221,22.5527); SetPlayerCameraLookAt(playerid, 98.9656,1920.9819,18.2180); }
				else if(number == 2) { SetPlayerCameraPos(playerid, 213.5340,1875.3075,17.6406); SetPlayerCameraLookAt(playerid, 213.8679,1884.1714,13.8945); }
				else if(number == 3) { SetPlayerCameraPos(playerid, 266.0640,1894.8856,38.6459); SetPlayerCameraLookAt(playerid, 224.0039,1887.1532,17.6406); }
				else if(number == 4) { SetPlayerCameraPos(playerid, 260.8112,1808.0175,38.6303); SetPlayerCameraLookAt(playerid, 227.5645,1818.4778,17.6406); }
				else if(number == 5) { SetPlayerCameraPos(playerid, 114.5196,1814.3483,38.6029); SetPlayerCameraLookAt(playerid, 123.6176,1846.4792,17.6549); }
				else if(number == 6)
				{
					MedicBill[playerid] = 0;
					TogglePlayerControllable(playerid, 1);
					//SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(playerid);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не Милиционер/Сотрудник ФСБ/Военный!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd,"/divorce",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMarried] < 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не женаты/незамужем !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "Используйте: /divorce [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Нельзя писать свой ID!!!"); return 1; }
						new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s", giveplayer);
						strmid(wstring, string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
						strmid(dstring, string, 0, strlen(string), 255);
						if(strcmp(dstring ,wstring, true ) == 0 )
						{
							format(string, sizeof(string), "Вы подали на развод с %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), " %s предложил вам развестись (используйте /accept divorce чтобы принять)", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							DivorceOffer[giveplayerid] = playerid;
							return 1;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, " Этот игрок Не женат/незамужем на Вас!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок не возле Вас !");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Этого игрока нету на сервере !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gps", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(pizzadone[playerid] == 0) return SendClientMessage(playerid,COLOR_RED,"Сначала отвезите пиццу!");
			if(DalOnReis[playerid]!=0) return SendClientMessage(playerid,COLOR_RED,"Сначала завершите рейс");			
			ShowPlayerDialog(playerid,40,DIALOG_STYLE_LIST,"{2E9AFE}GPS-навигатор.","{808080}1. {FFFFFF}Общественные места\n{808080}2. {FFFFFF}По работе\n{808080}3. {FFFFFF}Ближайшие места\n{808080}4. {FFFFFF}Развлекательные места\n{CC0000}Отключить GPS","Принять","Отмена");
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	///DALSTART
	if(strcmp(cmd, "/dalstart", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 16) return SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик!");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в грузовике!");
		new vehD;
		vehD = GetPlayerVehicleID(playerid);
		if(!Isdalnob(vehD)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в грузовике!");
		if(!IsTrailerAttachedToVehicle(vehD)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны прицепить трейлер!");
		if(DalOnReis[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже в рейсе!");
		DalOnReis[playerid]=1;
		new rand = random(2);
		SendClientMessage(playerid, COLOR_RED, "[Диспетчер]: Дальнобойщик! Вот ваше направление! Удачной дороги!");
		switch(rand)
		{
			case 0:SetPlayerCheckpoint(playerid,-278.0843,387.3613,13.3435,5.0);
			case 1:SetPlayerCheckpoint(playerid,-2670.8889,2895.1760,37.9136,5.0);
			case 2:SetPlayerCheckpoint(playerid,-2362.5740,285.6359,23.9883,5.0);
		}
		SetPVarInt(playerid,#P_Dal,1);
		return 1;
	}
	if(strcmp(cmd, "/dalstart", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 16) return SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик!");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в грузовике!");
		new vehD = GetPlayerVehicleID(playerid);
		if(!Isdalnob(vehD)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в грузовике!");
		if(!DalOnReis[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не в рейсе!");
		DalOnReis[playerid] = 0;
		DisablePlayerCheckpoint(@p);
		DeletePVar(@p,#P_Dal);
		SCM(@p,COLOR_GREY,"Вы завершили рейс");
		return 1;
	}
	//===============================================================================
	//	///SPAWNCHANGE
	if(strcmp(cmd, "/spawnchange", true) == 0)
	{
		SPD(@p,1265,DIALOG_STYLE_LIST,"Выбор места спавна","{808080}1. {FFFFFF}Дом или квартира\n{808080}2. {FFFFFF}Вокзал или база организации","Выбор","отмена");
		return 1;				
	}
	//==============================================================================
	if(strcmp(cmd, "/question", true) == 0 || strcmp(cmd, "/вопрос", true) == 0)
	{
		if(GetPVarInt(playerid,"AnFlood") > gettime()) return SendClientMessage(playerid,-1,"Пожалуйста подождите...");
		if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Введите: /question [текст вопроса]");
				return 1;
			}
			{
				format(string, sizeof(string), "{2E9AFE}Вопрос от {CCFF00}%s[%d]: {2E9AFE}%s", sendername, playerid, (result));
				SendAdmHelpMessage(0xF57600FF, string);
			}
			format(string, sizeof(string), "Вы отправили свой вопрос помощникам по игре: %s", (result));
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			SetPVarInt(playerid,"AnFlood",gettime() + 10); // тут регулируется время, я поставил 10 секунд
		}
		return 1;
	}
	if(strcmp(cmd, "/aot", true) == 0 || strcmp(cmd, "/aotvet", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /aot(vet) [id игрока] [текст]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /aot [id игрока] [текст]");
							return 1;
						}
						if(PlayerInfo[playerid][pAdmin] > 0)
						{
							format(string, sizeof(string), "(Ответ на жалобу) от %s: %s", sendername, (result));
						}
						SendClientMessage(giveplayerid, 0xFF5F42FF, string);
						format(string, sizeof(string), "Администратор %s ответил %s: %s", sendername, giveplayer, (result));
						HABroadCast(playerid,COLOR_ORANGERED,string,1);
						format(string, sizeof(string), "Вы ответили %s(ID: %d): %s", giveplayer, giveplayerid, (result));
						SendClientMessage(playerid,  0xFF5F42FF, string);
						return 1;
					}
				}
				else
				{
					format(string, sizeof(string), "Игрок не в сети!");
					SendClientMessage(playerid, COLOR_GREY, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/hot", true) == 0 || strcmp(cmd, "/hotvet", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /hot(vet) [id игрока] [текст]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /hot [id игрока] [текст]");
							return 1;
						}
						if(PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pHelper] > 0)
						{
							format(string, sizeof(string), "(Ответ на вопрос) от %s: %s", sendername, (result));
						}
						SendClientMessage(giveplayerid, 0xF57600FF, string);
						format(string, sizeof(string), "Помощник по игре %s ответил %s: %s", sendername, giveplayer, (result));
						HABroadCast(playerid,COLOR_ORANGERED,string,1);
						format(string, sizeof(string), "Вы ответили %s(ID: %d): %s", giveplayer, giveplayerid, (result));
						SendClientMessage(playerid,  0xF57600FF, string);
						return 1;
					}
				}
				else
				{
					format(string, sizeof(string), "Игрок не в сети!");
					SendClientMessage(playerid, COLOR_GREY, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/takelicense", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
			{
				if(PlayerInfo[playerid][pRank] < 2)
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 2 ранга или выше!");
					return 1;
				}
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_GREY, "ПОДСКАЗКА: /takelicense (Права/Оружие/Полеты) [playerid/PartOfName]");
					return 1;
				}
				if(strcmp(x_nr,"Права",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "ПОДСКАЗКА: /takelicense Права [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(3.0, playerid, giveplayerid))
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "Вы отобрали лицензию у %s. Описание: Водительское удостоверение.",giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s отобрал у вас лицензию. Описание: Водительское удостоверение.",sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PlayerInfo[giveplayerid][pCarLic] = -1;
								PlayerInfo[giveplayerid][pCarLic1] = 0;
								PlayerInfo[giveplayerid][pKatA] = 0;
								PlayerInfo[giveplayerid][pKatB] = 0;
								PlayerInfo[giveplayerid][pKatC] = 0;
								PlayerInfo[giveplayerid][pKatD] = 0;
								format(PlayerInfo[giveplayerid][pCarLic21],256,"%s",sendername);
								new year,month,day,hour,minute,second;
								new mtext[20];
								new dtext[20];
								getdate(year, month, day);
								if(month == 1) { mtext = "01"; }
								else if(month == 2) { mtext = "02"; }
								else if(month == 3) { mtext = "03"; }
								else if(month == 4) { mtext = "04"; }
								else if(month == 5) { mtext = "05"; }
								else if(month == 6) { mtext = "06"; }
								else if(month == 7) { mtext = "07"; }
								else if(month == 8) { mtext = "08"; }
								else if(month == 9) { mtext = "09"; }
								else if(month == 10) { mtext = "10"; }
								else if(month == 11) { mtext = "11"; }
								else if(month == 12) { mtext = "12"; }
								if(day == 1) { dtext = "01"; }
								else if(day == 2) { dtext = "02"; }
								else if(day == 3) { dtext = "03"; }
								else if(day == 4) { dtext = "04"; }
								else if(day == 5) { dtext = "05"; }
								else if(day == 6) { dtext = "06"; }
								else if(day == 7) { dtext = "07"; }
								else if(day == 8) { dtext = "08"; }
								else if(day == 9) { dtext = "09"; }
								else if(day == 10) { dtext = "10"; }
								else if(day == 11) { dtext = "11"; }
								else if(day == 12) { dtext = "12"; }
								else if(day == 13) { dtext = "13"; }
								else if(day == 14) { dtext = "14"; }
								else if(day == 15) { dtext = "15"; }
								else if(day == 16) { dtext = "16"; }
								else if(day == 17) { dtext = "17"; }
								else if(day == 18) { dtext = "18"; }
								else if(day == 19) { dtext = "19"; }
								else if(day == 20) { dtext = "20"; }
								else if(day == 21) { dtext = "21"; }
								else if(day == 22) { dtext = "22"; }
								else if(day == 23) { dtext = "23"; }
								else if(day == 24) { dtext = "24"; }
								else if(day == 25) { dtext = "25"; }
								else if(day == 26) { dtext = "26"; }
								else if(day == 27) { dtext = "27"; }
								else if(day == 28) { dtext = "28"; }
								else if(day == 29) { dtext = "29"; }
								else if(day == 30) { dtext = "30"; }
								else if(day == 31) { dtext = "31"; }
								gettime(hour,minute,second);
								format(PlayerInfo[giveplayerid][pCarLic4],256,"%s.%s.%d  %d:%d:%d",dtext,mtext,year,hour,minute, second);
							}
							else
							{
								SendClientMessage(playerid, COLOR_RED, " Этот игрок далеко от вас");
								return 1;
							}
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, " Этот игрок оффлайн!");
						return 1;
					}
				}
				else if(strcmp(x_nr,"Полеты",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "ПОДСКАЗКА: /takelicense Полеты [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(3.0, playerid, giveplayerid))
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "Вы отобрали лицензию у %s. Описание: Удостоверение пилота.",giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s отобрал у вас лицензию. Описание: Удостоверение пилота.",sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PlayerInfo[giveplayerid][pFlyLic] = 0;
							}
							else
							{
								SendClientMessage(playerid, COLOR_RED, " Этот игрок далеко от вас");
								return 1;
							}
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, " Этот игрок оффлайн!");
						return 1;
					}
				}
				else if(strcmp(x_nr,"Оружие",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "ПОДСКАЗКА: /takelicense Оружие [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(3.0, playerid, giveplayerid))
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "Вы отобрали у %s лицензию. Описание: Лицензия на оружие.",giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s отобрал у вас лицензию. Описание: Лицензия на оружие.",sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PlayerInfo[giveplayerid][pGunLic] = 0;
							}
							else
							{
								SendClientMessage(playerid, COLOR_RED, "Этот игрок далеко от вас.");
								return 1;
							}
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок оффлайн!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник ГИБДД!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/take", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
			{
				if(PlayerInfo[playerid][pRank] < 2)
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы должны быть выше 2го ранга!");
					return 1;
				}
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_GREY, "ПОДСКАЗКА: /take (Оружие/Наркотики/Материалы) [ID]");
					return 1;
				}
				//==============================================================================
				else if(strcmp(x_nr,"Оружие",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "ПОДСКАЗКА: /take Оружие [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(8.0, playerid, giveplayerid))
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								new rtext[256];
								if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//
								{
									if(PlayerInfo[playerid][pRank] == 2) { rtext = "Мл. сержант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Сержант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Ст. сержант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Старшина полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Мл. лейтенант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Лейтенант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Ст. лейтенант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Капитан полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции (ГИБДД)"; }
									else { rtext = "Полковник полиции (ГИБДД)"; }
								}
								if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//
								{
									if(PlayerInfo[playerid][pRank] == 2) { rtext = "Мл. сержант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Сержант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Ст. сержант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Старшина полиции"; }
									else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Мл. лейтенант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Лейтенант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Ст. лейтенант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Капитан полиции"; }
									else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции"; }
									else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции"; }
									else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции"; }
									else { rtext = "Полковник полиции"; }
								}
								format(string, sizeof(string), "* Вы отобрали оружие у %s.",giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s %s отобрал у вас оружие.",rtext, sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								ResetWeapons(giveplayerid);
								if(IsPlayerAttachedObjectSlotUsed(giveplayerid,1)) RemovePlayerAttachedObject(giveplayerid,1);
								if(IsPlayerAttachedObjectSlotUsed(giveplayerid,0)) RemovePlayerAttachedObject(giveplayerid,0);
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "Этот игрок не около вас!");
								return 1;
							}
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок оффлайн!");
						return 1;
					}
				}
				//==============================================================================
				else if(strcmp(x_nr,"Нарко",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "ПОДСКАЗКА: /take Наркотики [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(8.0, playerid, giveplayerid))
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								new rtext[256];
								if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//
								{
									if(PlayerInfo[playerid][pRank] == 2) { rtext = "Мл. сержант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Сержант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Ст. сержант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Старшина полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Мл. лейтенант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Лейтенант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Ст. лейтенант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Капитан полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции (ГИБДД)"; }
									else { rtext = "Полковник полиции (ГИБДД)"; }
								}
								if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//
								{
									if(PlayerInfo[playerid][pRank] == 2) { rtext = "Мл. сержант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Сержант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Ст. сержант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Старшина полиции"; }
									else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Мл. лейтенант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Лейтенант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Ст. лейтенант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Капитан полиции"; }
									else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции"; }
									else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции"; }
									else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции"; }
									else { rtext = "Полковник полиции"; }
								}
								format(string, sizeof(string), "* Вы отобрали наркотики у %s.",giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s %s отобрал у вас наркотики.",rtext, sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PlayerInfo[giveplayerid][pDrugs] = 0;
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "Этот игрок не около вас.");
								return 1;
							}
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок оффлайн!");
						return 1;
					}
				}
				//==============================================================================
				else if(strcmp(x_nr,"Материалы",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "ПОДСКАЗКА: /take Материалы [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(8.0, playerid, giveplayerid))
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								new rtext[256];
								if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//
								{
									if(PlayerInfo[playerid][pRank] == 2) { rtext = "Мл. сержант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Сержант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Ст. сержант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Старшина полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Мл. лейтенант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Лейтенант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Ст. лейтенант полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Капитан полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции (ГИБДД)"; }
									else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции (ГИБДД)"; }
									else { rtext = "Полковник полиции (ГИБДД)"; }
								}
								if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//
								{
									if(PlayerInfo[playerid][pRank] == 2) { rtext = "Мл. сержант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Сержант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Ст. сержант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Старшина полиции"; }
									else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Мл. лейтенант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Лейтенант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Ст. лейтенант полиции"; }
									else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Капитан полиции"; }
									else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции"; }
									else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции"; }
									else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции"; }
									else { rtext = "Полковник полиции"; }
								}
								format(string, sizeof(string), "* Вы отобрали материалы у %s.",giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s %s отобрал у вас материалы.",rtext, sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PlayerInfo[giveplayerid][pMats] = 0;
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "Этот игрок не около вас! !");
								return 1;
							}
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок оффлайн !");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Введите: /take (Оружие/Наркотики/Материалы) [id]!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник полиции!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/delcar", true) ==0 )
	{
		if(PlayerInfo[playerid][pAdmin] < 4) return 1;
		if(!IsPlayerInAnyVehicle(@p)) return SCM(@p,-1,"Необходимо находиться в машине");		
		new carid = GetPlayerVehicleID(@p);
		new id_car = GetVehicleIdxByID(carid);
		if(id_car == -1) return SCM(@p,-1,"Данную машину нельзя удалить этой командой!");
		glob_str = "";
		format(glob_str, sizeof glob_str, "Машина номер %i успешно удалена.", aData[id_car][aKey]);
		SendClientMessage(playerid, -1, glob_str);
		glob_str = "";
		mysql_format(MySQLGo,glob_str,sizeof(glob_str),"DELETE FROM `vehicles` WHERE `Key` = '%i'",aData[id_car][aKey]);
		mysql_tquery(MySQLGo,glob_str);
		glob_str = "";
		DestroyVehicle(aData[id_car][aCarid]);
		DestroyDynamic3DTextLabel(aData[id_car][aNumPlate]);
		if(aData[id_car][aMigObj]) DestroyDynamicObject(aData[id_car][aMigObj]), aData[id_car][aMigObj] = 0;
		aData[id_car][aKey] = 0;
		format_string = "";
		new years, months, days, hours, minutes, seconds, data[128]; getdate(years, months, days); gettime(hours, minutes, seconds);
		format(data, 128, "%02d/%02d/%04d %d:%d", days, months, years, hours, minutes);

		mysql_format(MySQLGo, format_string, 300, "INSERT INTO `logs` (`NameAdmin`,`LogName`,`LogAmount`,`GivePlayer`,`Date`) VALUES ('%s','DelCar','0','%s','%s')", NamePlayer[playerid], NamePlayer[giveplayerid], data);
		mysql_tquery(MySQLGo, format_string);
		return 1;
	}
	//=================================/tv==========================================
	if(strcmp(cmd, "/spec", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 1) return true;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /spec [id игрока]");
			new specid = ReturnUser(tmp);
			if(specid == playerid) return 1;
			if(!IsPlayerConnected(specid)) return SendClientMessage(playerid, COLOR_RED, "Этот игрок не в сети.");
			if(!gPlayerLogged[specid]) return SendClientMessage(playerid,COLOR_LIGHTRED,#Игрок не авторизован!);
			switch(GetPlayerState(specid))
			{
				case 0,7,9: return SCM(@p,COLOR_LIGHTRED,"В данный момент за этим игроком невозможно наблюдать!");
			}
			new Float:Cord[4];
			GetPlayerPos(playerid,Cord[0],Cord[1],Cord[2]);
			SetPVarFloat(playerid,#P_Spec_X,Cord[0]);
			SetPVarFloat(playerid,#P_Spec_Y,Cord[1]);
			SetPVarFloat(playerid,#P_Spec_Z,Cord[2]);
			GetPlayerFacingAngle(@p,Cord[3]);
			SetPVarFloat(@p,#P_Spec_A,Cord[3]);
			SetPVarInt(@p,#P_Spec_Int,GetPlayerInterior(@p));
			SetPVarInt(@p,#P_Spec_VW,GetPlayerVirtualWorld(@p));
			SetPVarInt(@p,#P_Spec_Off,1);
			SetPlayerInterior(playerid, GetPlayerInterior(specid));
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
			TogglePlayerSpectating(playerid, 1);
			if(IsPlayerInAnyVehicle(specid)) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specid));
			else PlayerSpectatePlayer(playerid, specid);
			format(string,sizeof(string),"Вы следите за игроком %s, для того, чтобы выйти с режима слежки, введите /specoff.",NamePlayer[specid]);
			SendClientMessage(playerid,COLOR_GRAD1,string);
			gSpectateID[playerid] = specid;
			return 1;
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/specoff", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				TogglePlayerSpectating(playerid, 0);
				gSpectateID[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
		}
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/backup", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1 ||PlayerInfo[playerid][pMember] == 6||PlayerInfo[playerid][pLeader] == 6)
			{
				if(PlayerInfo[playerid][pRequestingBackup] != 1)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Внимание! Всем постам: %s нуждается в подмоге, он отмечен красным маркером на GPS.", sendername);
					PlayerInfo[playerid][pRequestingBackup] = 1;
					foreach(new i:Player)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
							{
								SetPlayerMarkerForPlayer(i, playerid, 0xFF0000FF);
								SendClientMessage(i, 0xFF0000AA, string);
							}
							if(PlayerInfo[i][pMember] == 6||PlayerInfo[i][pLeader] == 6)
							{
								SetPlayerMarkerForPlayer(i, playerid, 0xFF0000FF);
								SendClientMessage(i, 0xFF0000AA, string);
							}
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Ты уже вызываешь подмогу!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не из полиции");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/backupcancel", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1 ||PlayerInfo[playerid][pMember] == 6||PlayerInfo[playerid][pLeader] == 6)
			{
				if(PlayerInfo[playerid][pRequestingBackup] != 0)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Сотрудник %s больше не нуждается в подмоге", sendername);
					PlayerInfo[playerid][pRequestingBackup] = 0;
					foreach(new i:Player)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
							{
								SetPlayerMarkerForPlayer(i, playerid, COLOR_LIGHTBLUE);
								SendClientMessage(i, COLOR_LIGHTBLUE, string);
							}
							if(PlayerInfo[i][pMember] == 6||PlayerInfo[i][pLeader] == 6)
							{
								SetPlayerMarkerForPlayer(i, playerid, COLOR_LIGHTBLUE);
								SendClientMessage(i, COLOR_LIGHTBLUE, string);
							}
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Ты не вызывал подмогу!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не из полиции");
				return 1;
			}
		}
		return 1;
	}
	//=======================================[Drink]================================
	if(strcmp(cmd, "/drink", true) == 0 || strcmp(cmd, "/пить", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsAtBar(playerid))
			{
				ShowPlayerDialog(playerid,50,DIALOG_STYLE_LIST,"Выпивка в Баре:","Пиво 6р\nВодка 10р\nКоктейль 25р\nВиски 10р\nМолоко 2р\nСпранк 2р\nВода 1р","Ок","Отмена");
			}
			else if(DrinkWater(playerid))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
				format(string, sizeof(string), "* %s пьёт воду.", sendername);
				ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0);
				new Float:health;
				if(GetPlayerHealth(playerid, health) < 100)
				{
					ServerGivePlayerHealth(playerid, health + 8.0);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " Вы не можете пить что либо в данный момент.");
				return 1;
			}
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	/*	if(strcmp(cmd, "/mask", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 14 || || PlayerInfo[playerid][pLeader] == 14)
			{
					if(Mask[playerid]==0)
					{
	SetPlayerSkin(playerid, 29);

						Mask[playerid] = 1;
					}
					else if(Mask[playerid]==1)
					{
						new model = PlayerInfo[playerid][pChar];
						if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 14 || || PlayerInfo[playerid][pLeader] == 14)
						{
	SetPlayerSkin(playerid, model);
						}
						Mask[playerid] = 0;
					}
				}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не из Горьковской ОПГ!");
			}
		}
		return 1;
	}*/
	//==============================Связать===========================================
	/*	if(strcmp(cmd, "/tie", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!(PlayerInfo[playerid][pMember]==15||PlayerInfo[playerid][pLeader]==15)) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не состоите в Арзамасовской братве");
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /tie [ID игрока]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						new obaVtache = 0;
						if(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(playerid))
						{
							new car1 = GetPlayerVehicleID(playerid);
							new car2 = GetPlayerVehicleID(giveplayerid);
							if(car1 == car2)
							{
								obaVtache = 1;
							}
						}
						if(PlayerTied[giveplayerid] > 0)
						{
							SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан!");
							return 1;
						}
						if(ProxDetectorS(8.0, playerid, giveplayerid))
						{
						//  new car = GetPlayerVehicleID(playerid);
							if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ты не можешь связать самого себя!"); return 1; }
						//  if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						// {
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "Вас связал %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы связали %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s связывает %s", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Tied", 2500, 3);
								TogglePlayerControllable(giveplayerid, 0);
								PlayerTied[giveplayerid] = 1;
								//PlayerInfo[playerid][pRope]--;
								PlayerCuffed[giveplayerid] = 2;
								PlayerCuffedTime[giveplayerid] = 9999999999;
								if(!IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(giveplayerid))//Если оба игрока не в таче
								{
									ClearAnimations(playerid);
									OnePlayAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0); //Пойдет анимация
								}
						//    }
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "   Ты слишком далеко от этого игрока!");
								return 1;
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами!");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети!");
					return 1;
				}
		//	}

		}
		return 1;
	}*/
	if(strcmp(cmd, "/untie", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_GRAD1, " Подсказка: /untie [ID игрока]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Ты не можешь развязать себя!"); return 1; }
						if(PlayerTied[giveplayerid])
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "%s развязал тебя.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Ты развязал %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							GameTextForPlayer(giveplayerid, "~g~Untied", 2500, 3);
							TogglePlayerControllable(giveplayerid, 1);
							PlayerTied[giveplayerid] = 0;
							format(string, sizeof(string), "* %s развязывает %s", sendername, giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							//PlayerInfo[playerid][pRope]++;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Игрок не связан!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети!");
				return 1;
			}
		}//not connected
		return 1;
	}	
	if(strcmp(cmd,"/лицензии",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			new text1[20];
			new text4[20];
			new text5[20];
			if(PlayerInfo[playerid][pCarLic]) { text1 = "Есть"; } else { text1 = "Нет"; }
			if(PlayerInfo[playerid][pFlyLic]) { text4 = "Есть"; } else { text4 = "Нет"; }
			if(PlayerInfo[playerid][pGunLic]) { text5 = "Есть"; } else { text5 = "Нет"; }
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Лицензии __________________|");
			format(string, sizeof(string), " Права на управление транспортом: %s.", text1);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), " Лицензия на вождение воздушного транспорта: %s.", text4);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), " Лицензия на ношение огнестрельного оружия: %s.", text5);
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "|______________________________________________|");
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/showlic", true) == 0 || strcmp(cmd, "/showlicenses", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /showlic [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_WHITE, "Подсказка: Чтобы проверить свои лицензии, Используйте: /лицензии"); return 1; }
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new text1[20];
						new text4[20];
						new text5[20];
						if(PlayerInfo[playerid][pCarLic]) { text1 = "Есть"; } else { text1 = "Нет"; }
						if(PlayerInfo[playerid][pFlyLic]) { text4 = "Есть"; } else { text4 = "Нет"; }
						if(PlayerInfo[playerid][pGunLic]) {  text5 = "Есть"; } else { text5 = "Нет"; }
						format(string, sizeof(string), "|_______________ Лицензии %s _______________|", sendername);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Права на транспорт: %s.", text1);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "Лицензия на воздушный транспорт: %s.", text4);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), " Лицензия на Оружие: %s.", text5);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						SendClientMessage(giveplayerid, COLOR_WHITE, "|___________________________________________|");
						format(string, sizeof(string), " %s npeдъявляeт вaм cвои лицензии.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), " Вы показали свои лицензии %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s показывает свои лицензии %s", sendername,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок не около вас!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " Игрок не в сети!");
				return 1;
			}
		}
		return 1;
	}

	//==============================================================================
	if(strcmp(cmd, "/showvnbil", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /showvnbil [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new text1[200];
						new rtext[300];
						if(PlayerInfo[playerid][pVoennik] == 0) return 	SendClientMessage(playerid, COLOR_GREY, "У вас нет военного билета.");
						if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//армия
						{
							if(PlayerInfo[playerid][pRank] == 1) { rtext = "Рядовой"; }
							else if(PlayerInfo[playerid][pRank] == 2) { rtext = "Ефрейтор"; }
							else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Мл. сержант"; }
							else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Сержант"; }
							else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Ст. сержант"; }
							else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Прапощик"; }
							else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Старшина"; }
							else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Мл. лйтенант"; }
							else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Лейтенант"; }
							else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Ст. лейтенант"; }
							else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Капитан"; }
							else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Майор"; }
							else if(PlayerInfo[playerid][pRank] == 13) { rtext = "Подполковник"; }
							else if(PlayerInfo[playerid][pRank] == 14) { rtext = "Полковник"; }
							else { rtext = "Рядовой"; }
						}
						if(PlayerInfo[playerid][pVoennik]) { text1 = "имеется, зачислен в запас."; } else { text1 = "имеется."; }
						format(string, sizeof(string), "|_______________ Военный билет %s _______________|", sendername);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Статус: %s.", text1);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3)
						{
							format(string, sizeof(string), "Звание: %s.", rtext);
							SendClientMessage(giveplayerid, COLOR_GREY, string);
						}
						SendClientMessage(giveplayerid, COLOR_WHITE, "|___________________________________________|");
						format(string, sizeof(string), " %s npeдъявляeт вaм cвой военный билет.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), " Вы показали свой военный билет %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок не около вас!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " Игрок не в сети!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/checkseatbelt", true) == 0 || strcmp(cmd, "/csb", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		giveplayerid = ReturnUser(tmp);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GREY, "Используйте: /checkseatbelt [ID Игрока]");
			return 1;
		}
		if(GetPlayerState(giveplayerid) == PLAYER_STATE_ONFOOT)
		{
			SendClientMessage(playerid,COLOR_GREY,"Игрок не в машине");
			return 1;
		}
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(!(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader] == 1))
		{
			SendClientMessage(playerid,COLOR_GREY,"Вы не сотудник полиции!");
			return 1;
		}
		if(ProxDetectorS(9.0, playerid, giveplayerid))
		{
			new stext[128];
			if(bezopas[giveplayerid] == 0) { stext = "Не пристёгнут"; }
			else if(bezopas[giveplayerid] > 1) { stext = "Пристегнут"; }
			if(GetPVarInt(playerid,#P_Mask_On) == 1) { format(string, sizeof(string), " Ремень безопасности Человека в маске %s"  , stext); }
			else { format(string, sizeof(string), " Ремень безопасности %s %s" , giveplayer , stext); }
			SendClientMessage(playerid,COLOR_WHITE,string);
			new string2[128];
			if(GetPVarInt(playerid,#P_Mask_On) == 1) { format(string2, sizeof(string2), "* %s осмотрел водителя", sendername); }
			else { format(string2, sizeof(string2), "* %s осмотрел водителя",sendername); }
			ProxDetector(30.0, playerid, string2, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас!");
		}
	}
	//===============================================================================

	//============================[Показать паспорт]================================
	if(strcmp(cmd, "/showpassport", true)==0 || strcmp(cmd, "/showpassport", true) == 0 || strcmp(cmd, "/showpass", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /showpassport [id игрока]");
			new plo = ReturnUser(tmp);
			if(IsPlayerConnected(plo))
			{
				if(!PlayerInfo[playerid][pPasport]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет паспорта! Получите его в паспортном столе!");
				if(GetDistanceBetweenPlayers(@p,plo) > 10.0) return SendClientMessage(playerid, COLOR_GREY, " Вы слишком далеко от этого игрока !");
				new text4[20];
				switch(PlayerInfo[playerid][pOrigin])
				{
				case 1..3: text4 = "г. Нижегородск";
				case 4..6: text4 = "г. Арзамас";
				case 7: text4 = "п.г.т Батырево";
				default: text4 = "г. Арзамас";
				}
				glob_str = "";
				format(glob_str, sizeof(glob_str), "{8E8E8E}Имя Фамилия: {ffffff}%s\n{8E8E8E}Место проживания: {ffffff}%s\n{8E8E8E}Дата выдачи паспорта: {ffffff}%s", NamePlayer[@p],text4,PlayerInfo[@p][pRegData]);
				SPD(plo,0,DIALOG_STYLE_MSGBOX,"{8E8E8E}Паспорт гражданина РФ",glob_str,"Закрыть","");
				glob_str = "";
				format(glob_str, sizeof(glob_str), "* %s достаёт свой паспорт и показывает его %s", NamePlayer[@p],NamePlayer[plo]);
				ProxDetector(30.0, playerid, glob_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerChatBubble(playerid, glob_str, COLOR_PURPLE, 20.0, 10000);				
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети!");
		}
		return 1;
	}
	//============================[Показать документы на транспорт]=================
	if(strcmp(cmd, "/showdocument", true)==0 || strcmp(cmd, "/docum", true) == 0 || strcmp(cmd, "/pts", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "*Используйте: /pts [id игрока]");
			if(!IsPlayerInAnyVehicle(@p)) return SCM(@p,-1,"Необходимо находиться в т/с");
			new car_id = GetVehicleIdxByID(GetPlayerVehicleID(@p));
			new carid = GetPlayerVehicleID(@p);
			if(car_id == -1) return SCM(@p,-1,"У данного авто нет документов!");
			new plo = ReturnUser(tmp);
			if(!IsPlayerConnected(plo)) return SCM(@p,-1,"Игрок не в сети!");
			if(!ProxDetectorS(10.0, @p, plo)) return SendClientMessage(playerid, COLOR_RED, "** Вы слишком далеко от этого игрока !");
			new toplivo[32];
			if(IsADiesel(carid)) toplivo = "Дизельный двигатель";
			if(IsARegular(carid)) toplivo = "Топливо 92";
			if(IsAPlus(carid)) toplivo = "Топливо 93";
			if(IsAPremium(carid)) toplivo = "Топливо 95";
			format(string, sizeof(string), "|========== Паспорт Транспортного Средства ==========|");
			SendClientMessage(plo, COLOR_WHITE, string);
			format(string, sizeof(string), "** Владелец: %s", aData[car_id][aOwner]);
			SendClientMessage(plo, COLOR_GREY, string);
			format(string, sizeof(string), "** Регистрационный номер: %s", aData[car_id][aNumber]);
			SendClientMessage(plo, COLOR_GREY, string);
			format(string, sizeof(string), "** Вид топлива(двигателя): %s", toplivo);
			SendClientMessage(plo, COLOR_GREY, string);
			SendClientMessage(plo, COLOR_GREY, "|==================== _____________ ================|");
			format(string, sizeof(string), "* %s достаёт документы на транспорт и показывает %s.", NamePlayer[@p],NamePlayer[plo]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return 1;
	}
	if(strcmp(cmd, "/givepass", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
			{
				if(PlayerInfo[playerid][pRank] == 4 || PlayerInfo[playerid][pRank] == 5 || PlayerInfo[playerid][pRank] == 6)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /agivepassport [id игрока]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							PlayerInfo[giveplayerid][pPasport] = 1;
							format(string,256,"Вы выдали паспорт игроку %s.",giveplayer);
							SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
							format(string,256,"Сотрудник ПС %s дал тебе паспорт",sendername);
							SendClientMessage(giveplayerid,COLOR_LIGHTBLUE,string);
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Нет такого игрока");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не паспортист");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/agivepassport", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /agivepassport [id игрока]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						PlayerInfo[giveplayerid][pPasport] = 1;
						format(string,256,"Вы выдали паспорт игроку %s.",giveplayer);
						SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
						format(string,256,"Администратор сервера %s дал тебе паспорт",sendername);
						SendClientMessage(giveplayerid,COLOR_LIGHTBLUE,string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, " Нет такого игрока");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd,"/frisk",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /frisk [id игрока]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "|__________ Обыск %s __________|", giveplayer);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						if(PlayerInfo[giveplayerid][pPasport] > 0)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Паспорт");
						}
						if(PlayerInfo[giveplayerid][pCarLic] == 1)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Водительское удостоверение");
						}
						if(PlayerInfo[giveplayerid][pDrugs] > 0)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Наркотики");
						}
						if(PlayerInfo[giveplayerid][pMats] > 0)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Материалы");
						}
						if(PlayerInfo[giveplayerid][pPhoneBook] > 0)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Тел. книга");
						}
						if(PlayerInfo[giveplayerid][pCDPlayer] > 0)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "CD плеер");
						}
						if(PlayerInfo[giveplayerid][pRope] > 0)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Веревка");
						}
						if(PlayerInfo[giveplayerid][pPnumber] > 0)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Телефон");
						}
						SendClientMessage(playerid, COLOR_GRAD1, "|___________________________________|");
						format(string, sizeof(string), "* %s проводит обыск %s", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, " Игрок далеко от вас!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети!");
				return 1;
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/changelaught", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Подсказка: Выберите один из языков.");
			ShowMenuForPlayer(otherlang, playerid);
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/vilechit", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pAdmin] >= 3)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /vilechit [id игрока]");
					return 1;
				}
				new plo;
				plo = ReturnUser(tmp);
				if(IsPlayerConnected(plo))
				{
					if(plo != INVALID_PLAYER_ID)
					{
						PlayerInfo[plo][pNarcoZavisimost] = 0;
						PlayerInfo[plo][pAlcoZavisimost] = 0;
						PlayerInfo[plo][pAlcoLomka] = 0;
						PlayerInfo[plo][pNarcoLomka] = 0;
						//SetPlayerWeather(plo,DefaultWeather);
						SetPlayerDrunkLevel(plo,0);
						GetPlayerName(playerid,sendername,sizeof(sendername));
						GetPlayerName(plo,giveplayer,sizeof(giveplayer));
						format(string,sizeof(string)," %s вылечил твои зависимости",sendername);
						SendClientMessage(plo,COLOR_LIGHTBLUE,string);
						format(string,sizeof(string),"Вы вылечили зависимости %s ",giveplayer);
						SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
					}
				}
				else
				{
					format(string, sizeof(string), " %i не активный игрок.", plo);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не медик!");
			}
		}
		return 1;
	}
	//========================[Развоз матов,работа Рифы]============================
	//===============================[РАБОТА ОРУЖЕЙНИКА]============================
	if(strcmp(cmd,"/materials",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] != 9)
			{
				SendClientMessage(playerid,COLOR_GREY,"Вы не оружейный диллер!");
				return 1;
			}
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /materials [название]");
				SendClientMessage(playerid, COLOR_WHITE, "Get (купить материалы), Deliver (обменять материалы на оружие).");
				return 1;
			}
			if(strcmp(x_nr,"get",true) == 0)
			{
				if(PlayerToPoint(3.0,playerid,212.5199,1559.9564,12.1359))
				{
					new tel;
					if(MatsHolding[playerid] > 20)
					{
						format(string, sizeof(string), "У вас уже есть %d пакетов с материалами с собой, сначала продайте их!", MatsHolding[playerid]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_GRAD1, "Использовать: /materials get [количество]");
						return 1;
					}
					moneys = strval(tmp);
					new level = PlayerInfo[playerid][pGunSkill];
					if(level >= 0 && level <= 9999999999)
					{
						tel = 2000;
						if(moneys < 1 || moneys > 20)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не можете купить более 20 пакетов за один раз!");
							return 1;
						}
					}
					new summ = moneys * tel;
					if(eGetPlayerMoney(playerid) > summ)
					{
						format(string, sizeof(string), "Вы купили %d пакетов для изготовления материалов за %d рублей.", moneys, summ);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, - summ);
						//karman[playerid]-=price;
						//TextUpdate(playerid);
						MatsHolding[playerid] += moneys;
					}
					else
					{
						format(string, sizeof(string), "У вас нет %d рублей для покупки!", summ);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не на месте покупки пакетов для изготовления материалов!");
					return 1;
				}
			}
			//------------------------------------------------------------------------------
			else if(strcmp(x_nr,"deliver",true) == 0)
			{
				if(PlayerToPoint(3.0,playerid,-2638.7566,2684.1111,38.1109))
				{
					if(matbi>0)
					{
						if(MatsHolding[playerid] > 0)
						{
							new payout = (50)*(MatsHolding[playerid]);
							format(string, sizeof(string), "Фабрика отдала вам %d материалов за ваши %d пакетов.", payout, MatsHolding[playerid]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[playerid][pMats] += payout;
							matbi -= payout;
							MatsHolding[playerid] = 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "У вас нет пакетов для изготовления материалов!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не на фабрике материалов!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Не действительное название материалов!");
				return 1;
			}
		}
		return 1;
	}
	//=====================================================================
	if(strcmp(cmd,"/accept",true) == 0)
	{
		new x_job[256];
		x_job = strtok(cmdtext, idx);
		if(!strlen(x_job)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /accept drugs");
		if(strcmp(x_job,"drugs",true) == 0)
		{
			if(DrugOffer[playerid] < 999)
			{
				if(eGetPlayerMoney(playerid) > DrugPrice[playerid])
				{
					if(PlayerInfo[playerid][pDrugs] < 7)
					{
						if(IsPlayerConnected(DrugOffer[playerid]))
						{
							GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы купили %d грамм наркотиков за %d рублей у %s.",DrugGram[playerid],DrugPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), " %s купил ваши %d грамм, %d рублей было добавлено к вашей Зарплате.",sendername,DrugGram[playerid],DrugPrice[playerid]);
							SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[DrugOffer[playerid]][pPayCheck] += DrugPrice[playerid];
							PlayerInfo[DrugOffer[playerid]][pDrugsSkill] ++;
							GivePlayerMoney(playerid, -DrugPrice[playerid]);
							PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
							PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
							if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 999999999999999999999999999999999)
							{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, " Ваш Навык Торговца наркотиками теперь Уровня 2, вы можете купить больше Граммов и дешевле."); }
							else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 2228282821828128182)
							{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, " Ваш Навык Торговца наркотиками теперь Уровня 3, вы можете купить больше Граммов и дешевле."); }
							DrugOffer[playerid] = 999;
							DrugPrice[playerid] = 0;
							DrugGram[playerid] = 0;
							return 1;
						}
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас слишком много граммов наркотиков, для начала продайте их!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не можете заплатить за наркотики!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Никто не предлагал вам купить наркотики!");
				return 1;
			}
		}
	}
	//==============================================================================
	if(strcmp(cmd,"/get",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			new x_job[256];
			x_job = strtok(cmdtext, idx);

			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /get drugs");
				return 1;
			}

			if(strcmp(x_job,"drugs",true) == 0)
			{
				if(PlayerInfo[playerid][pDrugs] > 20)
				{
					format(string, sizeof(string), "У вас есть при себе %d грамм наркотиков, для начала продайте их!", PlayerInfo[playerid][pDrugs]);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				new tel;
				new summ;
				new ammount;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /get drugs [количество]");
					return 1;
				}
				new level = PlayerInfo[playerid][pDrugsSkill];
				ammount = strval(tmp);
				if(level >= 0 && level <= 999999999999999)
				{ tel = 2000; if(ammount < 1 || ammount > 20) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете купить более 20 граммов."); return 1; } }
				if(PlayerInfo[playerid][pJob] == 4 && PlayerToPoint(2.0, playerid, 258.5886,702.7727,11.9823))
				{
					summ = ammount * tel;
					if(eGetPlayerMoney(playerid) > summ)
					{
						format(string, sizeof(string), "Вы купили %d грамм наркотиков за %d рублей.", ammount, summ);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, -summ);
						PlayerInfo[playerid][pDrugs] = ammount;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы предложили наркотики!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не продавец наркотиков или не находитесь на месте закупки.");
					return 1;
				}
			}
			//------------------------------------------------------------------------------
			else if(strcmp(x_job,"fuel",true) == 0)
			{
				if(IsAtGasStation(playerid))
				{
					if(!IsACop(playerid))
					{
						new price = 20 * 17;
						format(string, sizeof(string), "Вы наполнили свою канистру 20% топлива за %d рублей.",price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pFuel] = 20;
						GivePlayerMoney(playerid, - price);
						PlayerInfo[playerid][pCash] =-price;
						SavePlayer(playerid);
					}
					else
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы бесплатно залили в свою канистру 20% топлива.");
						PlayerInfo[playerid][pFuel] = 20;
					}
					return 1;
				}
				else
				{
					SendClientMessage(playerid,COLOR_GREY,"Вы не на заправке!");
					return 1;
				}
			}
			else { return 1; }
		}//not connected
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/canistra", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pFuel] > 0)
			{
				if(Gas[gLastCar[playerid]] < 81)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, " Вы заправили свою машину на 20 процентов из своей канистры.");
					Gas[gLastCar[playerid]] += 20;
					PlayerInfo[playerid][pFuel] = 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Бак вашего транспортного средства полон!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " В вашей канистре нет бензина!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/join", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] == 0)
			{
				if(WantedLevel[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас проблемы с правоохранительными органами, мы вынуждены Вам отказать.");
					return 1;
				}
				if(GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,361.0990,204.4280,1008.3828))
				{
					ShowPlayerDialog(playerid,999,DIALOG_STYLE_LIST,"Работа","Инкасатор\nАдвокат\nШлюха\nМеханик\nТелохранитель\nБоксер\nВодитель автобуса и такси\nПочтальон\n\
					Дальнобойщик\nРазвозчик пиццы\nСтраховой агент","Ок","Отмена");
				}
				else if(GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1755.0167,2252.1985,15.8603))
				{
					ShowPlayerDialog(playerid,1000,DIALOG_STYLE_MSGBOX,"Информация о работе","Работа: Водитель автобуса\nЗарплата: Плата за проезд\nТип работы: основной\nРежим работы: Свободный\nКоманды работы: /help (просмотреть команды работы)","Работать","Отмена");
					GettingJob[playerid] = 14;
				}
				else if(GetPlayerState(playerid) == 1 && PlayerToPoint(5.0, playerid,228.228,228.228,228.228))
				{
					ShowPlayerDialog(playerid,1000,DIALOG_STYLE_MSGBOX,"Информация о работе","Работа: Механик\nЗарплата: Договорная\nТип работы: основной\nРежим работы: Свободный\nКоманды работы: /help (просмотреть команды работы)","Работать","Отмена");
					GettingJob[playerid] = 7;
				}
				else if(GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,261.1861,591.5547,12.0000))
				{
					ShowPlayerDialog(playerid,1000,DIALOG_STYLE_MSGBOX,"Информация о работе.","{FFFFFF}Работа: {2E9AFE}Оружейный диллер.\n{FFFFFF}Зарплата: {2E9AFE}договорная.\n{FFFFFF}Тип работы: {2E9AFE}основной.\n{FFFFFF}Режим работы: {2E9AFE}свободный.\n{FFFFFF}Команды работы: {2E9AFE}/help (просмотреть команды работы).","Работать","Отмена");
					GettingJob[playerid] = 9;
				}
				else if(GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,190.2337,885.5072,12.2653))
				{
					ShowPlayerDialog(playerid,1000,DIALOG_STYLE_MSGBOX,"Информация о работе.","{FFFFFF}Работа: {2E9AFE}Торговец наркотиками.\n{FFFFFF}Зарплата: {2E9AFE}договорная.\n{FFFFFF}Тип работы: {2E9AFE}основной.\n{FFFFFF}Режим работы: {2E9AFE}свободный.\n{FFFFFF}Команды работы: {2E9AFE}/help (просмотреть команды работы).","Работать","Отмена");
					GettingJob[playerid] = 4;
				}
				else if(GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,-193.4089,624.3692,12.0010))
				{
					ShowPlayerDialog(playerid,1000,DIALOG_STYLE_MSGBOX,"Информация о работе","Работа: Страховой агент\nЗарплата: Договорная\nТип работы: основной\nРежим работы: Свободный\nКоманды работы: /givestrah (выдать страховку)","Работать","Отмена");
					GettingJob[playerid] = 24;
				}
				else if(GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,-872.9482,1217.8837,10.8103))
				{
					ShowPlayerDialog(playerid,1000,DIALOG_STYLE_MSGBOX,"Информация о работе.","{2E9AFE}Здравствуйте, мы предлагаем вам работу дальнобойщика.\n{FFFFFF}Зарплата: {2E9AFE}1 рейс - 5000 рублей.\n{FFFFFF}Тип работы: {2E9AFE}основной.\n{FFFFFF}Режим работы: {2E9AFE}свободный.\n{FFFFFF}Команды работы: {2E9AFE}/help (просмотреть команды работы).","Работать","Отмена");
					GettingJob[playerid] = 16;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не на месте устройства на работу!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "У вас уже есть работа! Для того, чтобы уволиться, введите /quitjob.");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/cuff", true) == 0 || strcmp(cmd, "/cu", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsACop(playerid) || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 6)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /cuff [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(IsACop(giveplayerid))
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не можете одеть наручники на сотрудника правоохранительных органов!");
							return 1;
						}
						if(PlayerCuffed[giveplayerid] == 2)
						{
							SendClientMessage(playerid, COLOR_GREY, "Игрок уже в наручниках!");
							return 1;
						}
						if(ProxDetectorS(8.0, playerid, giveplayerid))
						{
							new obaVtache = 0;
							if(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(giveplayerid))
							{
								new car1 = GetPlayerVehicleID(playerid);
								new car2 = GetPlayerVehicleID(giveplayerid);
								if(car1 == car2)
								{
									obaVtache = 1;
								}

							}
							if(PlayerCuffed[giveplayerid] != 1 && obaVtache == 0)
							{
								SendClientMessage(playerid, COLOR_GREY, "Сначала нужно обездвижить этого игрока, ударив дубинкой!");
								return 1;
							}

							//  new car = GetPlayerVehicleID(playerid);
							if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете связать/одеть наручники сами на себя!"); return 1; }
							//  if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
							//  {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "На вас надели наручники %s", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы надели наручники на %s", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Сотрудник %s надел наручники на %s", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							GameTextForPlayer(giveplayerid, "~r~Cuffed", 2500, 3);
							TogglePlayerControllable(giveplayerid, 0);
							PlayerCuffed[giveplayerid] = 2;
							PlayerCuffedTime[giveplayerid] = 9999999999;
							SetPlayerAttachedObject(giveplayerid, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
							SetPlayerSpecialAction(giveplayerid,SPECIAL_ACTION_CUFFED);
							if(!IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(giveplayerid))//Если оба игрока не в таче
							{
								ClearAnimations(playerid);
								OnePlayAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0); //Пойдет анимация
							}
							/* }
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "   Player not in your Car, or your not the Driver !");
								return 1;
							}*/
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами!");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не полицейский/сотрудник ФСБ/военный!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/uncuff", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsACop(playerid) ||  PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pMember] == 11)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "Используйте: /uncuff [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять наручники с самого себя!"); return 1; }
							if(PlayerCuffed[giveplayerid])
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "С вас снял наручники %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы сняли наручники с %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Uncuffed", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								RemovePlayerAttachedObject(giveplayerid,0);
								SetPlayerSpecialAction(giveplayerid,SPECIAL_ACTION_NONE);
								PlayerCuffed[giveplayerid] = 0;
								PlayerCuffedTime[giveplayerid] = 0;
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в наручниках!");
								return 1;
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в машине!");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, " Игрок не в игре!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник полиции!");
			}
		}//not connected
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/brokecuff", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerCuffed[playerid] == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "Используйте: /brokecuff [id/имя]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(ProxDetectorS(8.0, playerid, giveplayerid))
						{
							//						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, " Нельзя снять наручники с себя!"); return 1; }
							if(PlayerCuffed[giveplayerid])
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), " %s ломает вaши нapyчники.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Bы сломали нapyчники %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Uncuffed", 2500, 3);
								format(string, sizeof(string), "* %s снимает наручники с %s.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerCuffed[giveplayerid] = 0;
								cuffss[playerid]++;
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "Игрок не в наручниках!");
								return 1;
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко!");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять наручники!");
			}
		}//not connected
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/incar", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			giveplayerid = ReturnUser(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Используйте: /incar [ID] [место]");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			new seat = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Используйте: /incar [ID] [место]");
				return 1;
			}
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(seat < 1 || seat > 3)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Пассажирское место должно быть от 1 до 3");
					return 1;
				}
				if(IsPlayerInAnyVehicle(giveplayerid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок уже в машине!");
					return 1;
				}
				if(PlayerCuffed[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не можете затащить в машину!");
					return 1;
				}
				if(PlayerTied[giveplayerid] != 1 && PlayerCuffed[giveplayerid] != 2)
				{
					SendClientMessage(playerid, COLOR_GREY, "Этого игрока сначала нужно связать или надеть на него наручники!");
					return 1;
				}
				if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(GetDistanceBetweenPlayers(playerid,giveplayerid) < 5)
					{
						new Float:cx,Float:cy,Float:cz;
						GetVehiclePos(gLastCar[playerid], cx,cy,cz);
						if(!PlayerToPoint(10.0,playerid,cx,cy,cz))
						{
							SendClientMessage(playerid,COLOR_GREY, "Вы далеко от машины!");
							return 1;
						}
						if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "%s заламывает вам руку и затаскивает вас в машину!.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы затащили %s в свою машину!", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s заламывает руку %s и затаскивает в свою машину!", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							//	GameTextForPlayer(giveplayerid, "~r~dragged in car", 2500, 3);
							//			ClearAnimations(giveplayerid);
							//			TogglePlayerControllable(giveplayerid, 0);
							PutPlayerInVeh(giveplayerid,gLastCar[playerid],seat);
							return 1;
						}
						else
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы не можете затащить в машину, пока сами внутри неё!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY, "Вы слишком далеко!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid,COLOR_GREY, "Вы слишком далеко!");
					return 1;
				}
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/helper", true) == 0)
	{
		if(PlayerToPoint(2.0,playerid,362.3080,173.5259,1008.3828) || PlayerToPoint(2.0,playerid,2217.2698,-1146.4092,1025.7969))
		{
			ShowHelper(playerid);
		}
	}
	//==============================================================================
	if(strcmp(cmd, "/find", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] != 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не работаете детективом!");
				return 1;
			}
			if(PlayerOnMission[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "On a mission right now, can't use this command !");
				return 1;
			}
			if(UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 401)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы недавно кого-то искали, ждите 2 минуты!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /find [id игрока]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете искать самого себя!"); return 1; }
					new points;
					new level = PlayerInfo[playerid][pDetSkill];
					if(level >= 0 && level <= 50)
					{ points = 4; }
					else if(level >= 51 && level <= 100)
					{ points = 6; }
					else if(level >= 101 && level <= 200)
					{ points = 8; }
					else if(level >= 201 && level <= 400)
					{ points = 10; }
					else if(level >= 401)
					{ points = 12; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(giveplayerid, X,Y,Z);
					SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					FindTime[playerid] = 1;
					FindTimePoints[playerid] = points;
					PlayerInfo[playerid][pDetSkill] ++;
					UsedFind[playerid] = 1;
					if(PlayerInfo[playerid][pDetSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, " Your Detective Skill is now Level 2, soon you are able to find Faction Members."); }
					else if(PlayerInfo[playerid][pDetSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, " Your Detective Skill is now Level 3, soon you are able to find Faction Members."); }
					else if(PlayerInfo[playerid][pDetSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, " Your Detective Skill is now Level 4, you are now able to find Faction Members."); }
					else if(PlayerInfo[playerid][pDetSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, " Your Detective Skill is now Level 5, you are now able to find Faction Members."); }
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/refill", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] != 7)
			{
				SendClientMessage(playerid, COLOR_GREY, " Вы не работаете механиком!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /refill [id] [цена]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 15000) { SendClientMessage(playerid, COLOR_GREY, "Цена не может быть меньше 1 или больше 15000!"); return 1; }
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
						if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете заправить самого себя!"); return 1; }
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы хотите заправить транспорт %s за %dр .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Механик %s хочет заправить ваш транспорт за %dр, (введите /accept refill), если согласны.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RefillOffer[playa] = playerid;
						RefillPrice[playa] = money;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок слишком далеко / не в автомобиле.");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/repairp", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] != 7)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не работаете механиком!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /repairp [id] [цена]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 10000) { SendClientMessage(playerid, COLOR_GREY, " Цена не может быть меньше 1 или больше 10000!"); return 1; }
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
						if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, " Для себя нельзя !"); return 1; }
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы предложили починить транспорт %s за %d рублей.",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Механик %s хочет предлагает починить ваш автомобиль за %d рублей, (введите /accept repair), если согласны.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RepairOffer[playa] = playerid;
						RepairPrice[playa] = money;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот игрок слишком далеко / не в автомобиле.");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/news", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
			if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
			if(!IsPlayerInRangeOfPoint(playerid, 15.0, 65.3988,2423.7559,-48.9143)) return SendClientMessage(playerid, -1, "Вы должны быть в комнате записи");
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /news [текст]");
			format(string, sizeof(string), "Радиовещательная Компания «Маяк» %s: %s", NamePlayer[playerid], result);
			OOCNews(COLOR_NEWS,string);
			PlayerInfo[playerid][pNewsSkill] ++;
		}
		return 1;
	}
	if(strcmp(cmd, "/live", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
				if(TalkingLive[playerid] != 255)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Прямой эфир окончен.");
					SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, "Прямой эфир окончен.");
					TogglePlayerControllable(playerid, 1);
					TogglePlayerControllable(TalkingLive[playerid], 1);
					TalkingLive[TalkingLive[playerid]] = 255;
					TalkingLive[playerid] = 255;
					return 1;
				}
				if(PlayerInfo[playerid][pNewsSkill] < 0)
				{
					SendClientMessage(playerid, COLOR_GREY, " Ваш навык работника радио слишком мал чтобы общаться с людьми !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /live [id]");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(ProxDetectorS(5.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете предложить это самому себе!"); return 1; }
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы предложили %s принять участие в эфире с вами.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s предложил вам принять участие в эфире, введите (/accept live) чтобы принять.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							LiveOffer[giveplayerid] = playerid;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от игрока!");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Неверное ID/имя!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник РК Маяк!");
			}
		}//not connected
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/selldrugs", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] != 4)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не продавец наркотиков!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /selldrugs [id] [граммы] [цена]");
				return 1;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			needed = strval(tmp);
			if(needed < 1 || needed > 10) { SendClientMessage(playerid, COLOR_GREY, "Количество граммов должно быть от 1 до 10!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 70000) { SendClientMessage(playerid, COLOR_GREY, "Цена должна быть от 1 до 70000 рублей."); return 1; }
			if(needed > PlayerInfo[playerid][pDrugs]) { SendClientMessage(playerid, COLOR_GREY, "У вас нет столько граммов наркотиков с собой!"); return 1; }
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, playa))
					{
						if(playa == playerid)
						{
							SendClientMessage(playerid, COLOR_GREY, "Себе продавать наркотики нельзя.");
							return 1;
						}
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы предложили %s купить %d граммов наркотиков за %d рублей.", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Продавец наркотиков %s предложил купить вам %d граммов за %d рублей, введите /accept drugs, чтобы купить.", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок не находится рядом с вами!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не в игре.");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/usedrugs", true) == 0) // Drug system
	{
		if(IsPlayerConnected(playerid))
		{
			if(UsingDrugs[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Вы уже находитесь под эффектом наркотиков!");
				return 1;
			}
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /usedrugs [название]");
				SendClientMessage(playerid, COLOR_WHITE, "ЛСД (2), Канапля (2), Героин (3)");
				return 1;
			}
			//------------------------------------------------------------------------------
			if(strcmp(x_nr,"лсд",true) == 0)
			{
				if(PlayerInfo[playerid][pDrugs] > 1)
				{
					PlayerStoned[playerid] += 1;
					if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1); }
					new Float:health;
					GetPlayerHealth(playerid, health);
					if(PlayerInfo[playerid][pDrugPerk] > 0)
					{
						new hp = 2 * PlayerInfo[playerid][pDrugPerk];
						hp += 65;
						ServerGivePlayerHealth(playerid, health + hp);
					}
					else
					{
						ServerGivePlayerHealth(playerid, health + 60.0);
					}
					PlayerInfo[playerid][pDrugs] -= 2;
					SetPlayerWeather(playerid, 32);
					UsingDrugs[playerid] = 1;
					SetTimerEx("DrugEffectGone", 50000, false, "i", playerid);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s употребляет LSD (наркотик).", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "У тебя не осталось больше наркотиков!");
				}
			}
			//------------------------------------------------------------------------------
			if(strcmp(x_nr,"канапля",true) == 0)
			{
				if(PlayerInfo[playerid][pDrugs] > 1)
				{
					PlayerStoned[playerid] += 1;
					if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1); }
					new Float:health;
					GetPlayerHealth(playerid, health);
					if(PlayerInfo[playerid][pDrugPerk] > 0)
					{
						new hp = 2 * PlayerInfo[playerid][pDrugPerk];
						hp += 60;
						ServerGivePlayerHealth(playerid, health + hp);
					}
					else
					{
						ServerGivePlayerHealth(playerid, health + 20.0);
					}
					PlayerInfo[playerid][pDrugs] -= 2;
					SetPlayerWeather(playerid, -68);
					UsingDrugs[playerid] = 1;
					SetTimerEx("DrugEffectGone", 50000, false, "i", playerid);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s достаёт из кармана косяк, прикуривает, курит травку.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSpecialAction(playerid,21);
					if(PlayerInfo[playerid][pNarcoZavisimost] == 0)
					{
						PlayerMayNarco[playerid] += 350;
						if(PlayerMayNarco[playerid] >=1000)
						{
							PlayerInfo[playerid][pNarcoZavisimost] = 1;
							PlayerInfo[playerid][pNarcoLomka] = 400;
						}
					}
					else
					{
						PlayerInfo[playerid][pNarcoLomka] += 400;
						SetPlayerWeather(playerid,DefaultWeather);
					}
					if(PlayerStoned[playerid] >= 3)
					{
						GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1);
						PlayerLomkaTime[playerid] = 60;
						TogglePlayerControllable(playerid,0);
						ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
						format(string, sizeof(string), "* %s потерял сознание от передозировки наркотиками.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}

				else
				{
					SendClientMessage(playerid, COLOR_GREY, "У тебя не осталось наркотиков!");
				}
			}
			//------------------------------------------------------------------------------
			else if(strcmp(x_nr,"героин",true) == 0)
			{
				if(PlayerInfo[playerid][pDrugs] > 2)
				{
					PlayerStoned[playerid] += 1;
					if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1); }
					new Float:health;
					GetPlayerHealth(playerid, health);
					if(PlayerInfo[playerid][pDrugPerk] > 0)
					{
						new hp = 2 * PlayerInfo[playerid][pDrugPerk];
						hp += 70;
						ServerGivePlayerHealth(playerid, health + hp);
					}
					else
					{
						ServerGivePlayerHealth(playerid, health + 20.0);
					}
					PlayerInfo[playerid][pDrugs] -= 3;
					SetPlayerWeather(playerid, -30);
					UsingDrugs[playerid] = 1;
					SetTimerEx("DrugEffectGone", 50000, false, "i", playerid);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s достал белый пакетик, насыпал белого порошка, завернул 100 рублёвую купюру в трубочку и начал нюхать.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
					ApplyAnimation(playerid,"GANGS","DRUGS_BUY",4.1,0,1,1,1,1);
					if(PlayerInfo[playerid][pNarcoZavisimost] == 0)
					{
						PlayerMayNarco[playerid] += 350;
						if(PlayerMayNarco[playerid] >=1000)
						{
							PlayerInfo[playerid][pNarcoZavisimost] = 1;
							PlayerInfo[playerid][pNarcoLomka] = 400;
						}
					}
					else
					{
						PlayerInfo[playerid][pNarcoLomka] += 400;
						SetPlayerWeather(playerid,DefaultWeather);
					}
					if(PlayerStoned[playerid] >= 3)
					{
						GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1);
						PlayerLomkaTime[playerid] = 60;
						TogglePlayerControllable(playerid,0);
						ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
						format(string, sizeof(string), "* %s потерял сознание от передозировки наркотиками.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "У Вас не осталось наркотиков!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /usedrugs [название]");
				SendClientMessage(playerid, COLOR_WHITE, "ЛСД, Канапля, Героин.");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/eject", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new State;
			if(IsPlayerInAnyVehicle(playerid))
			{
				State=GetPlayerState(playerid);
				if(State!=PLAYER_STATE_DRIVER)
				{
					SendClientMessage(playerid,COLOR_GREY,"Вы можете выкинуть из авто только с места водителя!");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /eject [id]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				new test;
				test = GetPlayerVehicleID(playerid);
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете выйти сами!"); return 1; }
						if(IsPlayerInVehicle(playa,test))
						{
							if(PlayerInfo[playerid][pForce] <= PlayerInfo[playa][pForce])
							{
								new rnd = random(10);
								if(rnd < 5)
								{
									SendClientMessage(playerid, COLOR_GREY, " У вас не хватило сил, чтобы выкинуть игрока из машины!");
									return 1;
								}
							}
							new PName[MAX_PLAYER_NAME];
							GetPlayerName(playerid,PName,sizeof(PName));
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), " Вы выбросили %s из автомобиля!", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), " Вас выбросил из автомобиля %s!", PName);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							RemovePlayerFromVehicle(playa);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей машине!");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Ошибка!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не в автомобиле!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/minet", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] == 3)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не можете делать минет в автомобиле!");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /minet [id игрока/часть ника] [цена]");
					return 1;
				}
				giveplayerid = strval(tmp);
				tmp = strtok(cmdtext, idx);
				new money;
				money = strval(tmp);
				if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_RED, "Цена не должна быть меньше 1 или больше 99999!"); return 1; }
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(GetDistanceBetweenPlayers(playerid, giveplayerid) < 2)
						{
							if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_RED, "Вы не можете делать минет сама себе!"); return 1; }
							if(PlayerInfo[giveplayerid][pSex] !=2)
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), " Вы предлагаете %s сделать ему минет за p%d.", giveplayer, money);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), " Проститка %s предлагает вам минет за p%d (введите /accept minet) чтобы согласится.", sendername, money);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								MinetOffer[giveplayerid] = playerid;
								MinetPrice[giveplayerid] = money;
							}
							else
							{
								SendClientMessage(playerid, COLOR_RED, "Вы можете делать минет только мужчине !");
								return 1;
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_RED, "Этот игрок слишком далеко !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "Игрок не в сети!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, "Вы не проститутка !");
			}
		}//not connected
		return 1;
	}
	//==============================================================================
	//=============================================================================
	if(strcmp(cmd, "/wanted", true) == 0)
	{
		new wantedstr[1024];
		if(IsACop(playerid))
		{
			if(IsACop(playerid))
			{
				new x;
				for(new i=0; i < MAX_PLAYERS; i++) 
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pWantedPoints] > 0)
						{
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(wantedstr, sizeof(wantedstr), "%s{ffffff}%d. {D0800E}%s {ffffff}уровень розыска: {D0800E}%d\n",wantedstr,x+1,giveplayer,PlayerInfo[i][pWantedPoints]);
							x++;
						}
					}
				}
				ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"{339B07}Текущий уровень преследования",wantedstr,"OK","");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник полиции!");
		}//not connected
		return 1;
	}

	//======================[Выбросить Наркотики]===================================
	if(strcmp(cmd, "/dropdrugs", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /dropdrugs [кол-во]");
				return 1;
			}
			new xmatsdrop = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /dropdrugs [кол-во]");
				return 1;
			}
			if(xmatsdrop > 50)
			{
				SendClientMessage(playerid, COLOR_GREY, " Вы не можете выбросить больше 50 грамм.");
				return 1;
			}
			if(xmatsdrop > PlayerInfo[playerid][pDrugs] || xmatsdrop < 1)
			{
				SendClientMessage(playerid, COLOR_GREY, " У вас нету наркотиков!");
				return 1;
			}

			if(numpickup <= 100)
			{
				new Float:x,Float:y,Float:z;
				PlayerInfo[playerid][pDrugs] -= xmatsdrop;
				GetPlayerPos(playerid,x,y,z);
				dropmats[numpickup][0] = CreatePickup(1575,2,x+1.5,y+1.5,z);
				dropmats[numpickup][1] = xmatsdrop;
				numpickup=numpickup+1;
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы выкинули слишком много материалов");
		}
		return 1;//1575 - нарко 76 - маты
	}
	//==============================================================================
	if(strcmp(cmd,"/quitjob",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob])
			{
				SendClientMessage(@p, COLOR_LIGHTBLUE, "Вы уволились с работы.");
				PlayerInfo[playerid][pJob] = 0;
				//PlayerInfo[playerid][pChar] = 0;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете!");
		}//not connected
		return 1;
	}
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/clearradio", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 6)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /clearradio [ID игрока]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						PlayerInfo[giveplayerid][pRadio] = 0;
						SendClientMessage(playerid,COLOR_WHITE,"Теперь у этого игрока нет рации");
						SendClientMessage(giveplayerid,COLOR_WHITE,"Администратор успешно удалил твою рацию");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Нет такого игрока");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не администратор сервера!");
			}
		}
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/clear", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new frak = 0;
			if(PlayerInfo[playerid][pLeader] > 0) frak = PlayerInfo[playerid][pLeader];
			else frak = PlayerInfo[playerid][pMember];
			new rank = PlayerInfo[playerid][pRank];
			if(frak == 1 || frak == 6)
			{
				if(rank < 4) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не старший сержант полиции!");
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /clear [id]");
				giveplayerid = ReturnUser(tmp);
				if(!PlayerInfo[giveplayerid][pWantedPoints]) return SendClientMessage(playerid,COLOR_GREY,"Игрок не в розыске");
				if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Неправильный ID/имя!");
				format(string, sizeof(string), "{2E9AFE}%s %s убрал из списка розыскиваемых игрока %s",FrakInfo[frak-1][rank][rang], NamePlayer[@p], NamePlayer[giveplayerid]);
				SendClientMessageToAll(COLOR_LIGHTBLUE, string);
				WantedPoints[giveplayerid] = 0;
				WantedLevel[giveplayerid] = 0;
				ClearCrime(giveplayerid);
				SetPlayerWantedLevel(giveplayerid,WantedLevel[giveplayerid]);
				PlayerInfo[giveplayerid][pWantedPoints] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник полиции!");
			}
		}//not connected
		return 1;
	}
	//==============================================================================
	if(strcmp(cmd, "/ticket", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 6||PlayerInfo[playerid][pLeader] == 6||PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2||PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader] == 1)
			{
				/*if(PlayerInfo[playerid][pMember] == 1)
			{
			SendClientMessage(playerid, COLOR_RED, " Вы не при исполнении служебных обязанностей!");
			return 1;
			}*/
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /ticket [id] [сумма] [причина]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /ticket [id] [сумма] [причина]");
					return 1;
				}
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 50000) { SendClientMessage(playerid, COLOR_GREY, "Цена штрафа не может быть ниже 1 рубля и выше 50.000 рублей!"); return 1; }
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(ProxDetectorS(3.0, playerid, giveplayerid))
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /ticket [id] [сумма] [причина]");
								return 1;
							}
							new rtext[500];
							if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
							{
								if(PlayerInfo[playerid][pRank] == 1) { rtext = "Рядовой полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 2) { rtext = "Мл. сержант полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Сержант полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Ст. сержант полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Старшина полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Мл. лейтенант полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Лейтенант полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Ст. лейтенант полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Капитан полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции (ГИБДД)"; }
								else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции (ГИБДД)"; }
								else { rtext = ""; }
							}
							if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
							{
								if(PlayerInfo[playerid][pRank] == 1) { rtext = "Рядовой полиции"; }
								else if(PlayerInfo[playerid][pRank] == 2) { rtext = "Мл. сержант полиции"; }
								else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Сержант полиции"; }
								else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Ст. сержант полиции"; }
								else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Старшина полиции"; }
								else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Мл. лейтенант полиции"; }
								else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Лейтенант полиции"; }
								else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Ст. лейтенант полиции"; }
								else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Капитан полиции"; }
								else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Майор полиции"; }
								else if(PlayerInfo[playerid][pRank] == 11) { rtext = "Подполковник полиции"; }
								else if(PlayerInfo[playerid][pRank] == 12) { rtext = "Полковник полиции"; }
								else { rtext = "Полковник полиции"; }
							}
							if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
							{
								if(PlayerInfo[playerid][pRank] == 1) { rtext = "Прапорщик ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 2) { rtext = "Ст. прапорщик ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 3) { rtext = "Мл. лейтенант ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 4) { rtext = "Лейтенант ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 5) { rtext = "Ст. лейтенант ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Капитан ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 7) { rtext = "Майор ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 8) { rtext = "Подполковник ФСБ"; }
								else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Полковник ФСБ"; }
								else { rtext = "Полковник ФСБ"; }
							}
							GetInitials(playerid);
							strmid(ReasonShtraf[giveplayerid], result, 0, strlen(result), 255);
							SetPVarInt(giveplayerid, "MoneyShtraf", moneys);

							format(string,500,"Вам был виписан штраф.\n\nКем выписан: %s\nСумма штрафа: %d руб.\nПричина: %s\n\nПосле того как вы возьмете штраф вы должны оплатить его в блишайжем банкомате\nСписок всех ваших штрафов: /tickets",NamePlayer[playerid],moneys,(result));
							ShowPlayerDialog(giveplayerid,1830,DIALOG_STYLE_MSGBOX,"Вам был выписан штраф.",string,"Оплатить","Отказаться");
							format(string, sizeof(string), "* Вы выписали %s штраф %d рублей. Причина: %s", giveplayer, moneys, result);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							TicketOffer[giveplayerid] = playerid;
							TicketMoney[giveplayerid] = moneys;
							return 1;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Игрок находится не рядом с вами!");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок не в игре!");
					return 1;
				}
			}
			return 1;
		}
		SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник правоохранительных органов!");
		return 1;
	}
	//==============================================================================
	//==============================================================================
	if(strcmp(cmd, "/arrest", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) return 1;
		if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник правоохранительных органов!");
		if(!PlayerToPoint(15.0, playerid, -127.3398,1486.2539,451.7260)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не у Изолятора Временного Содержания!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Подсказка: /arrest [ID] [время(в секундах)] [штраф] ");
		new playa,time,price;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		time = strval(tmp);
		if(time < 1 || time > 1200) return SendClientMessage(playerid, COLOR_GREY, "Время от 1 секунды до 1200 секунд!");
		tmp = strtok(cmdtext, idx);
		price = strval(tmp);
		if(price < 500 || price > 100000) return SendClientMessage(playerid, COLOR_GREY, "Штраф от 500 рублей до 100000 рублей!");
		if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GREY, "Неправильный ID!");
		if(GetDistanceBetweenPlayers(playerid,playa) > 5) return SCM(@p,COLOR_GREY, "Игрок далеко от вас");
		new frak;
		if(PlayerInfo[playerid][pLeader] > 0) frak = PlayerInfo[playerid][pLeader];
		else frak = PlayerInfo[playerid][pMember];
		new rank = PlayerInfo[playerid][pRank];
		if(rank > 15) rank = 15;
		format(string, sizeof(string), "* Вы арестовали %s на %d секунд, штраф: %d рублей.", NamePlayer[playa],time,price);
		SendClientMessage(playerid, COLOR_GREY, string);
		GivePlayerMoney(playa, -price);
		format(string, sizeof(string), "* %s арестовал тебя на %d секунд, штраф: %d рублей.", NamePlayer[@p],time,price);
		SendClientMessage(playa, COLOR_GREY, string);
		SendClientMessage(playa, COLOR_GREY, "Чтобы оплатить залог, пропишите /bail");
		ResetWeapons(playa);
		format(string, sizeof(string), "%s %s отдал под стражу %s ",FrakInfo[frak-1][rank][rang], NamePlayer[@p], NamePlayer[playa]);
		SendClientMessageToAll(COLOR_LIGHTBLUE, string);
		SetPlayerInterior(playa, 0);
		PlayerInfo[playa][pInt] = 0;
		SetPPos(playa, -1801.5328,-2835.1184,14.2163);
		PlayerInfo[playa][pJailTime] = time;
		PlayerInfo[playa][pJailed] = 1;
		PlayerInfo[playa][pArrested] += 1;
		WantedPoints[playa] = 0;
		WantLawyer[playa] = 1;
		TogglePlayerControllable(playa, 1);
		SetPlayerSpecialAction(playa,SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(playa,0);
		WantedLevel[playa] = 0;
		SetPlayerWantedLevel(playa,WantedLevel[playa]);
		PlayerInfo[playa][pWantedPoints] = 0;
		return 1;
	}
	if(strcmp(cmd, "/kpz", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
			{
				if(!PlayerToPoint(15.0, playerid, -127.3398,1486.2539,451.7260)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не у Изолятора Временного Содержания!");
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Подсказка: /kpz [ID]");
				new playa = ReturnUser(tmp);
				if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GREY, "Неправильный ID!");				
				if(GetDistanceBetweenPlayers(playerid,playa) < 5)
				{
					format(string, sizeof(string), "* Вы поместили в изолятор временного содержания игрока %s.", NamePlayer[playa]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "* %s поместил тебя в изолятор временного содержания.", NamePlayer[@p]);
					SendClientMessage(playa, COLOR_GREY, string);
					ResetWeapons(playa);          
					new rank = PlayerInfo[@p][pRank];									
					format(string, sizeof(string), "{2E9AFE}%s %s посадил в изолятор временного содержания игрока %s ",FrakInfo[6-1][rank][rang], NamePlayer[@p], NamePlayer[playa]);
					SendRadioMessage(6, COLOR_LIGHTBLUE, string);
					SetPPos(playa,-128.9741,1486.5089,451.7260);
					PlayerInfo[playa][pJailed] = 1;
					PlayerInfo[playa][pJailTime] = 9999999999999;
					PlayerInfo[playa][pArrested] += 1;
					WantedPoints[playa] = 0;
					WantLawyer[playa] = 1;
					TogglePlayerControllable(playa, 1);
					WantedLevel[playa] = 0;
					SetPVarInt(playa,#P_Kpz,1);
					WantedLevel[playa] = 0;
					SetPlayerWantedLevel(playa,WantedLevel[playa]);
					PlayerInfo[playa][pWantedPoints] = 0;
				}				
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник правоохранительных органов!");
				return 1;
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/unkpz", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
		{
			if(!PlayerToPoint(15.0, playerid, -127.3398,1486.2539,451.7260)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не у Изолятора Временного Содержания!");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Подсказка: /unkpz [ID]");
			new playa = ReturnUser(tmp);
			if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GREY, "Неправильный ID!");
			if(GetPVarInt(playa,#P_Kpz) != 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в изоляторе временного содержания!");
			SetPlayerInterior(playa, 0);
			SetPPos(playa,-126.0010,1486.2841,451.7260);// Место выхода из тюрьмы
			DeletePVar(playa,#P_Kpz);
			PlayerInfo[playa][pJailed] = 0;
			glob_str = "";
			format(glob_str,sizeof(glob_str),"Сотрудник полиции {D0800E}%s освободил вас из ИВС.",NamePlayer[playerid]);
			SendClientMessage(playa,-1,glob_str);
			format(glob_str,sizeof(glob_str),"{ffffff}Сотрудник полиции {D0800E}%s {ffffff}освободил {D0800E}%s {ffffff}из ИВС.",NamePlayer[playerid],NamePlayer[playa]);
			SendFamilyMessage(6, COLOR_WHITE, glob_str);
			glob_str = "";
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник правоохранительных органов!");
	}
	//==============================================================================
	if(strcmp(cmd, "/zakaz", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /zakaz [ID/Ник Игрока] [сумма]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /zakaz [ID/Ник Игрока] [сумма]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 10000 || moneys > 100000) { SendClientMessage(playerid, COLOR_GREY, "Вы можете заказать игрока не меньше чем за 10000р, и не больше чем за 100000р!"); return 1; }
			if(PlayerInfo[playerid][pLevel] < 3)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам необходим 3 уровень, чтобы заказать игрока!");
				return 1;
			}
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[giveplayerid][pMember] == 14 && PlayerInfo[playerid][pMember] == 14)
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы не можете заказывать никого!");
						return 1;
					}
					else if(PlayerInfo[giveplayerid][pLeader] == 14 && PlayerInfo[playerid][pMember] == 14)
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы не можете заказывать никого!");
						return 1;
					}
					else if(PlayerInfo[giveplayerid][pMember] == 14||PlayerInfo[giveplayerid][pLeader] == 14)
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы не можете заказывать киллера!");
						return 1;
					}
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете заказать себя!"); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					playermoney = eGetPlayerMoney(playerid);
					if(moneys > 0 && playermoney >= moneys)
					{
						GivePlayerMoney(playerid, (0 - moneys));
						PlayerInfo[giveplayerid][pHeadValue]+=moneys;
						format(string, sizeof(string), " %s установил контракт на %s, за %d рублей.",sendername, giveplayer, moneys);
						SendFamilyMessage(8, COLOR_YELLOW, string);
						format(string, sizeof(string), "Вы заказали %s за %dр.",giveplayer, moneys);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Неверное значение!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), " %d игрок неактивен", giveplayerid);
				SendClientMessage(playerid, COLOR_GREY, string);
			}
			return 1;
		}
	}
	//end of command
	return 1;

}
public OnGameModeInit()
{
	// Подключение к MYSQL
	mysql_log(LOG_ERROR | LOG_WARNING);
	//mysql_log(LOG_ALL);
	MySQLGo = mysql_connect(SQL_HOST, SQL_USER, SQL_DB, SQL_PASS); // Хост | Юзер | База данных | Пароль (Пособие для новичков в MySQL)
	// КОДИРОВКА ДЛЯ РУССКОГО ЯЗЫКА, НИЧЕГО НЕ ТРОГАТЬ!!!! БАЗУ ДАННЫХ ТОЖЕ!!! ЗАБЫТЬ ПРО ЭТИ СТРОЧКИ НАВСЕГДА ЕСЛИ ХОТИТЕ ЧТОБЫ РАБОТАЛ РУССКИЙ ЯЗЫК
	mysql_tquery(MySQLGo, "SET NAMES 'cp1251'");
	mysql_function_query(MySQLGo, "set character_set_client=\'cp1251\'", false, "", "");
	mysql_function_query(MySQLGo, "set character_set_results=\'cp1251\'", false, "", "");
	mysql_function_query(MySQLGo, "set collation_connection=\'cp1251_general_ci\'", false, "", "");

	if(mysql_errno() == 0)
	{
		print("Подключение к базе выполнено.");
		print("Версия MySQL: R39-5.");
		print("Кодировка: cp1251.\n\n");
	}
	else print("К базе подключиться не удалось. Проверьте данные.\n\n");
	LoadObjects("maps.map");

	// Мод
	SendRconCommand("hostname Trusty RolePlay v0.1 | Closed Beta");
	SetGameModeText("er-mod 2.2");
	/*LimitPlayerMarkerRadius(100.0);*/
	// Загрузка с MYSQL
	mysql_function_query(MySQLGo, "SELECT * FROM `kazna`", true, "LoadBank", "");
	mysql_function_query(MySQLGo, "SELECT * FROM `vehicles`", true, "LoadVehicles", "");
	mysql_function_query(MySQLGo, "SELECT * FROM `pod`", true, "LoadPod", "");
	mysql_function_query(MySQLGo, "SELECT * FROM `houses`", true, "LoadHouses", "");
	mysql_function_query(MySQLGo, "SELECT * FROM `flat`", true, "LoadFlat", "");
	mysql_function_query(MySQLGo, "SELECT * FROM `biz_acc`", true, "LoadAcc", "");
	mysql_function_query(MySQLGo, "SELECT * FROM `garage`", true, "LoadGarage", "");
	mysql_function_query(MySQLGo, "SELECT * FROM `fuels`", true, "LoadFuels", "");
	mysql_function_query(MySQLGo, "SELECT * FROM `lareks`", true, "LoadLareks", "");
	mysql_function_query(MySQLGo, "SELECT * FROM `casino`", true, "LoadCasino", "");
	mysql_function_query(MySQLGo, "SELECT * FROM `atm`", true, "LoadAtm", "");
	mysql_function_query(MySQLGo,"UPDATE `accounts` SET `isOnline` = '1001'",false,"","");
	
	regskinselects = CreateMenu("Skin", 2, 40.0, 200.0, 50.0, 50.0);
	AddMenuItem(regskinselects, 0, "Next");
	AddMenuItem(regskinselects, 0, "Previous");
	AddMenuItem(regskinselects, 0, "Select");
	
	CreateDynamicObject(988, 359.27, 712.53, 11.24, 0.00, 0.00, 68.64);
	for(new i = 0; i < M_CINFO; i++) PCI[i][c_id] = -1;
	for(new id=0; id < MAX_CONUS; id++) conus[id] = -1;
	for(new i = 0; i < 3; i++)
	{
		CreateDynamic3DTextLabel("{2E9AFE}Ремонт автомобилей\n[Нажмите:L.ALT]", COLOR_YELLOW, rep_pos[i][0],rep_pos[i][1],rep_pos[i][2], 10.0);
		CreateDynamicMapIcon(rep_pos[i][0],rep_pos[i][1],rep_pos[i][2], 27, COLOR_YELLOW);
	}
	synctimer = SetTimer("SyncTime", 60000, 1);
	SetTimer("@UpdatePlayersRadars", 1000, true);
	SetTimer("CheckUcP",10*60*1000, true);
	// Смена погоды
	SetTimer("ChangeWeather",1000*60*15, true); //1 раз в 15 минут, будет меняться погода
	ChangeWeather();
	//23/08/16 int vk
	
	//=======Шлагбаум Автодрома
	//==============Шлагбаум ДПС
	dpsbaum1= CreateObject(968,-2344.1699, 1903.7500, 52.9500, 0.00, -90.00, -149.40);
	ppsbaum1= CreateObject(968,-391.37, 842.40, 11.93, 0.00, -90.00, -89.88);
	shbaum1= CreateObject(968,-89.32, 327.96, 11.86, 0.00, -89.82, -9.82);
	avtbaum1= CreateObject(968, 445.45, 612.51, 11.96,   0.00, -91.00, -22.06);
	baum1= CreateObject(968, -203.4114, 632.1040, 11.7895, 0.3599, 449.5999, -97.2000);
	// Гараж
	CreateObject(5248,2346.1000977,-230.0000000,-33.7999992,0.0000000,0.0000000,0.0000000);
	CreateObject(3508,2347.0000000,-230.5000000,-33.5000000,0.0000000,0.0000000,58.0000000);
	
	//Шлакбаум
	//guvdslak = CreateObject(968, 153.87, 1222.29, 11.76, 1.00, -90.00, 77.94);
	//CreateDynamicObject(968, 153.87, 1222.29, 11.76, 1.00, -20.00, 78.00);
	CreateDynamicObject(4386, 778.22, 775.74, 17.38,   0.00, 0.00, 68.82);
	CreateDynamicObject(8567, 382.77, 464.03, 10.94,   0.00, 0.00, 0.00);
	CreateDynamicObject(18003, -17.17, 515.15, 10.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(10296, -455.37, 1229.41, 16.80,   0.00, 0.00, 88.68);

	
	//LoadRecord();
	oplayers = ConnectedPlayers();
	SetTimer("Shipi",20,true);
	FireTimer = SetTimer("FireWorld", 1 * 60 * 10000, 1);
	SetTimer("pizza",1000,1);
	//SetTimer("SpeedoUpdate",1000,1);
	SetTimer("FuelUpdate",90*1000,1);
	SetTimer("Reklama",900000,1);
	CreateDynamicPickup(1239,23,539.5635,479.2906,451.7959);
	autoshkolapick = CreateDynamicSphere(539.5635,479.2906,451.7959, 1.0, -1, -1,-1);
	//Раздевалки
	CreateDynamicPickup(1275,23,-310.0876,1160.7520,579.0159, -1, -1, -1, 100.0);//1
	//CreateDynamic3DTextLabel("[ГИБДД]", COLOR_YELLOW, 113.5423,1661.7755,12.9, 10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,-1,-1,-1,100.0);
	zone_r[0] = CreateDynamicSphere(-310.0876,1160.7520,579.0159, 1.0, -1, -1,-1);
	CreateDynamicPickup(1275,23,713.0521,1429.3680,451.1259, -1, -1, -1, 100.0);//2
	//CreateDynamic3DTextLabel("[Скорая помощь]", COLOR_YELLOW, 116.1987,1660.5291,12.8, 10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,-1,-1,-1,100.0);
	zone_r[1] = CreateDynamicSphere(713.0521,1429.3680,451.1259, 1.0, -1, -1,-1);
	CreateDynamicPickup(1275,23,-97.7587,1500.8407,451.7260, -1, -1, -1, 100.0);//3
	//CreateDynamic3DTextLabel("[Полиция(УВД)]", COLOR_YELLOW, 118.7412,1659.0442,12.8, 10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,-1,-1,-1,100.0);
	zone_r[2] = CreateDynamicSphere(-97.7587,1500.8407,451.7260, 1.0, -1, -1,-1);
	CreateDynamicPickup(1275,23,323.5225,1811.0793,-41.8600, -1, -1, -1, 100.0);//4
	//CreateDynamic3DTextLabel("[Пожарная инспекция]", COLOR_YELLOW, 121.4969,1657.4349,12.8, 10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,-1,-1,-1,100.0);
	zone_r[3] = CreateDynamicSphere(323.5225,1811.0793,-41.8600, 1.0, -1, -1,-1);
	CreateDynamicPickup(1559,23,1749.3911,-2351.7207,24.5809,-1, -1, -1, 100.0);
	pick_lift = CreateDynamicSphere(1749.3911,-2351.7207,24.5809, 1.0, -1, -1,-1);
	CreateDynamicPickup(1581,23,-300.6912,1162.2013,579.0159, -1, -1, -1, 100.0);
	prava_z = CreateDynamicSphere(-300.6912,1162.2013,579.0159, 1.0, -1, -1,-1);
	//taxi
	CreateDynamicPickup(1275,23,-835.5194,1898.5773,454.1959, -1, -1, -1, 100.0);
	taxi_z = CreateDynamicSphere(-835.5194,1898.5773,454.1959, 1.0, -1, -1,-1);
	CreateDynamic3DTextLabel("Работа водителя такси", COLOR_LIGHTBLUE, -835.5194,1898.5773,454.1959, 10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,-1,-1,-1,100.0);
	
	CreateDynamicPickup(1239,23,432.4029,1622.8878,12.5859, -1, -1, -1, 100.0);
	asalon_z = CreateDynamicSphere(432.4029,1622.8878,12.5859, 1.0, -1, -1,-1);
	CreateDynamic3DTextLabel("{2E9AFE}Автосалон", COLOR_LIGHTBLUE, 432.4029,1622.8878,12.5859, 10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,-1,-1,-1,100.0);
	mus_j = CreatePickup(1275,23,117.2808,1665.6105,11.9725);
	
	CreateDynamic3DTextLabel("Меню управления квартирой - '/flat'\nДля того, чтобы выйти, нажмите клавишу L.ALT.",0xFFa500AA,-214.7046,2372.8638,-30.9847,5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
	
	td_magskin[0] = TextDrawCreate(292.000000, 383.911102, "<");
	TextDrawLetterSize(td_magskin[0], 0.638000, 2.894222);
	TextDrawTextSize(td_magskin[0], 20.500000, 20.0);
	TextDrawAlignment(td_magskin[0], 2);
	TextDrawColor(td_magskin[0], -1);
	TextDrawUseBox(td_magskin[0], true);
	TextDrawBoxColor(td_magskin[0], 0);
	TextDrawSetShadow(td_magskin[0], 0);
	TextDrawSetOutline(td_magskin[0], 1);
	TextDrawBackgroundColor(td_magskin[0], 51);
	TextDrawFont(td_magskin[0], 1);
	TextDrawSetProportional(td_magskin[0], 1);
	TextDrawSetSelectable(td_magskin[0], true);

	td_magskin[1] = TextDrawCreate(363.000000, 383.911102, ">");
	TextDrawLetterSize(td_magskin[1], 0.638000, 2.894222);
	TextDrawTextSize(td_magskin[1],20.500000, 20.0);
	TextDrawAlignment(td_magskin[1], 2);
	TextDrawColor(td_magskin[1], -1);
	TextDrawUseBox(td_magskin[1], true);
	TextDrawBoxColor(td_magskin[1], 0);
	TextDrawSetShadow(td_magskin[1], 0);
	TextDrawSetOutline(td_magskin[1], 1);
	TextDrawBackgroundColor(td_magskin[1], 51);
	TextDrawFont(td_magskin[1], 1);
	TextDrawSetProportional(td_magskin[1], 1);
	TextDrawSetSelectable(td_magskin[1], true);

	td_magskin[2] = TextDrawCreate(279.000000, 411.288879, "KYЊ…¦’");
	TextDrawLetterSize(td_magskin[2], 0.449999, 1.600000);
	TextDrawTextSize(td_magskin[2], 26.500000, 76.533348);
	TextDrawAlignment(td_magskin[2], 2);
	TextDrawColor(td_magskin[2], 255);
	TextDrawUseBox(td_magskin[2], true);
	TextDrawBoxColor(td_magskin[2], -1);
	TextDrawSetShadow(td_magskin[2], 0);
	TextDrawSetOutline(td_magskin[2], 0);
	TextDrawBackgroundColor(td_magskin[2], 51);
	TextDrawFont(td_magskin[2], 2);
	TextDrawSetProportional(td_magskin[2], 1);
	TextDrawSetSelectable(td_magskin[2], true);

	td_magskin[3] = TextDrawCreate(374.500000, 411.666656, "€AKP‘¦’");
	TextDrawLetterSize(td_magskin[3], 0.449999, 1.600000);
	TextDrawTextSize(td_magskin[3], 36.500000, 85.866691);
	TextDrawAlignment(td_magskin[3], 2);
	TextDrawColor(td_magskin[3], 255);
	TextDrawUseBox(td_magskin[3], true);
	TextDrawBoxColor(td_magskin[3], -1);
	TextDrawSetShadow(td_magskin[3], 0);
	TextDrawSetOutline(td_magskin[3], 0);
	TextDrawBackgroundColor(td_magskin[3], 51);
	TextDrawFont(td_magskin[3], 2);
	TextDrawSetProportional(td_magskin[3], 1);
	TextDrawSetSelectable(td_magskin[3], true);
	
	td_as[0] = TextDrawCreate(479.000000, 317.588928, "usebox");
	TextDrawLetterSize(td_as[0], 0.000000, 10.399381);
	TextDrawTextSize(td_as[0], 179.500000, 0.000000);
	TextDrawAlignment(td_as[0], 1);
	TextDrawColor(td_as[0], 0);
	TextDrawUseBox(td_as[0], true);
	TextDrawBoxColor(td_as[0], 102);
	TextDrawSetShadow(td_as[0], 0);
	TextDrawSetOutline(td_as[0], 0);
	TextDrawFont(td_as[0], 0);

	td_as[1] = TextDrawCreate(479.000000, 347.455566, "usebox");
	TextDrawLetterSize(td_as[1], 0.000000, 3.858022);
	TextDrawTextSize(td_as[1], 179.500000, 0.000000);
	TextDrawAlignment(td_as[1], 1);
	TextDrawColor(td_as[1], 0);
	TextDrawUseBox(td_as[1], true);
	TextDrawBoxColor(td_as[1], 255);
	TextDrawSetShadow(td_as[1], 0);
	TextDrawSetOutline(td_as[1], 0);
	TextDrawBackgroundColor(td_as[1], 255);
	TextDrawFont(td_as[1], 0);

	td_as[2] = TextDrawCreate(204.000000, 337.377746, "<");
	TextDrawLetterSize(td_as[2], 0.774499, 5.656892);
	TextDrawTextSize(td_as[2], 233.500000, 41.0);
	TextDrawAlignment(td_as[2], 1);
	TextDrawColor(td_as[2], -1);
	TextDrawUseBox(td_as[2], true);
	TextDrawBoxColor(td_as[2], 0);
	TextDrawSetShadow(td_as[2], 0);
	TextDrawSetOutline(td_as[2], 1);
	TextDrawBackgroundColor(td_as[2], 51);
	TextDrawFont(td_as[2], 2);
	TextDrawSetProportional(td_as[2], 1);
	TextDrawSetSelectable(td_as[2], 1);

	td_as[3] = TextDrawCreate(435.500000, 338.244415, ">");
	TextDrawLetterSize(td_as[3], 0.774499, 5.656892);
	TextDrawTextSize(td_as[3], 455.500000, 41.0);
	TextDrawAlignment(td_as[3], 1);
	TextDrawColor(td_as[3], -1);
	TextDrawUseBox(td_as[3], true);
	TextDrawBoxColor(td_as[3], 0);
	TextDrawSetShadow(td_as[3], 0);
	TextDrawSetOutline(td_as[3], 1);
	TextDrawBackgroundColor(td_as[3], 51);
	TextDrawFont(td_as[3], 2);
	TextDrawSetProportional(td_as[3], 1);
	TextDrawSetSelectable(td_as[3], 1);

	td_as[4] = TextDrawCreate(282.500000, 350.933349, "LD_SPAC:white");
	TextDrawLetterSize(td_as[4], 0.000000, 0.000000);
	TextDrawTextSize(td_as[4], 25.500000, 26.133296);
	TextDrawAlignment(td_as[4], 1);
	TextDrawColor(td_as[4], -1);
	TextDrawSetShadow(td_as[4], 0);
	TextDrawSetOutline(td_as[4], 0);
	TextDrawFont(td_as[4], 4);
	TextDrawSetSelectable(td_as[4], 1);

	td_as[5] = TextDrawCreate(318.000000, 350.066680, "LD_SPAC:white");
	TextDrawLetterSize(td_as[5], 0.000000, 0.000000);
	TextDrawTextSize(td_as[5], 25.500000, 26.133296);
	TextDrawAlignment(td_as[5], 1);
	TextDrawColor(td_as[5], -2139062017);
	TextDrawSetShadow(td_as[5], 0);
	TextDrawSetOutline(td_as[5], 0);
	TextDrawFont(td_as[5], 4);
	TextDrawSetSelectable(td_as[5], 1);

	td_as[6] = TextDrawCreate(355.500000, 349.200012, "LD_SPAC:white");
	TextDrawLetterSize(td_as[6], 0.000000, 0.000000);
	TextDrawTextSize(td_as[6], 25.500000, 26.133296);
	TextDrawAlignment(td_as[6], 1);
	TextDrawColor(td_as[6], -792561206);
	TextDrawUseBox(td_as[6], true);
	TextDrawBoxColor(td_as[6], 255);
	TextDrawSetShadow(td_as[6], 0);
	TextDrawSetOutline(td_as[6], 0);
	TextDrawFont(td_as[6], 4);
	TextDrawSetSelectable(td_as[6], 1);

	td_as[7] = TextDrawCreate(183.500000, 418.133331, "KYЊ…¦’");
	TextDrawLetterSize(td_as[7], 0.449999, 1.600000);
	TextDrawTextSize(td_as[7], 255.500000, 10.5);
	TextDrawAlignment(td_as[7], 1);
	TextDrawColor(td_as[7], -1);
	TextDrawUseBox(td_as[7], true);
	TextDrawBoxColor(td_as[7], 255);
	TextDrawSetShadow(td_as[7], 0);
	TextDrawSetOutline(td_as[7], 1);
	TextDrawBackgroundColor(td_as[7], 51);
	TextDrawFont(td_as[7], 2);
	TextDrawSetProportional(td_as[7], 1);
	TextDrawSetSelectable(td_as[7], 1);

	td_as[8] = TextDrawCreate(431.000000, 417.888885, "€AKP‘¦’");
	TextDrawLetterSize(td_as[8], 0.449999, 1.600000);
	TextDrawTextSize(td_as[8], 4263.000000, 87.111145);
	TextDrawAlignment(td_as[8], 2);
	TextDrawColor(td_as[8], -1);
	TextDrawUseBox(td_as[8], true);
	TextDrawBoxColor(td_as[8], 255);
	TextDrawSetShadow(td_as[8], 0);
	TextDrawSetOutline(td_as[8], 1);
	TextDrawBackgroundColor(td_as[8], 51);
	TextDrawFont(td_as[8], 2);
	TextDrawSetProportional(td_as[8], 1);
	TextDrawSetSelectable(td_as[8], 1);

	td_fon = TextDrawCreate(641.500000, 1.500000, "usebox");
	TextDrawLetterSize(td_fon, 0.000000, 49.412498);
	TextDrawTextSize(td_fon, -2.000000, 0.000000);
	TextDrawAlignment(td_fon, 1);
	TextDrawColor(td_fon, 255);
	TextDrawUseBox(td_fon, true);
	TextDrawBoxColor(td_fon, 255);
	TextDrawSetShadow(td_fon, 0);
	TextDrawSetOutline(td_fon, 0);
	TextDrawBackgroundColor(td_fon, 255);
	TextDrawFont(td_fon, 0);
	TextDrawHideForAll(td_fon);
	
	taxi_fon = TextDrawCreate(473.500000, 283.111114,"usebox");
	TextDrawLetterSize(taxi_fon, 0.437999, 6.490673);
	TextDrawTextSize(taxi_fon, 632.000000, 52.888885);
	TextDrawAlignment(taxi_fon, 1);
	TextDrawColor(taxi_fon, 0);
	TextDrawUseBox(taxi_fon, true);
	TextDrawBoxColor(taxi_fon, 102);
	TextDrawSetShadow(taxi_fon, 0);
	TextDrawSetOutline(taxi_fon, 0);
	TextDrawFont(taxi_fon, 0);

	ManualVehicleEngineAndLights();    

	Eternity[0] = TextDrawCreate(637.000000, 1.659252, "Trusty RolePlay");
	TextDrawLetterSize(Eternity[0], 0.300000, 1.399999);
	TextDrawAlignment(Eternity[0], 3);
	TextDrawColor(Eternity[0], 0x2E9AFEAA);
	TextDrawSetShadow(Eternity[0], 0);
	TextDrawSetOutline(Eternity[0], 0);
	TextDrawBackgroundColor(Eternity[0], 51);
	TextDrawFont(Eternity[0], 2);
	TextDrawSetProportional(Eternity[0], 1);

	Eternity[1] = TextDrawCreate(637.000000, 12.199994, "trusty-rp.ru");
	TextDrawLetterSize(Eternity[1], 0.300000, 1.399999);
	TextDrawAlignment(Eternity[1], 3);
	TextDrawColor(Eternity[1], -1);
	TextDrawSetShadow(Eternity[1], 0);
	TextDrawSetOutline(Eternity[1], 0);
	TextDrawBackgroundColor(Eternity[1], 51);
	TextDrawFont(Eternity[1], 2);
	TextDrawSetProportional(Eternity[1], 1);

	// ОТ НИКИТЫ 23.01.16
	Polosa[0] = TextDrawCreate(0.000000,2.000000,"-");
	Polosa[1] = TextDrawCreate(1.000000,384.000000,"-");
	TextDrawUseBox(Polosa[0],1);
	TextDrawBoxColor(Polosa[0],0x000000ff);
	TextDrawTextSize(Polosa[0],640.000000,7.000000);
	TextDrawUseBox(Polosa[1],1);
	TextDrawBoxColor(Polosa[1],0x000000ff);
	TextDrawTextSize(Polosa[1],640.000000,8.000000);
	TextDrawAlignment(Polosa[0],0);
	TextDrawAlignment(Polosa[1],0);
	TextDrawBackgroundColor(Polosa[0],0x000000ff);
	TextDrawBackgroundColor(Polosa[1],0x000000ff);
	TextDrawFont(Polosa[0],3);
	TextDrawLetterSize(Polosa[0],2.000000,7.899999);
	TextDrawFont(Polosa[1],3);
	TextDrawLetterSize(Polosa[1],1.000000,8.100000);
	TextDrawColor(Polosa[0],0x000000ff);
	TextDrawColor(Polosa[1],0x000000ff);
	TextDrawSetOutline(Polosa[0],1);
	TextDrawSetOutline(Polosa[1],1);
	TextDrawSetProportional(Polosa[0],1);
	TextDrawSetProportional(Polosa[1],1);
	TextDrawSetShadow(Polosa[0],1);
	TextDrawSetShadow(Polosa[1],1);
	//
	// TXTDRW TIMER BOLNICA
	TimerBol = SetTimer("UpdateBol", 1000, true);
	//
	SetTimer("Fresh", 1000, 1);
	// Шахта
	SahtaJob = CreatePickup(1275,23,-1026.9099,1231.3385,3011.5601);
	shaxta[0] = CreatePickup(1559,23,-1039.9108,2199.5889,38.1244); // Вход
	shaxta[1] = CreatePickup(1559,23,-1032.0129,1228.0225,3011.5601); // Выход
	gruzpick = CreatePickup(1275,23,-2385.1082,291.3864,23.8208);
	exitpick = CreatePickup(1559,23,797.4042,-1045.0830,451.5759,-1);
	//==============================================================================
	buyclother1 = CreatePickup(1275,1,-1779.4672,1774.8760,2377.4160);
	pizzawork = CreatePickup(1239,2,159.6780,588.8723,12.0000);
	//==============================================================================
	enterchop = CreatePickup(1559,23,228.288, 228.228, 228.228);
	exitchop = CreatePickup(1559,23,-194.9686,619.3253,12.2025);
	enterbomj = CreatePickup(1559,23,-137.7802,955.6302,38.9775);//пикап входа на крышу
	exitbomj = CreatePickup(1559,23,-138.3256,957.0425,41.2041);//пикап выхода с крыши
	enterrzd = CreatePickup(1559,23,-2142.3328,-185.6915,23.6672);
	exitrzd = CreatePickup(1559,23,384.4977,1326.1451,-12.0269);
	enterbol = CreatePickup(1559,23,666.1027,773.3218,12.6714);
	exitbol = CreatePickup(1559,23,684.7612,1397.6510,451.1259);
	entergyvd = CreatePickup(1559,23,2576.7019,-2416.0544,22.4951);
	exitgyvd = CreatePickup(1559,23,580.9905, 1144.4971, 2501.7786);
	enterritm = CreatePickup(1559,23,-2235.6213,-120.2149,26.9688);
	exitritm = CreatePickup(1559,23,2163.0083,2821.6509,1716.2759);
	enterlic = CreatePickup(1559,23,-29.8731,925.6027,13.2647);
	exitlic = CreatePickup(1559,23,536.7393,477.9750,451.7959);
	//entermer = CreatePickup(1559,23,-137.7802,955.6302,38.9775);
	//exitmer = CreatePickup(1559,23,-138.3256,957.0425,41.2041);
	entermag = CreatePickup(1559,23,153.8406,696.3317,12.7650);
	exitmag = CreatePickup(1559,23,-1772.7222,1773.9448,2377.4160);
	enters = CreatePickup(1559, 23, -2475.6204,2022.5476,54.5106); // ????
	exits = CreatePickup(1559, 23, -241.8470,572.3599,5.0759);
	francjobodej = CreatePickup(1275,23,-2162.5994,-534.3267,39.2353);
	SetTimer("HospUpdate",1000,true);
	///ИНТЕРЬЕР ДОМОВ НА РУБЛЁВКЕ
	//РАБОТА ЛЕСОРУБА
	CreateObject(4214,2749.6001000,-1586.3000500,22.3000000,0.0000000,0.0000000,355.0000000); //object(lanitewin3_lan) (1)
	CreateObject(9160,2743.8999000,-1622.0000000,22.5000000,0.0000000,0.0000000,184.9990000); //object(lodaseroad143) (1)
	//
	//================Ворота========================================================
	FBIGate = CreateObject(975,-2132.982421875,-84.907821655273,27.943975448608,0,0,350.07507324219);
	gatevorota = CreateObject(2118,2445.6687, -1795.5292, 22.5050,0,0,0);
	gatevorota1 = CreateObject(2930,2406.6907, -1835.6040, 24.5358,0,0,90);
	//===========================Ворота ДПС=========================================
	GuvdGate = CreateObject(2930, 2408.38, -1835.68, 24.11, 0.00, 0.00, -90.00);
	//==================Пикапы с оружиями===========================================
	CreateDynamicObject(988,-1800.0999756,-2835.5000000,13.8000002,0.0000000,0.0000000,62.0000000); //object(ws_apgate) (1)
	//==================Дырка около СТО и цветы===========================================
	CreateDynamicObject(4559, 353.60, 1174.59, 21.82,   0.00, 0.00, -186.36);
	CreateDynamicObject(4637, 397.00, 1174.98, -0.01,   0.00, 0.00, -6.30);
	CreateDynamicObject(4398, 423.42, 1166.49, 15.68,   356.86, 0.00, 1.64);
	CreateDynamicObject(4398, 438.49, 1164.48, 15.68,   356.86, 0.00, 1.64);
	CreateDynamicObject(4398, 451.92, 1162.04, 15.68,   356.86, 0.00, 1.64);
	CreateDynamicObject(4398, 466.03, 1160.26, 15.68,   356.86, 0.00, 1.64);

	CreateDynamicObject(9211, 2956.58, -720.75, 5.55, -6.12, -33.30, -26.22);
	CreateDynamicObject(9211, 2955.04, -732.15, 5.57, -0.84, -38.76, -20.94); //бугры
	CreateDynamicObject(8623, 171.67, 1170.09, 10.99, 1.98, -1.14, -4.26);
	CreateDynamicObject(8623, 174.33, 1169.86, 10.99, 1.98, -1.14, -4.26);
	CreateDynamicObject(8623, 138.75, 1178.99, 11.00, 0.00, 0.00, 0.00);
	CreateDynamicObject(8623, 141.47, 1178.41, 11.00, 0.00, 0.00, 0.00);
	//=======================Арзамас маппинг Артема=======================================
	//==================Остановки===================================================
	CreateDynamicObject(1904,-316.9,1248.8,2000.8,0.0,0.0,90.0);
	CreateDynamicObject(1906,-316.9,1248.8,2000.8,0.0,0.0,90.0);
	CreateDynamicObject(1905,-316.9,1248.8,2000.8,0.0,0.0,90.0);
	CreateDynamicObject(977,-317.8,1238.5,2006.5,0.0,0.0,100.0);
	CreateDynamicObject(977,-317.75,1240.3,2006.5,0.0,0.0,100.0);
	CreateObject(2583,-314.981323,1251.02,2006.17,0.0,0.0,270.0,50.0);
	CreateObject(977,-316.35,1255.13,2006.17,0.0,0.0,282.0,50.0);
	CreateObject(2583,-313.275,1259.61,2006.17,0.0,0.0,355.0,50.0);
	CreateObject(2583,-313.195,1238.4,2006.17,0.0,0.0,0.0,50.0);
	CreateObject(2583,-317.22,1238.4,2006.17,0.0,0.0,0.0,50.0);
	CreateObject(10271,-316.528900,1234.1,2005.7,0.0,0.0,180.0,50.0);  ///УНИТАЗ
	CreateObject(10200,-313.405731,1234.08,2005.0,0.0,0.0,180.0,50.0);  ///КУХНЯ/ТУМБОЧКА СРЕДНЯЯ
	CreateObject(10200,-312.475731,1234.08,2005.0,0.0,0.0,180.0,50.0);  ///КУХНЯ/ТУМБОЧКА ЛЕВАЯ
	CreateObject(10200,-314.335731,1234.08,2005.0,0.0,0.0,180.0,50.0);  ///КУХНЯ/ТУМБОЧКА ПРАВАЯ
	CreateObject(10210,-313.405731,1233.8,2006.0,0.0,0.0,180.0,50.0);  ///МИКРОВОЛНОВКА
	CreateObject(10206,-311.49,1234.08,2005.0,0.0,0.0,180.0,50.0);  ///ПЛИТКА
	CreateObject(10020,-314.0,1234.08,2006.1,260.0,0.0,180.0,50.0);  ///БУРГЕР

	CreateDynamic3DTextLabel("Место добычи №1, чтобы начать добывать руду, нажмите: {F75976}H", COLOR_WHITE,-746.7098,1256.6399,3011.3762,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	CreateDynamic3DTextLabel("Место добычи №2, чтобы начать добывать руду, нажмите: {F75976}H", COLOR_WHITE,-762.2296,1176.2537,3012.3154,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	CreateDynamic3DTextLabel("Место добычи №3, чтобы начать добывать руду, нажмите: {F75976}H", COLOR_WHITE,-736.9886,1201.4373,3011.3567,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	CreateDynamic3DTextLabel("Место добычи №4, чтобы начать добывать руду, нажмите: {F75976}H", COLOR_WHITE,276.4897,923.6788,-12.1906,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);

	Create3DTextLabel("Чтобы начать игру используйте команду: {FFFFFF}/playgame", 0xFFa500AA, 1678.4669,2074.7551,-7.8933, 10.0, 0, 0);
	Create3DTextLabel("Если хотите арендовать велосипед, введите: {F75976}/rentbike", COLOR_WHITE, 228.228,228.228,228.228, 10.0, 0, 0);
	Create3DTextLabel("{FFFFFF}Казино {9DEA17}`Фортуна`",COLOR_YELLOW3d,2308.4976,-1716.3022,22.9265,20.0,0,1);
	Create3DTextLabel("{FFFFFF}PRESS: {FA0825}ALT",COLOR_RED,2311.6997,-1711.8619,22.9265,10.0,0,1);
	Create3DTextLabel("{FFFFFF}PRESS: {FA0825}ALT",COLOR_RED,2313.9209,-1717.1793,22.9265,10.0,0,1);
	Create3DTextLabel("{FFFFFF}PRESS: {FA0825}ALT",COLOR_RED,2313.6309,-1711.8612,22.9265,10.0,0,1);
	Create3DTextLabel("{FFFFFF}PRESS: {FA0825}ALT",COLOR_RED,2313.9194,-1719.5695,22.9265,10.0,0,1);
	Create3DTextLabel("{FFFFFF}PRESS: {FA0825}ALT",COLOR_RED,2313.6667,-1712.7472,22.9265,10.0,0,1);
	Create3DTextLabel("{FFFFFF}PRESS: {FA0825}ALT",COLOR_RED,2313.9187,-1722.1215,22.9265,10.0,0,1);
	Create3DTextLabel("{FFFFFF}PRESS: {FA0825}ALT",COLOR_RED,2313.6680,-1715.0394,22.9265,10.0,0,1);
	Create3DTextLabel("{FFFFFF}PRESS: {FA0825}ALT",COLOR_RED,2311.9277,-1721.9996,22.9265,10.0,0,1);
	CreateObject(1746,-321.201690,1245.471801,2005.5,0.0,0.0,180.0,50.0);  ///ДИВАН
	CreateObject(1752,-317.349090,1245.524291,2005.5,0.0,0.0,180.0,50.0);  ///СТОЛ ДЛЯ ТВ
	CreateObject(1429,-317.349090,1245.524291,2006.16,0.0,0.0,270.0,50.0);  ///ТВ
	CreateObject(1750,-315.4,1247.335327,2006.0,0.0,0.0,0.0,50.0);  ///ШКАФ
	CreateObject(1749,-321.942565,1250.533813,2005.5,0.0,0.0,180.0,50.0);  ///СТОЛ
	CreateObject(1751,-321.120483,1250.541137,2005.5,0.0,0.0,0.0,50.0);  ///СТУЛ
	bulka =  CreatePickup(10020,2,-313.027130,1235.316040,2006.089111,-1);
	housepick[0] = CreatePickup(1559,1,903.9966,1766.3087,-7.7272,-1);
	//сюда добавлять пикапы которые будут стоять в интах для выхода.
	housepick[1] = CreatePickup(1559,1,83.0630,2321.4204,497.0753,-1);
	realtime=1;
	CreateObject(2168, 2747.37, -1261.92, 21.5922, 0, 0, 0,300.0);
	CreateObject(2294, 2747.37, -1142.84, 21.5922, 0, 0, 180.0,300.0);
	CreateObject(2990,-2403.326904,1740.316162,52.0,90.0,0.0,218.0,0.0); ///дырка кремль
	CreateObject(2990,-2399.326904,1742.316162,52.0,90.0,0.0,218.0,0.0); ///дырка кремль
	CreateObject(2942,2503.6999511719,-2128.8999023438,23.088748931885,0,0,272); //банкоматы
	CreateObject(2942,2328.8,-1781.661499,22.0,0.0,0.0,270.0,300.0); // банкомат юж 2
	//CreateObject(2942,149.60000610352,785.47198486328,11.798914909363,0,0,72);//банкомат
	CreateObject(2942,1854.666503,2247.3,14.85,0.0,0.0,0.0,300.0); // банкомат батырево
	//shlak1 = CreateObject(968,2743.24, -1022.25, 23.5, 0, 0.725374, 0);
	//shlak2 = CreateObject(968,2751.55, -1022.29, 23.5, 0, 0.713252, 0);
	shlak2 = CreateObject(968,1298.9000244,2827.0000000,12.1999998,0.0000000,90.0000000,312.0000000);
	shlak1 = CreateObject(968,1298.2998047,2827.5996094,12.1999998,0.0000000,270.0000000,311.9952393);
	shlak3 = CreateObject(968,1290.1999512,-2581.0000000,35.9000015,0.0000000,270.0000000,268.0000000);
	shlak4 = CreateObject(968,2737.5000000,-1024.5000000,23.3999996,0.0000000,90.0000000,0.0000000);
	shlak5 = CreateObject(968,2756.8994141,-1024.3994141,23.3999996,0.0000000,270.0000000,0.0000000);
	////CreateObject(1536,2399.05,-1836.563964,18.55,0.0,0.0,180.0,300.0);
	//CreateObject(1536,2401.286132,-1825.302514,31.2,0.0,0.0,90.0,300.0);
	CreateObject(2118,2394.922119,-1792.600830,22.2,0.0,0.0,90.0,300.0);
	///////////////////////////////////////////////////////////////////////////
	//TAXIOBJECT
	CreateObject(2118,2562.28,-2024.75,22.38,0.0, 0.0, 90.0,300.0);
	CreateObject(2168, 2747.37, -1261.92, 21.5922, 0, 0, 0,300.0);
	CreateObject(2294, 2747.37, -1142.84, 21.5922, 0, 0, 180.0,300.0);
	////////////////////////////////////////ОСТАНОВКИ/////////////////////////////////////////////////////
	//================================ИНТ АШ=================================
	CreateDynamicObject(10050,1084.5000000,164.6000061,-10.0000000,0.0000000,0.0000000,0.0000000); //object(vicstuff_sfe50) (1)
	//==============================================================================
	ChangeVehiclePaintjob( evrik, 0 );
	ChangeVehiclePaintjob( evrik1, 1 );
	ChangeVehiclePaintjob( vaz , 0 );//Охрана
	ChangeVehiclePaintjob( vaz1, 1 );//ДПС
	ChangeVehiclePaintjob( gazel, 0 );//ДПС
	ChangeVehiclePaintjob( gazel1, 1 );//Полция
	ChangeVehiclePaintjob( yaz, 2 );//Армия
	
	SetWeather(3);
	LoadTrunk();
	for(new c=0;c<CAR_AMOUNT;c++)
	{
		Gas[c] = GasMax;
		Engine[c] = 0;
	}
	SetTimer("servername",TIME_CHANGE,1);
	DisableInteriorEnterExits(); // Уберает стандартные пикапы
	EnableStuntBonusForAll(0);//Уберает бонус за трюки 0 - отключить, 1 - включить.

	
	ratext = TextDrawCreate(435.0, 430.0, "Radar: 0 kЇ/¤");
	TextDrawSetShadow(ratext,1);
	TextDrawFont(ratext,3);
	TextDrawLetterSize(ratext,0.433000,1.555777);

	new string[MAX_PLAYER_NAME];
	new string1[MAX_PLAYER_NAME];
	for(new c=0;c<CAR_AMOUNT;c++)
	{
		Gas[c] = GasMax;
	}
	txtTimeDisp = TextDrawCreate(548.500000, 25.375000, "00:00");	
	TextDrawLetterSize(txtTimeDisp, 0.719498, 1.516875);
	TextDrawAlignment(txtTimeDisp, 1);
	TextDrawColor(txtTimeDisp, 916991999);
	TextDrawSetShadow(txtTimeDisp, 1);
	TextDrawSetOutline(txtTimeDisp, 0);
	TextDrawBackgroundColor(txtTimeDisp, 255);
	TextDrawFont(txtTimeDisp, 3);
	TextDrawSetProportional(txtTimeDisp, 1);
	UpdateTime();
	SetTimer("UpdateTime",1000 * 60,1);
	//------------------------------------------------------------------------------
	otherlang = CreateMenu("Language Change", 1, 10.0, 135.0, 150.0);
	AddMenuItem(otherlang, 0, "Standart");
	AddMenuItem(otherlang, 0, "English");
	AddMenuItem(otherlang, 0, "Russian");
	AddMenuItem(otherlang, 0, "Japanese");
	AddMenuItem(otherlang, 0, "French");
	AddMenuItem(otherlang, 0, "Italian");
	AddMenuItem(otherlang, 0, "Back");
	//------------------------------------------------------------------------------
	SetTimer("RemiX_Time_Tools", 1000, true);
	LoadStuff();
	LoadCK();
	LoadTurfs();
	//------------------------------------------------------------------------------
	News[hTaken1] = 0; News[hTaken2] = 0; News[hTaken3] = 0; News[hTaken4] = 0; News[hTaken5] = 0;
	format(string, sizeof(string), "Nothing");
	strmid(News[hAdd1], string, 0, strlen(string), 255);
	strmid(News[hAdd2], string, 0, strlen(string), 255);
	strmid(News[hAdd3], string, 0, strlen(string), 255);
	strmid(News[hAdd4], string, 0, strlen(string), 255);
	strmid(News[hAdd5], string, 0, strlen(string), 255);
	format(string1, sizeof(string1), "No-one");
	strmid(News[hContact1], string1, 0, strlen(string1), 255);
	strmid(News[hContact2], string1, 0, strlen(string1), 255);
	strmid(News[hContact3], string1, 0, strlen(string1), 255);
	strmid(News[hContact4], string1, 0, strlen(string1), 255);
	strmid(News[hContact5], string1, 0, strlen(string1), 255);
	//------------------------------------------------------------------------------
	format(objstore, sizeof(objstore), "Преступлений нет!");
	format(cbjstore, sizeof(cbjstore), "Преступления имеются!");
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime)
	{
		SetWorldTime(wtime);
	}
	SetNameTagDrawDistance(20);// Дистанция отображения ников
	AllowInteriorWeapons(1);
	totalstinger=0;
	totalconus=0;
	SetTimer("Shipi",20,true);
	for(new i = 0; i < sizeof(CreatedCars); i++)
	{
		CreatedCars[i] = 0;
	}
	//------------------------------------------------------------------------------
	for(new i = 0; i < sizeof(TurfInfo); i++)
	{
		Turfs[i] = GangZoneCreate(TurfInfo[i][zMinX],TurfInfo[i][zMinY],TurfInfo[i][zMaxX],TurfInfo[i][zMaxY]);
	}
	//------------------------------------------------------------------------------
	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	}
	//====================================[3д тексты]===============================
	//---------------------пикапы----------------------------------------
	Create3DTextLabel("{2E9AFE}СТО г. Южный\n[ВВЕДИТЕ:/repair]",COLOR_LIGHTBLUE,2152.6714,-1848.7142,18.6378,30.0,0,1);
	Create3DTextLabel("Работа механика\n[ВВЕДИТЕ:/join]",COLOR_LIGHTBLUE,228.228,228.228,228.228,30.0,0,1);
	Create3DTextLabel("{2E9AFE}Работа дальнобойщика\n[ВВЕДИТЕ:/join]",COLOR_LIGHTBLUE,-872.9482,1217.8837,10.8103,30.0,0,1);
	Create3DTextLabel("{2E9AFE}/arrest & /kpz",COLOR_LIGHTBLUE,-127.3398,1486.2539,451.7260,20.0,0,1);
	Create3DTextLabel("{2E9AFE}Фабрика материалов\n[ВВЕДИТЕ:/materials]",COLOR_LIGHTBLUE,-2638.7566,2684.1111,38.1109,20.0,0,1);
	Create3DTextLabel("{2E9AFE}Место покупки пакетов\n[ВВЕДИТЕ:/materials]",COLOR_LIGHTBLUE,212.5199,1559.9564,12.1359,20.0,0,1);
	Create3DTextLabel("{2E9AFE}Работа оружейного диллера\n[ВВЕДИТЕ:/join]",COLOR_LIGHTBLUE,261.1861,591.5547,12.0000,20.0,0,1);
	Create3DTextLabel("{2E9AFE}Работа торговца наркотиками\n[ВВЕДИТЕ:/join]",COLOR_LIGHTBLUE,190.2337,885.5072,12.2653,20.0,0,1);
	Create3DTextLabel("{2E9AFE}Магазин 24/7\n[ВВЕДИТЕ:/buy]",COLOR_LIGHTBLUE,740.1365,801.2755,12.0256,20.0,0,1);
	Create3DTextLabel("{2E9AFE}Место закупки наркотиков\n[ВВЕДИТЕ:/get]",COLOR_LIGHTBLUE,258.5886,702.7727,11.9823,20.0,0,1);
	Create3DTextLabel("{2E9AFE}Магазин «Охотничьи угодья»\n[ВВЕДИТЕ:/buygun]",COLOR_LIGHTBLUE,311.2905,1069.8027,12.7063,20.0,0,1);
	CreateDynamicMapIcon(311.2905,1069.8027,12.7063,6,0);
	Create3DTextLabel("{2E9AFE}/mdc & /getsus",COLOR_LIGHTBLUE,-101.2187,1483.6010,451.7260,10.0,0,1);
	Create3DTextLabel("{2E9AFE}/carcheck & /dw",COLOR_LIGHTBLUE,154.4807,2133.4128,501.6859,10.0,0,1);
	//=======
	AddStaticPickup(1240, 2, -1804.6580,-2832.9983,14.2163);//Heal в КПЗ
	AddStaticPickup(1239, 23, 228.228,228.228,228.228); //механик Registration
	AddStaticPickup(1275, 23, -872.9482,1217.8837,10.8103); //BusDriver Registration
	AddStaticPickup(1239, 23, 2571.4509,-2417.4009,22.3769);// дежурка
	CreateDynamicPickup(1239, 23,261.1861,591.5547,12.0000);// /Guns dilerx
	CreateDynamicPickup(1239, 23,190.2337,885.5072,12.2653);// /Narko
	CreateDynamicPickup(1279, 23,258.5886,702.7727,11.9823);// /Narko Mat
	CreateDynamicPickup(1279, 23,212.5199,1559.9564,12.1359);// /Gun Mat
	CreateDynamicPickup(1239, 23,-2638.7566,2684.1111,38.1109);// /Obrabot gun mat
	AddStaticPickup(1239, 23,740.1365,801.2755,12.0256);// магазин
	AddStaticPickup(1239, 23,2129.7322,-1794.2936,19.9222);// бар Южный
	AddStaticPickup(1239, 23,2206.2598,-1777.8463,22.7362); //     Аммо Южный
	AddStaticPickup(1239, 23,2522.4648,-757.2349,13.0063); //     Аммо Анашан
	AddStaticPickup(1239, 23,2758.1326,-2572.7629,22.9063);
	lice = CreatePickup(1559,23,1919.3123779297,2228.2434082031,15.378606796265,0);//Лицензеры вход
	lice2 = CreatePickup(1559,23,207.66207885742,-112.26918029785,1004.9156494141,1);//Лицензеры выход
	gyvd5 = CreatePickup(1559,23,-422.0539,819.8696,12.3778,0);// Пикап входа
	gyvd6 = CreatePickup(1559,23,-97.0983,1477.8591,451.7260,0);// Пикап выхода
	CreateDynamicPickup(1239, 23,311.2905,1069.8027,12.7063); //     Аммо ЛВ
	CreateDynamicPickup(1239, 23,2206.2598,-1777.8463,22.7362); //     Аммо ЛВ
	CreateDynamicPickup(1239, 23,-1719.1241,1352.8751,7.1787); //     Аммо ЛВ
	CreateDynamicPickup(1239, 23,247.5677,113.8852,1003.2188); //     Аммо ЛВ
	CreateDynamicPickup(1239, 23,2171.5544,945.5235,5.6469); //     Аммо ЛВ
	CreateDynamicPickup(1239, 23,313.6466,-167.7686,999.5938); //     Аммо ЛВ
	armweapon1 = CreatePickup(3082,2, -458.6962,-469.9579,1.1234);// Капсула Армии
	gorweapon = CreatePickup(3082,2, 228.228,228.228,228.228);// Капсула Горьковской ОПГ
	dpsweapon = CreatePickup(3082,2, 228.228,228.228,228.228);// Капсула ГИБДД
	enterdps = CreatePickup(1559,23, -2365.3882,1890.6567,53.6644);// Вход в ГИБДД
	exitdps = CreatePickup(1559,23, -294.5979,1159.8815,579.0229);// Выход из ГИБДД
	kazino1 = CreatePickup(1559,24, -187.2433,881.8914,2612.6516);//Вход на парковку ГУВД
	kazino2 = CreatePickup(1559,24, -126.7207,986.5723,12.7537);//Выход с парковки ГУВД
	recordweapon = CreatePickup(3082,2, 25.6116,2444.5325,-49.8841);//Фотик РК
	enteranashan = CreatePickup(1559,23,-2432.3940,2757.2771,37.6492);
	exitanashan = CreatePickup(1559,23,-1501.5020,-296.6259,1762.7660);
	enteromon = CreatePickup(1559,23,2571.3420,-2426.9023,24.8779);
	enteropg = CreatePickup(1559,23,362.0223,1093.4039,12.0500);
	exitopg = CreatePickup(1559,23,1468.2009,418.4228,-60.1141);
	exitomon = CreatePickup(1559,23,2568.8420,-2469.2246,1201.8179);
	enterban = CreatePickup(1559,23,1448.4039,418.4568,-60.1141);
	exitban = CreatePickup(1559,23,1447.4396,418.4122,-60.1407);
	enterkino = CreatePickup(1559,23,-462.5265,949.8305,12.1753);
	exitkino = CreatePickup(1559,23,1722.1300,1664.2649,451.3359);
	enterpch = CreatePickup(1559,23,151.9278,1283.5382,12.0100);
	exitpch = CreatePickup(1559,23,325.6209,1785.2688,-41.8600);
	m4sweapon = CreatePickup(3082,2, 228.228,228.228,228.228);//Капсула МЧС
	textlic[1] = CreatePickup(1239,23, 2308.7874,-13.4942,26.7422);//     текст в банке
	textlic[2] = CreatePickup(1239,23, 1911.8844,2227.6223,16.0831);//
	sushimenu = CreateMenu(" Sushi bar menu", 2, 200.0, 100.0, 150.0, 150.0);
	gop111 = CreatePickup(3082,2, -2228.2810,258.8804,24.5571);// Капсула Гопников
	Skor111 = CreatePickup(3082,2, 228.228,228.228,228.228);// Капсула скорой помощи
	enter1 = CreatePickup(1559, 23, -193.3813,624.1428,12.0010); // вход
	exit1 = CreatePickup(1559, 23, -263.5677,1069.2820,452.2100); // Выход
	enter2 = CreatePickup(1559, 23, -360.1219,1024.9453,13.2432); // вход
	exit2 = CreatePickup(1559, 23, -837.4764,1892.8574,454.1959); // Выход
	AddMenuItem(sushimenu, 0, " Saba(40р)");
	AddMenuItem(sushimenu, 0, " Maguro(60р)");
	AddMenuItem(sushimenu, 0, " Anago(30р)");
	AddMenuItem(sushimenu, 0, " Ika(90р)");
	AddMenuItem(sushimenu, 0, " Cake(10р)");
	AddMenuItem(sushimenu, 0, " Exit");
	//------------------------------------------------------------------------------
	pickups=pickups+1000;
	printf("Pickups %d/50000",pickups);
	//=============================================[воротки]========================
	gatefsb = CreateObject(985,2445.3000500,-1797.0000000,19.6000000,0.0000000,0.0000000,92.0000000);
	//gateatp = CreateObject(980,785.96997070313,808.09997558594,13.89999961853,0.00000000,0.00000000,250);
	gateopg = CreateObject(980,438.06, 1080.40,13.54,0.00,0.00,-96.78);

	FBIGate = CreateObject(975,-2132.982421875,-84.907821655273,27.943975448608,0,0,350.07507324219);
	gbddGate = CreateObject(972, -1258.97, 2780.45, 42.03, 0.00, 0.00, 232.74);
	Most1 = CreateObject(982,1410.3279,168.0888,23.9684,0.0000000,0.0000000,000.0000000); //object(partition) (2)
	TaxiGate = CreateObject(2118,2563.77,-2062.80,22.38,0, 0, 90.0,300.0);//ворота такси
	M4CGate = CreateObject(969, 2084.8642578125,-2403.5859375,21.033029556274, 0.0000,359.1406, 0.0000);//
	//==============================================================================
	if(realtime)
	{
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		FixHour(tmphour);
		tmphour = shifthour;
		SetWorldTime(tmphour);
	}
	//QuestionTimer=SetTimer("Question", 270000, 1);
	unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	othtimer = SetTimer("OtherTimer", 1000, 1);
	cartimer = SetTimer("CarCheck", 30000, 1);
	pickuptimer = SetTimer("CustomPickups", 1000, 1);
	spectatetimer = SetTimer("Spectator", 2000, 1);
	productiontimer = SetTimer("Production", 300000, 1); //5 mins (300000)
	accountstimer = SetTimer("SaveAccounts", 1800000, 1); //30 mins every account saved
	checkgastimer = SetTimer("CheckGas", RunOutTime, 1);
	stoppedvehtimer = SetTimer("StoppedVehicle", RunOutTime, 1);
	CarInit();
	SetTimer("Timer",500000,1); // реклама каждые 000 минут
	printf("OnGameModeInit достиг конца");
	return 1;
}
//==============================================================================
public SetPlayerFree(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new crbjstore[128];
		if(declare == 255)
		{
			format(turner, sizeof(turner), "112");
		}
		else
		{
			if(IsPlayerConnected(declare))
			{
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		format(turnmes, sizeof(turnmes), "SMS: %s, вы больше не преступник, причина: %s. Отправитель: 02",turned,reason);
		RingTone[playerid] = 20;
		SendClientMessage(playerid, COLOR_YELLOW, turnmes);
		foreach(new i:Player)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1||PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2||PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
				{
					format(crbjstore, sizeof(crbjstore), "Всем постам: %s пойман!",turner);
					SendClientMessage(i, COLOR_DBLUE, crbjstore);
					format(crbjstore, sizeof(crbjstore), "Игрок %s был посажен в тюрьму, %s",turned,reason);
					SendClientMessage(i, COLOR_DBLUE, crbjstore);
				}
			}
		}
	}
}
public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		foreach(new i:Player)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
					if(((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if(((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if(((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if(((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}//not connected
	return 1;
}
//==============================================================================
//==============================================================================
public CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
//==============================================================================
public IsStringAName(string[])
{
	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			new testname[MAX_PLAYER_NAME];
			GetPlayerName(i, testname, sizeof(testname));
			//printf("IsS:testname = %s : string = %s",testname,string);
			if(strcmp(testname, string, true, strlen(string)) == 0)
			{
				//printf("TRUE IsS:testname = %s : string = %s",testname,string);
				return 1;
			}
		}
	}
	return 0;
}
//===============================================================================
stock GetPlayerID(string[])
{
	new testname[MAX_PLAYER_NAME];
	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			testname = "";
			GetPlayerName(i, testname, sizeof(testname));
			if(!strcmp(testname, string, true, strlen(string))) return i;
		}
	}
	return -1;
}
//==============================================================================
public ProxDetectorS(Float:radi, playerid, targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
//==============================================================================
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
//==============================================================================
public OnPlayerKeyStateChange(playerid, newkeys,oldkeys)
{
	if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
			|| ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
			|| ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
			&& GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
		SetPVarInt(playerid,#P_Walk_Timer,tick_id);
	}
	
	if(newkeys == 4)
	{
		if(IsPlayerInAnyVehicle(@p))
		{
			for(new i = 0; i < 3; i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 20.0, rep_pos[i][0],rep_pos[i][1],rep_pos[i][2]))
				{
					SPD(@p,1260,DIALOG_STYLE_LIST,"Ремонт/покраска автомобиля","{ffffff}Ремонт автомобиля - 5000 рублей\n{ffffff}Покраска автомобиля - 50000 рублей","Далее","Отмена");
					break;
				}			
			}
		}
	}
	new v = GetPlayerVehicleID(playerid);
	if(newkeys&KEY_CROUCH)//Если нажата клавиша гудка (H/CapsLock - по умолчанию)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetPlayerState(playerid)==PLAYER_STATE_DRIVER&&GetVehicleModel(vehicleid)==538)//Если игрок - водитель ТС и ID модели ТС = 538 (в данном случае - головной вагон электрички)
		{
			new Float:tempX, Float:tempY, Float:tempZ;//Создаем временные переменные под координаты игрока
			GetPlayerPos(playerid, tempX, tempY, tempZ);//Получаем координаты
			for (new tempi=0; tempi<MAX_PLAYERS; tempi++)//Далее по циклу на всех игроков
			{
				if(IsPlayerInRangeOfPoint(tempi, 15.0, tempX, tempY, tempZ))//если игрок в радиусе -
				{
					PlayerPlaySound (tempi, 3200, 0.0, 0.0, 0.0);//проигрываем для него звук
					SendClientMessage (tempi, COLOR_PURPLE, "Вы слышите гудок электрички.");//и выводим сообщение.
				}
			}
		}
		return 1;
	}
	if( (newkeys & KEY_FIRE) || ( (newkeys & KEY_AIM) && (oldkeys & KEY_AIM) && (newkeys & KEY_SECONDARY_ATTACK) ) )
	{
		if(IsAAntidm(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				ShowPlayerDialog(playerid,292,DIALOG_STYLE_MSGBOX,"{FF0000}Anti-DM zone!","{FFFFFF}\t\t\tЗдесь запрещено драться!\n\nВнимание! DM (Death Match) - убийство или нанесение физического вреда игрокам\nбез причины, запрещено на нашем сервере. Наказуемо администраторацией.", "Скрыть", "");
				SetTimerEx("ClearAnim", 5000, false, "d", playerid);
				ApplyAnimation(playerid, "FAT", "IDLE_tired",4.0,1,0,0,0,0,1);
				return true;
			}
		}
	}
	//=============================Казино===========================================
	if(PlayerToPoint(1.0,playerid,2311.6997,-1711.8619,22.9265)||PlayerToPoint(1.0,playerid,2313.6309,-1711.8612,22.9265)||PlayerToPoint(1.0,playerid,2313.6667,-1712.7472,22.9265)||PlayerToPoint(1.0,playerid,2313.6680,-1715.0394,22.9265)
			||PlayerToPoint(1.0,playerid,2313.9209,-1717.1793,22.9265)||PlayerToPoint(1.0,playerid,2313.9194,-1719.5695,22.9265)||PlayerToPoint(1.0,playerid,2313.9187,-1722.1215,22.9265)||PlayerToPoint(1.0,playerid,2311.9277,-1721.9996,22.9265))
	{
		ShowPlayerDialog(playerid,1603,DIALOG_STYLE_INPUT,"{08A9FA}Казино `Фортуна`","{FFFFFF}Минимальная ставка: {F5EE09}1000 рублей\n{FFFFFF}Максимальная ставка: {F5EE09}500.000 рублей\n{6CF509}Желаем удачи!","OK","Закрыть");
	}
	//=============================бх===============================================
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP && GetPlayerState(playerid) != 2) ClearAnimations(playerid), ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,0,0);
	if(oldkeys & KEY_FIRE) return OnPlayerCommandText(playerid, "/migloon");
	//=========================[zvonok]=============================================
	if(newkeys&KEY_FIRE)
	{
		new car = GetPlayerVehicleID(playerid);
		if(GetPlayerState(playerid)==PLAYER_STATE_DRIVER)
		{
			new id_car = GetVehicleIdxByID(car);
			if(id_car == -1) return 1;
			switch(aData[id_car][aFrak])
			{
			case 1,2,4,6,19:
				{
					new Float:tempX, Float:tempY, Float:tempZ;//Создаем временные переменные под координаты игрока
					GetPlayerPos(playerid, tempX, tempY, tempZ);//Получаем координаты
					for (new tempi=0; tempi<MAX_PLAYERS; tempi++)//Далее по циклу на всех игроков
					{
						if(IsPlayerInRangeOfPoint(tempi, 35.0, tempX, tempY, tempZ))//если игрок в радиусе -
						{
							PlayerPlaySound (tempi, 2000, 0.0, 0.0, 0.0);//проигрываем для него звук			
						}
					}
				}
			default: return 1;
			}		
		}
		return 1;
	}
	if(newkeys&16384)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(VehInfo[v][vRightBlink] == 0)
			{

				Blink[v][0] = CreateDynamicObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);//правый передний
				Blink[v][1] = CreateDynamicObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);//правый задний
				//AttachObjectToVehicle(Blink[v][0], v, 0.9, 2.5, 0.1, 0.0, 0.0, 0.0);//правый передний
				//AttachObjectToVehicle(Blink[v][1], v, 0.9, -2.7, 0.1, 0.0, 0.0, 0.0);//правый задний
				AttachDynamicObjectToVehicle(Blink[v][0], v, 0.9, 2.5, 0.1, 0.0, 0.0, 0.0);
				AttachDynamicObjectToVehicle(Blink[v][1], v, 0.9, -2.7, 0.1, 0.0, 0.0, 0.0);
				new str[98];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
				format(str, sizeof(str), "{979694}* Правые поворотники были включены.");
				SendClientMessage(playerid,COLOR_GRAD1,str);
				VehInfo[v][vRightBlink] = 1;
				//VehInfo[v][vLeftBlink] = 1;
			}
			else if(VehInfo[v][vRightBlink] == 1 || VehInfo[v][vLeftBlink] == 1 || VehInfo[v][vAvaBlink])
			{
				if(IsValidDynamicObject(Blink[v][0])) DestroyDynamicObject(Blink[v][0]);
				if(IsValidDynamicObject(Blink[v][1]))DestroyDynamicObject(Blink[v][1]);
				if(IsValidDynamicObject(Blink[v][2]))DestroyDynamicObject(Blink[v][2]);
				if(IsValidDynamicObject(Blink[v][3]))DestroyDynamicObject(Blink[v][3]);
				new str[98];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
				format(str, sizeof(str), "{979694}* Правые поворотники были выключены.");
				SendClientMessage(playerid,COLOR_GRAD1,str);
				VehInfo[v][vRightBlink] = 0;
				VehInfo[v][vLeftBlink] = 0;
				VehInfo[v][vAvaBlink] = 0;
			}
		}
	}
	if(newkeys&8192)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(VehInfo[v][vLeftBlink] == 0)
			{
				Blink[v][2] = CreateDynamicObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);//левыый передний
				Blink[v][3] = CreateDynamicObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);//левыый  задний
				AttachDynamicObjectToVehicle(Blink[v][2], v, -0.9, 2.5, 0.1, 0.0, 0.0, 0.0);
				AttachDynamicObjectToVehicle(Blink[v][3], v, -0.9, -2.7, 0.1, 0.0, 0.0, 0.0);
				new str1[98];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
				format(str1, sizeof(str1), "{979694}* Левые поворотники были включены.");
				SendClientMessage(playerid,COLOR_GRAD1,str1);
				VehInfo[v][vLeftBlink] = 1;
				//VehInfo[v][vRightBlink] = 1;
				//VehInfo[v][vAvaBlink] = 1;
			}
			else if(VehInfo[v][vRightBlink] == 1 || VehInfo[v][vLeftBlink] == 1 || VehInfo[v][vAvaBlink])
			{
				if(IsValidDynamicObject(Blink[v][0])) DestroyDynamicObject(Blink[v][0]);
				if(IsValidDynamicObject(Blink[v][1]))DestroyDynamicObject(Blink[v][1]);
				if(IsValidDynamicObject(Blink[v][2]))DestroyDynamicObject(Blink[v][2]);
				if(IsValidDynamicObject(Blink[v][3]))DestroyDynamicObject(Blink[v][3]);
				new str[98];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
				format(str, sizeof(str), "{979694}* Левые поворотники были выключены.");
				SendClientMessage(playerid,COLOR_GRAD1,str);
				VehInfo[v][vRightBlink] = 0;
				VehInfo[v][vLeftBlink] = 0;
				VehInfo[v][vAvaBlink] = 0;
			}
		}
	}
	if(newkeys&2048)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(VehInfo[v][vLeftBlink] == 0)
			{
				Blink[v][0] = CreateDynamicObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);//правый передний
				Blink[v][1] = CreateDynamicObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);//правый задний
				Blink[v][2] = CreateDynamicObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);//левыый передний
				Blink[v][3] = CreateDynamicObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);//левыый  задний
				AttachDynamicObjectToVehicle(Blink[v][0], v, 0.9, 2.5, 0.1, 0.0, 0.0, 0.0);
				AttachDynamicObjectToVehicle(Blink[v][1], v, 0.9, -2.7, 0.1, 0.0, 0.0, 0.0);
				AttachDynamicObjectToVehicle(Blink[v][2], v, -0.9, 2.5, 0.1, 0.0, 0.0, 0.0);
				AttachDynamicObjectToVehicle(Blink[v][3], v, -0.9, -2.7, 0.1, 0.0, 0.0, 0.0);
				new str1[98];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
				format(str1, sizeof(str1), "{979694}* Аварийный сигнал был включен.", pname);
				SendClientMessage(playerid,COLOR_GRAD1,str1);
				VehInfo[v][vLeftBlink] = 1;
				VehInfo[v][vRightBlink] = 1;
				VehInfo[v][vAvaBlink] = 1;
			}
			else if(VehInfo[v][vRightBlink] == 1 || VehInfo[v][vLeftBlink] == 1 || VehInfo[v][vAvaBlink])
			{
				if(IsValidDynamicObject(Blink[v][0])) DestroyDynamicObject(Blink[v][0]);
				if(IsValidDynamicObject(Blink[v][1]))DestroyDynamicObject(Blink[v][1]);
				if(IsValidDynamicObject(Blink[v][2]))DestroyDynamicObject(Blink[v][2]);
				if(IsValidDynamicObject(Blink[v][3]))DestroyDynamicObject(Blink[v][3]);
				new str[98];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
				format(str, sizeof(str), "{979694}* Аварийный сигнал был выключен.", pname);
				SendClientMessage(playerid,COLOR_PURPLE,str);
				VehInfo[v][vRightBlink] = 0;
				VehInfo[v][vLeftBlink] = 0;
				VehInfo[v][vAvaBlink] = 0;
			}
		}
	}
	if(newkeys & KEY_FIRE && GetVehicleModel(GetPlayerVehicleID(playerid)) == 407 && GetPlayerWeapon(playerid) == 42 && (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19))
	{
		new rand;
		if(IsPlayerInRangeOfPoint(playerid, 30.0, 2533.1838,-760.8952, 14.8442) && rand == 0
				|| IsPlayerInRangeOfPoint(playerid, 30.0, 2507.6365,-2125.1021,23.4558) && rand == 1
				|| IsPlayerInRangeOfPoint(playerid, 30.0, 2254.8169,-1823.5900,22.8078) && rand == 2
				|| IsPlayerInRangeOfPoint(playerid, 30.0, 2316.3362,-1718.3304,22.9265) && rand == 3
				|| IsPlayerInRangeOfPoint(playerid, 30.0, 2254.8169,-1823.5900,22.8078) && rand == 4
				|| IsPlayerInRangeOfPoint(playerid, 30.0, -846.1000, 1203.3153,11.5469) && rand == 5
				|| IsPlayerInRangeOfPoint(playerid, 30.0, 2558.9490,-2403.8416,-3.9585) && rand == 6)

		{
			SendClientMessage(playerid, 0xFF0000FF, "Пожарным удалось потушить пожар!");
			DestroyObject(FireObject[0]);
			DestroyObject(FireObject[1]);
			KillTimer(FireTimer);
			FireTimer = SetTimer("FireWorld", 1 * 30 * 1000, 1);
		}
	}
	if(newkeys & KEY_JUMP && GetPVarInt(playerid, "jobgruz") == 1 && GetPVarInt(playerid, "loader") == 2 || newkeys & KEY_FIRE && GetPVarInt(playerid, "jobgruz") == 1 && GetPVarInt(playerid, "loader") == 2)
	{
		ClearAnimations(playerid);
		RemovePlayerAttachedObject(playerid,2);
		SetPVarInt(playerid,"loader", 1);
		SetPlayerCheckpoint(@p,-2373.1421,283.9664,23.7266,2.0);
		SCM(playerid, COLOR_RED, "Вы уронили коробку. Возьмите другую");
	}
	if((newkeys & KEY_JUMP && gpvi(@p, #P_JobLess_On) && GetPVarInt(playerid,#P_JobLess_St)) || (newkeys & KEY_FIRE && gpvi(@p, #P_JobLess_On) && GetPVarInt(playerid,#P_JobLess_St)))
	{
		ClearAnimations(playerid);
		DisablePlayerCheckpoint(@p);
		DeletePVar(@p,#P_JobLess_St);
		RemovePlayerAttachedObject(@p, 0);		
		SendClientMessage(playerid,COLOR_WHITE,"Вы уронили древесину.");
		TogglePlayerControllable(playerid,true);
		switch(random(2))
		{
		case 0:SetPlayerCheckpoint(@p,-2162.0549,-525.4449,39.3283,2.0);
		case 1:SetPlayerCheckpoint(@p,-2155.7593,-498.4414,37.9468,2.0);
		case 2:SetPlayerCheckpoint(@p,-2134.4932,-518.0827,39.4268,2.0);
		}
		SCM(@p,COLOR_WHITE,"{2E9AFE}Отправляйтесь за бревнами");
		SetPlayerAttachedObject(playerid, 0 ,341, 6,0,0,0.0,0.0,0);
	}
	if((newkeys & KEY_JUMP && GetPVarInt(playerid, "jobshaxta") == 1 && GetPVarInt(playerid, "Nesti") == 1) || (newkeys & KEY_FIRE && GetPVarInt(playerid, "jobshaxta") == 1 && GetPVarInt(playerid, "Nesti") == 1))
	{
		ClearAnimations(playerid);
		SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
		RemovePlayerAttachedObject(playerid, 4);
		SetPVarInt(playerid,"Nesti", 0);
		SetPVarInt(playerid,"Proverka", 0);
		DisablePlayerCheckpoint(playerid);
		SCM(playerid, COLOR_RED, "Вы уронили камень. Добывайте другой!");
	}
	if(newkeys&512) // Вверх
	{
		OnPlayerCommandText(playerid,"/light"); // Свет
	}
	if(newkeys&4096) // Num 2
	{
		OnPlayerCommandText(playerid,"/siren"); // мигалка ДПС
	}
	if(newkeys&4096) // Num 2
	{
		OnPlayerCommandText(playerid,"/psgy"); // мигалка ППС
	}
	if(newkeys&4096) // Num 2
	{
		OnPlayerCommandText(playerid,"/sgy"); // мигалка МЧС
	}
	if(newkeys&4096) // Num 2
	{
		OnPlayerCommandText(playerid,"/fsiren"); // мигалка ФСБ
	}
	if(newkeys&4096) // Num 2
	{
		OnPlayerCommandText(playerid,"/msgy"); // мигалка медиков
	}
	if(newkeys == 1 && IsPlayerInAnyVehicle(playerid))
	{
		if(IsABike(GetPlayerVehicleID(playerid)))
		{
			RemovePlayerFromVehicle(playerid);
			ApplyAnimation(playerid,"BIKES","BIKEs_Still",4.1,0,1,1,1,1);
			SendClientMessage(playerid,COLOR_GRAD1,#Прыжки на велосипеде запрещены!);
			return 1;
		}
	}
	if(newkeys == 16)
	{
		if(GetPVarInt(playerid,"RegSkinSelect") == 1) ShowMenuForPlayer(regskinselects, playerid);
	}
	if(newkeys == KEY_YES) return OnPlayerCommandText(playerid,"/radiocar");
	if(newkeys == 1024)
	{
		
		for(new b = 0; b < sizeof(Atm); b++)
		{
			if(PlayerToPoint(3.0, playerid, Atm[b][atmX], Atm[b][atmY], Atm[b][atmZ]) && Atm[b][atmOwned] == 1) 
			{
				if(!PlayerInfo[@p][pLeader]) return ShowPlayerDialog(playerid, 1550, DIALOG_STYLE_LIST, "Платёжный терминал", "{808080}1. {FFFFFF}Снять деньги с карточки\n{808080}2. {FFFFFF}Положить деньги на карточку\n{808080}3. {FFFFFF}Посмотреть баланс карточки\n{808080}4. {FFFFFF}Пополнить счёт мобильного\n{808080}5. {FFFFFF}Оплатить штраф\n{808080}6. {FFFFFF}Оплата коммунальных услуг", "Далее", "Выход");
				else return ShowPlayerDialog(playerid, 1550, DIALOG_STYLE_LIST, "Платёжный терминал", "{808080}1. {FFFFFF}Снять деньги с карточки\n{808080}2. {FFFFFF}Положить деньги на карточку\n{808080}3. {FFFFFF}Посмотреть баланс карточки\n{808080}4. {FFFFFF}Пополнить счёт мобильного\n{808080}5. {FFFFFF}Оплатить штраф\n{808080}6. {FFFFFF}Оплата коммунальных услуг\n{808080}7. {FFFFFF}Управление счетом организации", "Далее", "Выход");
			}
		}
		for(new b = 0; b < sizeof(LarekInfo); b++)
		{
			if(PlayerToPoint(3.0, playerid, LarekInfo[b][larX], LarekInfo[b][larY], LarekInfo[b][larZ]) && LarekInfo[b][larOwned] == 1) 
			{
				static const dlg_str[] ="Шаурма в сырном лаваше - 120 рублей.\nХот-дог с 1 сосиской - 50 рублей.\nХот-дог с 2 сосисками - 90 рублей.\nНапиток Coca-Cola - 55 рублей.\nСтакан кофе - 10 рублей.\nПирожок с яблоком - 80 рублей.\nКусок пиццы - 70 рублей.\nПирожок с повидлом - 70 рублей.\nБатончик Twix - 30 рублей.";
				new str[sizeof(dlg_str)];
				format(str,sizeof(str),"%s",dlg_str);
				ShowPlayerDialog(playerid,52,DIALOG_STYLE_LIST,"Ларек с едой, добро пожаловать",str,"Купить","Отмена");
				return 1;
			}
		}
		for(new i = 1; i <= ALLKVARTIRI; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2, FlatInfo[i][pXpic],FlatInfo[i][pYpic],FlatInfo[i][pZpic]) && FlatInfo[i][kworld] == GetPlayerVirtualWorld(playerid))
			{
				KGet(playerid);
				if(FlatInfo[i][lock] == 1 && GetPVarInt(playerid,"Kvart") != i) return SendClientMessage(playerid, -1, "Квартира закрыта. У Вас нет ключей.");
				SetPPos(playerid, -214.7046,2372.8638,-30.9847);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, FlatInfo[i][kworld]);
				SetPVarInt(playerid,#P_IdKv,i);
				Frez(playerid);
				return true;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3, -214.7046,2372.8638,-30.9847))
			{
				new x = GetPVarInt(playerid,#P_IdKv);
				SetPPos(playerid, FlatInfo[x][pXpic],FlatInfo[x][pYpic],FlatInfo[x][pZpic]);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, FlatInfo[x][kworld]);
				Frez(playerid);
				DeletePVar(playerid,#P_IdKv);
				return true;
			}
		}
		for(new i = 0; i < sizeof(AC); i++)
		{
			if(IsPlayerInRangeOfPoint(playerid,1.0,AC[i][acEntX],AC[i][acEntY],AC[i][acEntZ]))
			{
				if(AC[i][acLock] && PlayerInfo[playerid][pAdmin] <= 0) return SendClientMessage(playerid,-1,"Магазин закрыт!");
				SetPVarInt(playerid,#P_BizAcc_Idx,i);
				SetPlayerInterior(playerid, AC[i][acInter]);
				SetPlayerVirtualWorld(playerid, AC[i][acWorld]);
				SetPlayerPos(playerid,800.0126,-1045.3339,451.5759);
				Frez(playerid);
			}
		}
		forPod(i)
		{
			if(IsPlayerInRangeOfPoint(playerid,1.0,PodInfo[i][pPos][0],PodInfo[i][pPos][1],PodInfo[i][pPos][2]))
			{
				Frez(playerid);
				SetPPos(playerid,PodInfo[i][pPos][3],PodInfo[i][pPos][4],PodInfo[i][pPos][5]);
				SetPlayerFacingAngle(playerid,POD_A);
				//SetPlayerInterior(playerid,PodInfo[i][pInt]);
				SetPVarInt(playerid,#J_PodID,i);
				SetPVarInt(playerid,#J_Lift,1);
				SetPlayerVirtualWorld(playerid,PodInfo[i][pWorld]);
				SetCameraBehindPlayer(playerid);
				break;
			}
			if(IsPlayerInRangeOfPoint(playerid,1.0,PodInfo[i][pPos][3],PodInfo[i][pPos][4],PodInfo[i][pPos][5]) && GetPlayerVirtualWorld(playerid) == PodInfo[i][pWorld])
			{
				Frez(playerid);
				SetPPos(playerid,PodInfo[i][pPos][0],PodInfo[i][pPos][1],PodInfo[i][pPos][2]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,#J_PodID);
				DeletePVar(playerid,#J_Lift);
				break;
			}
		}
		for(new i = 1; i <= ALLGARAGE; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, Garage[i][gX1], Garage[i][gY1], Garage[i][gZ1]))
			{
				GetPlayerGarage(playerid);
				if(Garage[i][gLock] == 1 && GetPVarInt(playerid,"PlayerGarage") != i) return SendClientMessage(playerid, -1, "Гараж закрыт!");
				SetPVarInt(playerid,#PG_id,i);
				if(Garage[i][gUL] > 0) PlayAudioStreamForPlayer(playerid, "http://www.zaycev.fm:9001/rnb/ZaycevFM(128)", 0.0, 0.0, 0.0, 50.0, 0);
				SetPPos(playerid, Garage[i][gX4], Garage[i][gY4], Garage[i][gZ4]), SetPlayerVirtualWorld(playerid, Garage[i][gVirtual]), SetPlayerInterior(playerid, 1);
				TogglePlayerControllable(playerid, false);
				SetTimerEx("@UnFreeze", 3000, false, "i", playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, Garage[i][gX4], Garage[i][gY4], Garage[i][gZ4]) && GetPlayerVirtualWorld(playerid) == Garage[i][gVirtual])
			{
				new id = GetPVarInt(playerid,#PG_id);
				SetPPos(playerid, Garage[id][gX1], Garage[id][gY1], Garage[id][gZ1]);
				SetPlayerVirtualWorld(playerid, 0), SetPlayerInterior(playerid, 0), StopAudioStreamForPlayer(playerid);
				DeletePVar(playerid,#PG_id);
				TogglePlayerControllable(playerid, false);
				SetTimerEx("@UnFreeze", 3000, false, "i", playerid);
			}
		}
	}
	if(newkeys & KEY_CTRL_BACK)
	{
		if(MestaSahta(playerid))
		{
			if(GetPVarInt(playerid,"jobshaxta") == 1)
			{
				if(GetPVarInt(playerid,"Proverka") > 0) return 1;
				SendClientMessage(playerid,-1,"Вы начали добывать руду, ожидайте.");
				ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);
				SetPVarInt(playerid,"Proverka", 1);
				spvi(@p,#P_RudaTimer,SetTimerEx("GiveRuda", 1000, false, "i", playerid));
				return true;
			}
		}
	}
	if(newkeys == KEY_NO)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(playerid), Float:HP; GetVehicleHealth(vehicleid, HP);
			if(IsPlayerInAnyVehicle(playerid))
			{
				if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return 1;
			}
			if(HP <= 200) return SendClientMessage(playerid, -1, "Вызовите механика у вас проблемы с транспортом или кончился бензин");
			OnPlayerCommandText(playerid,"/engine");
		}
	}
	if(newkeys == KEY_SPRINT)
	{
		if(PlayerToPoint(2.0, playerid,147.9503,-83.5256,1001.8028)) return OnPlayerCommandText(playerid,"/givepass");
		if(PlayerToPoint(2.0, playerid,298.9799,1083.7313,12.1556)) return OnPlayerCommandText(playerid,"/buy");
	}
	if(oldkeys == 16 || newkeys == 16)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(NoFuel[playerid] == 1)
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				NoFuel[playerid] = 0;
				return 1;
			}
			else if(Engine[gLastCar[playerid]] == 0)
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			else if(BrowsingCar[playerid] == 1)
			{
				BrowsingCar[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK)
	{
		new Veh = GetPlayerVehicleID(playerid);
		if(!IsABoat(Veh))
		{
			return 1;
		}		
	}
	//------------------------------------------------------------------------------
	if(newkeys == KEY_WALK)// ALT
	{
		new string[256];
		if(IsPlayerConnected(playerid))
		{
			if(IsAtBank(playerid))
			{
				format(string,sizeof(string),"На вашем счёте в банке: %d рублей, выберите действие",PlayerInfo[playerid][pAccount]);
				ShowPlayerDialog(playerid, 1500, DIALOG_STYLE_LIST, string, "Положить деньги на счёт\nСнять деньги со счёта\nПеревести деньги другому игроку", "Далее", "Отмена");
				return 1;
			}
			if(PlayerToPoint(1.0, playerid,-1593.7043,716.1392,-5.2422)) // FBI Ammo вход
			{
				if(IsACop(playerid))
				{
					SetPlayerInterior(playerid,0);
					SetPPos(playerid,-1586.7190,705.2397,36.8438);
					GameTextForPlayer(playerid, "~w~Welcome to the FBI Ammo", 5000, 1);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
					PlayerInfo[playerid][pInt] = 0;
					PlayerInfo[playerid][pLocal] = 102;
				}
			}
			if(PlayerToPoint(1.0, playerid,-1586.7190,705.2397,36.8438)) // FBI Ammo выход
			{
				if(IsACop(playerid))
				{
					SetPlayerInterior(playerid,0);
					SetPPos(playerid,-1593.7043,716.1392,-5.2422);
					GameTextForPlayer(playerid, "~w~exit", 5000, 1);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
					PlayerInfo[playerid][pInt] = 0;
					PlayerInfo[playerid][pLocal] = 255;
				}
			}
			//------------------------------------------------------------------------------
			if(PlayerToPoint(1.0, playerid,1481.0381,-1771.3435,18.7958))//Вход в Правительство
			{
				SetPlayerInterior(playerid,3);
				SetPPos(playerid,387.7978,173.8582,1008.3828);

				GameTextForPlayer(playerid, "~w~Welcome to the City Hall", 5000, 1);
				PlayerInfo[playerid][pInt] = 3;
				PlayerInfo[playerid][pLocal] = 241;
			}
			//------------------------------------------------------------------------------
			else if(PlayerToPoint(1, playerid,1554.9537,-1675.6584,16.1953))//вход в ЛСПД
			{//LSPD Entrance
				GameTextForPlayer(playerid, "~w~Police Department", 5000, 1);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				SetPlayerInterior(playerid, 6);
				SetPPos(playerid,246.7079,66.2239,1003.6406);
				PlayerInfo[playerid][pInt] = 6;
			}
			else if(PlayerToPoint(1, playerid,246.5325,62.4251,1003.6406))//выход из ЛСПД
			{//LSPD Exit
				GameTextForPlayer(playerid, "~w~exit", 5000, 1);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				SetPlayerInterior(playerid, 0);
				SetPPos(playerid,1552.3231,-1674.6780,16.1953);
				PlayerInfo[playerid][pInt] = 0;
			}
			//------------------------------------------------------------------------------
			else if(PlayerToPoint(1.0, playerid,-2242.3274,128.5400,35.3203))// вход в 24/7 СФ RC
			{
				SetPPos(playerid, 6.3122,-31.1845,1003.5494);
				SendClientMessage(playerid, COLOR_WHITE, "Используйте: команду /buy для покупок или /sell для продаж.");
				GameTextForPlayer(playerid, "~w~Welcome to the ~r~24-7",5000,3);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				SetPlayerInterior(playerid,10);
				PlayerInfo[playerid][pInt] = 10;
			}
			else if(PlayerToPoint(1.0, playerid,6.3122,-31.1845,1003.5494))
			{
				SetPPos(playerid,-2242.3274,128.5400,35.3203);
				GameTextForPlayer(playerid, "~r~San Fierro",5000,3);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			//-------------------------------------------------------------------------------
			else if(PlayerToPoint(1.0, playerid, 2117.4795,896.9677,11.1797))// вход в 24/7 ЛВ 1
			{
				SetPPos(playerid, -25.9917,-187.6808,1003.5469);
				SendClientMessage(playerid, COLOR_WHITE, "Используйте: команду /buy для покупок или /sell для продаж.");
				GameTextForPlayer(playerid, "~w~Welcome to the ~r~24-7",5000,3);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				SetPlayerInterior(playerid,17);
				PlayerInfo[playerid][pInt] = 17;
			}
			else if(PlayerToPoint(1.0, playerid, -25.9917,-187.6808,1003.5469))
			{
				SetPPos(playerid, 2117.4795,896.9677,11.1797);
				GameTextForPlayer(playerid, "~r~exit",5000,3);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			//-------------------------------------------------------------------------------
			else if(PlayerToPoint(1.0, playerid, 2194.6030,1990.9841,12.2969))// вход в 24/7 ЛВ 2
			{
				SetPPos(playerid, -2240.3027,128.5898,1035.4210);
				SendClientMessage(playerid, COLOR_WHITE, "Используйте: команду /buy для покупок или /sell для продаж.");
				GameTextForPlayer(playerid, "~w~Welcome to the ~r~24-7",5000,3);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				SetPlayerInterior(playerid,6);
				PlayerInfo[playerid][pInt] = 6;
			}
			else if(PlayerToPoint(1.0, playerid, -2240.3027,128.5898,1035.4210))
			{
				SetPPos(playerid, 2194.6030,1990.9841,12.2969);
				GameTextForPlayer(playerid, "~r~exit",5000,3);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			//------------------------------------------------------------------------------
			else if(PlayerToPoint(1, playerid,2244.3423,-1665.5542,15.4766))
			{//Binco next to 10 green
				GameTextForPlayer(playerid, "~w~Binco", 5000, 1);

				//	SendClientMessage(playerid, COLOR_WHITE, " Подсказка: Зайдите в примерочную и смените себе одежду ( набрав /clothes )");
				SetPlayerInterior(playerid, 3);
				SetPPos(playerid,207.3245,-138.4633,1003.5078);
				PlayerInfo[playerid][pInt] = 3;
			}
			else if(PlayerToPoint(1, playerid,206.9357,-140.3760,1003.5078))

			{//Some teleports are fucked up but they are working
				GameTextForPlayer(playerid, "~w~exit", 5000, 1);
				SetPlayerInterior(playerid, 0);
				SetPPos(playerid,2245.2778,-1661.1738,15.4690);
				PlayerInfo[playerid][pInt] = 0;
			}
			//------------------------------------------------------------------------------
			else if(PlayerToPoint(1, playerid, 1122.7500,-2036.9438,69.8942))//вход
			{
				//Madd dog crip enter
				SetPPos(playerid, 1278.6710,-838.4832,1085.6328);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				GameTextForPlayer(playerid, "~w~The La Cosa Nostra",5000,1);
				SetPlayerInterior(playerid,5);
				PlayerInfo[playerid][pInt] = 5;
			}
			else if(PlayerToPoint(1, playerid,1278.6710,-838.4832,1085.6328))//выход
			{
				//Madd dog crip exit
				SetPPos(playerid, 1122.7500,-2036.9438,69.8942);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				GameTextForPlayer(playerid, "~w~Exit",5000,1);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			//------------------------------------------------------------------------------
			else if(PlayerToPoint(1, playerid, 940.7385,-1085.5582,24.2962))//вход
			{
				//Ballas Interior
				SetPPos(playerid, 1212.0000,-28.5000,1000.9531);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				GameTextForPlayer(playerid, "~w~East Side Ballas",5000,1);
				SetPlayerInterior(playerid,3);
				PlayerInfo[playerid][pInt] = 3;
			}
			else if(PlayerToPoint(1, playerid,1212.0896,-26.1044,1000.9531))//выход
			{
				//Ballas Interior exit
				SetPPos(playerid, 940.7385,-1085.5582,24.2962);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				GameTextForPlayer(playerid, "~w~Exit",5000,1);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			//------------------------------------------------------------------------------
			else if(PlayerToPoint(1.0, playerid,627.2987,-12.1183,1000.9219))//Выход Street Racer
			{
				GameTextForPlayer(playerid, "~w~Exit", 5000, 1);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				SetPlayerInterior(playerid,0);
				SetPPos(playerid,1083.0142,-1226.6639,15.8203);
			}
			else if(PlayerToPoint(1.0, playerid,1083.0142,-1226.6639,15.8203)) //Вход Street Racer
			{
				GameTextForPlayer(playerid, "~w~Welcome to the Street Racer Club", 5000, 1);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				SetPlayerInterior(playerid,1);
				SetPPos(playerid,627.2987,-12.1183,1000.9219);//
			}
			//------------------------------------------------------------------------------
			else if(PlayerToPoint(1.0, playerid,964.9496,-53.3250,1001.1246))//Выход TRIAD
			{
				GameTextForPlayer(playerid, "~w~Exit", 5000, 1);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				SetPlayerInterior(playerid,0);
				SetPPos(playerid,-1691.4941,1367.2469,7.1797);
			}
			else if(PlayerToPoint(1.0, playerid,-1691.4941,1367.2469,7.1797)) //Вход TRIAD
			{
				GameTextForPlayer(playerid, "~w~Welcome to the Triads Mafia", 5000, 1);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);// Звук при открывании двери
				SetPlayerInterior(playerid,3);
				SetPPos(playerid,964.9496,-53.3250,1001.1246);//
			}
			if(GetPlayerVehicleID(playerid) >= 400 && GetPlayerVehicleID(playerid) <= 410)
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
			}
			//------------------------------------------------------------------------------
			else if(NoFuel[playerid] == 1)
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				NoFuel[playerid] = 0;
			}
		}	
	}
	//------------------------------------------------------------------------------
	else if(newkeys == KEY_SECONDARY_ATTACK)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			new Float:x, Float:y, Float:z, vehicle;
			GetPlayerPos(playerid, x, y, z );
			GetVehicleWithinDistance(playerid, x, y, z, 20.0, vehicle);

			if(IsVehicleRcTram(vehicle)){
				PutPlayerInVeh(playerid, vehicle, 0);
			}
		}
		else
		{
			new vehicleID = GetPlayerVehicleID(playerid);
			if(IsVehicleRcTram(vehicleID) || GetVehicleModel(vehicleID) == RC_CAM)
			{
				if(GetVehicleModel(vehicleID) != D_TRAM)
				{
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					SetPPos(playerid, x+0.5, y, z+1.0);
				}
			}
		}
	}
	return 1;
}
GetVehicleWithinDistance(playerid, Float:x1, Float:y1, Float:z1, Float:dist, & veh)
{
	for(new i = 1; i < MAX_VEHICLES; i++){
		if(GetVehicleModel(i) > 0){
			if(GetPlayerVehicleID(playerid) != i ){
				new Float:x, Float:y, Float:z;
				new Float:x2, Float:y2, Float:z2;
				GetVehiclePos(i, x, y, z);
				x2 = x1 - x; y2 = y1 - y; z2 = z1 - z;
				new Float:vDist = (x2*x2+y2*y2+z2*z2);
				if( vDist < dist){
					veh = i;
					dist = vDist;
				}
			}
		}
	}
}

IsVehicleRcTram( vehicleid )
{
	new model = GetVehicleModel(vehicleid);
	switch(model)
	{
	case D_TRAM, RC_GOBLIN, RC_BARON, RC_BANDIT, RC_RAIDER, RC_TANK, D_POEZDSF:
		return 1;
	default: return 0;
	}
	return 0;
}
//==============================================================================
public PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:tempposx, Float:tempposy, Float:tempposz;
		tempposx = (curx -x);
		tempposy = (cury -y);
		tempposz = (curz -z);
		if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}
//==============================================================================
public GetWeaponModel(weaponid)
{
	new model;

	switch(weaponid)
	{
	case 1: model=331; case 2: model=333; case 3: model=334;
	case 4: model=335; case 5: model=336; case 6: model=337;
	case 7: model=338; case 8: model=339; case 9: model=341;
	case 10: model=321; case 11: model=322; case 12: model=323;
	case 13: model=324; case 14: model=325; case 15: model=326;
	case 16: model=342; case 17: model=343; case 18: model=344;
	case 22: model=346; case 23: model=347; case 24: model=348;
	case 25: model=349; case 26: model=350; case 27: model=351;
	case 28: model=352; case 29: model=353; case 30: model=355;
	case 31: model=356; case 32: model=372; case 33: model=357;
	case 34: model=358; case 35: model=359; case 36: model=360;
	case 37: model=361; case 38: model=362; case 39: model=363;
	case 41: model=365; case 42: model=366; case 46: model=371;
	}
	if(model<300) return -1;

	return model;
}
//==============================================================================
public CheckForWalkingTeleport(playerid)
{
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(playerid, cx, cy, cz);
	return 1;
}
//==============================================================================
public OnPlayerText(playerid, text[])
{
	if(PlayerInfo[playerid][pAdmin] == 0)
	{
		new server_tick = GetTickCount();
		if(GetPVarInt(playerid, "player_flood_tick") > server_tick)
		return !SendClientMessage(playerid, COLOR_RED, "Флуд запрещен.");
		SetPVarInt(playerid, "player_flood_tick", server_tick + 1000);
	}
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new tmp[256];
	new string[256];

	if(SelectChar[playerid] == 255)
	{
		new idx;
		tmp = strtok(text, idx);
		if((strcmp("next", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("next")))
		{
			switch (SelectCharID[playerid])
			{
			case 1: //ДПС
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 280); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 280; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 284); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 284; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 288); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 288; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 265); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 265; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 266); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 266; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 267); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 267; }
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 211); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 211; }
				}
			case 2: //FBI
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 295); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 295; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 286); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 286; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 165); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 165; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 166); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 166; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 267); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 267; }
				}
			case 3: //Армия
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 287); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 287; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 179); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 179; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 191); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 191; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 70); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 70; }
				}
			case 4: //Скорая
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 274); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 274; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 275); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 275; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 276); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 276; }
				}
			case 5: //АТП
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 21); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 21; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 25); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 25; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 15); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 15; }
				}
			case 6: //ППС
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 281); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 281; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 288); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 288; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 282); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 282; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 283); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 283; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 295); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 295; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 24); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 24; }
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 76); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 76; }
				}
			case 7: //Мэрия
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 164); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 164; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 163); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 163; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 153); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 153; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 150); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 150; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 147); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 147; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 141); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 141; }
				}
			default:
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы не состоите в организации, в которой меняют скин");
				}
			}
			return 0;
		}
	}

	if(MarriageCeremoney[playerid] > 0)
	{
		new idx;
		tmp = strtok(text, idx);
		if((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
		{
			if(GotProposedBy[playerid] < 999)
			{
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Священник: %s вы берёте %s свою прекрасную жену? (напишите 'yes', чтобы согласиться).", giveplayer,sendername);
					SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 1;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
			}
			else if(ProposedTo[playerid] < 999)
			{
				if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Священник: %s и %s теперь вы являетесь мужем и женой, жених поцелуйте невесту.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Священник:  %s и %s я объявляю Вас теперь... Мужем и Женой, теперь вы можете поцеловать Жениха.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Зарегистрирован новый брак между %s и %s", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
						format(string, sizeof(string), "Священник: %s и %s теперь вы являетесь мужем и женой, жених поцелуйте невесту.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Священник: %s и %s я объявляю Вас теперь... Мужем и Женой, теперь вы можете поцеловать Жениха.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Зарегистрирован новый брак между %s и %s", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Священник: %s и %s теперь вы являетесь мужем и женой, жених поцелуйте невесту.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Священник: %s и %s я объявляю Вас теперь... Мужем и Женой, теперь вы можете поцеловать Жениха.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Зарегистрирован новый брак между %s и %s", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					//MarriageCeremoney[ProposedTo[playerid]] = 1;
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(string, sizeof(string), "%s", sendername);
					strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", giveplayer);
					strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
					GivePlayerMoney(playerid, - 10000);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pNewHouse] = PlayerInfo[playerid][pNewHouse];
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
					return 1;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return 0;
				}
			}
		}
		else
		{
			if(GotProposedBy[playerid] < 999)
			{
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), " Вы не хотите вступить в брак с %s, вы не сказали 'yes'.",giveplayer);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "%s хочет вступит с вами в брак, скажите 'yes' чтобы принять.",sendername);
					SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
			}
			else if(ProposedTo[playerid] < 999)
			{
				if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), " Вы не хотите вступить в брак с %s, вы не сказали 'yes'.",giveplayer);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), " %s хочет вступит с вами в брак, скажите 'yes' чтобы принять.",sendername);
					SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return 0;
				}
			}
		}
		return 0;
	}
	if(CallLawyer[playerid] == 111)
	{
		new idx;
		tmp = strtok(text, idx);
		if((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), " %s в тюрьме! Вытащите его!", sendername);
			SendJobMessage(2, TEAM_AZTECAS_COLOR, string);
			SendJobMessage(2, TEAM_AZTECAS_COLOR, "Вы можете вызвать адвоката (/accept lawyer).");
			SendClientMessage(playerid, COLOR_LIGHTRED, "Сообщение послано всем свободным Юристам, пожалуйста подождите.");
			WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
			return 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Сейчас нет свободного юриста, возвращайтесь в камеру.");
			WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
			return 0;
		}
	}
	if(TalkingLive[playerid] != 255)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pJob] == 6)
		{
			format(string, sizeof(string), "[Прямой Эфир] %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		else
		{
			format(string, sizeof(string), "[Прямой Эфир] %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		return 0;
	}
	if(Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), " %s говорит (телефон): %s", sendername, text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		//printf("callers line %d called %d caller %d",Mobile[Mobile[playerid]],Mobile[playerid],playerid);
		if(Mobile[playerid] == 914)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Диспетчер: Простите, что");
				return 0;
			}
			new turner[MAX_PLAYER_NAME];
			new wanted[128];
			GetPlayerName(playerid, turner, sizeof(turner));
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Диспетчер: Мы предупредили все отряды в этой области");
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Спасибо за сообщение о преступлении");
			format(wanted, sizeof(wanted), "Диспетчер: Всем постам: Звонок от: %s",turner);
			SendFamilyMessage(1, COLOR_DBLUE, wanted);
			format(wanted, sizeof(wanted), "Диспетчер: Происшествие: %s",text);
			SendFamilyMessage(1, COLOR_DBLUE, wanted);
			SendClientMessage(playerid, COLOR_GRAD2, " линия отключилась...");
			Mobile[playerid] = 255;
			return 0;
		}
		if(Mobile[playerid] == 913)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "Медик: Простите, что?");
				return 0;
			}
			if((strcmp("Нет", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Нет")))
			{
				new turner[MAX_PLAYER_NAME];
				new wanted[128];
				GetPlayerName(playerid, turner, sizeof(turner));
				SendClientMessage(playerid, COLOR_DBLUE, "Дежурный: Мы предупредили все отряды в этой области!");
				SendClientMessage(playerid, COLOR_DBLUE, "Спасибо за сообщение о преступлении");
				format(wanted, sizeof(wanted), "Дежурный: Всем постам: Звонок от: %s",turner);
				SendFamilyMessage(1, COLOR_DBLUE, wanted);
				format(wanted, sizeof(wanted), "Дежурный: Происшествие: %s, Сообщил: Неизвестный",PlayerCrime[playerid][pAccusing]);
				SendFamilyMessage(1, COLOR_DBLUE, wanted);
				SendClientMessage(playerid, COLOR_GRAD2, "линия отключилась...");
				Mobile[playerid] = 255;
				return 0;
			}
			new badguy;
			//badguy = strval(tmp);
			badguy = ReturnUser(tmp);
			if(IsPlayerConnected(badguy))
			{
				if(badguy != INVALID_PLAYER_ID)
				{
					if(WantedPoints[badguy] > 0)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Дежурный: Все наряды расcматривают этот случай");
						SendClientMessage(playerid, COLOR_DBLUE, " Спасибо за сообщение о преступлении");
						SendClientMessage(playerid, COLOR_GRAD2, "   линия отключилась...");
						Mobile[playerid] = 255;
						return 0;
					}
					if(badguy == playerid)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Дежурный: Хватить дурачиться, это экстренная линия.");
						SendClientMessage(playerid, COLOR_GRAD2, "   линия отключилась...");
						Mobile[playerid] = 255;
						return 0;
					}
					SendClientMessage(playerid, COLOR_DBLUE, "Дежурный: Мы предупредили все отряды в этой области!");
					SendClientMessage(playerid, COLOR_DBLUE, " Спасибо за сообщение о преступлении");
					SetPlayerCriminal(badguy,playerid, PlayerCrime[playerid][pAccusing]);
					if(WantedPoints[badguy] > 0) { } else { WantedPoints[badguy] += 2; }
					SendClientMessage(playerid, COLOR_GRAD2, "   линия отключилась...");
					Mobile[playerid] = 255;
					return 0;
				}//invalid id
				return 0;
			}//not connected
			else
			{
				format(string, sizeof(string), "Дежурный: У меня нет информации на  %s, вы уверены что это правильное имя?",tmp);
				SendClientMessage(playerid, COLOR_DBLUE, string);
				return 0;
			}
		}
		if(Mobile[playerid] == 912)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "Медик: Извните, непонял?");
				return 0;
			}
			strmid(PlayerCrime[playerid][pAccusing], text, 0, strlen(text), 255);
			SendClientMessage(playerid, COLOR_DBLUE, "Дежурный: Знаете ли вы имя налётчика или его ID, хотябы часть его ника чтобы индефицировать его.");
			Mobile[playerid] = 913;
			return 0;
		}
		if(Mobile[playerid] == 112)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "Диспетчер: Повторите пожалуйста, Полиция или Скорая?");
				return 0;
			}
			else if((strcmp("Полиция", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Полиция")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "Диспетчер: Я направляю вас на Полицию, пожалуйста подождите!");
				Mobile[playerid] = 912;
				SendClientMessage(playerid, COLOR_DBLUE, "Дежурный: Пожалуйста раскажите проишествие.");
				return 0;
			}
			else if((strcmp("Скорая Помощь", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Скорая Помощь")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "Скорая помощь: Я направляю вас на Скорая Помощь, пожалуйста подождите!");
				Mobile[playerid] = 914;
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Диспетчер: Пожалуйста опишите инцидент");
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "Диспетчер: Повторите пожалуйста, Полиция или Скорая Помощь? ");
				return 0;
			}
		}
		if(IsPlayerConnected(Mobile[playerid]))
		{
			if(Mobile[Mobile[playerid]] == playerid)
			{
				SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY,"Тут никого нет");
		}
		return 0;
	}
	//------------------------------------------------------------------------------
	if(PlayerInfo[playerid][pMuted] == 1)	{
		SendClientMessage(playerid, COLOR_RED, "Вы лишены права писать в основной чат.");
		PlayerMuteMessage(playerid);
		return 0;	}
	//------------------------------------------------------------------------------
	if(realchat)
	{
		if(gPlayerLogged[playerid] == 0)
		{
			return 0;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetInitials(playerid);
		if(chatoff == 1)
		{
			if(GetPVarInt(playerid,#P_Mask_On) == 1)
			{
				format(string, sizeof(string), "* Человек в маске говорит: %s", text);
				SetPlayerChatBubble(playerid, text, COLOR_GREEN, 50.0, 10000);//
				ProxDetector(5.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			}
			else
			{
				if(PlayerInfo[playerid][pSex] == 2) format(string, sizeof(string), "%s говорит: %s", NamePlayer[playerid], text);
				else format(string, sizeof(string), "%s говорит: %s", NamePlayer[playerid], text);
				SetPlayerChatBubble(playerid, text, 0x33aa33aa, 10.0, 10000);
				switch(GetPVarInt(playerid,#P_Chat_Style))
				{
				case 0:ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
				case 1:ApplyAnimation(playerid,"GANGS","prtial_gngtlkA",4.1,0,1,1,1,1);
				case 2:ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,1,1,1,1);
				case 3:ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,1,1,1,1);
				case 4:ApplyAnimation(playerid,"GHANDS","gsign3LH",4.1,0,1,1,1,1);
				}			    
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			}
		}
		if(chatoff == 0)
		{
			format(string, sizeof(string), "%s: %s", sendername, text);
			SendClientMessageToAll(COLOR_OOC,string);
		}
		return 0;
	}
	return 1;
}
//=============================
stock IsAMoto(carid)
{
	new model = GetVehicleModel(carid);
	if(model == 523|| model == 581|| model == 462|| model == 521|| model == 463|| model == 522|| model == 448|| model == 461|| model == 471|| model == 468|| model == 586)
	return 1;
	return 0;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	new string[24];
	if(gpvi(@p,#P_Skin))
	{
		if(clickedid == td_magskin[0])//<
		{
			switch(PlayerInfo[@p][pSex])
			{
				case 1://m
				{
					if(gpvi(@p,#P_Skin_I) <= 0) spvi(@p,#P_Skin_I,(MMSkin-1));
					else spvi(@p,#P_Skin_I,gpvi(@p,#P_Skin_I)-1);
					SetPlayerSkin(@p,men_skin[gpvi(@p,#P_Skin_I)][0]);
					format(string,sizeof(string),"‰E®A: %d",men_skin[gpvi(@p,#P_Skin_I)][1]);
					PlayerTextDrawSetString(@p,ptd_magskin[0][@p],string);
					format(string,sizeof(string),"ID: %d",men_skin[gpvi(@p,#P_Skin_I)][0]);
					PlayerTextDrawSetString(@p,ptd_magskin[1][@p],string);					
				}
				case 2://w
				{
					if(gpvi(@p,#P_Skin_I) <= 0) spvi(@p,#P_Skin_I,(MWSkin-1));
					else spvi(@p,#P_Skin_I,gpvi(@p,#P_Skin_I)-1);
					SetPlayerSkin(@p,wom_skin[gpvi(@p,#P_Skin_I)][0]);
					format(string,sizeof(string),"‰E®A: %d",wom_skin[gpvi(@p,#P_Skin_I)][1]);
					PlayerTextDrawSetString(@p,ptd_magskin[0][@p],string);
					format(string,sizeof(string),"ID: %d",wom_skin[gpvi(@p,#P_Skin_I)][0]);
					PlayerTextDrawSetString(@p,ptd_magskin[1][@p],string);
				}
			}
		}
		if(clickedid == td_magskin[1])//>
		{
			switch(PlayerInfo[@p][pSex])
			{
				case 1://m
				{
					if(gpvi(@p,#P_Skin_I) >= (MMSkin-1)) spvi(@p,#P_Skin_I,0);
					else spvi(@p,#P_Skin_I,gpvi(@p,#P_Skin_I)+1);
					SetPlayerSkin(@p,men_skin[gpvi(@p,#P_Skin_I)][0]);
					format(string,sizeof(string),"‰E®A: %d",men_skin[gpvi(@p,#P_Skin_I)][1]);
					PlayerTextDrawSetString(@p,ptd_magskin[0][@p],string);
					format(string,sizeof(string),"ID: %d",men_skin[gpvi(@p,#P_Skin_I)][0]);
					PlayerTextDrawSetString(@p,ptd_magskin[1][@p],string);					
				}
				case 2://w
				{
					if(gpvi(@p,#P_Skin_I) >= (MWSkin-1)) spvi(@p,#P_Skin_I,0);
					else spvi(@p,#P_Skin_I,gpvi(@p,#P_Skin_I)+1);
					SetPlayerSkin(@p,wom_skin[gpvi(@p,#P_Skin_I)][0]);
					format(string,sizeof(string),"‰E®A: %d",wom_skin[gpvi(@p,#P_Skin_I)][1]);
					PlayerTextDrawSetString(@p,ptd_magskin[0][@p],string);
					format(string,sizeof(string),"ID: %d",wom_skin[gpvi(@p,#P_Skin_I)][0]);
					PlayerTextDrawSetString(@p,ptd_magskin[1][@p],string);
				}
			}
		}
		if(clickedid == td_magskin[2])//купить
		{
			switch(PlayerInfo[@p][pSex])
			{
				case 1://m
				{
					if(PlayerInfo[@p][pCash] < men_skin[gpvi(@p,#P_Skin_I)][1]) return SCM(@p,COLOR_GREY,"У вас недостаточно средств для покупки!");
					spvi(@p,#P_Skin_Summ,men_skin[gpvi(@p,#P_Skin_I)][1]);
					spvi(@p,#P_Skin_ID,men_skin[gpvi(@p,#P_Skin_I)][0]);
					glob_str = "";
					format(glob_str,sizeof(glob_str),"Вы действительно хотите купить новую одежду за %d рублей?",men_skin[gpvi(@p,#P_Skin_I)][1]);				
				}
				case 2://w
				{
					if(PlayerInfo[@p][pCash] < wom_skin[gpvi(@p,#P_Skin_I)][1]) return SCM(@p,COLOR_GREY,"У вас недостаточно средств для покупки!");
					spvi(@p,#P_Skin_Summ,wom_skin[gpvi(@p,#P_Skin_I)][1]);
					spvi(@p,#P_Skin_ID,wom_skin[gpvi(@p,#P_Skin_I)][0]);
					glob_str = "";
					format(glob_str,sizeof(glob_str),"Вы действительно хотите купить новую одежду за %d рублей?",wom_skin[gpvi(@p,#P_Skin_I)][1]);	
				}
			}
			SPD(@p,1266,DIALOG_STYLE_MSGBOX,"Магазин одежды",glob_str,"Да","Нет");
			glob_str = "";
			return 1;
		}
		if(clickedid == td_magskin[3])//закрыть
		{
			DeletePVar(@p,#P_Skin);
			DeletePVar(@p,#P_Skin_I);
			CancelSelectTextDraw(@p);
			for(new i = 0; i < 4; i++)
			{
				if(i < 2) PlayerTextDrawHide(@p,ptd_magskin[i][@p]);
				TextDrawHideForPlayer(@p,td_magskin[i]);
			}
			SetPPos(@p,-1779.4672,1773.8760,2377.4160);
			SetCameraBehindPlayer(playerid); TogglePlayerControllable(playerid, 1);
            SetPlayerSkin(@p, PlayerInfo[@p][pModel]);
			SetPlayerVirtualWorld(@p,0);
			return 1;
		}
		if(clickedid == Text:INVALID_TEXT_DRAW)
		{
			SelectTextDraw(@p, 0x0000ffAA);
		}
	}
	if(gpvi(@p,"RegSkinSelect"))
	{
		if(clickedid == Text:INVALID_TEXT_DRAW)
		{
			SelectTextDraw(@p, 0xFFFF00FF);
		}
	}
	if(gpvi(@p,#P_AsOn))
	{
		if(clickedid == td_as[2]) //<
		{
			if((gpvi(@p,#P_AcarIdx)-1) < 0) spvi(@p,#P_AcarIdx,M_ACARS-1);
			new id_car = gpvi(@p,#P_AsCarIdx);
			spvi(@p,#P_AcarIdx,gpvi(@p,#P_AcarIdx)-1);
			aData[id_car][aCarid] = ChangeVehicleModel(aData[id_car][aCarid], ACAR_I[gpvi(@p,#P_AcarIdx)][mod_id]);
			SetVehicleVirtualWorld(aData[id_car][aCarid], @p+1);
			PlayerTextDrawSetString(@p,ptd_as[0][@p],ACAR_I[gpvi(@p,#P_AcarIdx)][mod_name]);
			format(string,sizeof string,"%d P",ACAR_I[gpvi(@p,#P_AcarIdx)][mod_price]);
			PlayerTextDrawSetString(@p,ptd_as[1][@p],string);
		}
		if(clickedid == td_as[3]) //>
		{
			if((gpvi(@p,#P_AcarIdx)+1) >= M_ACARS) spvi(@p,#P_AcarIdx,0);
			new id_car = gpvi(@p,#P_AsCarIdx);
			spvi(@p,#P_AcarIdx,gpvi(@p,#P_AcarIdx)+1);
			aData[id_car][aCarid] = ChangeVehicleModel(aData[id_car][aCarid], ACAR_I[gpvi(@p,#P_AcarIdx)][mod_id]);
			SetVehicleVirtualWorld(aData[id_car][aCarid], @p+1);
			PlayerTextDrawSetString(@p,ptd_as[0][@p],ACAR_I[gpvi(@p,#P_AcarIdx)][mod_name]);
			format(string,sizeof string,"%d P",ACAR_I[gpvi(@p,#P_AcarIdx)][mod_price]);
			PlayerTextDrawSetString(@p,ptd_as[1][@p],string);
		}
		if(clickedid == td_as[4])//белый
		{
			ChangeVehicleColor(aData[gpvi(@p,#P_AsCarIdx)][aCarid],1,1);
			spvi(@p,#P_AsCarCol,1);
		}
		if(clickedid == td_as[5])//серый
		{
			ChangeVehicleColor(aData[gpvi(@p,#P_AsCarIdx)][aCarid],29,29);
			spvi(@p,#P_AsCarCol,29);
		}
		if(clickedid == td_as[6])//бежевый
		{
			ChangeVehicleColor(aData[gpvi(@p,#P_AsCarIdx)][aCarid],69,69);
			spvi(@p,#P_AsCarCol,69);
		}
		if(clickedid == td_as[7])//купить
		{
			glob_str = "";
			format(glob_str,sizeof(glob_str),"Вы действительно хотите купить %s за %d рублей?",ACAR_I[gpvi(@p,#P_AcarIdx)][mod_name],ACAR_I[gpvi(@p,#P_AcarIdx)][mod_price]);
			SPD(@p,1254,DIALOG_STYLE_MSGBOX,"Подтверждение покупки",glob_str,"Да","Нет");
			glob_str = "";
			return 1;			
		}
		if(clickedid == td_as[8])//закрыть
		{
			DestroyVehicle(aData[gpvi(@p,#P_AsCarIdx)][aCarid]);
			TogglePlayerControllable(@p,1);
			for(new i = 0; i < 9; i++)
			{
				if(i < 2) PlayerTextDrawHide(@p,ptd_as[i][@p]);
				TextDrawHideForPlayer(@p,td_as[i]);				
			}
			CancelSelectTextDraw(@p);
			SetCameraBehindPlayer(@p);	
			SetPlayerVirtualWorld(@p,0);			
			aData[gpvi(@p,#P_AsCarIdx)][aKey] = 0;	
			DeletePVar(@p,#P_AsOn);
			DeletePVar(@p,#P_AcarIdx);
			DeletePVar(@p,#P_AsCarIdx);
		}
		if(clickedid == Text:INVALID_TEXT_DRAW)
		{
			SelectTextDraw(@p, 0xFFFF00FF);
		}
	}
	if(clickedid == Text:INVALID_TEXT_DRAW) // ESC
	{
	}
	return 1;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(gpvi(@p,"RegSkinSelect"))
	{
		if(playertextid == ptd_skin[1][@p])
		{
			PlayerTextDrawColor(playerid, ptd_skin[1][playerid], 0x00ff0000);
			for(new i = 1; i < 7; i++)
			{
				if(i == 1) continue;
				PlayerTextDrawColor(playerid, ptd_skin[i][playerid], -1);
			}
			switch(PlayerInfo[playerid][pSex])
			{
			case 2://Женщина
				{
					SetPlayerSkin(playerid, RegFemaleSkins[0]);
					PlayerInfo[playerid][pModel] = RegFemaleSkins[0];				
				}
			default://Мужчина
				{
					SetPlayerSkin(playerid, RegMaleSkins[0]);
					PlayerInfo[playerid][pModel] = RegMaleSkins[0];
				}
			}
			glob_str = "";
			format(glob_str,sizeof(glob_str),"ID: %d",PlayerInfo[playerid][pModel]);
			PlayerTextDrawSetString(@p,ptd_skin[0][@p],glob_str);
			glob_str = "";
		}
		if(playertextid == ptd_skin[2][@p])
		{
			PlayerTextDrawColor(playerid, ptd_skin[2][playerid], 0x00ff00aa);
			for(new i = 1; i < 7; i++)
			{
				if(i == 2) continue;
				PlayerTextDrawColor(playerid, ptd_skin[i][playerid], -1);
			}
			switch(PlayerInfo[playerid][pSex])
			{
			case 2://Женщина
				{
					SetPlayerSkin(playerid, RegFemaleSkins[1]);
					PlayerInfo[playerid][pModel] = RegFemaleSkins[1];
				}
			default://Мужчина
				{
					SetPlayerSkin(playerid, RegMaleSkins[1]);
					PlayerInfo[playerid][pModel] = RegMaleSkins[1];
				}
			}
			glob_str = "";
			format(glob_str,sizeof(glob_str),"ID: %d",PlayerInfo[playerid][pModel]);
			PlayerTextDrawSetString(@p,ptd_skin[0][@p],glob_str);
			glob_str = "";
		}
		if(playertextid == ptd_skin[3][@p])
		{
			PlayerTextDrawColor(playerid, ptd_skin[3][playerid], 0x00ff00aa);
			for(new i = 1; i < 7; i++)
			{
				if(i == 3) continue;
				PlayerTextDrawColor(playerid, ptd_skin[i][playerid], -1);
			}
			switch(PlayerInfo[playerid][pSex])
			{
			case 2://Женщина
				{
					SetPlayerSkin(playerid, RegFemaleSkins[2]);
					PlayerInfo[playerid][pModel] = RegFemaleSkins[2];
				}
			default://Мужчина
				{
					SetPlayerSkin(playerid, RegMaleSkins[2]);
					PlayerInfo[playerid][pModel] = RegMaleSkins[2];
				}
			}
			glob_str = "";
			format(glob_str,sizeof(glob_str),"ID: %d",PlayerInfo[playerid][pModel]);
			PlayerTextDrawSetString(@p,ptd_skin[0][@p],glob_str);
			glob_str = "";
		}
		if(playertextid == ptd_skin[4][@p])
		{
			PlayerTextDrawColor(playerid, ptd_skin[4][playerid], 0x00ff00aa);
			for(new i = 1; i < 7; i++)
			{
				if(i == 4) continue;
				PlayerTextDrawColor(playerid, ptd_skin[i][playerid], -1);
			}
			switch(PlayerInfo[playerid][pSex])
			{
			case 2://Женщина
				{
					SetPlayerSkin(playerid, RegFemaleSkins[3]);
					PlayerInfo[playerid][pModel] = RegFemaleSkins[3];
				}
			default://Мужчина
				{
					SetPlayerSkin(playerid, RegMaleSkins[3]);
					PlayerInfo[playerid][pModel] = RegMaleSkins[3];
				}
			}
			glob_str = "";
			format(glob_str,sizeof(glob_str),"ID: %d",PlayerInfo[playerid][pModel]);
			PlayerTextDrawSetString(@p,ptd_skin[0][@p],glob_str);
			glob_str = "";
		}
		if(playertextid == ptd_skin[5][@p])
		{
			PlayerTextDrawBoxColor(playerid, ptd_skin[5][playerid], 0x00ff00aa);
			for(new i = 1; i < 7; i++)
			{
				if(i == 5) continue;
				PlayerTextDrawColor(playerid, ptd_skin[i][playerid], -1);
			}
			switch(PlayerInfo[playerid][pSex])
			{
			case 2://Женщина
				{
					SetPlayerSkin(playerid, RegFemaleSkins[4]);
					PlayerInfo[playerid][pModel] = RegFemaleSkins[4];
				}
			default://Мужчина
				{
					SetPlayerSkin(playerid, RegMaleSkins[4]);
					PlayerInfo[playerid][pModel] = RegMaleSkins[4];
				}
			}
			glob_str = "";
			format(glob_str,sizeof(glob_str),"ID: %d",PlayerInfo[playerid][pModel]);
			PlayerTextDrawSetString(@p,ptd_skin[0][@p],glob_str);
			glob_str = "";
		}
		if(playertextid == ptd_skin[6][@p])
		{
			PlayerTextDrawColor(playerid, ptd_skin[6][playerid], 0x00ff00aa);
			for(new i = 1; i < 7; i++)
			{
				if(i == 6) continue;
				PlayerTextDrawColor(playerid, ptd_skin[i][playerid], -1);
			}
			switch(PlayerInfo[playerid][pSex])
			{
			case 2://Женщина
				{
					SetPlayerSkin(playerid, RegFemaleSkins[5]);
					PlayerInfo[playerid][pModel] = RegFemaleSkins[5];
				}
			default://Мужчина
				{
					SetPlayerSkin(playerid, RegMaleSkins[5]);
					PlayerInfo[playerid][pModel] = RegMaleSkins[5];
				}
			}
			glob_str = "";
			format(glob_str,sizeof(glob_str),"ID: %d",PlayerInfo[playerid][pModel]);
			PlayerTextDrawSetString(@p,ptd_skin[0][@p],glob_str);
			glob_str = "";
		}
		if(playertextid == ptd_skin[7][@p])
		{
			CancelSelectTextDraw(@p);
			for(new i = 0; i < 8; i++) PlayerTextDrawHide(@p,ptd_skin[i][@p]);
			DeletePVar(playerid,"RegSkinSelect");
			TutTime[playerid] = 0; PlayerInfo[playerid][pTut] = 1; gOoc[playerid] = 0; gNews[playerid] = 0; gFam[playerid] = 0; gPlayerLogged[playerid] = 1;
			PlayerInfo[playerid][pCash] = 5000; PlayerInfo[playerid][pLevel] = 1; PlayerInfo[playerid][pDm] = 0; PlayerInfo[playerid][pPasport] = 1; MedicBill[playerid] = 0; AfterTutorial[playerid] = 1;
			PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid); PlayerInfo[playerid][pSHealth] = 100.0; PlayerInfo[playerid][pHealth] = 100.0; PlayerInfo[playerid][pInt] = 0; PlayerInfo[playerid][pLocal] = 255; 
			PlayerInfo[playerid][pAccount] = 15000; PlayerInfo[playerid][pReg] = 1; GivePlayerMoney(playerid, 5000);
			RegisterPlayer(playerid);
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
			SetPlayerVirtualWorld(playerid, 0);
			SpawnPlayer(playerid);
			return 1;
		}
	}
	return 1;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(IsPlayerInAnyVehicle(@p) && GetPVarInt(@p,#P_Taxi_Drive) == 2)
	{
		new g = GetPVarInt(@p,#P_Taxi_IDDriver);
		SetPlayerCheckpoint(g,fX,fY,fZ,5);
		SCM(@p,COLOR_LIGHTBLUE,"Вы отметили точку на карте. Отправляемся!");
		SCM(g,COLOR_LIGHTBLUE,"Пассажир отметил направление следите за навигатором. Поехали!");
		TextDrawShowForPlayer(@p,taxi_fon);
		PlayerTextDrawShow(@p,taxi_info[@p]);
		TextDrawShowForPlayer(g,taxi_fon);
		PlayerTextDrawShow(g,taxi_info[g]);
		SetPVarInt(@p,#P_Taxi_Drive,3);
		SetPVarInt(g,#P_Taxi_State,2);
		return 1;
	}
	if(PlayerInfo[playerid][pAdmin] > 1)
	{
		SetPPos(playerid,fX,fY,fZ);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
	}
	return true;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	new Float:hp,Float:car_hp;
	GetVehicleHealth(vehicleid,car_hp);
	hp = GetPVarFloat(playerid,#P_Carhp);
	if((hp - car_hp) >= 150.0)
	{		
		foreach(new i:Player)
		{
			if(GetPVarInt(i,#P_Avto_A) > 0) continue;
			if(GetPVarInt(i,"Seatbelt")) continue;
			if(IsPlayerInVehicle(i,vehicleid))
			{
				TogglePlayerControllable(i,false);
				SetPlayerHealth(i,10.0);
				SetPVarInt(i,#P_Avto_S,GetPlayerVehicleSeat(i));
				ShowPlayerDialog(i,0,DIALOG_STYLE_MSGBOX,"{D03434}Вы пострадали в аварии!","{D03434}\t\tВы пострадали в аварии!\n\tВнимание! Вас зажало в автомобиле!\nВызовите службу спасения по. тел 112! (( /call 112 ))","Понял","");
				SetPVarInt(i,#P_Avto_A,1);
				ApplyAnimation(i,"PED","CAR_dead_LHS",4.1,0,1,1,1,1);
			}
		}
		SetPVarFloat(playerid,#P_Carhp,car_hp);
	}
	if(bezopas[playerid] == 1)
	{
	}
	else if(bezopas[playerid] == 0)
	{
		GetPlayerHealth(playerid, hp);
		SetPlayerHealth(playerid,hp-0.0);
	}
	foreach(new i:Player)
	{
		if(i != playerid)
		{
			if(IsPlayerInVehicle(i,vehicleid))
			{
				if(bezopas[playerid] == 0)
				{
					GetPlayerHealth(i, hp);
					SetPlayerHealth(i,hp-0.0);
				}
			}
		}
	}
	return 1;
}
//==============================================================================
public UnMutedX(playerid)
{
	IsMessageSent[playerid] = 0;
	return true;
}
public SetCamBack(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:plocx,Float:plocy,Float:plocz;
		GetPlayerPos(playerid, plocx, plocy, plocz);
		SetPPos(playerid, -1863.15, -21.6598, 1060.15); // Warp the player
		SetPlayerInterior(playerid,14);
	}
}
//==============================================================================
//==============================================================================
public FixHour(hour)
{
	hour = timeshift+hour;
	if(hour < 0)
	{
		hour = hour+24;
	}
	else if(hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return 1;
}
public AddsOn()
{
	adds=1;
	return 1;
}
public AddsOn1()
{
	adds1=1;
	return 1;
}
public AddsBank()
{
	adds=-1;
	return 1;
}
//////////////
public ShlakTimer1()
{
	KillTimer(timershlak1);
	SetObjectRot(shlak1,0.0,270.0,312.0000000);
	return 1;
}

public ShlakTimer2()
{
	KillTimer(timershlak2);
	SetObjectRot(shlak2,0.0,90.0,311.9952393);
	return 1;
}
public ShlakTimer3()
{
	KillTimer(timershlak3);
	SetObjectRot(shlak3,0.0,270.0000000,268.0000000);
	return 1;
}

public ShlakTimer4()
{
	KillTimer(timershlak4);
	SetObjectRot(shlak4,0.0,90.0,0.0);
	return 1;
}
public ShlakTimer5()
{
	KillTimer(timershlak5);
	SetObjectRot(shlak5,0.0,270.0,0.0000000);
	return 1;
}
new ltimer4;
forward CTimer1();
forward CTimer2();

public DoorTimer1()
{
	KillTimer(dtimer1);
	MoveObject(ld1,2133.64,-1963.21,20.47,1.0);
	MoveObject(ld2,2133.64,-1963.16,20.47,1.0);
	MoveObject(ld3,2133.64,-1963.28,20.47,1.0);
	MoveObject(ld4,2133.64,-1963.23,20.47,1.0);
	if(lcstatus==0&&lczanyat==1)
	{
		ltimer1 = SetTimer("CTimer1",2000,false);
	}
	if(lcstatus==1&&lczanyat==1)
	{
		lczanyat=0;
		lcstatus=0;
	}
	return 1;
}

public CTimer1()
{
	KillTimer(ltimer1);
	MoveObject(lc,2133.63,-1963.2,188.35,8.0);
	MoveObject(ld3,2133.63,-1963.29,188.35,8.0);
	MoveObject(ld4,2133.63,-1963.22,188.35,8.0);
	ltimer2 = SetTimer("DoorTimer2",21000,false);
	return 1;
}

public DoorTimer2()
{
	KillTimer(ltimer2);
	MoveObject(ld5,2134.63,-1963.2,188.35,1.0);
	MoveObject(ld6,2132.63,-1963.27,188.35,1.0);
	MoveObject(ld3,2132.63,-1963.29,188.35,1.0);
	MoveObject(ld4,2134.63,-1963.25,188.35,1.0);
	dtimer3 = SetTimer("DoorTimer3",7000,false);
	return 1;
}

public DoorTimer3()
{
	KillTimer(dtimer3);
	MoveObject(ld5,2133.64,-1963.2,188.37,1.0);
	MoveObject(ld6,2133.64,-1963.27,188.37,1.0);
	MoveObject(ld3,2133.64,-1963.29,188.37,1.0);
	MoveObject(ld4,2133.64,-1963.22,188.37,1.0);
	if(lcstatus==1&&lczanyat==1)
	{
		ltimer3 = SetTimer("CTimer2",2000,false);
	}
	if(lcstatus==0&&lczanyat==1)
	{
		lczanyat=0;
		lcstatus=1;
	}
	return 1;
}

public CTimer2()
{
	KillTimer(ltimer3);
	MoveObject(lc,2133.63,-1963.2,20.478,8.0);
	MoveObject(ld3,2133.63,-1963.29,20.478,8.0);
	MoveObject(ld4,2133.63,-1963.23,20.478,8.0);
	ltimer4 = SetTimer("DoorTimer4",21000,false);
	return 1;
}

public DoorTimer4()
{
	KillTimer(ltimer4);
	MoveObject(ld1,2132.54,-1963.21,20.47,1.0);
	MoveObject(ld2,2134.74,-1963.16,20.47,1.0);
	MoveObject(ld3,2132.54,-1963.29,20.47,1.0);
	MoveObject(ld4,2134.74,-1963.23,20.47,1.0);
	dtimer1 = SetTimer("DoorTimer1",7000,false);
}
//====================[Gates]===================================================
public LSPDGateClose()
{
	MoveObject(LSPDGate, 2580.0146484375,-2431.0163574219,20.977769851685, 2);
	KillTimer(LSPDGateTimer);
	return 1;
}
public LSPD1GateClose()
{
	MoveObject(LSPD1Gate, 20.260223388672,544.02984619141,11.211937904358, 2);//закрытое положение ворот
	KillTimer(LSPD1GateTimer);
	return 1;
}
//====================[Gates M4C]===================================================
public M4CGateClose()
{
	MoveObject(M4CGate, 2084.8642578125,-2403.5859375,21.033029556274, 2);
	KillTimer(M4CGateTimer);
	return 1;
}

public FBIGateClose()
{
	MoveObject(FBIGate, -2132.982421875,-84.907821655273,27.943975448608, 2);//закрытое положение
	KillTimer(FBIGateTimer);
	return 1;
}
//====================[FBIGate]=================================================
public dpsGateClose()
{
	MoveObject(DPSGate, -2356.18, 2032.14, 57.90, 2);//закрытое положение
	KillTimer(dpsGateTimer);
	return 1;
}
//====================[FBIGate]=================================================
public gbddGateClose()
{
	MoveObject(gbddGate, -1258.97, 2780.45, 42.03, 2);//закрытое положение
	KillTimer(gbddGateTimer);
	return 1;
}
//====================[TaxiGate]=================================================
public TaxiGateClose()
{
	MoveObject(TaxiGate,2563.77,-2062.80,22.30,2.0);//закрытое положение
	KillTimer(TaxiGateTimer);
	return 1;
}
//====================[FBI]===================================================
public FarmerExit(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(IsAHarvest(vehicleid))
		{
			return 1;
		}
		if(FarmerVar[playerid] == 0)
		{
			return 1;
		}
		if(FarmerPickup[playerid][0] >= 1 && FarmerPickup[playerid][0] <= 22)
		{
			FarmerPickup[playerid][0]--;
		}
		DisablePlayerCheckpoint(playerid);
		FarmerVar[playerid] = 0;
	}
	return 1;
}
//==============================================================================
forward PlayerMuteMessage(playerid);
public PlayerMuteMessage(playerid)
{
	new string[255];
	format(string,sizeof(string), "[Информация]: {FFFFFF}У вас стоит блокировка чата на %d секунд.", PlayerInfo[playerid][pMutedTime]);
	SendClientMessage(playerid,COLOR_RED,string);
	return 1;
}
//==============================================================================
public ClearKnock(playerid)
{
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	KnockedDown[playerid] = 0;
}
//==============================================================================
public IsAnRifa(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==19)
		{
			return 1;
		}
		if(leader==19)
		{
			return 1;
		}
	}
	return 0;
}
//==============================================================================
public OnVehicleStreamIn(vehicleid, forplayerid)
{
	/*new id_car = GetVehicleIdxByID(vehicleid);
	if(id_car != -1)
	{
		if(aData[id_car][aLock] == 1) SetVehicleParamsForPlayer(vehicleid, forplayerid, 0, 1);
		else if(aData[id_car][aLock] == 0) SetVehicleParamsForPlayer(vehicleid, forplayerid, 0, 0);
	}*/
	return 1;
}
//==============================================================================
public DrugEffectGone(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(UsingDrugs[playerid] == 1)
		{
			SetPlayerWeather(playerid, DefaultWeather);
			GameTextForPlayer(playerid, "~w~Drug effect ~p~gone", 3000, 1);
			ClearAnimations(playerid);
			SetTimerEx("UsingDrugsUnset", 25000, false, "i", playerid);
		}
	}
	return 1;
}
//==============================================================================
public UsingDrugsUnset(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		UsingDrugs[playerid] = 0;
	}
	return 1;
}
public ReportReset(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(JustReported[playerid] == 1)
		{
			JustReported[playerid] = 0;
		}
	}
}
//------------------------------------------------------------------------------
public ShoutReset(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(JustShout[playerid] == 1)
		{
			JustShout[playerid] = 0;
		}
	}
}
//------------------------------------------------------------------------------
public AdmReset(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(JustAdm[playerid] == 1)
		{
			JustAdm[playerid] = 0;
		}
	}
}
forward antSetPPos(playerid, Float:x, Float:y, Float:z);
public antSetPPos(playerid, Float:x, Float:y, Float:z)
{
	AnticheatCinfo[playerid][tspawnfix]=255;
	SetPPos(playerid,x,y,z);
	return 1;
}

public IsAtCandySprunk(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, -2420.219, 984.578, 44.297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2420.180, 985.945, 44.297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2225.203, -1153.422, 1025.906)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2576.703, -1284.430, 1061.094)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.906, 1606.773, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.906, 1607.195, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.203, 1606.773, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 495.969, -24.320, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 501.828, -1.430, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 373.828, -178.141, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 330.680, 178.500, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 331.922, 178.500, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 350.906, 206.086, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 361.563, 158.617, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 371.594, 178.453, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 374.891, 188.977, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.844, 1607.875, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2202.453, 1617.008, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.242, 1621.211, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.367, 1602.641, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 500.563, -1.367, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 379.039, -178.883, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2480.86,-1959.27,12.9609)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1634.11,-2237.53,12.8906)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2139.52,-1161.48,23.3594)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2153.23,-1016.15,62.2344)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,493.859,10.5859)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2229.19,286.414,34.7031)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1659.46,1722.86,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2647.7,1129.66,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2845.73,1295.05,10.7891)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1398.84,2222.61,10.4219)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1455.12,2591.66,55.2344)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -76.0312,1227.99,19.125)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 662.43,-552.164,15.7109)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2599.76,62.2422)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2271.73,-76.4609,25.9609)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1789.21,-1369.27,15.1641)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1729.79,-1943.05,12.9453)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2060.12,-1897.64,12.9297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1928.73,-1772.45,12.9453)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2325.98,-1645.13,14.2109)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2352.18,-1357.16,23.7734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1154.73,-1460.89,15.1562)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,492.289,10.5859)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.97,-423.648,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.62,-422.414,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2097.27,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2092.09,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2063.27,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2005.65,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2034.46,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2068.56,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2039.85,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2011.14,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1980.79,142.664,27.0703)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2319.99,2532.85,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1520.15,1055.27,10.00)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2503.14,1243.7,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2085.77,2071.36,10.4531)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -862.828,1536.61,21.9844)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -14.7031,1175.36,18.9531)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2597.95,62.2422)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 201.016,-107.617,0.898438)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1277.84,372.516,18.9531)) return 1;
	else return 0;
}

public IsABycicle(carid)
{
	new carmodel = GetVehicleModel(carid);
	{
		if(carmodel == 481 || carmodel == 509 || carmodel == 510 )
		{
			return 1;
		}
	}
	return 0;
}
public EngineStart(playerid, carid)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInVehicle(playerid, carid))
		{
			new sendername[MAX_PLAYER_NAME];
			new string[64];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new chance = random(10);
			if(chance >= 0 && chance <= 8)
			{
				Engine[carid] = 1;
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
				SendClientMessage(playerid, COLOR_GREY, "Вы успешно запустили двигатель.");
				format(string, sizeof(string), "* %s вставил ключ в замок зажигания и пытается завести двигатель.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам не удалось запустить двигатель.");
			}
		}
	}
	return 1;
}

stock strmatch(const String1[], const String2[])
{
	if((strcmp(String1, String2, true, strlen(String2)) == 0) && (strlen(String2) == strlen(String1))) return true;
	else return false;
}
forward Shipi();
public Shipi()
{
	for(new player=0; player<MAX_PLAYERS;player++)
	{
		if(IsPlayerConnected(player))
		{
			for(new id=0; id<MAX_STINGERS; id++)
			{
				if(IsValidObject(stinger[id]))
				{
					new Float:xST,Float:xST2,Float:xST3,Float:yST,Float:yST2,Float:yST3,Float:zST,Float:rotST,Float:var1,Float:var2;
					GetObjectPos(stinger[id],xST,yST,zST);
					GetObjectRot(stinger[id],var1,var2,rotST);
					yST2=yST+2.0;
					yST3=yST-2.0;
					xST2=xST;
					xST3=xST;
					if((rotST>45&&rotST<135)||(rotST>225&&rotST<315)) { xST2=xST+2.0; xST3=xST-2.0; yST2=yST; yST3=yST;}
					if(IsPlayerInRangeOfPoint(player,2.0,xST,yST,zST)||IsPlayerInRangeOfPoint(player,1.5,xST2,yST2,zST)||IsPlayerInRangeOfPoint(player,1.5,xST3,yST3,zST))
					{
						if(IsPlayerInAnyVehicle(player)&&GetPlayerVehicleSeat(player)==0)
						{
							new vehid,Float:rotVEH;
							vehid =GetPlayerVehicleID(player);
							new panels,tires;
							GetVehicleZAngle(vehid,rotVEH);
							GetVehicleDamageStatus(vehid, panels,doors,lights,tires);
							tires = encode_tires(1, 1, 1, 1);
							UpdateVehicleDamageStatus(vehid, panels,doors,lights,tires);
						}
					}
				}
			}
		}
	}
}
public IsADiesel(carid)
{
	new model = GetVehicleModel(carid);
	if(model==403||model== 406||model== 407||model== 408||model== 414||model== 416||model== 422||model== 423||model== 427||model== 428
			||model== 431||model== 432||model== 433||model== 437||model== 440||model== 443||model==455||model== 456||model== 440||model== 470||
			model== 485||model== 498||model== 499||model== 508||model== 524||model== 525||model== 528||model== 531||
			model== 532||model== 537||model== 538||model== 544||model== 552||model== 554||model== 573||model== 578||model== 582||model== 583||
			model== 588||model== 599||model== 601||model== 609)
	return 1;
	return 0;
}

public IsAPremium(carid)
{
	new model = GetVehicleModel(carid);
	if(model==409||model== 402||model== 405||model== 426||model== 434||model== 436||model== 445||model== 458
			||model== 468||model== 471||model== 480||model== 496||model== 507||model== 516||model== 523||model== 527
			||model== 529||model== 533||model== 535||model== 540||model== 545||model== 546||model== 547||model== 550
			||model== 551||model== 555||model== 558||model== 559||model== 560||model== 561||model== 562||model== 565
			||model== 568||model== 571||model== 580||model== 585||model== 586||model== 587||model== 589||model== 596
			||model== 597||model== 602||model== 603)
	return 1;
	return 0;
}

public IsARegular(carid)
{
	new model = GetVehicleModel(carid);
	if(model ==400||model == 401||model == 404||model == 410||model == 412||model == 413||model == 418
			||model == 419||model == 420||model == 421||model == 424||model == 438||model == 439||model == 442
			||model == 448||model == 459||model == 462||model == 463||model == 466||model == 467||model == 474
			||model == 475||model == 478||model == 479||model == 482||model == 483||model == 489||model == 490
			||model == 491||model == 492||model == 500||model == 505||model == 517||model == 518||model == 526
			||model == 534||model == 536||model == 542||model == 543||model == 549||model == 566||model == 567
			||model == 575||model == 576||model == 579||model == 598||model == 600||model == 604||model == 605)
	return 1;
	return 0;
}

public IsAPlus(carid)
{
	new model = GetVehicleModel(carid);
	if(model== 411||model== 415||model== 429||model== 444
			||model== 451||model== 461||model== 477||model== 494
			||model== 495||model== 502||model== 503||model== 504
			||model== 506||model== 521||model== 522||model== 541
			||model== 556||model== 557||model== 581)
	return 1;
	return 0;
}
IsABicycle(carid)
{
	new model = GetVehicleModel(carid);
	if(model== 481||model== 509||model== 510||model== 448) return 1;
	return 0;
}
stock delsalut()
{
	for(new i = salut[0]; i <= salut[1]; i++)DestroyObject(i);
	return true;
}
forward Radar();
public Radar()
{
	foreach(Player, p)
	{
		if(IsPlayerConnected(p))
		{
			if(radart[p]==1)
			{
				new string7[41];
				foreach(new i:Player)
				{
					if(IsPlayerConnected(i))
					{
						if(!(p==i))
						{
							if(GetDistanceBetweenPlayers(p, i) < 100)
							{
								if(IsPlayerInAnyVehicle(i))
								{
									new psn[MAX_PLAYER_NAME];
									new speed;
									speed = GetPlayerSpeed(i);
									GetPlayerName(i,psn,sizeof(psn));
									if(speed>50)
									{
										TextDrawColor(ratext,0xFFFF00AA);
									}
									if(speed>110)
									{
										TextDrawColor(ratext,0xAA3333AA);
									}
									format(string7,sizeof(string7),"Radar: %s: %d kЇ/¤", psn,speed);
									TextDrawColor(ratext,COLOR_ORANGE);
									TextDrawSetString(ratext,string7);
									TextDrawShowForPlayer(p, ratext);
								}
							}
						}
					}
					else return 0;
				}
			}
		}
	}
	return 1;
}
stock GetPlayerSpeed(playerid)
{
	new Float:ST[4];
	if(IsPlayerInAnyVehicle(playerid))
	GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 129;
	return floatround(ST[3]);
}
stock SaveHouse(houseid)
{
	new i = houseid;
	mysql_function(MySQLGo,300,"UPDATE `houses` SET `prodaja` = '%i',`sale` = '%i',`stoim` = '%i',`lvl` = '%i',`rentable` = '%i',`INT` = '%d' WHERE `id` = '%i'",false,"","",House[i][prodaja],House[i][sale],House[i][stoim],House[i][lvl],House[i][rentable],House[i][int],House[i][houseidd]);
	mysql_function(MySQLGo,300,"UPDATE `houses` SET `rentsumma` = '%i',`lock` = '%i',`HBank` = '%i',`hType` = '%d' WHERE `id` = '%i'",false,"","", House[i][rentsumma],House[i][lock],House[i][HBank],House[i][hType],House[i][houseidd]);
	mysql_function(MySQLGo,300,"UPDATE `houses` SET `owner` = '%s',`x` = '%.1f',`y` = '%.1f',`z` = '%.1f' WHERE `id` = '%i'",false,"","", House[i][owner],House[i][HOx],House[i][HOy],House[i][HOz],House[i][houseidd]);
	mysql_function(MySQLGo,300,"UPDATE `houses` SET `SPx` = '%.1f',`SPy` = '%.1f',`SPz` = '%.1f',`SPr` = '%.1f' WHERE `id` = '%i'",false,"","", House[i][SPx],House[i][SPy],House[i][SPz],House[i][SPr],House[i][houseidd]);
	return 1;
}
OnNewBizUpdate(bizid)
{
	new hfile[128],i;
	i=bizid;
	format(hfile,128,"biznes/%d.cfg",bizid);
	dini_Create(hfile);
	dini_IntSet(hfile,"prodaja",BizInfo[i][prodaja]);
	dini_IntSet(hfile,"sale",BizInfo[i][sale]);
	dini_IntSet(hfile,"stoim",BizInfo[i][stoim]);
	dini_IntSet(hfile,"lvl",BizInfo[i][lvl]);
	dini_FloatSet(hfile,"x",BizInfo[i][HOx]);
	dini_FloatSet(hfile,"y",BizInfo[i][HOy]);
	dini_FloatSet(hfile,"z",BizInfo[i][HOz]);
	dini_Set(hfile,"owner",BizInfo[i][owner]);
	dini_Set(hfile,"message",BizInfo[i][messageb]);
	return 1;
}
SaveBiz(bizid)
{
	new fscar[128];
	format(fscar,sizeof(fscar),"biznes/%d.cfg",bizid);
	dini_Create(fscar);
	dini_IntSet(fscar,"sale",BizInfo[bizid][sale]);
	dini_FloatSet(fscar,"x",BizInfo[bizid][HOx]);
	dini_FloatSet(fscar,"y",BizInfo[bizid][HOy]);
	dini_FloatSet(fscar,"z",BizInfo[bizid][HOz]);
	dini_Set(fscar,"owner",BizInfo[bizid][owner]);
	dini_Set(fscar,"message",BizInfo[bizid][messageb]);
	dini_IntSet(fscar,"lvl",BizInfo[bizid][lvl]);
	dini_IntSet(fscar,"stoim",BizInfo[bizid][stoim]);
	dini_IntSet(fscar,"prodaja",BizInfo[bizid][prodaja]);
	return 1;
}
public OnVehiclePaintjob(playerid,vehicleid, paintjobid) return 1;
public OnVehicleRespray(playerid,vehicleid, color1, color2) return 1;
public OnVehicleMod(playerid,vehicleid,componentid) return 1;
public IsAnOwnableCar(vehicleid)
{
	if(vehicleid >= 184 && vehicleid <= 869) { return 1; }
	return 0;
}
public OnPlayerPojar(playerid)
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(PlayerInfo[i][pMember] == 19 || PlayerInfo[i][pLeader] == 19)
		{
			if(i >= 2)
			{
				new tochka = random(10); // aanyou aoi eiee?anoai oi?ae
				if(tochka == 1)
				{
					pojarobj = CreateDynamicObject(1239,-211.1211,659.7718,12.0010,0,0,0);//1
					chekpointm4c = SetPlayerCheckpoint(i,-211.1211,659.7718,12.0010,6000);//1
					SendClientMessage(i,0x03c03cFF,"Вас вызывают на устранения пожара");
				}
				if(tochka == 2)
				{
					pojarobj = CreateDynamicObject(1239,-211.1211,659.7718,12.0010,0,0,0);//2
					chekpointm4c = SetPlayerCheckpoint(i,-211.1211,659.7718,12.0010,6000);//2
					SendClientMessage(i,0x03c03cFF,"Вас вызывают на устранения пожара");
				}
				if(tochka == 3)
				{
					pojarobj = CreateDynamicObject(1239,-211.1211,659.7718,12.0010,0,0,0);//3
					chekpointm4c = SetPlayerCheckpoint(i,-211.1211,659.7718,12.0010,6000);//3
					SendClientMessage(i,0x03c03cFF,"Вас вызывают на устранения пожара");
				}
				if(tochka == 4)
				{
					pojarobj = CreateDynamicObject(1239,-211.1211,659.7718,12.0010,0,0,0);//4
					chekpointm4c = SetPlayerCheckpoint(i,-211.1211,659.7718,12.0010,6000);//4
					SendClientMessage(i,0x03c03cFF,"Вас вызывают на устранения пожара");
				}
			}
			else
			{
				SetTimer("OnPlayerPojar",200,0);
			}
		}
	}
	return 1;
}
forward LoadRecord();
public LoadRecord()
{
	new strFromFile[24], arrCoords[6][5], File: file = fopen("porecords", io_read);
	if(file)
	{
		fread(file, strFromFile);
		splita(strFromFile, arrCoords, ',');
		Precord = strval(arrCoords[0]);
		Drecord = strval(arrCoords[1]);
		Mrecord = strval(arrCoords[2]);
		Yrecord = strval(arrCoords[3]);
		THrecord = strval(arrCoords[4]);
		TMrecord = strval(arrCoords[5]);
		fclose(file);
	}
	return 1;
}
forward SaveRecord();
public SaveRecord()
{
	new coordsstring[24];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d,%d,%d", Precord, Drecord, Mrecord, Yrecord, THrecord, TMrecord);
	new File: file = fopen("porecords", io_write);
	fwrite(file, coordsstring);
	fclose(file);
	return 1;
}
forward Record(playerid);
public Record(playerid)
{
	if(Precord)
	{
		new string[92];
		format(string, sizeof(string), "*Рекорд онлайн игроков %d, зафиксирован %d %s %dг, в %d:%d", Precord, Drecord, mname[Mrecord-1], Yrecord, THrecord, TMrecord);
		SendClientMessage(playerid, 0xA5D24DFF, string);
	}
	oplayers++;
	if(Precord < oplayers)
	{
		Precord=oplayers;
		gettime(THrecord, TMrecord); getdate(Yrecord, Mrecord, Drecord);
		new string[92];
		format(string, sizeof(string), "*Новый рекорд онлайн игроков %d, зафиксирован %d %s %dг, в %d:%d", Precord, Drecord, mname[Mrecord-1], Yrecord, THrecord, TMrecord);
		SendClientMessageToAll(0xFCB833FF, string);
		SaveRecord();
	}
	return 1;
}
stock splita(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i] == delimiter || i == strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}
forward ConnectedPlayers();
public ConnectedPlayers()
{
	new Connected;
	foreach(new i:Player) if(IsPlayerConnected(i) && !IsPlayerNPC(i)) Connected++;
	return Connected;
}
encode_tires(tire1, tire2, tire3, tire4) return tire1 | (tire2 << 1) | (tire3 << 2) | (tire4 << 3);
forward FireWorld();
public FireWorld()
{
	new rand;
	if(rand != 0) SendClientMessageToAll(0xFF0000FF, "Пожарные не смогли потушить пожар!");
	for(new i; i < sizeof(FireObject); i++)
	{
		if(IsValidObject(FireObject[i])) DestroyObject(FireObject[i]);
	}
	rand = random(MAX_FIRE);
	new string[128];
	string[0] = 0;
	switch(rand)
	{
	case 0:
		{
			strcat(string, "Оригинал сообщения: Горит ларёк около ТЦ 'Перекрёсток' г. Арзамас.");
			FireObject[0] = CreateObject(18688, 191.1391, 794.9028, 14.5158, 0.0, -90.0, -90.0);
			FireObject[1] = CreateObject(18688, 191.3917, 794.4091, 14.0435, 0.0, -90.0, -90.0);
		}
	case 1:
		{
			strcat(string, "Оригинал сообщения: Горит жилой дом напротив старого здания ГКБ №3 г. Арзамас.");
			FireObject[0] = CreateObject(18688, -234.5341, 613.2988, 13.7178, 0.0, -90.0, 0.0);
			FireObject[1] = CreateObject(18688, -233.7559, 613.2995, 13.7178, 0.0, -90.0, 0.0);
		}
	case 2:
		{
			strcat(string, "Оригинал сообщения: Горит частный дом на въезде в г. Эдово.");
			FireObject[0] = CreateObject(18688, -2362.5818, 2547.5476, 42.6721, 0.0, -90.0, -90.0);
			FireObject[1] = CreateObject(18688, -2363.3054, 2548.0876, 42.6721, 0.0, -90.0, -90.0);
		}
	case 3:
		{
			strcat(string, "Оригинал сообщения: Горит квартира пятиэтажки около Станции Технического Обслуживания г. Арзамас.");
			FireObject[0] = CreateObject(18688, -441.6332, 982.4266, 17.4352, 0.0, -90.0, -90.0);
			FireObject[1] = CreateObject(18688, -439.9684, 982.4070, 17.4352, 0.0, -90.0, -90.0);
		}
	case 4:
		{
			strcat(string, "Оригинал сообщения: Горит второй этаж торгового дома 'Пассаж' напротив автосалона г. Арзамас.");
			FireObject[0] = CreateObject(18688, 303.1685, 1663.7892, 15.0772, 0.0, -90.0, -90.0);
			FireObject[1] = CreateObject(18688, 302.2302, 1664.6996, 15.0772, 0.0, -90.0, -90.0);
		}
		/*
		case 5:
		{
			strcat(string, "Адрес : Горит контрольный пункт у Армии!! За Городом : 'Арзамас'");
			FireObject[0] = CreateObject(18688, -846.1000,1203.3153,11.5469, 0.0, -90.0, -90.0);
			FireObject[1] = CreateObject(18688, -846.1000,1203.3153,11.5469, 0.0, -90.0, -90.0);
		}
		case 6:
		{
			strcat(string, "Адрес : Горит ГУВД Город : 'Южный'");
			FireObject[0] = CreateObject(18688, 2558.9490,-2403.8416,-3.9585, 0.0, -90.0, -90.0);
			FireObject[1] = CreateObject(18688, 2571.8735,-2402.6963,-3.9585, 0.0, -90.0, -90.0);
		}*/
	default: strcat(string, "Ложная тревога...");
	}

	for(new i, j = GetMaxPlayers(); i != j; i++)
	{
		if(!IsPlayerConnected(i)) continue;
		if(IsPlayerNPC(i)) continue;
		if(PlayerInfo[i][pMember] != 19 && PlayerInfo[i][pLeader] != 19) continue; // 10 - номер фракции, 5 - номер работы (заменить на свои)
		SendClientMessage(i, 0xFF0000FF, "[Диспетчер ПЧ №31]: Поступил вызов от гражданина!");
		SendClientMessage(i, 0xFF0000FF, string);
	}
	return 1;
}
stock GetVehicleSpeed(vehicleid)
{
	new Float:Px,Float:Py,Float:Pz;
	GetVehicleVelocity(vehicleid,Px,Py,Pz);
	return floatround(floatsqroot(Px*Px+Py*Py+Pz*Pz) * 100.0);
}
stock FracColorOff(playerid)
{
	new frak[2];
	if(PlayerInfo[playerid][pLeader]) frak[0] = PlayerInfo[playerid][pLeader];
	else frak[0] = PlayerInfo[playerid][pMember];
	DeletePVar(@p,#P_Frack_Color);
	foreach(new i:Player)
	{
		if(PlayerInfo[i][pLeader]) frak[1] = PlayerInfo[i][pLeader];
		else frak[1] = PlayerInfo[i][pMember];
		if(frak[0] == frak[1]) SetPlayerMarkerForPlayer(playerid,i,0xFFFFFF00);
	}	
	return 1;
}
stock FracColor(playerid)
{
	new frak[2];
	if(PlayerInfo[playerid][pLeader]) frak[0] = PlayerInfo[playerid][pLeader];
	else frak[0] = PlayerInfo[playerid][pMember];
	spvi(@p,#P_Frack_Color,frak[0]);
	foreach(new i:Player)
	{
		if(PlayerInfo[i][pLeader]) frak[1] = PlayerInfo[i][pLeader];
		else frak[1] = PlayerInfo[i][pMember];
		if(frak[0] == frak[1])
		{
			switch(frak[0])
			{
				case 1,6:SetPlayerMarkerForPlayer(playerid,i,0x2E9AFEFF);
				case 3:SetPlayerMarkerForPlayer(playerid,i,0x33aa33AA);
				case 4:SetPlayerMarkerForPlayer(playerid,i,0xBE81F7AA);
				case 19:SetPlayerMarkerForPlayer(playerid,i,0xFF0000AA);
				default:SetPlayerMarkerForPlayer(playerid,i,0xFFFFFF00);
			}
		}
	}
	return 1;
}
stock SetFrackColor(@p)
{
	new fraka;
	if(PlayerInfo[playerid][pLeader]) fraka = PlayerInfo[playerid][pLeader];
	else fraka = PlayerInfo[playerid][pMember];
	if(!fraka) return 0;
	foreach(new i:Player)
	{
		if(gpvi(i,#P_Frack_Color) == fraka)
		{
			if(PlayerInfo[i][pRequestingBackup]) continue;
			switch(fraka)
			{
				case 1,6:SetPlayerMarkerForPlayer(i,@p,0x2E9AFEFF);
				case 3:SetPlayerMarkerForPlayer(i,@p,0x33aa33AA);
				case 4:SetPlayerMarkerForPlayer(i,@p,0xBE81F7AA);
				case 19:SetPlayerMarkerForPlayer(i,@p,0xFF0000AA);
				default:SetPlayerMarkerForPlayer(playerid,i,0xFFFFFF00);
			}
		}
	}
	return 1;
}
stock PreloadAnimLibs(playerid)
{
	static animlibs[131][] = {
		"AIRPORT", "Attractors", "BAR", "BASEBALL", "BD_FIRE", "BEACH", "benchpress", "BF_injection",
		"BIKED", "BIKEH", "BIKELEAP", "BIKES", "BIKES", "BIKEV", "BIKE_DBZ", "BLOWJOBZ", "BMX",
		"BOMBER", "BOX", "BSKTBALL", "BUDDY", "BUS", "CAMERA", "CAR", "CARRY", "CAR_CHAT", "CASINO",
		"CHAINSAW", "CHOPPA", "CLOTHES", "COACH", "COLT45", "COP_AMBIENT", "COP_DVBYZ", "CRACK",
		"CRIB", "DAM_JUMP", "DANCING", "DEALER", "DILDO", "DODGE", "DOZER", "DRIVEBYS", "FAT",
		"FIGHT_B", "FIGHT_C", "FIGHT_D", "FIGHT_E", "FINALE", "FINALE2", "FLAME", "Flowers", "FOOD",
		"Freeweights", "GANGS", "GHANDS", "GHETTO_DB", "goggles", "GRAFFITI", "GRAVEYARD", "GRENADE",
		"GYMNASIUM", "HAIRCUTS", "HEIST9", "INT_HOUSE", "INT_OFFICE", "INT_SHOP", "JST_BUISNESS",
		"KART", "KISSING", "KNIFE", "LAPDAN1", "LAPDAN2", "LAPDAN3", "LOWRIDER", "MD_CHASE", "MD_END",
		"MEDIC", "MISC", "MTB", "MUSCULAR", "NEVADA", "ON_LOOKERS", "OTB", "PARACHUTE", "PARK",
		"PAULNMAC", "PED", "PLAYER_DVBYS", "PLAYIDLES", "POLICE", "POOL", "POOR", "PYTHON", "QUAD",
		"QUAD_DBZ", "RAPPING", "RIFLE", "RIOT", "ROB_BANK", "ROCKET", "RUSTLER", "RYDER", "SCRATCHING",
		"SEX", "SHAMAL", "SHOP", "SHOTGUN", "SILENCED", "SKATE", "SMOKING", "SNIPER", "SPRAYCAN",
		"STRIP", "SUNBATHE", "SWAT", "SWEET", "SWIM", "SWORD", "TANK", "TATTOOS", "TEC", "TRAIN",
		"TRUCK", "UZI", "VAN", "VENDING", "VORTEX", "WAYFARER", "WEAPONS", "WUZI"};
	for(new i = 0; i < 131; i++) ApplyAnimation(playerid, animlibs[i][0], "null", 0.0, 0, 0, 0, 0, 0);
	return 1;
}
stock Frez(playerid)
{
	TogglePlayerControllable(playerid, 0);// замораживаем игрока
	SetTimerEx("unFrez",4000,0,"%d",playerid);// время через которое разморозим
}
forward unFrez(playerid);
public unFrez(playerid) TogglePlayerControllable(playerid, 1);// разморозка
stock GetNearestVehicle(playerid)
{
	for(new i = 1; i < MAX_VEHICLES; i++)
	{
		if(GetVehicleModel(i))
		{
			new Float:X,Float:Y,Float:Z;
			GetVehiclePos(i, X, Y, Z);
			if(PlayerToPoint(6.0, playerid, X, Y, Z)) return i;
		}
	}
	return -1;
}
forward IsAVelo(vehicleid);
public IsAVelo(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 481 || model == 509 || model == 510) return 1;
	return 0;
}
forward NoPack(playerid);
public NoPack(playerid)
{
	SendClientMessage(playerid,COLOR_RED,"У вас не установлен пакет модификаций сервера Trusty Role Play | vk.com/trusty_crmp");
	//KickEx(playerid);
	return 1;
}
forward pizza();
public pizza()
{
	new h,m,s;
	gettime(h,m,s);
	foreach(Player,i)
	{
		if(PlayerInfo[i][pJob] == 30)
		{
			if(m == 0 && s == 1 || m == 5 && s == 1 || m == 30 && s == 1 || m == 45 && s == 1)
			{
				if(pizzadone[i] == 1)
				{
					if(acceptedpizza[i] == false)
					{
						SendClientMessage(i,-1,"Поступил заказ на доставку пиццы. Для того, чтобы принять, введите '/acceptpizza'.");
					}
				}
			}
		}
	}
}
stock IsABike(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 509 || model == 481 || model == 510 || model == 462 || model == 448 || model == 581 || model == 522 || model == 461 || model == 521 || model == 523 || model == 463 || model == 586 || model == 468 || model == 471) return 1;
	return 0;
}
new tick_siren;
forward Fresh();
public Fresh()
{
	foreach(Player,i)
	{
 		SetPVarInt(i, "AfkCheck", GetPVarInt(i, "AfkCheck")+1);
	    if(GetPVarInt(i, "AfkCheck") > 1)
	    {
   			new afkstr[45];
	        format(afkstr, sizeof(afkstr), "[Игрок в AFK: %s]", TimeConverter(GetPVarInt(i, "Afkcheck")));
	        SetPlayerChatBubble(i, afkstr, -1, 20.0, 1100);
	    }
		if(GetPlayerMoney(i) > 500000 && GetPlayerState(i) == PLAYER_STATE_ONFOOT && !GetPVarInt(i,"jobshaxta"))
		{
			SetPlayerAttachedObject(i,3,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
		}
		if(GetPlayerMoney(i) < 499999 || GetPlayerState(i) != PLAYER_STATE_ONFOOT)
		{
			RemovePlayerAttachedObject(i,3);
		}
		if(PlayerInfo[i][pHelper] == 0 && PlayerInfo[i][pAdmin] == 0)
		{
			if(!GetRestrictWeapon(GetPlayerWeapon(i))) 
			{
				SendClientMessage(i,COLOR_LIGHTRED,#Вы были кикнуты за использование запрещенного оружия!);
				KickEx(i);
				continue;
			}
		}
		if(PlayerToPoint(2.0, i, 1173.2563,-1323.3102,15.3943))
		{
			GameTextForPlayer(i, "~w~Type /healme to cure yourself", 5000, 5);
		}
		if(siren)
		{
			if(tick_siren <= 3)
			{
				if(PlayerToPoint(20.0,i,165.2006,1262.9058,12.2131))
				{
					PlayerPlaySound(i,42801,165.2006,1262.9058,12.2131);
				}
				tick_siren = 0;
			}
			tick_siren++;
		}
		if(GetPVarInt(i,#Mus_Time) >= 1)
		{
			new tick = GetPVarInt(i,#Mus_Time);
			SetPVarInt(i,#Mus_Time,tick - 1);
			new str[6];
			format(str,sizeof(str),"~r~%d",GetPVarInt(i,#Mus_Time));
			GameTextForPlayer(i,str,900,3);
			if(GetPVarInt(i,#Mus_Time) == 0)
			{
				SetVehicleToRespawn(GetPVarInt(i,#Mus_Car));
				new summ = GetPVarInt(i,#Mus_Count) * Mus_Dm;
				new str1[46];
				format(str1,sizeof(str1),"Рабочий день завершен! Заработано: %d рублей.",summ);
				SendClientMessage(i,COLOR_GREEN,str1);
				PlayerInfo[i][pCash] += summ;
				GivePlayerMoney(i,summ);
				DeletePVar(i,#Mus_Act);
				DeletePVar(i,#Mus_Car);
				DeletePVar(i,#Mus_Count);
				DeletePVar(i,#Mus_Start);
				DeletePVar(i,#Mus_Job);
				SetPlayerSkin(i,PlayerInfo[i][pChar]);
			}
		}
		if(PlayerInfo[i][pModel] == 76)
		{
			PlayerInfo[i][pModel] = 22;
		}
		if(!PlayerInfo[i][pAdmin] && !PlayerInfo[i][pMember] && !PlayerInfo[i][pLeader] && PlayerInfo[i][pLevel] < 3)
		{
			switch(GetPlayerWeapon(i))
			{
				case 16,23..25,29..31,37..39:
				{
					new cidx = 0;
					for(new k = 0; k < M_CINFO; k++)
					{	
						if(PCI[k][c_id] == i) continue;
						if(PCI[k][c_id] == -1) cidx = k;
					}
					strmid(PCI[cidx][c_name],NamePlayer[i],0,MAX_PLAYER_NAME);
					PCI[cidx][c_id] = i;
				}				 
			}
		}
	}	
	new hour, minute, second;
	gettime(hour, minute, second);
	if(hour == 4 && minute == 47 && second == 0)
	{
		OOCOff(COLOR_LIGHTRED,"=============================================");
		OOCOff(COLOR_LIGHTRED,"«« Внимание! Рестарт сервера через 15 минут! »»");
		OOCOff(COLOR_LIGHTRED,"=============================================");
	}
	if(hour == 4 && minute == 52 && second == 0)
	{
		OOCOff(COLOR_LIGHTRED,"=============================================");
		OOCOff(COLOR_LIGHTRED,"«« Внимание! Рестарт сервера через 10 минут! »»");
		OOCOff(COLOR_LIGHTRED,"=============================================");
	}
	if(hour == 4 && minute == 57 && second == 0)
	{
		OOCOff(COLOR_LIGHTRED,"=============================================");
		OOCOff(COLOR_LIGHTRED,"«« Внимание! Рестарт сервера через 5 минут! »»");
		OOCOff(COLOR_LIGHTRED,"=============================================");
	}
	if(hour == 5 && minute == 01 && second == 0)
	{
		OOCOff(COLOR_LIGHTRED,"=============================================");
		OOCOff(COLOR_LIGHTRED,"«« Внимание! Рестарт сервера через 1 минуту! »»");
		OOCOff(COLOR_LIGHTRED,"=============================================");
	}
	if(hour == 5 && minute == 02 && second == 0)
	{
		OOCOff(COLOR_LIGHTRED,"=============================================");
		OOCOff(COLOR_LIGHTRED,"«« Внимание! Происходит рестарт сервера! »»");
		OOCOff(COLOR_LIGHTRED,"=============================================");
		SendClientMessageToAll(COLOR_RED,"Сервер перезагружается...");
		SaveAccounts();
		GameModeInitExitFunc();
	}
	return 1;
}
stock AllVidem(color, const string[] , level)
{
	foreach(Player,i)
	{
		if(GetPVarInt(i,"Myrka") == 1) break;
		if(!IsPlayerConnected(i)) break;
		if(PlayerInfo[i][pAdmin] >= level) SendClientMessage(i, color, string);
	}
	return true;
}
stock AllVidem1(color, const string[] , level)
{
	foreach(Player,i)
	{
		if(GetPVarInt(i,"Myrka") == 1) break;
		if(!IsPlayerConnected(i)) break;
		if(PlayerInfo[i][pHelper] >= level) SendClientMessage(i, color, string);
	}
	return true;
}
forward UpdateBol(playerid);
public UpdateBol(playerid)
{
	TimeSS = HospitalTime[playerid];
	new Str[40];
	TimeSS --;
	if(TimeSS <= 0)
	{
		KillTimer(TimerBol);
	}
	format(Str, sizeof(Str), RusToGame("До выписки остается %d секунд."), TimeSS);
	PlayerTextDrawSetString(playerid, BolTime1[playerid], Str);
	PlayerTextDrawSetString(playerid, BolTime2[playerid], Str);
	return 1;
}
stock RusToGame(string[])
{
	new result[MAX_STRING];
	for(new i;i<MAX_STRING;i++)
	{
		switch(string[i])
		{
		case 'а':result[i] = 'a';
		case 'А':result[i] = 'A';
		case 'б':result[i] = '—';
		case 'Б':result[i] = 'Ђ';
		case 'в':result[i] = 'ў';
		case 'В':result[i] = '‹';
		case 'г':result[i] = '™';
		case 'Г':result[i] = '‚';
		case 'д':result[i] = 'љ';
		case 'Д':result[i] = 'ѓ';
		case 'е':result[i] = 'e';
		case 'Е':result[i] = 'E';
		case 'ё':result[i] = 'e';
		case 'Ё':result[i] = 'E';
		case 'ж':result[i] = '›';
		case 'Ж':result[i] = '„';
		case 'з':result[i] = 'џ';
		case 'З':result[i] = '€';
		case 'и':result[i] = 'њ';
		case 'И':result[i] = '…';
		case 'й':result[i] = 'ќ';
		case 'Й':result[i] = '…';
		case 'к':result[i] = 'k';
		case 'К':result[i] = 'K';
		case 'л':result[i] = 'ћ';
		case 'Л':result[i] = '‡';
		case 'м':result[i] = 'Ї';
		case 'М':result[i] = 'M';
		case 'н':result[i] = '®';
		case 'Н':result[i] = 'H';
		case 'о':result[i] = 'o';
		case 'О':result[i] = 'O';
		case 'п':result[i] = 'Ј';
		case 'П':result[i] = 'Њ';
		case 'р':result[i] = 'p';
		case 'Р':result[i] = 'P';
		case 'с':result[i] = 'c';
		case 'С':result[i] = 'C';
		case 'т':result[i] = '¦';
		case 'Т':result[i] = 'Џ';
		case 'у':result[i] = 'y';
		case 'У':result[i] = 'Y';
		case 'ф':result[i] = '?';
		case 'Ф':result[i] = 'Ѓ';
		case 'х':result[i] = 'x';
		case 'Х':result[i] = 'X';
		case 'ц':result[i] = 'p';
		case 'Ц':result[i] = '‰';
		case 'ч':result[i] = '¤';
		case 'Ч':result[i] = 'Ќ';
		case 'ш':result[i] = 'Ґ';
		case 'Ш':result[i] = 'Ћ';
		case 'щ':result[i] = 'Ў';
		case 'Щ':result[i] = 'Љ';
		case 'ь':result[i] = '©';
		case 'Ь':result[i] = '’';
		case 'ъ':result[i] = 'ђ';
		case 'Ъ':result[i] = '§';
		case 'ы':result[i] = 'Ё';
		case 'Ы':result[i] = '‘';
		case 'э':result[i] = 'Є';
		case 'Э':result[i] = '“';
		case 'ю':result[i] = '«';
		case 'Ю':result[i] = '”';
		case 'я':result[i] = '¬';
		case 'Я':result[i] = '•';
		default:result[i]=string[i];
		}
	}
	return result;
}
forward IgroAvtomat(playerid);
public IgroAvtomat(playerid)
{
	new string[256];
	new RandAvtomat[MAX_PLAYERS];
	RandAvtomat[playerid] = 1 + random(4);
	TogglePlayerControllable(playerid, 1);
	if(RandAvtomat[playerid] == 1 || RandAvtomat[playerid] == 2)
	{
		format(string, sizeof(string),"{FFFF00}Поздравляем вас! Вы выиграли!\n{FFFFFF}Депозит:{FF9900} %d\n{FFFFFF}Выигрыш:{FF9900} %d", pAvtomat[playerid], 2*pAvtomat[playerid]);
		ShowPlayerDialog(playerid,0,0,"Игровые автоматы",string,"Закрыть","");
		PlayerInfo[playerid][pCash]=PlayerInfo[playerid][pCash]+pAvtomat[playerid]*2;
		GivePlayerMoney(playerid, pAvtomat[playerid]*2);
		PlayerPlayMusic2(playerid);
		pAvtomat[playerid] = 0;
		return 1;
	}
	ShowPlayerDialog(playerid,0,0,"{FFFFFF}Упс...","{FF0000}Вы проиграли. Не расстраивайтесь! Выиграете в другой раз!","Закрыть","");
	pAvtomat[playerid] = 0;
	return 1;
}
public GuvdGateClose()//За место LSPD пишешь свое
{
	MoveObject(GuvdGate, 2408.3818, -1835.6829, 24.1117,2.00,-1000.0,-1000.0,-1000.0);//Тут пиши коорды закрытых ворот и также "2.00,-1000.0,-1000.0,-1000.0" не трогаем(2.00 это скорость закрытия ворот)  а также за место LSPD пишешь свое . Получится должно так MoveObject(LSPDGate, 1541.30273438,-1627.38574219,15.15620422,2.00,-1000.0,-1000.0,-1000.0);
	KillTimer(GuvdGateTimer);//И тут за место LSPD пишешь свое . Это мы остановили таймер
	return 1;
}
stock fGetPlayerSpeed(player, bool:return_km = true)
{
	new Float:x, Float:y, Float:z;
	if(IsPlayerInAnyVehicle(player)) GetVehicleVelocity(GetPlayerVehicleID(player), x, y, z);
	else GetPlayerVelocity(player, x, y, z);
	return return_km?floatround(floatsqroot(x*x+y*y+z*z)*195) :floatround(floatsqroot(x*x+y*y+z*z)*121);
}
/*public SpeedoUpdate()
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
		{
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				// Массивы
				new Float:speed = fGetPlayerSpeed(i), Float:x,Float:y,Float:z,
				string[128], vehicleid = GetPlayerVehicleID(i);
				if(IsABicycle(vehicleid)) continue;
				GetVehicleVelocity(vehicleid, x,y,z);
				GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
				new Float:msdrived = (speed/8.6)/600;
				new id_car = -1;
				if(GetPVarType(i,#P_CarIdx))	id_car = gpvi(i,#P_CarIdx);
				if(GetPVarInt(i,#P_Taxi_On) && GetPVarInt(i,#P_Taxi_State) == 2) Taksometr(GetPVarInt(i,#P_Taxi_IDPass),GetPVarInt(i,#P_Taxi_Type),msdrived);
				if(id_car != -1) aData[id_car][aMilleage] += msdrived;
				if(GetPVarInt(i,#P_Speed_On)) continue;
				// Открываем ТД
				for(new v = 0; v < 4; v++) PlayerTextDrawShow(i, speedometer[v][i]);
				if(VehInfo[vehicleid][vLeftBlink])
				{
					if(gpvi(i,#P_povL)) DeletePVar(i,#P_povL);
					else spvi(i,#P_povL,1);
				}
				else DeletePVar(i,#P_povL);
				if(VehInfo[vehicleid][vRightBlink])
				{
					if(gpvi(i,#P_povR)) DeletePVar(i,#P_povR);
					else spvi(i,#P_povR,1);
				}
				else DeletePVar(i,#P_povR);
				PlayerTextDrawSetString(i,speedometer[0][i],VehiclesName[GetVehicleModel(vehicleid)-400]);
				if(id_car == -1) format(string,sizeof(string),"~g~CKOPOC¦’: ~w~%.0f KM/Ќ~n~~g~ЏOЊ‡…‹O: ~w~%d ‡~n~~g~ЊPOЂE‚: ~w~--- KM",speed/1.5,Fuel[vehicleid]);
				else format(string,sizeof(string),"~g~CKOPOC¦’: ~w~%.0f KM/Ќ~n~~g~ЏOЊ‡…‹O: ~w~%d ‡~n~~g~ЊPOЂE‚: ~w~%.1f KM",speed/1.5,aData[id_car][aFuel],aData[id_car][aMilleage]);
				PlayerTextDrawSetString(i,speedometer[2][i],string);
				
				format(string,sizeof(string),"~%s~<          ~%s~E  ~%s~L  ~%s~S           ~%s~>", gpvi(i,#P_povL) ? ("g"):("r"),
				engine ? ("g"):("r"),lights ? ("g"):("r"),GetPVarInt(i,"Seatbelt") ? ("g"):("r"),gpvi(i,#P_povR) ? ("g"):("r"));
				PlayerTextDrawSetString(i,speedometer[1][i],string);
			}
		}
		if(!IsPlayerInAnyVehicle(i)) { for(new r = 0; r < 4; r++) PlayerTextDrawHide(i, speedometer[r][i]); }
	}
	return 1;
}*/
stock Taksometr(@p,type,Float:mil)
{
	if(!IsPlayerConnected(@p)) return 1;
	new g = GetPVarInt(@p,#P_Taxi_IDDriver);
	new Float:km = GetPVarFloat(@p,#P_Taxi_Km);
	SetPVarFloat(@p,#P_Taxi_Km,km+mil);	
	new km_int = floatround(GetPVarFloat(@p,#P_Taxi_Km),floatround_ceil);
	new sum = km_int * GetPVarInt(g,#P_Taxi_Tar);
	if(type == 2)
	{
		if(eGetPlayerMoney(@p) < GetPVarInt(g,#P_Taxi_Tar))
		{
			SCM(@p,COLOR_LIGHTRED,#У вас недостаточно денег чтобы оплатить эту поездку);
			SCM(g,COLOR_LIGHTRED,#У вашего пассажира недостаточно денег чтобы оплатить эту поездку);
			
			SetVehicleVelocity(GetPlayerVehicleID(g),0.0,0.0,0.0);
			RemovePlayerFromVehicle(@p);
			TextDrawHideForPlayer(@p,taxi_fon);
			PlayerTextDrawHide(@p,taxi_info[@p]);		
			PlayerInfo[g][pCash] += GetPVarInt(g,#P_Taxi_Summ);
			GivePlayerMoney(g,GetPVarInt(g,#P_Taxi_Summ));		
			PlayerTextDrawHide(g,taxi_info[g]);
			TextDrawHideForPlayer(g,taxi_fon);
			DeletePVar(g,#P_Taxi_Summ);
			DeletePVar(@p,#P_Taxi_Drive);
			DeletePVar(g,#P_Taxi_IDPass);
			DeletePVar(@p,#P_Taxi_Km);
			DeletePVar(@p,#P_Taxi_KM_Int);
			DeletePVar(g,#P_Taxi_State);
			DisablePlayerCheckpoint(g);
			if(GetPVarInt(g,#P_Taxi_Type) == 2)
			{
				static const str0[] = "--{00ff00}Свободное {FFFF00}такси--\nЦена за километр: {00ff00}%d {FFFF00}рублей.";
				new str[sizeof(str0)+4];
				format(str,sizeof(str),str0,GetPVarInt(g,#P_Taxi_Tar));
				UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(g,#P_Taxi_Text3d), COLOR_YELLOW, str);
			}
			else if(GetPVarInt(g,#P_Taxi_Type) == 1)
			{
				static const str0[] = "--{00ff00}Свободное {FFFF00}такси--\nОплата: Договорная.";
				UpdateDynamic3DTextLabelText(Text3D:GetPVarInt(g,#P_Taxi_Text3d), COLOR_YELLOW, str0);
			}
			return 1;
		}
		if(GetPVarInt(@p,#P_Taxi_KM_Int) == km_int)
		{
			SetPVarInt(@p,#P_Taxi_KM_Int,km_int);
		}
		else
		{
			PlayerInfo[@p][pCash] -= GetPVarInt(g,#P_Taxi_Tar);
			GivePlayerMoney(@p,-GetPVarInt(g,#P_Taxi_Tar));		
			new mon = GetPVarInt(g,#P_Taxi_Summ);
			SetPVarInt(g,#P_Taxi_Summ,mon+GetPVarInt(g,#P_Taxi_Tar));
			SetPVarInt(@p,#P_Taxi_KM_Int,km_int);
		}
	}
	static const str0[] = "ЊPO—E‚:~g~ %0.2f ~w~KM~n~~n~‰E®A: ~g~%d  ~w~PY—‡E†";
	new str[sizeof(str0)+7+11];
	format(str,sizeof(str),str0,GetPVarFloat(@p,#P_Taxi_Km),sum);
	PlayerTextDrawSetString(@p,taxi_info[@p],str);
	PlayerTextDrawSetString(g,taxi_info[g],str);
	return 1;
}
public FuelUpdate()
{
	for(new i = 1; i < MAX_VEHICLES; i++)
	{
		if(GetVehicleModel(i) && !IsABicycle(i))
		{
			if(CarEngine[i] == 1)
			{
				GetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,boot,objective);
				new id_car = GetVehicleIdxByID(i);
				if(id_car == -1)
				{
					if(Fuel[i] > 0) Fuel[i]--;
					else SetVehicleParamsEx(i,0,lights,alarm,doors,bonnet,boot,objective),CarEngine[i] = 0;
				}
				else
				{
					if(aData[id_car][aFuel] > 0) aData[id_car][aFuel]--;
					else SetVehicleParamsEx(i,0,lights,alarm,doors,bonnet,boot,objective),CarEngine[i] = 0;
				}
			}
		}
	}
}

public OnVehicleSpawn(vehicleid)
{
	new id_car = GetVehicleIdxByID(vehicleid);
	if(id_car == -1) Fuel[vehicleid] = 60;
	else if(aData[id_car][aFrak] || aData[id_car][aJobs]) aData[id_car][aFuel] = 60;

	if(id_car != -1 && aData[id_car][aJobs] == 3)
	{
		foreach(new i:Player)
		{
			if(GetPVarInt(i,#P_Taxi_CarID) == vehicleid)
			{
				DeletePVar(i,#P_Taxi_CarID);
				DeletePVar(i,#P_Taxi_Off);
				SCM(i,COLOR_LIGHTBLUE,#Вашу машину забрал эвакуатор);
				break;
			}
		}
	}
	return 1;
}
publics: LoadGarage()
{
	new rows, fields, str[200];
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new idx = 0; idx < cache_num_rows(); idx++)
		{
			// content
			cache_get_field_content(idx, "Owner", Garage[idx][gOwner], MySQLGo, strlen(Garage[idx][gOwner]));

			// int
			Garage[idx][gID] = cache_get_field_content_int(idx, "ID");
			Garage[idx][gPrice] = cache_get_field_content_int(idx, "Price");
			Garage[idx][gInter] = cache_get_field_content_int(idx, "Inter");
			Garage[idx][gVirtual] = cache_get_field_content_int(idx, "Virtual");
			Garage[idx][gLock] = cache_get_field_content_int(idx, "Lock");
			Garage[idx][gUL] = cache_get_field_content_int(idx, "UL");
			Garage[idx][gLevel] = cache_get_field_content_int(idx, "Level");

			// float
			Garage[idx][gX1] = cache_get_field_content_float(idx, "X1");
			Garage[idx][gY1] = cache_get_field_content_float(idx, "Y1");
			Garage[idx][gZ1] = cache_get_field_content_float(idx, "Z1");
			Garage[idx][gX2] = cache_get_field_content_float(idx, "X2");
			Garage[idx][gY2] = cache_get_field_content_float(idx, "Y2");
			Garage[idx][gZ2] = cache_get_field_content_float(idx, "Z2");
			Garage[idx][gR2] = cache_get_field_content_float(idx, "R2");
			Garage[idx][gX3] = cache_get_field_content_float(idx, "X3");
			Garage[idx][gY3] = cache_get_field_content_float(idx, "Y3");
			Garage[idx][gZ3] = cache_get_field_content_float(idx, "Z3");
			Garage[idx][gR3] = cache_get_field_content_float(idx, "R3");
			Garage[idx][gX4] = cache_get_field_content_float(idx, "X4");
			Garage[idx][gY4] = cache_get_field_content_float(idx, "Y4");
			Garage[idx][gZ4] = cache_get_field_content_float(idx, "Z4");
			if(Garage[idx][gX1] == 0.0 && Garage[idx][gY1] == 0.0)
			{
				printf("Гараж Ид:%d не был загружен из-за 0 0 0 кроодинат!",Garage[idx][gID]);
				continue;
			}
			//
			if(!strcmp(Garage[idx][gOwner],"None",true))
			{
				format(str, 200, "{FFFFFF}Гараж {2E9AFE}№%d {FFFFFF}продается!\nСтоимость: {2E9AFE}%dр{FFFFFF}\nУровень: {2E9AFE}%d", idx, Garage[idx][gPrice], Garage[idx][gLevel]);
				Garage[idx][gText] = CreateDynamic3DTextLabel(str,-1,Garage[idx][gX1], Garage[idx][gY1], Garage[idx][gZ1], 10.0);
				Garage[idx][gPickup] = CreatePickup(1239, 23, Garage[idx][gX1], Garage[idx][gY1], Garage[idx][gZ1]);
				CreateDynamic3DTextLabel("Чтобы выйти нажмите клавишу L.ALT\nМеню управления: {FFFFFF}/gmenu",0xFFa500AA,Garage[idx][gX1], Garage[idx][gY1], Garage[idx][gZ1],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,Garage[idx][gVirtual]);
			}
			else
			{
				format(str, 200, "{FFFFFF}Гараж {2E9AFE}№%d {FFFFFF}\nВладелец: {2E9AFE}%s", idx, Garage[idx][gOwner]);
				Garage[idx][gText] = CreateDynamic3DTextLabel(str,-1,Garage[idx][gX1], Garage[idx][gY1], Garage[idx][gZ1], 10.0);
				Garage[idx][gPickup] = CreatePickup(1239, 23, Garage[idx][gX1], Garage[idx][gY1], Garage[idx][gZ1]);
				CreateDynamic3DTextLabel("Чтобы выйти нажмите клавишу L.ALT\nМеню управления: {FFFFFF}/gmenu",0xFFa500AA,Garage[idx][gX1], Garage[idx][gY1], Garage[idx][gZ1],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,Garage[idx][gVirtual]);
			}

			//
			ALLGARAGE++;
		}
		printf("[Загрузка MYSQL]: Гаражи успешно загружены. Всего: %d",ALLGARAGE);
	}
	return 1;
}
publics: LoadAtm()
{
	new rows, fields, str[200];
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new idx = 0; idx < cache_num_rows(); idx++)
		{
			// content
			cache_get_field_content(idx, "owner", Atm[idx][atmOwner], MySQLGo, strlen(Atm[idx][atmOwner]));

			// int
			Atm[idx][atmID] = cache_get_field_content_int(idx, "ID");
			Atm[idx][atmCena] = cache_get_field_content_int(idx, "cena");
			Atm[idx][atmLevel] = cache_get_field_content_int(idx, "lvl");
			Atm[idx][atmMoney] = cache_get_field_content_int(idx, "money");
			Atm[idx][atmOwned] = cache_get_field_content_int(idx, "owned");
			Atm[idx][atmLock] = cache_get_field_content_int(idx, "lock");

			// float
			Atm[idx][atmX] = cache_get_field_content_float(idx, "x");
			Atm[idx][atmY] = cache_get_field_content_float(idx, "y");
			Atm[idx][atmZ] = cache_get_field_content_float(idx, "z");
			ALLATM++;

			//
			if(!strcmp(Atm[idx][atmOwner],"None",true))
			{
				format(str, 200, "{008cf0}Банкомат №%i продается!\n\n{008cf0}Стоимость: {ffffff}%d рублей\n{008cf0}Уровень: {ffffff}%d", idx, Atm[idx][atmCena], Atm[idx][atmLevel]);
				Atm[idx][atmText] = CreateDynamic3DTextLabel(str,-1, Atm[idx][atmX],Atm[idx][atmY],Atm[idx][atmZ], 10.0);
			}
			else
			{
				format(str, 200, "{008cf0}Банкомат №%i\n\n{008cf0}Владелец: {ffffff}%s", idx, Atm[idx][atmOwner]);
				Atm[idx][atmText] = CreateDynamic3DTextLabel(str,-1, Atm[idx][atmX],Atm[idx][atmY],Atm[idx][atmZ], 10.0);
			}
			Atm[idx][atmMapIc] = CreateDynamicMapIcon(Atm[idx][atmX],Atm[idx][atmY],Atm[idx][atmZ],52,0);
		}
		printf("[Загрузка MYSQL]: Банкоматы успешно загружены. Всего: %d",ALLATM);
	}
}
publics: LoadLareks()
{
	new rows, fields, str[200];
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new idx = 0; idx < cache_num_rows(); idx++)
		{
			// content
			cache_get_field_content(idx, "owner", LarekInfo[idx][larOwner], MySQLGo, strlen(LarekInfo[idx][larOwner]));

			// int
			LarekInfo[idx][larID] = cache_get_field_content_int(idx, "ID");
			LarekInfo[idx][larCena] = cache_get_field_content_int(idx, "cena");
			LarekInfo[idx][larLevel] = cache_get_field_content_int(idx, "lvl");
			LarekInfo[idx][larProds] = cache_get_field_content_int(idx, "products");
			LarekInfo[idx][larMoney] = cache_get_field_content_int(idx, "money");
			LarekInfo[idx][larLock] = cache_get_field_content_int(idx, "lock");
			LarekInfo[idx][larOwned] = cache_get_field_content_int(idx, "owned");

			// float
			LarekInfo[idx][larX] = cache_get_field_content_float(idx, "x");
			LarekInfo[idx][larY] = cache_get_field_content_float(idx, "y");
			LarekInfo[idx][larZ] = cache_get_field_content_float(idx, "z");
			LAREKCOUNT++;
			if(LarekInfo[idx][larX] == 0.0 && LarekInfo[idx][larY] == 0.0)
			{
				printf("Ларек Ид: %d не был загружен!",LarekInfo[idx][larID]);
				continue;
			}
			//
			if(!strcmp(LarekInfo[idx][larOwner],"None",true))
			{
				format(str, 200, "{008cf0}Ларек №%d продается!\n{008cf0}Стоимость: {ffffff}%d рублей{FFFFFF}\n{008cf0}Уровень: {FFFFFF}%d\n\n{bbbbbb}Для покупки введите /buylarek", idx, LarekInfo[idx][larCena], LarekInfo[idx][larLevel]);
				LarekInfo[idx][larText] = CreateDynamic3DTextLabel(str,-1,LarekInfo[idx][larX], LarekInfo[idx][larY], LarekInfo[idx][larZ], 10.0);
				LarekInfo[idx][larPickup] = CreatePickup(1239, 23, LarekInfo[idx][larX], LarekInfo[idx][larY], LarekInfo[idx][larZ]);
			}
			else
			{
				format(str, 200, "{008cf0}Ларек №%d\n{008cf0}Владелец: {ffffff}%s\n\n{bbbbbb}Для покупки еды нажмите L.ALT", idx, LarekInfo[idx][larOwner]);
				LarekInfo[idx][larText] = CreateDynamic3DTextLabel(str,-1,LarekInfo[idx][larX], LarekInfo[idx][larY], LarekInfo[idx][larZ], 10.0);
				LarekInfo[idx][larPickup] = CreatePickup(1239, 23, LarekInfo[idx][larX], LarekInfo[idx][larY], LarekInfo[idx][larZ]);
			}
			LarekInfo[idx][larMapIc] = CreateDynamicMapIcon(LarekInfo[idx][larX], LarekInfo[idx][larY], LarekInfo[idx][larZ],50,0);
		}
		printf("[Загрузка MYSQL]: Ларьки с едой успешно загружены. Всего: %d",LAREKCOUNT);
	}
	return 1;
}
publics: LoadAcc()
{
	new rows, fields, str[300];
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new i = 0; i < cache_num_rows(); i++)
		{
			// content
			cache_get_field_content(i, "acOwner", AC[i][acOwner], MySQLGo, strlen(AC[i][acOwner]));
			cache_get_field_content(i, "acMess", AC[i][acMess], MySQLGo, strlen(AC[i][acMess]));
			cache_get_field_content(0, "acPriceP", str, MySQLGo, 156);
			sscanf(str, "p<,>a<i>[26]", AC[i][acPriceP]);
			/*for(new j = 0; j < 26; j++)
			{
				printf("AC[%d][acPriceP][%d] = %d",i,j,AC[i][acPriceP][j]);
			}*/
			// int
			AC[i][acID] = cache_get_field_content_int(i, "acID", MySQLGo);
			AC[i][acOwned] = cache_get_field_content_int(i, "acOwned");
			AC[i][acLevel] = cache_get_field_content_int(i, "acLevel");
			AC[i][acPrice] = cache_get_field_content_int(i, "acPrice");			
			AC[i][acTill] = cache_get_field_content_int(i, "acTill");
			AC[i][acTill2] = cache_get_field_content_int(i, "acTill2");
			AC[i][acLock] = cache_get_field_content_int(i, "acLock");
			AC[i][acWorld] = cache_get_field_content_int(i, "acWorld");
			AC[i][acInter] = cache_get_field_content_int(i, "acInter");
			// float
			AC[i][acEntX] = cache_get_field_content_float(i, "acEntX", MySQLGo);
			AC[i][acEntY] = cache_get_field_content_float(i, "acEntY", MySQLGo);
			AC[i][acEntZ] = cache_get_field_content_float(i, "acEntZ", MySQLGo);
			AC[i][acBuyX] = cache_get_field_content_float(i, "acBuyX", MySQLGo);
			AC[i][acBuyY] = cache_get_field_content_float(i, "acBuyY", MySQLGo);
			AC[i][acBuyZ] = cache_get_field_content_float(i, "acBuyZ", MySQLGo);
			str = "";
			if(!AC[i][acOwned]){
				format(str,sizeof(str),"{ffffff} Магазин аксессуаров:\n{2E9AFE}%s\n{FFFFFF}Цена: {2E9AFE}%dр\n{FFFFFF}Уровень: {2E9AFE}%d\n\n{FFFFFF}Бизнес продаётся, для покупки введите /buyacc",
				AC[i][acMess],AC[i][acPrice],AC[i][acLevel]);
				AC[i][acLock] = 1;
				AC[i][acLab][0] = CreateDynamic3DTextLabel(str,-1,AC[i][acEntX], AC[i][acEntY], AC[i][acEntZ]+0.5, 10.0);
			}
			else{
				format(str,sizeof(str),"{008cf0}Магазин аксессуаров:\n{FFFFFF}%s\n{008cf0}Владелец: {FFFFFF}%s\n{008cf0}Статус: %s",AC[i][acMess],AC[i][acOwner],
				(AC[i][acLock]) ? ("{ff0000}Закрыт"):("{00ff00}Открыт"));				
				AC[i][acLab][0] = CreateDynamic3DTextLabel(str,-1,AC[i][acEntX], AC[i][acEntY], AC[i][acEntZ]+0.5, 10.0);
				AC[i][acLab][1] = CreateDynamic3DTextLabel("{ffffff}Для покупки введите:\n{0089FF}/buy",-1,AC[i][acBuyX], AC[i][acBuyY], AC[i][acBuyZ]+0.5, 10.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 0, AC[i][acWorld], AC[i][acInter]);
				AC[i][acPick][1] = CreateDynamicPickup(1239,23,AC[i][acBuyX], AC[i][acBuyY], AC[i][acBuyZ], AC[i][acWorld], AC[i][acInter], -1, 100.0);
			}
			AC[i][acMapIc] = CreateDynamicMapIcon(AC[i][acEntX], AC[i][acEntY], AC[i][acEntZ],9,0);
			AC[i][acPick][0] = CreateDynamicPickup(1239,23,AC[i][acEntX], AC[i][acEntY], AC[i][acEntZ], -1, -1, -1, 100.0);
			ALLACC ++;
		}
		printf("[Загрузка MYSQL]: Магазины акссесуаров успешно загружены. Всего: %d",ALLACC);
	}
	return true;
}
stock SaveAcc(i)
{
	new str[312],str0[156];
	for(new j = 0; j < 26; j++)
	{
		format(str0,sizeof(str0),"%s%d,",str0,AC[i][acPriceP][j]);
	}
	print(str0);
	mysql_format(MySQLGo,str,sizeof(str),"UPDATE `biz_acc` SET `acPriceP` = '%s' WHERE `acID` = '%d'",str0,AC[i][acID]);
	mysql_tquery(MySQLGo,str);
	printf("len = %d",strlen(str));
	mysql_format(MySQLGo,str,sizeof(str),"UPDATE `biz_acc` SET `acOwner` = '%s', `acMess` = '%s', `acOwned` = '%d' WHERE `acID` = '%d'",AC[i][acOwner],AC[i][acMess],AC[i][acOwned],AC[i][acID]);
	mysql_tquery(MySQLGo,str);
	printf("len = %d",strlen(str));
	mysql_format(MySQLGo,str,sizeof(str),"UPDATE `biz_acc` SET `acLevel` = '%d', `acPrice` = '%d', `acTill` = '%d', `acTill2` = '%d' WHERE `acID` = '%d'",AC[i][acLevel],
	AC[i][acPrice],AC[i][acTill],AC[i][acTill2],AC[i][acID]);	
	mysql_tquery(MySQLGo,str);
	printf("len = %d",strlen(str));
	mysql_format(MySQLGo,str,sizeof(str),"UPDATE `biz_acc` SET `acLock` = '%d', `acWorld` = '%d', `acInter` = '%d' WHERE `acID` = '%d'",AC[i][acLock],AC[i][acWorld],AC[i][acInter],AC[i][acID]);
	mysql_tquery(MySQLGo,str);
	printf("len = %d",strlen(str));
	mysql_format(MySQLGo,str,sizeof(str),"UPDATE `biz_acc` SET `acEntX` = '%f', `acEntY` = '%f',`acEntZ` = '%f' WHERE `acID` = '%d'",AC[i][acEntX],AC[i][acEntY],AC[i][acEntZ],AC[i][acID]);
	mysql_tquery(MySQLGo,str);
	printf("len = %d",strlen(str));
	mysql_format(MySQLGo,str,sizeof(str),"UPDATE `biz_acc` SET `acBuyX` = '%f', `acBuyY` = '%f',`acBuyZ` = '%f' WHERE `acID` = '%d'",AC[i][acBuyX],AC[i][acBuyY],AC[i][acBuyZ],AC[i][acID]);
	mysql_tquery(MySQLGo,str);
	printf("len0 = %d len = %d",strlen(str0),strlen(str));
	return 1;
}
stock PrintAccInfo(playerid,id)
{
	static const str0[] = "{FFFFFF}Бизнес: {2E9AFE}%s\n{FFFFFF}На счету бизнеса: {2E9AFE}%d рублей\n{FFFFFF}В этом часу заработано: {2E9AFE}%dр\n{FFFFFF}Состояние Бизнеса: {2E9AFE}%s";
	new str[sizeof(str0)+64+6+5+12];
	format(str, sizeof(str),str0,AC[id][acMess],AC[id][acTill],AC[id][acTill2],(AC[id][acLock]) ? ("{ff0000}Закрыто"):("{00ff00}Открыто"));
	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Cостояние бизнеса",str,"Закрыть","");
	return true;
}
publics: LoadFuels()
{
	new rows, fields, str[300];
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new i = 0; i < cache_num_rows(); i++)
		{
			// content
			cache_get_field_content(i, "sbOwner", FuelsInfo[i][sbOwner], MySQLGo, strlen(FuelsInfo[i][sbOwner]));
			cache_get_field_content(i, "sbMessage", FuelsInfo[i][sbMessage], MySQLGo, strlen(FuelsInfo[i][sbMessage]));

			// int
			FuelsInfo[i][sbID] = cache_get_field_content_int(i, "sbID", MySQLGo);
			FuelsInfo[i][sbOwned] = cache_get_field_content_int(i, "sbOwned");
			FuelsInfo[i][sbLevelNeeded] = cache_get_field_content_int(i, "sbLevelNeeded");
			FuelsInfo[i][sbBuyPrice] = cache_get_field_content_int(i, "sbBuyPrice");
			FuelsInfo[i][sbEntranceCost] = cache_get_field_content_int(i, "sbEntranceCost");
			FuelsInfo[i][sbTill] = cache_get_field_content_int(i, "sbTill");
			FuelsInfo[i][sbLocked] = cache_get_field_content_int(i, "sbLocked");
			FuelsInfo[i][sbInterior] = cache_get_field_content_int(i, "sbInterior");
			FuelsInfo[i][sbProducts] = cache_get_field_content_int(i, "sbProducts");
			FuelsInfo[i][sbPriceProd] = cache_get_field_content_int(i, "sbPriceProd");
			FuelsInfo[i][s2bTill] = cache_get_field_content_int(i, "s2bTill");
			FuelsInfo[i][sbMafia] = cache_get_field_content_int(i, "sbMafia");

			// float
			FuelsInfo[i][sbEntranceX] = cache_get_field_content_float(i, "sbEntranceX", MySQLGo);
			FuelsInfo[i][sbEntranceY] = cache_get_field_content_float(i, "sbEntranceY", MySQLGo);
			FuelsInfo[i][sbEntranceZ] = cache_get_field_content_float(i, "sbEntranceZ", MySQLGo);
			ALLFUELS++;
			if(FuelsInfo[i][sbEntranceX] == 0.0)
			{
				printf("Заправка ИД:%d не была загружена!",FuelsInfo[i][sbID]);
				continue;
			}
			if(FuelsInfo[i][sbProducts] > 50000) FuelsInfo[i][sbProducts] = 50000;
			if(FuelsInfo[i][sbOwned] == 0)
			{
				format(str, 300, "{FFFFFF}Заправка: {2E9AFE}%s\n{FFFFFF}Цена: {2E9AFE}%dр\n\n{bbbbbb}Бизнес продаётся, для покупки введите /buyfuel", FuelsInfo[i][sbMessage], FuelsInfo[i][sbBuyPrice]);
				FuelsInfo[i][sbLocked] = 1;
				FuelsInfo[i][sbTill] = 0;
				FuelsInfo[i][s2bTill] = 0;
				FuelsInfo[i][sbProducts] = 0;
				FuelsInfo[i][sbPriceProd] = 100;
				FuelsInfo[i][sbLabel] = CreateDynamic3DTextLabel(str,-1,FuelsInfo[i][sbEntranceX], FuelsInfo[i][sbEntranceY], FuelsInfo[i][sbEntranceZ], 10.0);
			}
			if(FuelsInfo[i][sbOwned] == 1)
			{
				format(str, 300, "{FFFFFF}Заправка: {2E9AFE}%s\n{FFFFFF}Владелец: {2E9AFE}%s\n{FFFFFF}Цена бензина: {2E9AFE}%d {FFFFFF}рублей за литр\n\n{bbbbbb}Для заправки введите: /fill", FuelsInfo[i][sbMessage], FuelsInfo[i][sbOwner],FuelsInfo[i][sbPriceProd]);
				FuelsInfo[i][sbLabel] = CreateDynamic3DTextLabel(str,-1,FuelsInfo[i][sbEntranceX], FuelsInfo[i][sbEntranceY], FuelsInfo[i][sbEntranceZ], 10.0);
			}
			CreateDynamicMapIcon(FuelsInfo[i][sbEntranceX], FuelsInfo[i][sbEntranceY], FuelsInfo[i][sbEntranceZ],27,0);
			FuelsInfo[i][sbPickup] = CreatePickup(1650, 23, FuelsInfo[i][sbEntranceX], FuelsInfo[i][sbEntranceY], FuelsInfo[i][sbEntranceZ]);
		}
		printf("[Загрузка MYSQL]: Заправки успешно загружены. Всего: %d",ALLFUELS);
	}
	return true;
}
publics: LoadFlat()
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new i = 0; i < cache_num_rows(); i++)
		{
			// content
			cache_get_field_content(i, "vladelec", FlatInfo[i][vladelec], MySQLGo, strlen(FlatInfo[i][vladelec]));

			// int
			FlatInfo[i][kid] = cache_get_field_content_int(i, "kid");
			FlatInfo[i][lock] = cache_get_field_content_int(i, "lock");
			FlatInfo[i][plata] = cache_get_field_content_int(i, "plata");
			FlatInfo[i][virtmir] = cache_get_field_content_int(i, "virtmir");
			FlatInfo[i][kworld] = cache_get_field_content_int(i, "kworld");
			FlatInfo[i][lvl] = cache_get_field_content_int(i, "lvl");
			FlatInfo[i][cena] = cache_get_field_content_int(i, "cena");

			// float
			FlatInfo[i][pXpic] = cache_get_field_content_float(i, "pXpic");
			FlatInfo[i][pYpic] = cache_get_field_content_float(i, "pYpic");
			FlatInfo[i][pZpic] = cache_get_field_content_float(i, "pZpic");

			//Next
			new QUERYS[180];
			if(!strcmp(FlatInfo[i][vladelec],"None",true)) format(QUERYS, 180,"{2E9AFE}[Квартира №%i]\n Выставлена на продажу!\n{2E9AFE}Стоимость: {FFFFFF}%iр\n{bbbbbb}Чтобы войти нажмите клавишу {96e300}L.ALT",i, FlatInfo[i][cena]);
			else format(QUERYS, 180,"{D7EC0F}[Квартира №%i]\n{FFFFFF}Владелец: {2B84E3}%s\n{bbbbbb}Чтобы войти нажмите клавишу {96e300}L.ALT",i, FlatInfo[i][vladelec]);

			//
			FlatInfo[i][dtextss] = CreateDynamic3DTextLabel(QUERYS,-1,FlatInfo[i][pXpic],FlatInfo[i][pYpic],FlatInfo[i][pZpic]+1, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,FlatInfo[i][kworld] , -1, -1, 100.0);
			//
			ALLKVARTIRI++;
		}
		printf("[Загрузка MYSQL]: Квартиры успешно загружены. Всего: %d",ALLKVARTIRI);
	}
	return 1;
}
publics: LoadHouses()
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new i = 0; i < cache_num_rows(); i++)
		{
			// Content
			cache_get_field_content(i, "owner", House[i][owner], MySQLGo, strlen(House[i][owner]));

			// Int
			House[i][houseidd] = cache_get_field_content_int(i, "id");
			House[i][sale] = cache_get_field_content_int(i, "sale");
			House[i][prodaja] = cache_get_field_content_int(i, "prodaja");
			House[i][stoim] = cache_get_field_content_int(i, "stoim");
			House[i][HBank] = cache_get_field_content_int(i, "HBank");
			House[i][lvl] = cache_get_field_content_int(i, "lvl");
			House[i][rentable] = cache_get_field_content_int(i, "rentable");
			House[i][rentsumma] = cache_get_field_content_int(i, "rentsumma");
			House[i][lock] = cache_get_field_content_int(i, "lock");
			House[i][int] = cache_get_field_content_int(i, "INT");
			House[i][hType] = cache_get_field_content_int(i, "hType");

			// Float
			House[i][HOx] = cache_get_field_content_float(i, "x");
			House[i][HOy] = cache_get_field_content_float(i, "y");
			House[i][HOz] = cache_get_field_content_float(i, "z");
			House[i][SPx] = cache_get_field_content_float(i, "SPx");
			House[i][SPy] = cache_get_field_content_float(i, "SPy");
			House[i][SPz] = cache_get_field_content_float(i, "SPz");
			House[i][SPr] = cache_get_field_content_float(i, "SPr");
			House[i][Ex] = cache_get_field_content_float(i, "Ex");
			House[i][Ey] = cache_get_field_content_float(i, "Ey");
			House[i][Ez] = cache_get_field_content_float(i, "Ez");
			House[i][Ea] = cache_get_field_content_float(i, "Ea");

			createdh ++;
			if(!House[i][sale])
			{
				House[i][hPick] = CreatePickup(1273, 23, House[i][HOx],House[i][HOy],House[i][HOz],-1);
				House[i][hMIcon1] = CreateDynamicMapIcon(House[i][HOx],House[i][HOy],House[i][HOz],31,0);
			}
			else 
			{
				House[i][hPick] = CreatePickup(1272, 23, House[i][HOx],House[i][HOy],House[i][HOz],-1);
				House[i][hMIcon1] = CreateDynamicMapIcon(House[i][HOx],House[i][HOy],House[i][HOz],32,0);
			}
			House[i][hZone] = CreateDynamicSphere(House[i][HOx],House[i][HOy],House[i][HOz], 1.0, -1, -1,-1);
		}
		printf("[Загрузка MYSQL]: Дома успешно загружены. Всего: %d",createdh);
	}
}
stock SaveBank()
{
	mysql_function(MySQLGo,300,"UPDATE `kazna` SET `fracls` = '%i',`FracBank1` = '%i',`FracBank2` = '%i',`FracBank3` = '%i',`FracBank4` = '%i'",false,"","", FracBank[0],FracBank[1],FracBank[2],FracBank[3],FracBank[4]);
	mysql_function(MySQLGo,300,"UPDATE `kazna` SET `fracsf` = '%i',`FracBank6` = '%i',`FracBank7` = '%i',`FracBank8` = '%i',`FracBank9` = '%i'",false,"","", FracBank[5],FracBank[6],FracBank[7],FracBank[8],FracBank[9]);
	mysql_function(MySQLGo,300,"UPDATE `kazna` SET `fraclv` = '%i',`FracBank11` = '%i',`FracBank12` = '%i',`FracBank13` = '%i',`FracBank14` = '%i'",false,"","", FracBank[10],FracBank[11],FracBank[12],FracBank[13],FracBank[14]);
	mysql_function(MySQLGo,300,"UPDATE `kazna` SET `fracwtf` = '%i',`FracBank16` = '%i',`FracBank17` = '%i',`FracBank18` = '%i',`FracBank19` = '%i'",false,"","", FracBank[15],FracBank[16],FracBank[17],FracBank[18],FracBank[19]);
	mysql_function(MySQLGo,300,"UPDATE `kazna` SET `fractest` = '%i',`FracBank21` = '%i',`FracBank22` = '%i'",false,"","", FracBank[20],FracBank[21],FracBank[22]);
	return 1;
}
publics: LoadBank()
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		FracBank[0] = cache_get_field_content_int(0, "fracls");
		FracBank[1] = cache_get_field_content_int(0, "FracBank1");
		FracBank[2] = cache_get_field_content_int(0, "FracBank2");
		FracBank[3] = cache_get_field_content_int(0, "FracBank3");
		FracBank[4] = cache_get_field_content_int(0, "FracBank4");
		FracBank[5] = cache_get_field_content_int(0, "fracsf");
		FracBank[6] = cache_get_field_content_int(0, "FracBank6");
		FracBank[7] = cache_get_field_content_int(0, "FracBank7");
		FracBank[8] = cache_get_field_content_int(0, "FracBank8");
		FracBank[9] = cache_get_field_content_int(0, "FracBank9");
		FracBank[10] = cache_get_field_content_int(0, "fraclv");
		FracBank[11] = cache_get_field_content_int(0, "FracBank11");
		FracBank[12] = cache_get_field_content_int(0, "FracBank12");
		FracBank[13] = cache_get_field_content_int(0, "FracBank13");
		FracBank[14] = cache_get_field_content_int(0, "FracBank14");
		FracBank[15] = cache_get_field_content_int(0, "fracwtf");
		FracBank[16] = cache_get_field_content_int(0, "FracBank16");
		FracBank[17] = cache_get_field_content_int(0, "FracBank17");
		FracBank[18] = cache_get_field_content_int(0, "FracBank18");
		FracBank[19] = cache_get_field_content_int(0, "FracBank19");
		FracBank[20] = cache_get_field_content_int(0, "fractest");
		FracBank[21] = cache_get_field_content_int(0, "FracBank21");
		FracBank[22] = cache_get_field_content_int(0, "FracBank22");
		print("[Загрузка MYSQL]: Банки фракций загружены.");
	}
}

publics: LoadPod()
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new j,s[20];
		for(new i = 0; i < cache_num_rows(); i++,j++)
		{
			PodInfo[i][pID] = cache_get_field_content_int(i, "ID", MySQLGo);
			PodInfo[i][pPos][0] = cache_get_field_content_float(i, "X", MySQLGo);
			PodInfo[i][pPos][1] = cache_get_field_content_float(i, "Y", MySQLGo);
			PodInfo[i][pPos][2] = cache_get_field_content_float(i, "Z", MySQLGo);
			PodInfo[i][pPos][3] = cache_get_field_content_float(i, "EX", MySQLGo);
			PodInfo[i][pPos][4] = cache_get_field_content_float(i, "EY", MySQLGo);
			PodInfo[i][pPos][5] = cache_get_field_content_float(i, "EZ", MySQLGo);
			PodInfo[i][pInt] = cache_get_field_content_int(i, "INT", MySQLGo);
			PodInfo[i][pWorld] = cache_get_field_content_int(i, "WORLD", MySQLGo);

			PodInfo[i][pPickup][0] = CreatePickup(1559,23,PodInfo[i][pPos][0],PodInfo[i][pPos][1],PodInfo[i][pPos][2],0);
			PodInfo[i][pPickup][1] = CreatePickup(1559,23,PodInfo[i][pPos][3],PodInfo[i][pPos][4],PodInfo[i][pPos][5],PodInfo[i][pWorld]);
			format(s,sizeof(s),"Подъезд №%i",PodInfo[i][pID]);
			PodInfo[i][p3DText] = Create3DTextLabel(s,GREEN,PodInfo[i][pPos][0],PodInfo[i][pPos][1],PodInfo[i][pPos][2],8.0,0,1);
		}
		AllPod = j;
		printf("[Загрузка MYSQL]: Подъезды успешно загружены. Всего: %d",AllPod);
	}
	return 1;
}
publics: LoadVehicles()
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return print("[Загрузка MYSQL]: Личных авто в базе не обнаружено");

	new cars;
	for(new carid = 0; carid < rows; carid++)
	{
		cache_get_field_content(carid, "Owner", aData[carid][aOwner], MySQLGo, 24);
		cache_get_field_content(carid, "Num", aData[carid][aNumber], MySQLGo, 128);
		cache_get_field_content(carid, "PArrest", aData[carid][aPArrest], MySQLGo, 128);
		cache_get_field_content(carid, "PArrestName", aData[carid][aPArrestName], MySQLGo, 24);
		// Int
		aData[carid][aKey] = cache_get_field_content_int(carid, "Key");
		aData[carid][aModel] = cache_get_field_content_int(carid, "Model");
		aData[carid][aColor1] = cache_get_field_content_int(carid, "Color1");
		aData[carid][aColor2] = cache_get_field_content_int(carid, "Color2");
		aData[carid][aOwned] = cache_get_field_content_int(carid, "Owned");
		aData[carid][aPrice] = cache_get_field_content_int(carid, "Price");
		aData[carid][aLock] = cache_get_field_content_int(carid, "Lock");
		aData[carid][aFuel] = cache_get_field_content_int(carid, "Fuel");
		aData[carid][aMiglo] = cache_get_field_content_int(carid, "Miglo");
		aData[carid][aArrest] = cache_get_field_content_int(carid, "Arrest");
		aData[carid][aNitro] = cache_get_field_content_int(carid, "Nitro");
		aData[carid][aWheels] = cache_get_field_content_int(carid, "Wheels");
		aData[carid][aGydra] = cache_get_field_content_int(carid, "Gydra");
		aData[carid][aInt] = cache_get_field_content_int(carid, "Int");
		aData[carid][aWorld] = cache_get_field_content_int(carid, "World");
		aData[carid][aFrak] = cache_get_field_content_int(carid, "frak");
		aData[carid][aJobs] = cache_get_field_content_int(carid, "jobs");
		aData[carid][aPj] = cache_get_field_content_int(carid, "pj");

		// Float
		aData[carid][aPos][0] = cache_get_field_content_float(carid, "PosX");
		aData[carid][aPos][1] = cache_get_field_content_float(carid, "PosY");
		aData[carid][aPos][2] = cache_get_field_content_float(carid, "PosZ");
		aData[carid][aPos][3] = cache_get_field_content_float(carid, "PosA");
		aData[carid][aMigPos][0] = cache_get_field_content_float(carid, "MigX");
		aData[carid][aMigPos][1] = cache_get_field_content_float(carid, "MigY");
		aData[carid][aMigPos][2] = cache_get_field_content_float(carid, "MigZ");
		aData[carid][aMigPos][3] = cache_get_field_content_float(carid, "MigRX");
		aData[carid][aMigPos][4] = cache_get_field_content_float(carid, "MigRY");
		aData[carid][aMigPos][5] = cache_get_field_content_float(carid, "MigRZ");
		aData[carid][aMilleage] = cache_get_field_content_float(carid, "Milleage");
		//printf("aData[%i][aKey] = %i", carid, aData[carid][aKey]);
		if(aData[carid][aFrak] || aData[carid][aJobs]) aData[carid][aCarid] = CreateVehicle(aData[carid][aModel], aData[carid][aPos][0], aData[carid][aPos][1], aData[carid][aPos][2], aData[carid][aPos][3], aData[carid][aColor1], aData[carid][aColor2], 1200);
		else aData[carid][aCarid] = CreateVehicle(aData[carid][aModel], aData[carid][aPos][0], aData[carid][aPos][1], aData[carid][aPos][2], aData[carid][aPos][3], aData[carid][aColor1], aData[carid][aColor2], 600000);
		if(aData[carid][aCarid] == INVALID_VEHICLE_ID)
		{
			printf("Автомобиль не был создан. Индекс %d Модель %d",carid,aData[carid][aModel]);
			continue;
		}
		if(aData[carid][aPj] != -1) ChangeVehiclePaintjob(aData[carid][aCarid],aData[carid][aPj]);
		if(aData[carid][aLock]) UnLockCar(aData[carid][aCarid]);
		else LockCar(aData[carid][aCarid]);
		SetVehicleVirtualWorld(aData[carid][aCarid], aData[carid][aWorld]);
		LinkVehicleToInterior(aData[carid][aCarid], aData[carid][aInt]);
		CarEngine[aData[carid][aCarid]] = 0;
		if(aData[carid][aOwned])
		{
			new str[32];
			if(!strcmp(aData[carid][aNumber], "ТРАНЗИТ", true)) format(str, sizeof(str), "{ffffff}%s", aData[carid][aNumber]);
			else format(str, sizeof(str), "{ffffff}%s | {2E9AFE}52RUS", aData[carid][aNumber]);
			aData[carid][aNumPlate] = CreateDynamic3DTextLabel(str, COLOR_YELLOW, 0.0, 0.0, 1.2, 15.0, INVALID_PLAYER_ID, aData[carid][aCarid], 0);
		}
		else aData[carid][aNumPlate] = CreateDynamic3DTextLabel("{ffffff}ТРАНЗИТ", COLOR_YELLOW, 0.0, 0.0, 1.2, 15.0, INVALID_PLAYER_ID, aData[carid][aCarid], 0);

		if(aData[carid][aNitro] > 0) AddVehicleComponent(aData[carid][aCarid], aData[carid][aNitro]);
		if(aData[carid][aWheels] > 0) AddVehicleComponent(aData[carid][aCarid], aData[carid][aWheels]);
		if(aData[carid][aGydra] > 0) AddVehicleComponent(aData[carid][aCarid], aData[carid][aGydra]);
		if(aData[carid][aArrest] == 1) SetVehicleVirtualWorld(aData[carid][aCarid], 10);
		cars++;
	}
	//CreateSpecialVehicles();
	return printf("[Загрузка MYSQL]: Личных авто загружено %i/%i", cars, MAX_VEHICLES);
}

stock SaveVehicle(carid)
{
	mysql_function(MySQLGo, 300, "UPDATE `vehicles` SET `Model`='%i',`PosX`='%f',`PosY`='%f',`PosZ`='%f',`PosA`='%f' WHERE `Key`='%i'", false, "", "", aData[carid][aModel], aData[carid][aPos][0], aData[carid][aPos][1], aData[carid][aPos][2], aData[carid][aPos][3], aData[carid][aKey]);
	mysql_function(MySQLGo, 300, "UPDATE `vehicles` SET `Color1`='%i',`Color2`='%i',`Owned`='%i',`Owner`='%s',`Price`='%i',`pj` = '%d' WHERE `Key`='%i'", false, "", "",aData[carid][aColor1], aData[carid][aColor2], aData[carid][aOwned], aData[carid][aOwner], aData[carid][aPrice],aData[carid][aPj],aData[carid][aKey]);
	mysql_function(MySQLGo, 300, "UPDATE `vehicles` SET `Lock`='%i',`Milleage`='%f',`Fuel`='%i',`Miglo`='%i' WHERE `Key`='%i'", false, "", "", aData[carid][aLock], aData[carid][aMilleage], aData[carid][aFuel], aData[carid][aMiglo], aData[carid][aKey]);
	mysql_function(MySQLGo, 300, "UPDATE `vehicles` SET `MigX`='%f',`MigY`='%f',`MigZ`='%f',`MigRX`='%f',`MigRY`='%f',`MigRZ`='%f' WHERE `Key`='%i'", false, "", "", aData[carid][aMigPos][0], aData[carid][aMigPos][1], aData[carid][aMigPos][2], aData[carid][aMigPos][3], aData[carid][aMigPos][4], aData[carid][aMigPos][5], aData[carid][aKey]);
	mysql_function(MySQLGo, 300, "UPDATE `vehicles` SET `Num`='%s',`Arrest`='%d',`PArrest`='%s',`PArrestName`='%s' WHERE `Key`='%i'", false, "", "",aData[carid][aNumber], aData[carid][aArrest], aData[carid][aPArrest], aData[carid][aPArrestName], aData[carid][aKey]);
	mysql_function(MySQLGo, 300, "UPDATE `vehicles` SET `Nitro`='%i',`Wheels`='%i',`Gydra`='%i',`Int`='%i',`World`='%i',`frak`='%i',`jobs`='%i' WHERE `Key`='%i'", false, "", "", aData[carid][aNitro], aData[carid][aWheels], aData[carid][aGydra], aData[carid][aInt], aData[carid][aWorld],aData[carid][aFrak],aData[carid][aJobs], aData[carid][aKey]);
	return 1;
}

publics: ChangeVehicleModel(carid, modelid)
{
	new Float:plocX,
Float:plocY,
Float:plocZ,
Float:plocA,
	idcar;
	GetVehiclePos(carid, plocX, plocY, plocZ);
	GetVehicleZAngle(carid, plocA);
	DestroyVehicle(carid);
	idcar = CreateVehicle(modelid, plocX, plocY, plocZ, plocA, 1,1, -1);
	return idcar;
}

stock CreateSpecialVehicles()
{
	evrik = AddStaticVehicleEx(525,-2364.1533,1906.0272,53.2018,344.2126,1,1,1800);  // ЭВИК ОДИН
	ChangeVehiclePaintjob( evrik, 0 );
	evrik = AddStaticVehicleEx(525,-2368.6604,1903.5411,53.2008,340.9504,1,1,1800); // ЭВИК ДВА
	ChangeVehiclePaintjob( evrik, 0 );
	evrik = AddStaticVehicleEx(525,-2373.5315,1900.4648,53.1968,339.5344,1,1,1800); // ЭВИК ТРИ
	ChangeVehiclePaintjob( evrik, 0 );

	gazel = AddStaticVehicleEx(599,-2371.2246,1920.2167,53.3805,210.2947,1,1,1800); //
	ChangeVehiclePaintjob( gazel, 1 );	

	dalnobt[0] = AddStaticVehicleEx(435,-907.4017,1229.3115,10.3832,180.8104,1,1,300);
	dalnobt[1] = AddStaticVehicleEx(435,-903.2951,1229.5057,10.3851,180.2654,1,1,300);
	dalnobt[2] = AddStaticVehicleEx(435,-899.2617,1229.5972,10.3829,180.8522,1,1,300);
	dalnobt[3] = AddStaticVehicleEx(435,-894.5076,1229.4806,10.3857,181.1354,1,1,300);
	dalnobt[4] = AddStaticVehicleEx(435,-889.9658,1229.5116,10.3890,182.4052,1,1,300);
	dalnobt[5] = AddStaticVehicleEx(435,-912.3121,1229.0680,10.3806,183.7948,1,1,300);
	
}

//==============================================================================

publics: agetipinfo(playerid, name[])
{
	new f,d, reg[16], last[16], msg[128];
	cache_get_data(f,d);
	if(f) {
		cache_get_field_content(0, "pRegIp", reg, MySQLGo, 16);
		cache_get_field_content(0, "pLastIp", last, MySQLGo, 16);
		format(msg, 128, "Игрок %s:", name);
		SendClientMessage(playerid, 0xFFFFFFFF, msg);
		format(msg, 128, "Регистрационный IP - %s", reg);
		SendClientMessage(playerid, 0xFFFFFFFF, msg);
		format(msg, 128, "Последний IP - %s", last);
		SendClientMessage(playerid, 0xFFFFFFFF, msg);
	} else SendClientMessage(playerid, 0xD900D3C8, "Данного игрока не существует.");
}
publics: agetfakeinfo(playerid, ip[])
{
	new f,d, last[16], name[32], msg[128];
	cache_get_data(f,d);
	if(f) {
		format(msg, 128, "IP INFO - %s:", ip);
		SendClientMessage(playerid, 0xD900D3C8, msg);
		for(new i = 0; i < f; i++) {
			cache_get_field_content(0, "pNickname", name, MySQLGo, 32);
			cache_get_field_content(0, "pLastIp", last, MySQLGo, 16);
			format(msg, 128, "%i. %s (L: %s)", i+1, name, last);
			SendClientMessage(playerid, 0xFFFFFFFF, msg);
		}
	} else SendClientMessage(playerid, 0xD900D3C8, "Данного IP не существует.");
}
publics: checkcarnumber(playerid, result[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new str[32];
		new giveplayer[32];
		new tmpp = playerid;
		GetPlayerName(tmpp, giveplayer, sizeof(giveplayer));
		new vehid = GetVehicleIdxByKey(PlayerInfo[tmpp][pCKey]);
		if(vehid == -1) return SCM(@p,-1,"На данную машину невозможно установить номер");
		format(aData[vehid][aNumber], 8, result);
		format(str, sizeof(str), "{ffffff}%s | {2E9AFE}52RUS", result);
		UpdateDynamic3DTextLabelText(aData[vehid][aNumPlate], COLOR_YELLOW, str);
		mysql_function(MySQLGo, 200, "UPDATE `vehicles` SET `Num` = '%s' WHERE `Owner` = '%s'", false, "", "", result, giveplayer);
		PlayerInfo[playerid][pDm] -= 450;
		return SendClientMessage(playerid, 0xFF0000FF, "Вы установили новые номера на автомобиль.");
	}
	else return SendClientMessage(playerid, 0xFF0000FF, "Данный номер автомобиля занят.");
}
publics: checkphonenumber(playerid, number, price)
{
	new f,d;
	cache_get_data(f,d);
	if(!f) {
		new giveplayer[32];
		new tmpp = playerid;
		GetPlayerName(tmpp, giveplayer, sizeof(giveplayer));
		PlayerInfo[tmpp][pPnumber]= number;
		mysql_function(MySQLGo,200,"UPDATE `accounts` SET `pPnumber` = %d WHERE `pNickname` = '%s'",false,"","", number,giveplayer);
		PlayerInfo[playerid][pDm] -= price;
		return SendClientMessage(playerid, 0xFF0000FF, "Вы установили новые номера для телефона.");
	} else return SendClientMessage(playerid, 0xFF0000FF, "Данный номер телефона занят.");
}
publics: unleaderplayer(playerid, tmp[])
{
	new f,d;
	cache_get_data(f,d);
	if(!f) return SendClientMessage(playerid, 0xFFa500AA, "Игрок не найден.");

	// New
	new leader = cache_get_field_content_int(0, "pLeader", MySQLGo);
	if(!leader) return 1;

	// Запрос
	new query[128];
	format(query, sizeof(query), "UPDATE `accounts` SET `pLeader` = '0' WHERE `pNickname` = '%s'", tmp);
	mysql_tquery(MySQLGo, query);

	// Mes
	format(format_string, 128, "Вы успешно сняли %s", tmp), SendClientMessage(playerid, COLOR_GRAD1, format_string);
	return true;
}
publics: offuninvite(playerid, tmp[])
{
	new rows, fields;
	cache_get_data(rows, fields, MySQLGo);
	if(!rows) return SendClientMessage(playerid, 0xFFa500AA, "Игрок с таким именем не найден в базе данных.");
	else
	{
		new string[128], rand = random(sizeof(CIV));
		new idplayer = cache_get_field_content_int(0, "id", MySQLGo);

		mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pLeader` = '0',`pMember` = '0',`pRank` = '0',`pChar` = '0' WHERE `id` = '%i'",false,"","", idplayer);
		mysql_function(MySQLGo,300,"UPDATE `accounts` SET `pDolj` = '0',`pUdost` = '0',`pUdost1` = '0',`pUdost2` = '0',`pModel` = '%i' WHERE `id` = '%i'",false,"","", CIV[rand], idplayer);

		//
		format(string, 128, "Вы выгнали{FF0000} %s{FFFFFF} из организации в оффлайн режиме",tmp), SendClientMessage(playerid,-1,string);
		format(string, 128, "Администратор %s уволил %s из организации в оффлайн режиме", NamePlayer[playerid], tmp), ABroadCast(COLOR_YELLOW,string,1);
	}
	return 1;
}
publics: unwarnplayer(playerid, tmp[])
{
	new f,d;
	cache_get_data(f,d);
	if(!f) return SendClientMessage(playerid, 0xFFa500AA, "Игрок не найден.");

	// Запрос
	new query[128];
	format(query, sizeof(query), "UPDATE `accounts` SET `pWarns` = '0' WHERE `pNickname` = '%s'", tmp);
	mysql_tquery(MySQLGo, query);

	// Сообщение
	format(format_string, 128, "Варны с %s сняты",tmp), SendClientMessage(playerid, COLOR_GRAD1, format_string);
	return true;
}
stock KickEx(playerid) return SetTimerEx("Kick_Server", 250, false, "d", playerid);
publics: Kick_Server(playerid) return Kick(playerid);

// GetSus System
publics: CheckGetSus(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, 0xbbbbbbAA, "Игрок не совершал ни одного преступления.");
	else if(rows)
	{
		format(format_string, 64, "Преступления игрока %s:", name), SendClientMessage(playerid, 0xbbbbbbAA, format_string);
		
		glob_str = "";
		for(new i = 0; i < rows; i++)
		{
			new reason[128], giveplayerget[32], data[20];
			cache_get_field_content(i, "Date", data, MySQLGo, 20);
			cache_get_field_content(i, "Reason", reason, MySQLGo, 128);
			cache_get_field_content(i, "GivePlayer", giveplayerget, MySQLGo, 32);

			format(glob_str, sizeof(glob_str), "{bbbbbb}%s. Причина: %s. Обвинитель: %s\n",data, reason, giveplayerget);
			SendClientMessage(playerid, 0xbbbbbbAA, glob_str);
			glob_str = "";
		}
	}
	return 1;
}

// Ban System
publics: IsPlayerOnBanList(playerid)
{

	static const str0[] = "SELECT * FROM `banlist` WHERE `ban_name` = '%s'";
	new str[sizeof(str0)+MAX_PLAYER_NAME];
	format(str,sizeof(str),str0,NamePlayer[playerid]);
	new Cache:p = mysql_query(MySQLGo,str);	
	new rows, fields;
	cache_get_data(rows, fields, MySQLGo);  
	if(rows)
	{
		cache_get_field_content(0, "admin_name_ban", ban_variable[playerid][bAdmin_Name], MySQLGo, MAX_PLAYER_NAME);
		cache_get_field_content(0, "ban_name", ban_variable[playerid][bBan_name], MySQLGo, MAX_PLAYER_NAME);
		cache_get_field_content(0, "reason", ban_variable[playerid][bBan_Reason], MySQLGo, 30);

		ban_variable[playerid][bBan_Date] = cache_get_field_content_int(0, "ban_date", ban_variable[playerid][bBan_Date]);
		ban_variable[playerid][bUnban_Date] = cache_get_field_content_int(0, "unbane_date", ban_variable[playerid][bUnban_Date]);

		if(ban_variable[playerid][bUnban_Date] > gettime())
		{
			new string[256];
			format(string, sizeof(string), "{ffffff}Этот аккаунт заблокирован на {FF8000}%i дней{ffffff}\n\n{ffffff}Ник администратора: %s\nПричина блокировки: %s\nДата и время: %s\n\nВведите {ffd200}/q (/quit){ffffff} чтобы выйти.", (floatround(ban_variable[playerid][bUnban_Date],floatround_ceil)-gettime())/86400, ban_variable[playerid][bAdmin_Name], ban_variable[playerid][bBan_Reason], date("%yyyy-%mm-%dd %hh:%mm:%ss",ban_variable[playerid][bBan_Date]));
			ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "{63cbff}Trusty RolePlay", string, "Закрыть", "");
			KickEx(playerid);
			cache_delete(p, MySQLGo);
			return 1;
		}
		else
		{
			mysql_format(MySQLGo, format_string, 70, "DELETE FROM `banlist` WHERE `ban_name` = '%s'", ban_variable[playerid][bBan_name]);
			mysql_function_query(MySQLGo, format_string, false, "", "");
			cache_delete(p, MySQLGo);
			return 0;

		}
	}
	return 0;
}
publics: CheckTicketsPlayer(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, 0xbbbbbbAA, "У игрока нету ни одного штрафа.");
	else
	{
		format(format_string, 64, "Штрафы игрока %s:", name), SendClientMessage(playerid, 0xbbbbbbAA, format_string);
		for(new i = 0; i < rows; i++)
		{
			//
			new id = cache_get_field_content_int(i, "ID"), money = cache_get_field_content_int(i, "MoneyPlayer"), randomshtraf[5], data[128], teststr[128], stringsr[1024];
			randomshtraf[0] = random(5), randomshtraf[1] = random(6), randomshtraf[2] = random(7), randomshtraf[3] = random(8), randomshtraf[4] = random(9);

			//
			cache_get_field_content(i, "Date", data, MySQLGo, 128);
			cache_get_field_content(i, "Reason", teststr, MySQLGo, 128);

			//
			stringsr = "";
			format(stringsr, sizeof(stringsr), "{bbbbbb}Штраф №%d%d%d%d%d%d [%s]. Сумма: %d руб. Причина: %s\n",randomshtraf[0],randomshtraf[1],randomshtraf[2],randomshtraf[3],randomshtraf[4], id, data, money, teststr), SendClientMessage(playerid, -1, stringsr);
		}
	}
	return 1;
}
publics: CheckTickets(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, 0xbbbbbbAA, "У вас нет штрафов.");
	else
	{
		SendClientMessage(playerid, 0xbbbbbbAA, "Все ваши штрафы:");
		for(new i = 0; i < rows; i++)
		{
			//
			new id = cache_get_field_content_int(i, "ID"), money = cache_get_field_content_int(i, "MoneyPlayer"), randomshtraf[5], data[128], reasonshtraf[128],strings[1024];
			randomshtraf[0] = random(5), randomshtraf[1] = random(6), randomshtraf[2] = random(7), randomshtraf[3] = random(8), randomshtraf[4] = random(9);

			//
			cache_get_field_content(i, "Date", data, MySQLGo, 128);
			cache_get_field_content(i, "Reason", reasonshtraf, MySQLGo, 128);

			//
			strings = "";
			format(strings, 1024, "{bbbbbb}Штраф №%d%d%d%d%d%d [%s]. Сумма: %d руб. Причина: %s\n",randomshtraf[0],randomshtraf[1],randomshtraf[2],randomshtraf[3],randomshtraf[4], id, data, money, reasonshtraf), SendClientMessage(playerid, -1, strings);
		}
	}
	return 1;
}
publics: oplatamoney(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, 0xbbbbbbAA, "У вас нет штрафов.");
	else
	{
		// Массивы
		new id = cache_get_field_content_int(0, "ID"), oplatamoneys = cache_get_field_content_int(0, "MoneyPlayer"), randomshtraf[5];
		randomshtraf[0] = random(5), randomshtraf[1] = random(6), randomshtraf[2] = random(7), randomshtraf[3] = random(8), randomshtraf[4] = random(9);

		// Забираем деньги
		PlayerInfo[playerid][pCash] -= oplatamoneys;
		GivePlayerMoney(playerid, -oplatamoneys);

		// Сообщение
		format_string = "";
		format(format_string, 128, "Вы оплатили штраф №%d%d%d%d%d%d в размере %d рублей.",  randomshtraf[0],randomshtraf[1],randomshtraf[2],randomshtraf[3],randomshtraf[4], id, oplatamoneys), SendClientMessage(playerid, -1, format_string);

		// Удаляем штраф
		format_string = "";
		mysql_format(MySQLGo, format_string, 128, "DELETE FROM `tickets` WHERE `ID` = '%i'", id), mysql_function_query(MySQLGo, format_string, false, "", "");

		// В банк ГИБДД
		FracBank[1] += oplatamoneys;
		SaveBank();
	}
	return 1;
}
stock LoadPlayerTextDraws(playerid)
{
	ptd_magskin[0][playerid] = CreatePlayerTextDraw(playerid, 330.000000, 368.977752, "‰E®A: 950");
	PlayerTextDrawLetterSize(playerid, ptd_magskin[0][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, ptd_magskin[0][playerid], 365.000000, 175.466720);
	PlayerTextDrawAlignment(playerid, ptd_magskin[0][playerid], 2);
	PlayerTextDrawColor(playerid, ptd_magskin[0][playerid], -1);
	PlayerTextDrawUseBox(playerid, ptd_magskin[0][playerid], true);
	PlayerTextDrawBoxColor(playerid, ptd_magskin[0][playerid], 117);
	PlayerTextDrawSetShadow(playerid, ptd_magskin[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ptd_magskin[0][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, ptd_magskin[0][playerid], 51);
	PlayerTextDrawFont(playerid, ptd_magskin[0][playerid], 2);
	PlayerTextDrawSetProportional(playerid, ptd_magskin[0][playerid], 1);

	ptd_magskin[1][playerid] = CreatePlayerTextDraw(playerid, 328.000000, 390.133331, "ID: 2");
	PlayerTextDrawLetterSize(playerid, ptd_magskin[1][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, ptd_magskin[1][playerid], 10.500000, 107.022247);
	PlayerTextDrawAlignment(playerid, ptd_magskin[1][playerid], 2);
	PlayerTextDrawColor(playerid, ptd_magskin[1][playerid], -1);
	PlayerTextDrawUseBox(playerid, ptd_magskin[1][playerid], true);
	PlayerTextDrawBoxColor(playerid, ptd_magskin[1][playerid], 117);
	PlayerTextDrawSetShadow(playerid, ptd_magskin[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ptd_magskin[1][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, ptd_magskin[1][playerid], 51);
	PlayerTextDrawFont(playerid, ptd_magskin[1][playerid], 2);
	PlayerTextDrawSetProportional(playerid, ptd_magskin[1][playerid], 1);
	
	ptd_as[0][playerid] = CreatePlayerTextDraw(playerid, 328.000000, 315.466674, "BA? 21099");
	PlayerTextDrawLetterSize(playerid, ptd_as[0][playerid], 0.516499, 2.371556);
	PlayerTextDrawAlignment(playerid, ptd_as[0][playerid], 2);
	PlayerTextDrawColor(playerid, ptd_as[0][playerid], -1);
	PlayerTextDrawSetShadow(playerid, ptd_as[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ptd_as[0][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, ptd_as[0][playerid], 51);
	PlayerTextDrawFont(playerid, ptd_as[0][playerid], 1);
	PlayerTextDrawSetProportional(playerid, ptd_as[0][playerid], 1);

	ptd_as[1][playerid] = CreatePlayerTextDraw(playerid, 328.000000, 384.911193, "50000P");
	PlayerTextDrawLetterSize(playerid, ptd_as[1][playerid], 0.516499, 2.371556);
	PlayerTextDrawAlignment(playerid, ptd_as[1][playerid], 2);
	PlayerTextDrawColor(playerid, ptd_as[1][playerid], -1);
	PlayerTextDrawSetShadow(playerid, ptd_as[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ptd_as[1][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, ptd_as[1][playerid], 51);
	PlayerTextDrawFont(playerid, ptd_as[1][playerid], 2);
	PlayerTextDrawSetProportional(playerid, ptd_as[1][playerid], 1);

	ptd_skin[0][playerid] = CreatePlayerTextDraw(playerid, 315.000000, 374.992919, "ID: 24");
	PlayerTextDrawLetterSize(playerid, ptd_skin[0][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, ptd_skin[0][playerid], 119.999931, 88.355529);
	PlayerTextDrawAlignment(playerid, ptd_skin[0][playerid], 2);
	PlayerTextDrawColor(playerid, ptd_skin[0][playerid], -1);
	PlayerTextDrawSetShadow(playerid, ptd_skin[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ptd_skin[0][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, ptd_skin[0][playerid], 51);
	PlayerTextDrawFont(playerid, ptd_skin[0][playerid], 2);
	PlayerTextDrawSetProportional(playerid, ptd_skin[0][playerid], 1);	

	ptd_skin[1][playerid] = CreatePlayerTextDraw(playerid, 326.000000, 395.318572, "ld_beat:circle");
	PlayerTextDrawLetterSize(playerid, ptd_skin[1][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, ptd_skin[1][playerid], 7.000000, 7.881493);
	PlayerTextDrawAlignment(playerid, ptd_skin[1][playerid], 1);
	PlayerTextDrawColor(playerid, ptd_skin[1][playerid], -1);
	PlayerTextDrawSetShadow(playerid, ptd_skin[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ptd_skin[1][playerid], 0);
	PlayerTextDrawFont(playerid, ptd_skin[1][playerid], 4);
	PlayerTextDrawSetSelectable(@p,ptd_skin[1][playerid],1);

	ptd_skin[2][playerid] = CreatePlayerTextDraw(playerid, 337.000000, 395.074157, "ld_beat:circle");
	PlayerTextDrawLetterSize(playerid, ptd_skin[2][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, ptd_skin[2][playerid], 7.000000, 7.881493);
	PlayerTextDrawAlignment(playerid, ptd_skin[2][playerid], 1);
	PlayerTextDrawColor(playerid, ptd_skin[2][playerid], -1);
	PlayerTextDrawSetShadow(playerid, ptd_skin[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ptd_skin[2][playerid], 0);
	PlayerTextDrawFont(playerid, ptd_skin[2][playerid], 4);
	PlayerTextDrawSetSelectable(@p,ptd_skin[2][playerid],1);
	
	ptd_skin[3][playerid] = CreatePlayerTextDraw(playerid, 293.000000, 396.074188, "ld_beat:circle");
	PlayerTextDrawLetterSize(playerid, ptd_skin[3][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, ptd_skin[3][playerid], 7.000000, 7.881493);
	PlayerTextDrawAlignment(playerid, ptd_skin[3][playerid], 1);
	PlayerTextDrawColor(playerid, ptd_skin[3][playerid], -1);
	PlayerTextDrawSetShadow(playerid, ptd_skin[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ptd_skin[3][playerid], 0);
	PlayerTextDrawFont(playerid, ptd_skin[3][playerid], 4);
	PlayerTextDrawSetSelectable(@p,ptd_skin[3][playerid],1);

	ptd_skin[4][playerid] = CreatePlayerTextDraw(playerid, 304.000000, 395.829742, "ld_beat:circle");
	PlayerTextDrawLetterSize(playerid, ptd_skin[4][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, ptd_skin[4][playerid], 7.000000, 7.881493);
	PlayerTextDrawAlignment(playerid, ptd_skin[4][playerid], 1);
	PlayerTextDrawColor(playerid, ptd_skin[4][playerid], -1);
	PlayerTextDrawSetShadow(playerid, ptd_skin[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ptd_skin[4][playerid], 0);
	PlayerTextDrawFont(playerid, ptd_skin[4][playerid], 4);
	PlayerTextDrawSetSelectable(@p,ptd_skin[4][playerid],1);

	ptd_skin[5][playerid] = CreatePlayerTextDraw(playerid, 282.000000, 395.755737, "ld_beat:circle");
	PlayerTextDrawLetterSize(playerid, ptd_skin[5][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, ptd_skin[5][playerid], 7.000000, 7.881493);
	PlayerTextDrawAlignment(playerid, ptd_skin[5][playerid], 1);
	PlayerTextDrawColor(playerid, ptd_skin[5][playerid], -1);
	PlayerTextDrawSetShadow(playerid, ptd_skin[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ptd_skin[5][playerid], 0);
	PlayerTextDrawFont(playerid, ptd_skin[5][playerid], 4);
	PlayerTextDrawSetSelectable(@p,ptd_skin[5][playerid],1);

	ptd_skin[6][playerid] = CreatePlayerTextDraw(playerid, 315.000000, 395.511169, "ld_beat:circle");
	PlayerTextDrawLetterSize(playerid, ptd_skin[6][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, ptd_skin[6][playerid], 7.000000, 7.881493);
	PlayerTextDrawAlignment(playerid, ptd_skin[6][playerid], 1);
	PlayerTextDrawColor(playerid, ptd_skin[6][playerid], -1);
	PlayerTextDrawSetShadow(playerid, ptd_skin[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ptd_skin[6][playerid], 0);
	PlayerTextDrawFont(playerid, ptd_skin[6][playerid], 4);
	PlayerTextDrawSetSelectable(@p,ptd_skin[6][playerid],1);
	
	taxi_info[@p] = CreatePlayerTextDraw(playerid, 480.000000, 289.955780, "?PO?E?:~g~ 89.9 ~w~KM~n~~n~?E®A: ~g~159  ~w~PY??E?");
	PlayerTextDrawLetterSize(playerid, taxi_info[@p], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, taxi_info[@p], 1);
	PlayerTextDrawColor(playerid, taxi_info[@p], -1);
	PlayerTextDrawSetShadow(playerid, taxi_info[@p], 0);
	PlayerTextDrawSetOutline(playerid, taxi_info[@p], 1);
	PlayerTextDrawBackgroundColor(playerid, taxi_info[@p], 51);
	PlayerTextDrawFont(playerid, taxi_info[@p], 3);
	PlayerTextDrawSetProportional(playerid, taxi_info[@p], 1);
	
	ptd_skin[7][playerid] = CreatePlayerTextDraw(playerid,315.000000, 410.007751, "B‘—PA¦’");
	PlayerTextDrawLetterSize(@p,ptd_skin[7][playerid], 0.375000, 1.600000);
	PlayerTextDrawTextSize(@p,ptd_skin[7][playerid], 119.999931, 88.355529);
	PlayerTextDrawAlignment(@p,ptd_skin[7][playerid], 2);
	PlayerTextDrawColor(@p,ptd_skin[7][playerid], -1);
	PlayerTextDrawUseBox(@p,ptd_skin[7][playerid], true);
	PlayerTextDrawBoxColor(@p,ptd_skin[7][playerid], 8388863);
	PlayerTextDrawSetShadow(@p,ptd_skin[7][playerid], 0);
	PlayerTextDrawSetOutline(@p,ptd_skin[7][playerid], 0);
	PlayerTextDrawBackgroundColor(@p,ptd_skin[7][playerid], 51);
	PlayerTextDrawFont(@p,ptd_skin[7][playerid], 2);
	PlayerTextDrawSetProportional(@p,ptd_skin[7][playerid], 1);
	PlayerTextDrawSetSelectable(@p,ptd_skin[7][playerid], true);
	// Speedometr
	/*speedometer[0][playerid] = CreatePlayerTextDraw(playerid,635.500000, 360.687500, "usebox");//темная рамка
	PlayerTextDrawLetterSize(playerid,speedometer[0][playerid], 0.000000, 7.266666);
	PlayerTextDrawTextSize(playerid,speedometer[0][playerid], 469.500000, 0.000000);
	PlayerTextDrawAlignment(playerid,speedometer[0][playerid], 1);
	PlayerTextDrawColor(playerid,speedometer[0][playerid], 0);
	PlayerTextDrawUseBox(playerid,speedometer[0][playerid], true);
	PlayerTextDrawBoxColor(playerid,speedometer[0][playerid], 102);
	PlayerTextDrawSetShadow(playerid,speedometer[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid,speedometer[0][playerid], 0);
	PlayerTextDrawFont(playerid,speedometer[0][playerid], 0);

	speedometer[1][playerid] = CreatePlayerTextDraw(playerid,480.000000, 363.125000, "CKOPOC¦’:");//скорость
	PlayerTextDrawLetterSize(playerid,speedometer[1][playerid], 0.336398, 1.547729);
	PlayerTextDrawAlignment(playerid,speedometer[1][playerid], 1);
	PlayerTextDrawColor(playerid,speedometer[1][playerid], -1);
	PlayerTextDrawSetShadow(playerid,speedometer[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid,speedometer[1][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,speedometer[1][playerid], 51);
	PlayerTextDrawFont(playerid,speedometer[1][playerid], 2);
	PlayerTextDrawSetProportional(playerid,speedometer[1][playerid], 1);

	speedometer[2][playerid] = CreatePlayerTextDraw(playerid,480.000000, 395.500000, "ЂE®€…®:");//бензин
	PlayerTextDrawLetterSize(playerid,speedometer[2][playerid], 0.336398, 1.547729);
	PlayerTextDrawAlignment(playerid,speedometer[2][playerid], 1);
	PlayerTextDrawColor(playerid,speedometer[2][playerid], -1);
	PlayerTextDrawSetShadow(playerid,speedometer[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid,speedometer[2][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,speedometer[2][playerid], 51);
	PlayerTextDrawFont(playerid,speedometer[2][playerid], 2);
	PlayerTextDrawSetProportional(playerid,speedometer[2][playerid], 1);    

	speedometer[3][playerid] = CreatePlayerTextDraw(playerid,480.000000, 410.625000, "ѓ‹…‚A¦E‡’");//двигатель
	PlayerTextDrawLetterSize(playerid,speedometer[3][playerid], 0.336398, 1.547729);
	PlayerTextDrawAlignment(playerid,speedometer[3][playerid], 1);
	PlayerTextDrawColor(playerid,speedometer[3][playerid], 16711935);
	PlayerTextDrawSetShadow(playerid,speedometer[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid,speedometer[3][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,speedometer[3][playerid], 51);
	PlayerTextDrawFont(playerid,speedometer[3][playerid], 2);
	PlayerTextDrawSetProportional(playerid,speedometer[3][playerid], 1);

	speedometer[4][playerid] = CreatePlayerTextDraw(playerid,577.500000, 410.625000, "K‡”Ќ");//ключ
	PlayerTextDrawLetterSize(playerid,speedometer[4][playerid], 0.336398, 1.547729);
	PlayerTextDrawAlignment(playerid,speedometer[4][playerid], 1);
	PlayerTextDrawColor(playerid,speedometer[4][playerid], -5963521);
	PlayerTextDrawSetShadow(playerid,speedometer[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid,speedometer[4][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,speedometer[4][playerid], 51);
	PlayerTextDrawFont(playerid,speedometer[4][playerid], 2);
	PlayerTextDrawSetProportional(playerid,speedometer[4][playerid], 1);
	
	speedometer[5][playerid] = CreatePlayerTextDraw(playerid, 480.000000, 380.687500, "ЈPOЂE‚:");//пробег
	PlayerTextDrawLetterSize(playerid, speedometer[5][playerid], 0.336398, 1.547729);
	PlayerTextDrawAlignment(playerid, speedometer[5][playerid], 1);
	PlayerTextDrawColor(playerid, speedometer[5][playerid], -1);
	PlayerTextDrawSetShadow(playerid, speedometer[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, speedometer[5][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, speedometer[5][playerid], 51);
	PlayerTextDrawFont(playerid, speedometer[5][playerid], 2);
	PlayerTextDrawSetProportional(playerid, speedometer[5][playerid], 1);*/
	speedometer[0][playerid]  = CreatePlayerTextDraw(playerid, 136.000000, 330.192657, "Mitsubishi Pajero");
	PlayerTextDrawLetterSize(playerid, speedometer[0][playerid] , 0.330000, 1.442370);
	PlayerTextDrawAlignment(playerid, speedometer[0][playerid] , 1);
	PlayerTextDrawColor(playerid, speedometer[0][playerid] , -1);
	PlayerTextDrawSetShadow(playerid, speedometer[0][playerid] , 0);
	PlayerTextDrawSetOutline(playerid, speedometer[0][playerid] , 1);
	PlayerTextDrawBackgroundColor(playerid, speedometer[0][playerid] , 51);
	PlayerTextDrawFont(playerid, speedometer[0][playerid] , 2);
	PlayerTextDrawSetProportional(playerid, speedometer[0][playerid] , 1);

	speedometer[1][playerid]  = CreatePlayerTextDraw(playerid, 203.333343, 349.029663, "~r~<          ~g~E  ~r~L  ~g~S           ~r~>");
	PlayerTextDrawLetterSize(playerid, speedometer[1][playerid] , 0.330000, 1.442370);
	PlayerTextDrawTextSize(playerid, speedometer[1][playerid] , 130.666641, 133.985214);
	PlayerTextDrawAlignment(playerid, speedometer[1][playerid] , 2);
	PlayerTextDrawColor(playerid, speedometer[1][playerid] , -1);
	PlayerTextDrawUseBox(playerid, speedometer[1][playerid] , true);
	PlayerTextDrawBoxColor(playerid, speedometer[1][playerid] , 100);
	PlayerTextDrawSetShadow(playerid, speedometer[1][playerid] , 0);
	PlayerTextDrawSetOutline(playerid, speedometer[1][playerid] , 1);
	PlayerTextDrawBackgroundColor(playerid, speedometer[1][playerid] , 51);
	PlayerTextDrawFont(playerid, speedometer[1][playerid] , 2);
	PlayerTextDrawSetProportional(playerid, speedometer[1][playerid] , 1);

	speedometer[2][playerid]  = CreatePlayerTextDraw(playerid, 136.000000, 364.962951, "~g~CKOPOCВЏВ’: ~w~100 KM/ВЌ~n~~g~ВЏOВЊВ‡В…В‹O: ~w~100 В‡~n~~g~ВЊPOВЂEВ‚: ~w~10000 KM");
	PlayerTextDrawLetterSize(playerid, speedometer[2][playerid] , 0.330000, 1.442370);
	PlayerTextDrawAlignment(playerid, speedometer[2][playerid] , 1);
	PlayerTextDrawColor(playerid, speedometer[2][playerid] , -1);
	PlayerTextDrawSetShadow(playerid, speedometer[2][playerid] , 0);
	PlayerTextDrawSetOutline(playerid, speedometer[2][playerid] , -1);
	PlayerTextDrawBackgroundColor(playerid, speedometer[2][playerid] , 51);
	PlayerTextDrawFont(playerid, speedometer[2][playerid] , 2);
	PlayerTextDrawSetProportional(playerid, speedometer[2][playerid] , 1);

	speedometer[3][playerid]  = CreatePlayerTextDraw(playerid, 214.000030, 338.488769, "-");
	PlayerTextDrawLetterSize(playerid, speedometer[3][playerid] , 16.500000, 1.500000);
	PlayerTextDrawAlignment(playerid, speedometer[3][playerid] , 2);
	PlayerTextDrawColor(playerid, speedometer[3][playerid] , -1);
	PlayerTextDrawSetShadow(playerid, speedometer[3][playerid] , 0);
	PlayerTextDrawSetOutline(playerid, speedometer[3][playerid] , -1);
	PlayerTextDrawBackgroundColor(playerid, speedometer[3][playerid] , 51);
	PlayerTextDrawFont(playerid, speedometer[3][playerid] , 0);
	PlayerTextDrawSetProportional(playerid, speedometer[3][playerid] , 1);
	// hospital
	BolTime1[playerid] = CreatePlayerTextDraw(playerid, 320.0, 240.0, RusToGame("До выписки Вам остается 300 секунд."));
	PlayerTextDrawBackgroundColor(playerid,BolTime1[playerid], 65535);
	PlayerTextDrawFont(playerid, BolTime1[playerid], 1);
	PlayerTextDrawLetterSize(playerid, BolTime1[playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, BolTime1[playerid], 16777215);
	PlayerTextDrawSetOutline(playerid, BolTime1[playerid], 1);
	PlayerTextDrawSetProportional(playerid, BolTime1[playerid], 1);
	BolTime2[playerid] = CreatePlayerTextDraw(playerid, 320.0, 240.0, RusToGame("До выписки Вам остается 150 секунд."));
	PlayerTextDrawBackgroundColor(playerid, BolTime2[playerid], 65535);
	PlayerTextDrawFont(playerid, BolTime2[playerid], 1);
	PlayerTextDrawLetterSize(playerid, BolTime2[playerid], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, BolTime2[playerid], 16777215);
	PlayerTextDrawSetOutline(playerid, BolTime2[playerid], 1);
	PlayerTextDrawSetProportional(playerid, BolTime2[playerid], 1);
}
stock RemoveBulding(playerid)
{
	RemoveBuildingForPlayer(playerid, 1350, 316.0980, 1672.4700, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 345.1300, 1663.1899, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 356.8830, 1688.6500, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, -2623.5200, 2187.8101, 51.9950, 0.25);
	RemoveBuildingForPlayer(playerid, 3277, -2623.5200, 2187.8101, 51.9950, 0.25);
	RemoveBuildingForPlayer(playerid, 4002, -44.6802, 898.8260, 11.0010, 0.25);
	RemoveBuildingForPlayer(playerid, 4010, -44.6802, 898.8260, 11.0010, 0.25);
	RemoveBuildingForPlayer(playerid, 4266, -34.4896, 940.4640, 0.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4270, -34.4896, 940.4640, 0.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4267, -34.4896, 940.4640, 0.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4271, -34.4896, 940.4640, 0.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4338, 391.2680, 704.2420, 13.8200, 0.25);
	RemoveBuildingForPlayer(playerid, 4352, 391.2680, 704.2420, 13.8200, 0.25);
	RemoveBuildingForPlayer(playerid, 4342, 413.1420, 752.0520, 17.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 4356, 413.1420, 752.0520, 17.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 4346, 442.4220, 682.3600, 14.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 4360, 442.4220, 682.3600, 14.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 4101, 784.4700, 757.4980, 12.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, -266.0830, 931.4870, 11.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 385.7330, 1015.8100, 10.7586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 413.2990, 1045.9399, 10.7586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 408.2280, 1034.7400, 10.7586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 761.5350, 753.1930, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 758.9220, 745.2600, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 753.9760, 753.7530, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 4394, 346.1380, 988.6550, 17.0756, 0.25);
	RemoveBuildingForPlayer(playerid, 4398, 752.9900, 751.5360, 15.9756, 0.25);
	RemoveBuildingForPlayer(playerid, 4398, 756.2650, 740.1460, 15.9756, 0.25);
	RemoveBuildingForPlayer(playerid, 4398, 300.7820, 1057.9000, 15.6800, 0.25);
	RemoveBuildingForPlayer(playerid, 4433, 487.5740, 668.0310, 17.7900, 0.25);
	RemoveBuildingForPlayer(playerid, 4444, 487.5740, 668.0310, 17.7900, 0.25);
	RemoveBuildingForPlayer(playerid, 4434, 477.3620, 674.0050, 17.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 4445, 477.3620, 674.0050, 17.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 4435, 507.4540, 665.0840, 13.2800, 0.25);
	RemoveBuildingForPlayer(playerid, 4446, 507.4540, 665.0840, 13.2800, 0.25);
	RemoveBuildingForPlayer(playerid, 4442, 362.0260, 812.1090, 12.5400, 0.25);
	RemoveBuildingForPlayer(playerid, 4447, 362.0260, 812.1090, 12.5400, 0.25);
	RemoveBuildingForPlayer(playerid, 4550, -14.7929, 932.5200, 16.8790, 0.25);
	RemoveBuildingForPlayer(playerid, 4551, -14.7929, 932.5200, 16.8790, 0.25);
	RemoveBuildingForPlayer(playerid, 4585, 80.7600, 412.5160, 8.9700, 0.25);
	RemoveBuildingForPlayer(playerid, 4586, 215.6800, 419.5790, 12.0600, 0.25);
	RemoveBuildingForPlayer(playerid, 4591, 212.2400, 427.0510, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4592, 202.8200, 392.6640, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4368, 786.7490, 810.3740, 11.2050, 0.25);
	RemoveBuildingForPlayer(playerid, 4416, 17.2800, 856.9230, 15.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 4417, 6.5991, 860.9750, 15.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 4635, 132.0850, 449.5060, 9.8570, 0.25);
	RemoveBuildingForPlayer(playerid, 4636, 133.6660, 452.0860, 9.8570, 0.25);
	RemoveBuildingForPlayer(playerid, 3297, -2602.9900, 2803.2600, 36.6686, 0.25);
	RemoveBuildingForPlayer(playerid, 3298, -2602.9900, 2803.2600, 36.6686, 0.25);
	RemoveBuildingForPlayer(playerid, 3299, -2602.9900, 2803.2600, 36.6686, 0.25);
	RemoveBuildingForPlayer(playerid, 846, -2593.1499, 2968.1899, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 837, -2595.9299, 2966.9299, 36.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 846, -2603.2200, 2968.0901, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 846, -2613.1299, 2968.1201, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 846, -2623.1699, 2968.2100, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 846, -2632.9800, 2968.1899, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 846, -2643.0100, 2968.2700, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 846, -2653.2100, 2968.2100, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 846, -2663.2500, 2968.0801, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 846, -2668.2500, 2968.1001, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2593.9099, 2969.1499, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2596.3701, 2967.7600, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2600.1001, 2968.7300, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2602.8999, 2967.7500, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2606.4800, 2968.6299, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2609.6299, 2967.8701, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2612.6699, 2968.8601, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2615.2600, 2967.9099, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2617.6899, 2968.8101, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2619.8501, 2967.8501, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2622.6599, 2968.9299, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2625.4199, 2967.6799, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2628.4299, 2968.9600, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2631.2100, 2967.7100, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2666.1399, 2967.8101, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2663.3000, 2968.9700, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2660.9299, 2967.5100, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2658.0000, 2969.0300, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2655.5100, 2967.9299, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2652.1899, 2968.9099, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2649.5801, 2967.7000, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2646.4500, 2968.7000, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2643.8501, 2967.4700, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2640.2300, 2968.8101, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2638.1001, 2967.7000, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2635.3301, 2969.4399, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 615, -2633.3000, 2967.4800, 36.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 5547, -526.5100, -1630.5900, 39.8927, 0.25);
	RemoveBuildingForPlayer(playerid, 5548, -526.5100, -1630.5900, 39.8927, 0.25);
	RemoveBuildingForPlayer(playerid, 1785, 184.7270, 400.0710, 10.0200, 0.25);
	RemoveBuildingForPlayer(playerid, 1785, 170.2520, 388.7350, 11.9600, 0.25);
	RemoveBuildingForPlayer(playerid, 1785, 169.0490, 395.5200, 16.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1785, 172.8960, 403.5160, 21.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1785, 151.1220, 410.9930, 9.5800, 0.25);
	RemoveBuildingForPlayer(playerid, 1503, 182.7810, 403.1050, 26.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 1503, 166.4060, 409.4370, 26.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 1503, 143.2740, 401.8980, 9.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 309.0820, 1493.7200, 10.5160, 0.25);
	RemoveBuildingForPlayer(playerid, 4100, 166.2410, 1471.4600, 15.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 316.0980, 1672.4700, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 345.1300, 1663.1899, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 356.8830, 1688.6500, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 329.0880, 1697.9200, 11.0000, 0.25);
	//СТО Арзамас выше
	RemoveBuildingForPlayer(playerid, 8730, -2230.2800, -200.5840, 23.5601, 0.25);
	RemoveBuildingForPlayer(playerid, 8751, -2230.2800, -200.5840, 23.5601, 0.25);
	RemoveBuildingForPlayer(playerid, 8640, -2173.0701, -124.0870, 25.3851, 0.25);
	RemoveBuildingForPlayer(playerid, 8642, -2184.8701, -98.2368, 25.3851, 0.25);
	RemoveBuildingForPlayer(playerid, 8644, -2152.5000, -93.2991, 26.3811, 0.25);
	RemoveBuildingForPlayer(playerid, 8646, -2198.4099, -123.4640, 25.3851, 0.25);
	RemoveBuildingForPlayer(playerid, 4100, -2258.4500, 303.3380, 27.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 4100, -2275.0701, 308.9800, 27.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 4100, -2291.9099, 314.7690, 27.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 4100, -2096.3999, -24.9686, 30.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 636, -2090.2000, -72.0023, 25.2657, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, -2333.7300, -92.7544, 23.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, -2326.3201, 1.6655, 23.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, -2390.4600, 46.9794, 21.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, -2449.5601, 65.1315, 21.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, -2544.4399, 147.2290, 18.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 8701, -2343.9700, 64.7576, 21.9156, 0.25);
	RemoveBuildingForPlayer(playerid, 8718, -2347.6899, 67.6659, 22.0371, 0.25);
	RemoveBuildingForPlayer(playerid, 8717, -2340.7000, 61.9631, 22.0371, 0.25);
	RemoveBuildingForPlayer(playerid, 3604, -2054.2700, -70.1949, 30.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 3604, -2166.2000, 218.9420, 28.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 3441, 1800.2200, 2101.8899, 14.5320, 0.25);
}
stock LoadOther(playerid)
{
	// Ставим игроку время
	new hour, minute; gettime(hour, minute); if(!uptime) SetPlayerTime(playerid,hour,minute);

	// Показываем текстдравы
	TextDrawShowForPlayer(playerid, Eternity[0]),TextDrawShowForPlayer(playerid, Eternity[1]), TextDrawShowForPlayer(playerid, Polosa[0]), TextDrawShowForPlayer(playerid, Polosa[1]);

	// Игрок присоединился
	// Прибавляем игроков
	new players = 0;
	for(new i =0; i < GetMaxPlayers();i++)
	{
		if(!IsPlayerConnected(i)) continue;
		players++;
	}
	SendClientMessage(playerid,0x01010101, "$cmd get_custom_hash");
	for(new i; i < 50; i++) SendClientMessage(playerid, COLOR_WHITE," ");
}

stock DataDefault(playerid)
{
	PlayerInfo[playerid][pID] = 0;
	PlayerInfo[playerid][pRent][0] = 0;
	PlayerInfo[playerid][pRent][1] = 0;
	PlayerInfo[playerid][pStatus] = 0;	
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pBizAcc] = 0;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pCash] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pDm] = 0;
	PlayerInfo[playerid][pPasport] = 0;
	PlayerInfo[playerid][pChar] = 0;
	PlayerInfo[playerid][pModel] = 0;
	PlayerInfo[playerid][pPnumber] = 0;
	PlayerInfo[playerid][pAccount] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pLarek] = 0;
	PlayerInfo[playerid][pCasino] = 0;
	PlayerInfo[playerid][pAtm] = 0;
	PlayerInfo[playerid][pVoennik] = 0;
	PlayerInfo[playerid][pMK] = 0;
	PlayerInfo[playerid][pDm] = 0;
	PlayerInfo[playerid][pWantedPoints] = 0;
	PlayerInfo[playerid][pHelper] = 0;
	PlayerInfo[playerid][pUvp] = 0;
	PlayerInfo[playerid][pForce] = 0;
	PlayerInfo[playerid][pDonateRank] = 0;
	PlayerInfo[playerid][gPupgrade] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pOrigin] = 0;
	PlayerInfo[playerid][pNotLic] = 0;
	PlayerInfo[playerid][pLangEng] = 0;
	PlayerInfo[playerid][pLangJap] = 0;
	PlayerInfo[playerid][pLangIta] = 0;
	PlayerInfo[playerid][pLangRus] = 0;
	PlayerInfo[playerid][pLangFra] = 0;
	PlayerInfo[playerid][pNarcoZavisimost] = 0;
	PlayerInfo[playerid][pAlcoZavisimost] = 0;
	PlayerInfo[playerid][pNarcoLomka] = 0;
	PlayerInfo[playerid][pAlcoLomka] = 0;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pCarLic5] = 0;
	PlayerInfo[playerid][pCarLic1] = 0;
	PlayerInfo[playerid][pMuted] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pOtkRabota1] = 0;
	PlayerInfo[playerid][pOtkRabota2] = 0;
	PlayerInfo[playerid][pOtkRabota3] = 0;
	PlayerInfo[playerid][pOtkRabota7] = 0;
	PlayerInfo[playerid][pOtkRabota8] = 0;
	PlayerInfo[playerid][pOtkRabota12] = 0;
	PlayerInfo[playerid][pOtkRabota14] = 0;
	PlayerInfo[playerid][pOtkRabota15] = 0;
	PlayerInfo[playerid][pOtkRabota16] = 0;
	PlayerInfo[playerid][pOtkRabota22] = 0;
	PlayerInfo[playerid][pOtkRabota24] = 0;
	PlayerInfo[playerid][pCrimes] = 0;
	PlayerInfo[playerid][pKills] = 0;
	PlayerInfo[playerid][pKatA] = 0;
	PlayerInfo[playerid][pKatB] = 0;
	PlayerInfo[playerid][pKatC] = 0;
	PlayerInfo[playerid][pKatD] = 0;
	PlayerInfo[playerid][pKategA] = 0;
	PlayerInfo[playerid][pKategB] = 0;
	PlayerInfo[playerid][pKategC] = 0;
	PlayerInfo[playerid][pKategD] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pArrested] = 0;
	PlayerInfo[playerid][pWantedDeaths] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pLottoNr] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pPayCheck] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pLeader] = 0;
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pDolj] = 0;
	PlayerInfo[playerid][pContractTime] = 0;
	PlayerInfo[playerid][pDetSkill] = 0;

	PlayerInfo[playerid][pPbiskey] = 0;
	PlayerInfo[playerid][pNewsSkill] = 0;
	PlayerInfo[playerid][pDrugsSkill] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pCarTime] = 0;
	PlayerInfo[playerid][pPayDay] = 0;
	PlayerInfo[playerid][pPayDayHad] = 0;
	PlayerInfo[playerid][pCDPlayer] = 0;
	PlayerInfo[playerid][pWins] = 0;
	PlayerInfo[playerid][pLoses] = 0;
	PlayerInfo[playerid][pAlcoholPerk] = 0;
	PlayerInfo[playerid][pDrugPerk] = 0;
	PlayerInfo[playerid][pMiserPerk] = 0;
	PlayerInfo[playerid][pPainPerk] = 0;
	PlayerInfo[playerid][pTraderPerk] = 0;
	PlayerInfo[playerid][pMissionNr] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pAdjustable] = 0;
	PlayerInfo[playerid][pFuel] = 0;
	PlayerInfo[playerid][pMarried] = 0;
	PlayerInfo[playerid][pTA] = 0;
	PlayerInfo[playerid][pRPD] = 0;
	PlayerInfo[playerid][pCard] = 0;
	PlayerInfo[playerid][pClock] = 0;
	PlayerInfo[playerid][pGunSkill] = 0;
	PlayerInfo[playerid][pMutedTime] = 0;
	PlayerInfo[playerid][pRabotalLopatoy] = 0;
	PlayerInfo[playerid][pZoloto] = 0;
	PlayerInfo[playerid][pRadio] = 0;
	PlayerInfo[playerid][pRope] = 0;
	PlayerInfo[playerid][pNeSdal] = 0;
	PlayerInfo[playerid][pFWarns] = 0;
	PlayerInfo[playerid][pRoliki] = 0;
	PlayerInfo[playerid][pSigs] = 0;
	PlayerInfo[playerid][pCKey] = 0;
	PlayerInfo[playerid][pSpawnP] = 0;
	PlayerInfo[playerid][pNewHouse] = 0;
	PlayerInfo[playerid][pRentHouse] = 0;
	PlayerInfo[playerid][pSatiety] = 0;
	HospitalTime[playerid] = 0;	
	//
	SetPVarInt(playerid,"Myrka",0);
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pLeader] = 0;
	PlayerInfo[playerid][pHelper] = 0;
	//
	format(PlayerInfo[playerid][pCarLic2],256,"");
	format(PlayerInfo[playerid][pCarLic21],256,"");
	format(PlayerInfo[playerid][pCarLic3],256,"");
	format(PlayerInfo[playerid][pUdost1],256,"");
	format(PlayerInfo[playerid][pUdost2],256,"");
	format(PlayerInfo[playerid][pCarLic4],256,"");
	format(PlayerInfo[playerid][pMK2],256,"");
	format(PlayerInfo[playerid][pMK3],256,"");
	format(PlayerInfo[playerid][pMK4],500,"");
	//
	PlayerTextFormat[playerid][0] = 0;
	PlayerTextFormat[playerid][1] = 0;
	pizzadone[playerid] = 1;
	HospitalTime[playerid] = 0;
	PlayerAFKtime[playerid] = 0;
	PlayerInfo[playerid][pCarLic] = 0,PlayerInfo[playerid][pKatA] = 0,PlayerInfo[playerid][pKatB] = 0,PlayerInfo[playerid][pKatC] = 0;
	PlayerInfo[playerid][pKatD] = 0,numplayers++,PlayerInfo[playerid][pKategA] = 0,PlayerInfo[playerid][pKategB] = 0;
	PlayerInfo[playerid][pKategC] = 0,PlayerInfo[playerid][pKategD] = 0,PlayerInfo[playerid][pUdost] = 0;
	PlayerInfo[playerid][pCarLic1] = 0,acceptedpizza[playerid] = false,PlayerInfo[playerid][pCarLic5] = 0;
	
	SelectChar[playerid] = 0,HidePM[playerid] = 0,HideTP[playerid] = 0,PhoneOnline[playerid] = 0;
	OnWeapon[playerid] = 0,SelectCharID[playerid] = 0,SelectCharPlace[playerid] = 0,ChosenSkin[playerid] = 0;
	GettingJob[playerid] = 0,CallLawyer[playerid] = 0;
	WantLawyer[playerid] = 0,UsedFind[playerid] = 0;
	CP[playerid] = 0; MoneyMessage[playerid] = 0;
	RepairOffer[playerid] = 999;	RepairPrice[playerid] = 0,RepairCar[playerid] = 0,TalkingLive[playerid] = 255;
	LiveOffer[playerid] = 999,TakingLesson[playerid] = 0;
	RefillOffer[playerid] = 999,RefillPrice[playerid] = 0,DrugOffer[playerid] = 999,PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0,DrugPrice[playerid] = 0,
	DrugGram[playerid] = 0,MedicBill[playerid] = 0,WantedPoints[playerid] = 0,
	WantedLevel[playerid] = 0;
	SafeTime[playerid] = 60,PlayerTied[playerid] = 0;
	FindTimePoints[playerid] = 0;
	FindTime[playerid] = 0,Mobile[playerid] = 255;
	Spectate[playerid] = 255,PlayerDrunk[playerid] = 0,PlayerDrunkTime[playerid] = 0,Unspec[playerid][sLocal] = 255;
	
	ConsumingMoney[playerid] = 0,gLastCar[playerid] = 0,gOoc[playerid] = 0,gNews[playerid] = 0,BigEar[playerid] = 0,gDice[playerid] = 0,gFam[playerid] = 0,gSpeedo[playerid] = 1,gGas[playerid] = 1,
	gPlayerLogged[playerid] = 0;
	PlayerTazeTime[playerid] = 0,PlayerStoned[playerid] = 0;

	//
	StartTime[playerid] = 0,TicketOffer[playerid] = 999,TicketMoney[playerid] = 0,TicketOffer1[playerid] = 999,TicketMoney1[playerid] = 0,TicketOffer2[playerid] = 999,TicketMoney2[playerid] = 0,MatsHolding[playerid] = 0,TutTime[playerid] = 0,
	gPlayerMission[playerid] = 0,NoFuel[playerid] = 0,PlayersChannel[playerid] = 999,WatchingTV[playerid] = 0,PlayerPaintballing[playerid] = 0,PlayerPaintballKills[playerid] = 0,
	TransportValue[playerid] = 0,TransportMoney[playerid] = 0,TransportTime[playerid] = 0,TransportCost[playerid] = 0,TransportDriver[playerid] = 999,Locator[playerid] = 0,PlayerOnMission[playerid] = 0,MissionCheckpoint[playerid] = 0,KnockedDown[playerid] = 0,
	FarmerVar[playerid] = 0,FarmerPickup[playerid][0] = 0,PlayerIsSweeping[playerid] = 0,ChangeOffer[playerid] = 999,ChangeCost[playerid] = 0,ChangeNumber[playerid] = 0,
	ProposeOffer[playerid] = 999,MarryWitness[playerid] = 999,MarryWitnessOffer[playerid] = 999,MarriageCeremoney[playerid] = 0,ProposedTo[playerid] = 999,GotProposedBy[playerid] = 999,DivorceOffer[playerid] = 999,
	UsingDrugs[playerid] = 0,GunOffer[playerid] = 999,GunDPrice[playerid] = 0,GunType[playerid] = 0,GunAmmo[playerid] = 0,MinetOffer[playerid] = 0,MinetPrice[playerid] = 0,PlayerInfo[playerid][pRabotalLopatoy] = 0,
	PlayerInfo[playerid][pLangEng] = 0,PlayerInfo[playerid][pLangJap] = 0,PlayerInfo[playerid][pLangIta] = 0,PlayerInfo[playerid][pLangRus] = 0,
	PlayerInfo[playerid][pLangFra] = 0,PlayerInfo[playerid][pAlcoLomka] = 0,PlayerInfo[playerid][pNarcoLomka] = 0,PlayerInfo[playerid][pAlcoZavisimost] = 0,PlayerInfo[playerid][pNarcoZavisimost] = 0,PlayerLomkaTime[playerid] = 0,PlayerMayNarco[playerid] = 0,
	PlayerInfo[playerid][pOtkRabota1] = 0,PlayerInfo[playerid][pOtkRabota2] = 0,PlayerInfo[playerid][pOtkRabota3] = 0,PlayerInfo[playerid][pOtkRabota7] = 0,PlayerInfo[playerid][pOtkRabota8] = 0,PlayerInfo[playerid][pOtkRabota12] = 0,PlayerInfo[playerid][pOtkRabota14] = 0,PlayerInfo[playerid][pOtkRabota15] = 0,
	PlayerInfo[playerid][pOtkRabota16] = 0,PlayerInfo[playerid][pOtkRabota22] = 0,PlayerInfo[playerid][pOtkRabota24] = 0,PlayerInfo[playerid][pPbiskey] = 255,PlayerInfo[playerid][pRPD] = 0,OtherLang[playerid]=0,
	PolisMoney[playerid] = 0,pInvite[playerid] = 999,JustReported[playerid] = 0,JustShout[playerid] = 0,JustAdm[playerid] = 0,bezopas[playerid] = 0,
	postradal[playerid]=0,DalOnReis[playerid]=0,onbusreis[playerid]=0,nowpoint[playerid]=0,summaperevod[playerid]=0,idperevod[playerid]=-1,PlayerInfo[playerid][pTA] = 250,PlayerInfo[playerid][pAdmin] = 0,PlayerInfo[playerid][pVoennik] = 0,
	PlayerInfo[playerid][pMK] = 0,PlayerInfo[playerid][pDm] = 0,PlayerInfo[playerid][pHelper] = 0,PlayerInfo[playerid][pUvp] = 0,PlayerInfo[playerid][pDonateRank] = 0,PlayerInfo[playerid][gPupgrade] = 0,PlayerInfo[playerid][pConnectTime] = 0,PlayerInfo[playerid][pReg] = 0,PlayerInfo[playerid][pSex] = 0,
	PlayerInfo[playerid][pOrigin] = 0,PlayerInfo[playerid][pNotLic] = 0,PlayerInfo[playerid][pExp] = 0,PlayerInfo[playerid][pAccount] = 500,PlayerInfo[playerid][pClock] = 0,PlayerInfo[playerid][pCrimes] = 0,PlayerInfo[playerid][pDeaths] = 0,PlayerInfo[playerid][pArrested] = 0,
	PlayerInfo[playerid][pWantedDeaths] = 0,PlayerInfo[playerid][pPhoneBook] = 0,PlayerInfo[playerid][pLottoNr] = 0,PlayerInfo[playerid][pJob] = 0,PlayerInfo[playerid][pPayCheck] = 0,PlayerInfo[playerid][pHeadValue] = 0;

	//
	PlayerInfo[playerid][pJailed] = 0,PlayerInfo[playerid][pJailTime] = 0,PlayerInfo[playerid][pMats] = 0,PlayerInfo[playerid][pDrugs] = 0,PlayerInfo[playerid][pLeader] = 0,PlayerInfo[playerid][pMember] = 0,
	PlayerInfo[playerid][pRank] = 0,PlayerInfo[playerid][pDolj] = 0,PlayerInfo[playerid][pChar] = 0,PlayerInfo[playerid][pContractTime] = 0,PlayerInfo[playerid][pDetSkill] = 0,PlayerInfo[playerid][pGunSkill] = 0,
	PlayerInfo[playerid][pNewsSkill] = 0,PlayerInfo[playerid][pDrugsSkill] = 0,
	PlayerInfo[playerid][pSHealth] = 0.0,PlayerInfo[playerid][pHealth] = 100.0, HealthTime[playerid] = 0,PlayerInfo[playerid][pForce] = 0,HouseEntered[playerid] = 255,
	PlayerInfo[playerid][pPos_x] = 2549.6240,PlayerInfo[playerid][pPos_y] = -2200.1057,PlayerInfo[playerid][pPos_z] = 21.9618,PlayerInfo[playerid][pVirWorld] = 0,PlayerInfo[playerid][pInt] = 15,PlayerInfo[playerid][pLocal] = 255,
	PlayerInfo[playerid][pModel] = 79,PlayerInfo[playerid][pPnumber] = 0,PlayerInfo[playerid][pCarLic] = 0,PlayerInfo[playerid][pFlyLic] = 0,PlayerInfo[playerid][pGunLic] = 0,PlayerInfo[playerid][pCarTime] = 0,PlayerInfo[playerid][pPayDay] = 0,
	PlayerInfo[playerid][pPayDayHad] = 0,PlayerInfo[playerid][pCKey] = 0, PlayerInfo[playerid][pNewHouse] = 0,PlayerInfo[playerid][pRentHouse] = 0,PlayerInfo[playerid][pRoadblock] = 0,
	PlayerInfo[playerid][pMiserPerk] = 0,PlayerInfo[playerid][pPainPerk] = 0,PlayerInfo[playerid][pTraderPerk] = 0,PlayerInfo[playerid][pTut] = 0,PlayerInfo[playerid][pMissionNr] = 0,PlayerInfo[playerid][pWarns] = 0,PlayerInfo[playerid][pFuel] = 0,
	PlayerInfo[playerid][pAdjustable] = 0,PlayerInfo[playerid][pVirtualWorld] = 0, PlayerInfo[playerid][pCDPlayer] = 0,PlayerInfo[playerid][pWins] = 0,PlayerInfo[playerid][pLoses] = 0,PlayerInfo[playerid][pAlcoholPerk] = 0,PlayerInfo[playerid][pDrugPerk] = 0,
	PlayerMayAlco[playerid] = 0,uTarget[playerid] = 999,tietime[playerid] = 0,PlayerInfo[playerid][pRequestingBackup] = 0,PlayerInfo[playerid][pMutedTime] = 0,PlayerInfo[playerid][pCard] = 0,PlayerDobuvaet[playerid] = 0,PlayerInfo[playerid][pZoloto] = 0,
	PlayerInfo[playerid][pRadio] = 0,PlayerInfo[playerid][pPasport] = 0, BeretPassport[playerid] = 0,PyxiTime[playerid] = 0,PlayerInfo[playerid][pRope] = 0,PlayerInfo[playerid][pNeSdal] = 0, PlayerInfo[playerid][pFWarns] = 0,
	DrivingTest[playerid] = 0,PlayerInfo[playerid][pMask] = 0,PlayerInfo[playerid][pRoliki] = 0,PlayerVRolikax[playerid] = 0,TryChat[playerid] = 0,PlayerInfo[playerid][pSigs] = 0,GopUSE[playerid] = 0,PlayerFoodSlot[playerid] = 0;

	//
	ClearCrime(playerid); ClearMarriage(playerid);
	GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]); SetPlayerColor(playerid,0xffffff00);
}
stock updatekvar(i)
{
	new textt[156],query[900];
	format(query,sizeof(query),"UPDATE `flat` SET `vladelec` = '%s',`lock` = '%i',`plata` = '%i',`kworld` = '%i',`virtmir` = '%i',`pXpic` = '%f',`pYpic` = '%f',`pZpic` = '%f',`cena` = '%i',`lvl` = '%i'  WHERE `kid` = '%i'",FlatInfo[i][vladelec],
	FlatInfo[i][lock],FlatInfo[i][plata],FlatInfo[i][kworld],FlatInfo[i][virtmir],FlatInfo[i][pXpic],FlatInfo[i][pYpic],FlatInfo[i][pZpic],FlatInfo[i][cena],FlatInfo[i][lvl],FlatInfo[i][kid]);
	mysql_tquery(MySQLGo, query);
	if(!strcmp(FlatInfo[i][vladelec],"None",true)) format(textt, sizeof(textt),"{2E9AFE}[Квартира №%i]\n Выставлена на продажу!\n{2E9AFE}Стоимость: {FFFFFF}%iр\n{2E9AFE}Стоимость: {FFFFFF}%iр\n{bbbbbb}Чтобы войти нажмите клавишу {96e300}L.ALT",i, FlatInfo[i][cena]);
	else format(textt, sizeof(textt),"{D7EC0F}[Квартира №%i]\n{FFFFFF}Владелец: {2B84E3}%s\n{bbbbbb}Чтобы войти нажмите клавишу {96e300}L.ALT",i, FlatInfo[i][vladelec]);
	UpdateDynamic3DTextLabelText(FlatInfo[i][dtextss],0x0076FCFF,textt);
}
stock KGet(playerid)
{
	new house = 0;
	for(new i = 1; i <= ALLKVARTIRI; i++)
	{
		if(strcmp(FlatInfo[i][vladelec],NamePlayer[playerid],false) == 0 && strcmp(FlatInfo[i][vladelec],"None",true) != 0) house++, SetPVarInt(playerid, "Kvart", i);
	}
	return house;
}
stock TuneDialog(playerid) return ShowPlayerDialog(playerid,8595,DIALOG_STYLE_LIST,"{808080}Тюнинг-меню станции технического обслуживания.","{808080}1. {FFFFFF}Установка закиси азота.\n{808080}2. {FFFFFF}Установка дисков.\n{808080}3. {FFFFFF}Установка гидравлики.\n{808080}4. {FFFFFF}Удаление гидравлики.","Далее","Отмена");

// Сис-ма гаражей (NEW)
stock GetPlayerGarage(playerid)
{
	new gar = 0;
	for(new i = 1; i <= ALLGARAGE; i++)
	{
		if(strcmp(Garage[i][gOwner],NamePlayer[playerid],false) == 0 && strcmp(Garage[i][gOwner],"None",true) != 0) gar++, SetPVarInt(playerid, "PlayerGarage", i);
	}
	return gar;
}
stock UpdateGarage(idx)
{
	new str[200],query[900];
	format(query, 600, "UPDATE `garage` SET `Owner` = '%s',`Price` = '%i',`Inter` = '%i',`Virtual` = '%i',`Lock` = '%i',`UL` = '%i',`Level` = '%i' WHERE `ID` = '%i'", Garage[idx][gOwner],Garage[idx][gPrice],Garage[idx][gInter],Garage[idx][gVirtual],Garage[idx][gLock],Garage[idx][gUL],Garage[idx][gLevel],Garage[idx][gID]);
	mysql_tquery(MySQLGo, query);

	format(query, 600, "UPDATE `garage` SET `X1` = '%f',`Y1` = '%f',`Z1` = '%f',`X2` = '%f',`Y2` = '%f',`Z2` = '%f',`R2` = '%f' WHERE `ID` = '%i'", Garage[idx][gX1],Garage[idx][gY1],Garage[idx][gZ1],Garage[idx][gX2],Garage[idx][gY2],Garage[idx][gZ2],Garage[idx][gR2],Garage[idx][gID]);
	mysql_tquery(MySQLGo, query);

	format(query, 600, "UPDATE `garage` SET `X3` = '%f',`Y3` = '%f',`Z3` = '%f',`R3` = '%f',`X4` = '-1620.81',`Y4` = '1577.18',`Z4` = '2005.71' WHERE `ID` = '%i'", Garage[idx][gX3],Garage[idx][gY3],Garage[idx][gZ3],Garage[idx][gR3],Garage[idx][gID]);
	mysql_tquery(MySQLGo, query);

	if(mysql_errno()) printf("Ошибка сохранения гаража: [%d]", Garage[idx][gID]);
	else printf("Успешно сохранение гаража: [%d]", Garage[idx][gID]);

	//
	DestroyPickup(Garage[idx][gPickup]);
	DestroyDynamic3DTextLabel(Garage[idx][gText]);
	Garage[idx][gPickup] = CreatePickup(1239, 23, Garage[idx][gX1], Garage[idx][gY1], Garage[idx][gZ1]);
	if(!strcmp(Garage[idx][gOwner],"None",true))
	{
		format(str, 200, "{FFFFFF}Гараж {2E9AFE}№%d {FFFFFF}продается!\nСтоимость: {2E9AFE}%dр{FFFFFF}\nУровень: {2E9AFE}%d", idx, Garage[idx][gPrice], Garage[idx][gLevel]);
		Garage[idx][gText] = CreateDynamic3DTextLabel(str,-1,Garage[idx][gX1], Garage[idx][gY1], Garage[idx][gZ1], 10.0);
	}
	else
	{
		format(str, 200, "{FFFFFF}Гараж {2E9AFE}№%d {FFFFFF}куплен!\nВладелец: {2E9AFE}%s", idx, Garage[idx][gOwner]);
		Garage[idx][gText] = CreateDynamic3DTextLabel(str,-1,Garage[idx][gX1], Garage[idx][gY1], Garage[idx][gZ1], 10.0);
	}
	return true;
}

// Работа грузчика
publics: TakeBag(playerid)
{
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
	SetPlayerAttachedObject(playerid, 2, 2969, 1, 0.121241, 0.433916, -0.038068, 359.338867, 91.670600, 179.788787, 1.000000, 1.000000, 1.000000);
	SetPlayerCheckpoint(playerid, -2332.2302,286.9578,24.0913, 2.0);
	SetPVarInt(playerid,"loader", 2);
	return 1;
}
publics: PutBag(playerid)
{
	RemovePlayerAttachedObject(playerid,2);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0,0);
	SetPlayerCheckpoint(playerid, -2373.1421,283.9664,23.7266, 2.0);
	SetPVarInt(playerid,"loader", 1);
	return 1;
}

// Работа шахтера

stock MestaSahta(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,3.0,-746.7098,1256.6399,3011.3762) || IsPlayerInRangeOfPoint(playerid,3.0,-762.2296,1176.2537,3012.3154) || IsPlayerInRangeOfPoint(playerid,3.0,-736.9886,1201.4373,3011.3567) || IsPlayerInRangeOfPoint(playerid,3.0,276.4897,923.6788,-12.1906)) return true;
	return false;
}
// Система заправок
stock PrintFuelsInfo(playerid,targetid)
{
	new elektrich = 100,text1[8];
	glob_str = "";
	if(FuelsInfo[targetid][sbLocked]) { text1 = "Закрыта"; } else { text1 = "Открыта"; }
	format(glob_str, sizeof(glob_str), "{FFFFFF}Бизнес: {2E9AFE}%s\n{FFFFFF}На счету бизнеса: {2E9AFE}%d рублей\n{FFFFFF}В этом часу заработано: {2E9AFE}%dр\n{FFFFFF}Цена бензина: {2E9AFE}%dр\n{FFFFFF}Плата за электричество: {2E9AFE}%dр\n{FFFFFF}Состояние заправки: {2E9AFE}%s\n{FFFFFF}Бензин: {2E9AFE}%d / 50000",
	FuelsInfo[targetid][sbMessage],FuelsInfo[targetid][sbTill],FuelsInfo[targetid][s2bTill],FuelsInfo[targetid][sbPriceProd],elektrich,text1,FuelsInfo[targetid][sbProducts]);
	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Cостояние бизнеса",glob_str,"Закрыть","");
	glob_str = "";
	return true;
}
stock OnPropUpdate(busiid)
{
	new r = busiid;
	glob_str = "";
	format(glob_str,sizeof(glob_str),"UPDATE `fuels` SET `sbOwned` = '%d',`sbOwner` = '%s',`sbEntranceCost` = '%d',`sbTill` = '%d',`sbLocked` = '%d',`sbProducts` = '%d',`sbPriceProd` = '%d',`s2bTill` = '%d',`sbMafia` = '%d',`sbMessage` = '%s' WHERE `sbID` = '%d'",
	FuelsInfo[r][sbOwned],FuelsInfo[r][sbOwner],FuelsInfo[r][sbEntranceCost],FuelsInfo[r][sbTill],FuelsInfo[r][sbLocked],FuelsInfo[r][sbProducts],FuelsInfo[r][sbPriceProd],FuelsInfo[r][s2bTill],FuelsInfo[r][sbMafia], FuelsInfo[r][sbMessage],FuelsInfo[r][sbID]);
	mysql_tquery(MySQLGo, glob_str);
	glob_str = "";
	return 1;
}

// Система ларьков
stock UpdateLarek(idx)
{
	glob_str = "";
	format(glob_str, sizeof(glob_str), "UPDATE `lareks` SET `owner` = '%s',`cena` = '%i',`money` = '%i',`products` = '%i',`lock` = '%i',`lvl` = '%i' WHERE `ID` = '%i'", LarekInfo[idx][larOwner],LarekInfo[idx][larCena],LarekInfo[idx][larMoney],LarekInfo[idx][larProds],LarekInfo[idx][larLock],LarekInfo[idx][larLevel],LarekInfo[idx][larID]);
	mysql_tquery(MySQLGo, glob_str);
	glob_str = "";
	format(glob_str, sizeof(glob_str), "UPDATE `lareks` SET `x` = '%f',`y` = '%f',`z` = '%f',`owned` = '%i' WHERE `ID` = '%i'", LarekInfo[idx][larX],LarekInfo[idx][larY],LarekInfo[idx][larZ],LarekInfo[idx][larOwned],LarekInfo[idx][larID]);
	mysql_tquery(MySQLGo, glob_str);
	glob_str = "";
	if(mysql_errno()) printf("Ошибка сохранения ларька: [%d]", LarekInfo[idx][larID]);
	else printf("Успешно сохранение ларька: [%d]", LarekInfo[idx][larID]);

	//
	DestroyPickup(LarekInfo[idx][larPickup]);
	DestroyDynamic3DTextLabel(LarekInfo[idx][larText]);
	if(!strcmp(LarekInfo[idx][larOwner],"None",true))
	{
		format(glob_str, sizeof(glob_str), "{008cf0}Ларек №%d {008cf0}продается!\n{008cf0}Стоимость: {FFFFFF}%d рублей\n{008cf0}Уровень: {FFFFFF}%d\n\n{bbbbbb}Для покупки введите /buylarek", idx, LarekInfo[idx][larCena], LarekInfo[idx][larLevel]);
		LarekInfo[idx][larText] = CreateDynamic3DTextLabel(glob_str,-1,LarekInfo[idx][larX], LarekInfo[idx][larY], LarekInfo[idx][larZ], 10.0);
		LarekInfo[idx][larPickup] = CreatePickup(1239, 23, LarekInfo[idx][larX], LarekInfo[idx][larY], LarekInfo[idx][larZ]);
		glob_str = "";
	}
	else
	{
		format(glob_str, sizeof(glob_str), "{008cf0}Ларек №%d\n{008cf0}Владелец: {FFFFFF}%s\n\n{bbbbbb}Для покупки еды, нажмите L.ALT", idx, LarekInfo[idx][larOwner]);
		LarekInfo[idx][larText] = CreateDynamic3DTextLabel(glob_str,-1,LarekInfo[idx][larX], LarekInfo[idx][larY], LarekInfo[idx][larZ], 10.0);
		LarekInfo[idx][larPickup] = CreatePickup(1239, 23, LarekInfo[idx][larX], LarekInfo[idx][larY], LarekInfo[idx][larZ]);
		glob_str = "";
	}
	return true;
}
stock PrintLarek(playerid, targetid)
{
	new elektrich = 100,text1[20];
	glob_str = "";
	if(LarekInfo[targetid][larLock]) { text1 = "Закрыт"; } else { text1 = "Открыт"; }
	for(new h = 0; h < sizeof(LarekInfo); h++)
	{
		format(glob_str, sizeof(glob_str), "{96e300}Ларек №%i\n\n{FFFFFF}На счету ларька: {2E9AFE}%i\n{FFFFFF}Плата за электричество: {2E9AFE}%i\n{FFFFFF}Состояние ларька: {2E9AFE}%s\n{FFFFFF}Продуктов: {2E9AFE}%i / 1000",
		targetid, LarekInfo[targetid][larMoney], elektrich, text1, LarekInfo[targetid][larProds]);
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Cостояние ларька",glob_str,"Закрыть","");
	}
	glob_str = "";
	return true;
}
// Система банкоматов
stock UpdateAtm(idx)
{
	glob_str = "";
	format(glob_str, sizeof(glob_str), "UPDATE `atm` SET `owner` = '%s',`cena` = '%i',`money` = '%i',`lvl` = '%i',`lock` = '%i' WHERE `ID` = '%i'", Atm[idx][atmOwner],Atm[idx][atmCena],Atm[idx][atmMoney],Atm[idx][atmLevel],Atm[idx][atmLock],Atm[idx][atmID]);
	mysql_tquery(MySQLGo, glob_str);
	glob_str = "";
	format(glob_str, sizeof(glob_str), "UPDATE `atm` SET `x` = '%f',`y` = '%f',`z` = '%f',`owned` = '%i' WHERE `ID` = '%i'", Atm[idx][atmX],Atm[idx][atmY],Atm[idx][atmZ],Atm[idx][atmOwned],Atm[idx][atmID]);
	mysql_tquery(MySQLGo, glob_str);
	glob_str = "";
	if(mysql_errno()) printf("Ошибка сохранения банкомата: [%d]", Atm[idx][atmID]);
	else printf("Успешно сохранение банкомата: [%d]", Atm[idx][atmID]);

	//
	DestroyDynamic3DTextLabel(Atm[idx][atmText]);
	if(!strcmp(Atm[idx][atmOwner],"None",true))
	{
		format(glob_str, sizeof(glob_str), "{008cf0}Банкомат №{FFFFFF}%i {008cf0}продается!\n\n{008cf0}Стоимость: {FFFFFF}%d рублей\n{008cf0}Уровень: {FFFFFF}%d", idx, Atm[idx][atmCena], Atm[idx][atmLevel]);
		Atm[idx][atmText] = CreateDynamic3DTextLabel(glob_str,-1, Atm[idx][atmX],Atm[idx][atmY],Atm[idx][atmZ], 10.0);
		glob_str = "";
	}
	else
	{
		format(glob_str, sizeof(glob_str), "{008cf0}Банкомат №{FFFFFF}%i\n\n{008cf0}Владелец: {FFFFFF}%s", idx, Atm[idx][atmOwner]);
		Atm[idx][atmText] = CreateDynamic3DTextLabel(glob_str,-1, Atm[idx][atmX],Atm[idx][atmY],Atm[idx][atmZ], 10.0);
		glob_str = "";
	}
	return true;
}
stock PrintAtm(playerid, targetid)
{
	new elektrich = 100, larinfo[300], text1[32];
	if(Atm[targetid][atmLock]) { text1 = "Закрыт"; } else { text1 = "Открыт"; }
	for(new h = 0; h < sizeof(Atm); h++)
	{
		format(larinfo, 300, "{008cf0}Банкомат №%i\n\n{FFFFFF}На счету банкомата: {2E9AFE}%i\n{FFFFFF}Плата за электричество: {2E9AFE}%iр\n{FFFFFF}Состояние банкомата: {2E9AFE}%s", targetid, Atm[targetid][atmMoney], elektrich, text1);
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Cостояние банкомата",larinfo,"Закрыть","");
	}
	return true;
}

// Смена погоды
publics: ChangeWeather()
{
	new weather = random(20);
	SetWeather(weather);
	switch(weather)
	{
	case 1:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +12 градусов, скорость ветра составит от 0,3 до 1,5 м/с, ясно.");
		}
	case 2:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +5 градусов, скорость ветра составит от 24,5 до 28,4 м/с, шторм!");
		}
	case 3:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +9 градусов, скорость ветра составит от 0,2 до 1,2 м/с, малооблачно.");
		}
	case 4:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура -2 градуса, скорость ветра составит от 2,1 до 2,5 м/с, малооблачно.");
		}
	case 5:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +1 градус, скорость ветра составит от 1,8 до 2,1 м/с, дождь со снегом.");
		}
	case 6:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +1 градус, скорость ветра составит от 1,8 до 2,1 м/с, дождь со снегом.");
		}
	case 7:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +9, скорость ветра составит от 0,8 до 1,3 м/c, облачно с прояснениями.");
		}
	case 8:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура -2 градуса, скорость ветра составит 2,1 до 2,5 м/с, малооблачно.");
		}
	case 9:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +9 градусов, скорость ветра составит от 0,8 до 1,3 м/c, облачно с прояснениями.");
		}
	case 10:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +14 градусов, скорость ветра составит от 1,5 до 2,2 м/с, без осадков.");
		}
	case 11:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +7 градусов, скорость ветра составит от 0,9 до 1,1 м/с, облачно с прояснениями.");
		}
	case 12:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +3 градуса, скорость ветра составит от 0,9 до 1,1 м/с, облачно с прояснениями.");
		}
	case 13:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +14 градусов, скорость ветра составит от 1,5 до 2,2 м/с, без осадков.");
		}
	case 14:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура -2 градуса, скорость ветра составит от 2,1 до 2,5 м/с, малооблачно.");
		}
	case 15:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +3 градуса, скорость ветра составит от 0,9 до 1,1 м/с, облачно с прояснениями.");
		}
	case 16:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +1 градус, скорость ветра составит от 1,8 до 2,1 м/с, дождь со снегом.");
		}
	case 17:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +9 градусов, скорость ветра составит от 1,1 до 1,8 м/c, облачно с прояснениями.");
		}
	case 18:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +9 градусов, скорость ветра составит от 0,8 до 1,3 м/c, облачно с прояснениями.");
		}
	case 19:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +2 градуса, скорость ветра составит от 1,4 до 2,8 м/с, сильный дождь.");
		}
	case 20:
		{
			SendClientMessageToAll(COLOR_WHITE,"{2E9AFE}Прогноз погоды:");
			SendClientMessageToAll(COLOR_WHITE,"Температура +3 градуса, скорость ветра составит от 0,9 до 1,1 м/с, облачно с прояснениями.");
		}

	}
	return 1;
}
public OnPlayerUpdate(playerid)
{
    if(GetPVarInt(playerid, "AfkCheck") > 0) return SetPVarInt(playerid, "AfkCheck", 0);
	if(GetPlayerState(playerid) == 1)
	{
		switch(PlayerInfo[playerid][pMember])
		{
		case 1,3,6:
			{
				new cur_weap = GetPlayerWeapon(playerid);
				if(cur_weap != GetPVarInt(playerid,#Cur_weap0))
				{
					OnPlayerSwitchWeapon(playerid, GetPVarInt(playerid,#Cur_weap0), cur_weap);
					SetPVarInt(playerid,#Cur_weap0,cur_weap);
				}
			}
		}
		switch(PlayerInfo[playerid][pLeader])
		{
		case 1,3,6:
			{
				new cur_weap = GetPlayerWeapon(playerid);
				if(cur_weap != GetPVarInt(playerid,#Cur_weap0))
				{
					OnPlayerSwitchWeapon(playerid, GetPVarInt(playerid,#Cur_weap0), cur_weap);
					SetPVarInt(playerid,#Cur_weap0,cur_weap);
				}
			}
		}
	}
	/*if(gpvi(@p,#P_Snow2))
	{
		new Float:pos[3];
		GetPlayerPos(@p,pos[0],pos[1],pos[2]);
		SetPlayerObjectPos(@p,Snow2[@p], pos[0],pos[1],pos[2]);
		MovePlayerObject(@p,Snow2[@p], pos[0],pos[1],pos[2], float(GetPlayerSpeed(@p))+10.0,0.0,0.0,0.0);		
	}*/
	return 1;
}
stock OnPlayerSwitchWeapon(playerid, oldweapon, newweapon)
{
	//if(IsPlayerAttachedObjectSlotUsed(playerid,0)) RemovePlayerAttachedObject(playerid,0);
	switch(oldweapon)
	{
	case 29:SetPlayerAttachedObject(playerid, 1, 353, 15, -0.198000, -0.185999, -0.145999, -2.700015, 41.200042, -3.099999, 1.000000, 1.000000, 1.000000);
	case 30:SetPlayerAttachedObject(playerid, 0, 356, 15, -0.138999, 0.178000, -0.448000, 177.100097, 100.699989, 8.799995, 1.000000, 1.000000, 1.000000);
	case 31:SetPlayerAttachedObject(playerid, 0, 356, 15, -0.138999, 0.178000, -0.448000, 177.100097, 100.699989, 8.799995, 1.000000, 1.000000, 1.000000);
	}
	switch(newweapon)
	{
	case 29:if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
	case 30:if(IsPlayerAttachedObjectSlotUsed(playerid,0)) RemovePlayerAttachedObject(playerid,0);
	case 31:if(IsPlayerAttachedObjectSlotUsed(playerid,0)) RemovePlayerAttachedObject(playerid,0);
	}
	new gun[2];
	GetPlayerWeaponData(playerid,4,gun[0],gun[1]);
	if(gun[1] < 1)RemovePlayerAttachedObject(playerid,1);
	GetPlayerWeaponData(playerid,5,gun[0],gun[1]);
	if(gun[1] < 1)RemovePlayerAttachedObject(playerid,0);
}
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid,Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,Float:fRotX, Float:fRotY, Float:fRotZ,Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	//printf("%d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f, ",index, modelid, boneid,fOffsetX, fOffsetY, fOffsetZ,fRotX, fRotY, fRotZ,fScaleX, fScaleY, fScaleZ);
	if(GetPVarInt(playerid,#P_Edit_InvObj) && response)
	{
		new i = GetPVarInt(playerid,#P_PObj_Idx);
		test2[playerid][modelid0][i] = modelid;
		test2[playerid][boneid0][i] = boneid;
		test2[playerid][fOffsetX0][i] = fOffsetX;
		test2[playerid][fOffsetY0][i] = fOffsetY;
		test2[playerid][fOffsetZ0][i] = fOffsetZ;
		test2[playerid][fRotX0][i] = fRotX;
		test2[playerid][fRotY0][i] = fRotY;
		test2[playerid][fRotZ0][i] = fRotZ;
		test2[playerid][fScaleX0][i] = fScaleX;
		test2[playerid][fScaleY0][i] = fScaleY;
		test2[playerid][fScaleZ0][i] = fScaleZ;
		new type = GetPVarInt(playerid,#P_Inv_Type);
		SaveItems_Tp(type,playerid);
		DeletePVar(playerid,#P_Edit_InvObj);
	}	
	return 1;
}
forward guvdclose();
public guvdclose()
{
	if(lspdslak1 == 1)
	{
		MoveObject(guvdslak, 153.87, 1222.29, 11.76, 0.002, 1.00, -90.00, 77.94);
		lspdslak1 = 0;
	}
}
forward @UpdatePlayersRadars();
@UpdatePlayersRadars()
{
	new string[128];
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || GetPlayerState(i) != PLAYER_STATE_DRIVER) continue;
		if(PlayerType[i] > 0)
		{
			PlayerType[i]--;
			continue;
		}
		for(new r; r < MAX_RADARS; r++)
		{
			if(RadarInfo[r][rActive] && IsPlayerInRangeOfPoint(i, 30.0, RadarInfo[r][rPos][0], RadarInfo[r][rPos][1], RadarInfo[r][rPos][2]) && GetPlayerSpeed(i) > RadarInfo[r][rSpeed])
			{
				new itog = GetPlayerSpeed(i) - RadarInfo[r][rSpeed];
				foreach(new j:Player)
				{
					if(PlayerInfo[j][pMember] == 1 || PlayerInfo[j][pLeader] == 1)
					{
						if(IsPlayerInDynamicArea(j, RadarInfo[r][rZone]))
						{
							format(string, 128, "[R № %d] %s превысил скорость на {ff0000}%d {ffffff}км/ч.",r,NamePlayer[i],itog);
							SendClientMessage(j, -1, string);
							format(string, 128, "(Допустимая: {00ff00}%d{ffffff} км/ч, измеренная: {ff0000}%d{ffffff} км/ч)", RadarInfo[r][rSpeed], GetPlayerSpeed(i));
							SendClientMessage(j, -1, string);
						}
					}
				}
				PlayerType[i] = 10;
			}
		}
	}
	return 1;
}
forward @Mus_Load(p);
@Mus_Load(p)
{
	SetPVarInt(p,#Mus_Act,1);
	new c = GetPVarInt(p,#Mus_Idx);
	SetPlayerCheckpoint(p,mus_pos[c][0],mus_pos[c][1],mus_pos[c][2],7.0);
	return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
	if(gpvi(@p,"AutoExam") && IsValidVehicle(gpvi(@p,#P_AutoEx_CarID)))
	{
		spvi(@p,#P_AutoEx_Tim,60);
		SCM(@p,-1,"У вас есть 60 секунд для того, чтобы вернуться в автомобиль!");
		DisablePlayerCheckpoint(@p);
	}
	if(GetPVarInt(playerid,#Mus_Job) == 1 && GetPVarInt(playerid,#Mus_Start) == 1)
	{
		new id_car = GetVehicleIdxByID(vehicleid);
		if(id_car != -1 && aData[id_car][aJobs] == 22)
		{
			SendClientMessage(playerid,COLOR_RED,"У вас есть 10 секунд для того, чтобы вернуться в ваше рабочее т/с!");
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid,#Mus_Act,0);
			SetPVarInt(playerid,#Mus_Time,11);
			return 1;
		}
	}
	if(GetPVarInt(playerid,"Seatbelt") == 1)
	{
		SetPVarInt(playerid,"Seatbelt",0);
		glob_str = "";
		format(glob_str, sizeof(glob_str), "* %s отстегнул ремень безопасности ", NamePlayer[@p]);
		SendClientMessage(playerid, COLOR_YELLOW, "Вы отстегнули ремень безопасности.");
		ProxDetector(15.0, playerid, glob_str, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
		glob_str = "";
	}
	if(GetPVarInt(playerid,#P_Avto_A) > 0)
	{		
		PutPlayerInVeh(playerid,vehicleid,GetPVarInt(playerid,#P_Avto_S));
		return 0;
	}
	return 1;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	foreach(new i:Player)
	{
		if(GetPVarType(i,#P_MFon_Area))
		if(areaid == GetPVarInt(i,#P_MFon_Area))
		{
			SendClientMessage(playerid,COLOR_LIGHTBLUE,#Вы покинули музыкальную зону магнитофона);
			StopAudioStreamForPlayer(playerid);				
		}
	}
	if(areaid == AMusic_Zone)
	{
		if(GetPVarInt(playerid,"Music"))
		{
			DeletePVar(playerid,"Music");
			StopAudioStreamForPlayer(playerid);
			SendClientMessage(playerid,COLOR_MUSICA,"Музыка отключена (вы покинули предел зоны проигрывания или отключена администратором).");
			return 1;
		}
	}
	for(new i = 0; i < sizeof(House); i++)
	{
		if(areaid == House[i][hZone])
		{
			printf("leaved house area id: %d idx of house info: %d",areaid,i);
		}
	}
	return 1;
}
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	new string[124];
	foreach(new i:Player)
	{
		if(GetPVarType(i,#P_MFon_Area))
		if(areaid == GetPVarInt(i,#P_MFon_Area))
		{
			GetPVarString(i, #P_MFon_St, string, sizeof(string));
			SendClientMessage(playerid,COLOR_LIGHTBLUE,#Вы попали в музыкальную зону магнитофона);
			PlayAudioStreamForPlayer(playerid, string, 0.0, 0.0, 0.0, 20.0, 0);					
		}
	}
	if(areaid == autoshkolapick)
	{
		glob_str = "";
		static const dlg_str[] = "{ffffff}Приветствуем вас в автошколе {A1A1A1}РОСТО (ДОСААФ){ffffff} г.Арзамас!\n\
		В нашей автошколе вы можете пройти полноценное обучение (обучение + теоритический экзамен) на следующие категории:\n\
		{056C0E}А{ffffff} - мотоциклы\n\
		{056C0E}В{ffffff} - легковые автомобили\n\
		{056C0E}С{ffffff} - грузовики\n\
		{056C0E}D{ffffff} - автобусы\n\
		{ffffff}Вы хотите начать обучение в автошколе?";		
		format(glob_str,sizeof(glob_str),dlg_str);
		ShowPlayerDialog(playerid,9795,DIALOG_STYLE_MSGBOX,"{ffffff}Информация",glob_str,"Ок","Закрыть");
		glob_str = "";
	}
	if(areaid == asalon_z)
	{
		SPD(@p,1253,DIALOG_STYLE_MSGBOX,"{2E9AFE}Автосалон","{FFFFFF}Вы желатете посмотреть ассортимент наших автомобилей?","Далее","Закрыть");
		return 1;
	}
	if(areaid == prava_z)
	{
		ShowPlayerDialog(playerid,1220,DIALOG_STYLE_LIST,"{2E9AFE}Услуги от ОГИБДД по г. Нижегородск","{ffffff}Получение гос. регистрационных знаков \t\t{808080}2000 рублей.\n{ffffff}Получение водительского удостоверения","Далее","Отмена");
		return 1;
	}
	if(areaid == taxi_z)
	{
		if(GetPlayerState(playerid) != 1) return 1;
		ShowPlayerDialog(@p,1234,DIALOG_STYLE_LIST,"{2E9AFE}Работа водитя такси","{808080}1. {ffffff}Устроиться на работу\n{808080}2. {ffffff}Уволиться с работы\n{808080}3. {ffffff}Информация о работе","Выбор","Отмена");
		return 1;
	}
	if(areaid == AMusic_Zone)
	{
		if(!GetPVarInt(playerid,"Music"))
		{
			SetPVarInt(playerid,"Music",1);
			//PlayAudioStreamForPlayer(playerid, URLW, MGM[1], MGM[2], MGM[3], MGM[4], true);
			PlayAudioStreamForPlayer(playerid, URLW, 0.0, 0.0, 0.0, MGM[4], 0);
			SendClientMessage(playerid,COLOR_MUSICA,"Внимание! Вы попали в музыкальную зону сервера.");
			return 1;
		}
	}
	if(areaid == zone_r[0])//ГИБДД
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			static const dlg_str[] = "{ffffff}- Переодеться ( %s {ffffff})\n- Взять боекомплект ( %s )";
			new str[sizeof(dlg_str)-2+98];
			format(str,sizeof(str),dlg_str,(GetPVarInt(playerid,#P_Jobs) == 1) ? ("{ff0000}Завершить раб.день"):("{00ff00}Начать раб.день"),(GetPVarInt(playerid,#P_Jobs) == 1) ? ("{00ff00}доступно{ffffff}"):("{ff0000}недоступно{ffffff}"));
			ShowPlayerDialog(playerid,128,DIALOG_STYLE_LIST,"Раздевалка",str,"Выбор","Отмена");
		}
		else return SendClientMessage(playerid,COLOR_GRAD1,#Только для сотрудников ГИБДД);
	}
	if(areaid == zone_r[1])//Скорая помощь
	{
		if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
		{
			static const dlg_str[] = "{ffffff}- Переодеться ( %s {ffffff})\n- Взять боекомплект ( %s )";
			new str[sizeof(dlg_str)-2+98];
			format(str,sizeof(str),dlg_str,(GetPVarInt(playerid,#P_Jobs) == 1) ? ("{ff0000}Завершить раб.день"):("{00ff00}Начать раб.день"),(GetPVarInt(playerid,#P_Jobs) == 1) ? ("{00ff00}доступно{ffffff}"):("{ff0000}недоступно{ffffff}"));
			ShowPlayerDialog(playerid,128,DIALOG_STYLE_LIST,"Раздевалка",str,"Выбор","Отмена");
		}
		else return SendClientMessage(playerid,COLOR_GRAD1,#Только для сотрудников Скорой помощи);
	}
	if(areaid == zone_r[2])//Полиция
	{
		if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
		{
			static const dlg_str[] = "{ffffff}- Переодеться ( %s {ffffff})\n- Взять боекомплект ( %s )";
			new str[sizeof(dlg_str)-2+98];
			format(str,sizeof(str),dlg_str,(GetPVarInt(playerid,#P_Jobs) == 1) ? ("{ff0000}Завершить раб.день"):("{00ff00}Начать раб.день"),(GetPVarInt(playerid,#P_Jobs) == 1) ? ("{00ff00}доступно{ffffff}"):("{ff0000}недоступно{ffffff}"));
			ShowPlayerDialog(playerid,128,DIALOG_STYLE_LIST,"Раздевалка",str,"Выбор","Отмена");
		}
		else return SendClientMessage(playerid,COLOR_GRAD1,#Только для сотрудников Полиции);
	}
	if(areaid == zone_r[3])//Пожарники
	{
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
		{
			static const dlg_str[] = "{ffffff}- Переодеться ( %s {ffffff})\n- Взять боекомплект ( %s )";
			new str[sizeof(dlg_str)-2+98];
			format(str,sizeof(str),dlg_str,(GetPVarInt(playerid,#P_Jobs) == 1) ? ("{ff0000}Завершить раб.день"):("{00ff00}Начать раб.день"),(GetPVarInt(playerid,#P_Jobs) == 1) ? ("{00ff00}доступно{ffffff}"):("{ff0000}недоступно{ffffff}"));
			ShowPlayerDialog(playerid,128,DIALOG_STYLE_LIST,"Раздевалка",str,"Выбор","Отмена");
		}
		else return SendClientMessage(playerid,COLOR_GRAD1,#Только для сотрудников МЧС);
	}
	if(areaid == pick_lift)//lift
	{
		static const dlg_str[] = "%s{ffffff}%d этаж%s\n";
		new str[sizeof(dlg_str)*9+19];
		for(new i = 1; i < 10; i++)
		{
			if(GetPVarInt(playerid,#J_Lift) == i)
			format(str,sizeof(str),dlg_str,str,i,".{ff0000} [Текущий]");
			else
			format(str,sizeof(str),dlg_str,str,i,".");
		}
		ShowPlayerDialog(playerid,131,DIALOG_STYLE_LIST,"Лифт",str,"Поехали","Отмена");
		return 1;
	}
	//
	for(new i = 0; i < sizeof(House); i++)
	{
		if(areaid == House[i][hZone])
		{
			if(IsValidDynamicArea(areaid))
			{				
				printf("entered house area id: %d idx of house info: %d",areaid,i);
				if(!House[i][sale])
				{
					if(House[i][prodaja])
					{
						//GameTextForPlayer(playerid, "~w~ЊPOѓA„A “¦O‚O ѓOMA ~r~€AЊPEЉEHA!", 5000, 1);
						static const str0[] = "{ffffff}Дом № {008cf0}%d{ff0000}\nПродажа этого дома запрещена администрацией сервера!";
						new str[sizeof(str0)+5];
						format(str,sizeof(str),str0,House[i][houseidd]);
						ShowPlayerDialog(playerid,12610,DIALOG_STYLE_MSGBOX,"Недвижимость",str,"Ясно","Понятно");
						return 1;
					}
					//GameTextForPlayer(playerid, "~w~ѓ‡• ЊOKYЊK… ‹‹Eѓ…¦E: ~g~/buyhouse", 5000, 1);
					static const str1[] = "{ffffff}Дом № {008cf0}%d{ffffff}\nСтоимость дома: {008cf0}%d %s\n{ffffff}Необходимый уровень: {008cf0}%d";
					new str[sizeof(str1)+5+11+18+4];
					format(str,sizeof(str),str1,House[i][houseidd],House[i][stoim],(House[i][hType] == 1)?("рублей"):("{ffff00}донат-очков"),House[i][lvl]);
					ShowPlayerDialog(playerid,12600,DIALOG_STYLE_MSGBOX,"Недвижимость",str,"Купить","Отмена");
					SetPVarInt(@p,#P_House_Id,i);
					return 1;
				}
				else
				{
					if(House[i][rentable])
					{
						glob_str = "";
						format(glob_str,sizeof(glob_str),"{ffffff}Дом № {008cf0}%d\n{ffffff}Хозяин дома: {008cf0}%s\n{ffffff}Необходимый уровень: {008cf0}%d\n{ffffff}Аренда: {008cf0}Разрешена\n{ffffff}Цена аренды: {008cf0}%d{ffffff} руб/час",House[i][houseidd], House[i][owner],House[i][lvl],House[i][rentsumma]);
					}
					else
					{
						glob_str = "";
						format(glob_str,sizeof(glob_str),"{ffffff}Дом № {008cf0}%d\n{ffffff}Хозяин дома: {008cf0}%s\n{ffffff}Необходимый уровень: {008cf0}%d\n{ffffff}Аренда: {ff0000}Запрещена",House[i][houseidd], House[i][owner],House[i][lvl]);
					}
					if(PlayerInfo[playerid][pNewHouse]!= House[i][houseidd] && PlayerInfo[playerid][pRentHouse] != House[i][houseidd])
					{
						//GameTextForPlayer(playerid, "~w~ѓ‡• ¦O‚O Ќ¦O—‘ ‹O†¦… ®A„M…¦E ~g~ALT~n~~w~Ќ¦O—‘ APE®ѓO‹A¦’ ѓOM ‹‹Eѓ…¦E:~g~/rent", 5000, 1);						
						ShowPlayerDialog(playerid,12601,DIALOG_STYLE_MSGBOX,"Недвижимость",glob_str,"Действия","Отмена");
						SetPVarInt(@p,#P_House_Id,i);
						return 1;
					}
					else
					{
						//GameTextForPlayer(playerid, "~w~ѓ‡• ¦O‚O Ќ¦O—‘ ‹O†¦… ®A„M…¦E ~g~ALT", 5000, 1);						
						ShowPlayerDialog(playerid,12602,DIALOG_STYLE_MSGBOX,"Недвижимость",glob_str,"Вход","Отмена");
						SetPVarInt(@p,#P_House_Id,i);
						return 1;
					}
				}
			}
		}
	}
	return 1;
}
stock GetWeaponList(playerid,frak)
{
	new itt = frak_g_info[frak][0][kols_itt];
	new str[90*MAX_ITEMS_G];
	for(new i = 0; i < itt; i++)
	{
		format(str,sizeof(str),"%s{ffffff}- %s\n",str,frak_g_info[frak][i][name_s]);
	}
	ShowPlayerDialog(playerid,130,DIALOG_STYLE_LIST,"Оружие",str,"Выбор","Отмена");
	return 1;
}
forward @UnFreeze(p);
@UnFreeze(p) return TogglePlayerControllable(p, true);
stock Hide_Mon(p,vv,j)
{
	TextDrawShowForPlayer(p,td_fon);
	GameTextForPlayer(p,"~w~ PLEASE WAIT...",900,3);
	SetTimerEx("@Show_Mon", 2000, false, "iii", p,vv,j);
}
forward @Show_Mon(p,vv,j);
@Show_Mon(p,vv,j)
{
	SetPVarInt(p,#J_Lift,j);
	SetPlayerVirtualWorld(p,vv);
	static const dlg_str[] = "Вы прибыли на %d этаж.";
	new str[sizeof(dlg_str)];
	format(str,sizeof(str),dlg_str,j);
	SendClientMessage(p,COLOR_YELLOW,str);
	TextDrawHideForPlayer(p,td_fon);
	return 1;
}
forward @Spasti(p,gp);
public @Spasti(p,gp)
{
	if(IsPlayerInAnyVehicle(gp))
	{
		RemovePlayerFromVehicle(gp);
		ClearAnimations(p,1);
		ClearAnimations(gp,1);
		DeletePVar(gp,#P_Avto_A);
		TogglePlayerControllable(gp,1);
		static const dlg_str[] = "{2E9AFE}Сотрудник пожарной инспекции {D0800E}%s {2E9AFE}спас вам жизнь!";
		new str[sizeof(dlg_str)-2+MAX_PLAYER_NAME];
		format(str,sizeof(str),dlg_str,NamePlayer[p]);
		ShowPlayerDialog(gp,0,DIALOG_STYLE_MSGBOX,"{2E9AFE}Вам спасли жизнь!",str,"Спасибо","");
		//SendClientMessage(gp,-1,str);
		format(str,sizeof(str),"{ffffff}Вы спасли жизнь {D0800E}%s",NamePlayer[gp]);
		SendClientMessage(p,-1,str);
		return 1;
	}
	return 0;
}
forward @Fill(p,zidx,vid);
@Fill(p,zidx,vid)
{
	//chek
	if(PlayerInfo[p][pCash] < FuelsInfo[zidx][sbPriceProd]) return EndFill(p,zidx,0);
	
	
	if(FuelsInfo[zidx][sbProducts] < 1) return EndFill(p,zidx,2);
	if(CarEngine[vid] == 1) return EndFill(p,zidx,3);
	new id_car = GetVehicleIdxByID(vid);
	if(id_car == -1) 
	{
		if(Fuel[vid] > 59) return EndFill(p,zidx,1);
		Fuel[vid] ++;
	}
	else
	{
		if(aData[id_car][aFuel] > 59) return EndFill(p,zidx,1);
		aData[id_car][aFuel] ++;
	}
	new litr = GetPVarInt(p,#P_Zapr_L);
	SetPVarInt(p,#P_Zapr_L,litr+1);
	//do
	FuelsInfo[zidx][sbTill] += FuelsInfo[zidx][sbPriceProd];
	PlayerInfo[p][pCash] -= FuelsInfo[zidx][sbPriceProd], GivePlayerMoney(p, -FuelsInfo[zidx][sbPriceProd]);
	FuelsInfo[zidx][sbProducts] --;
	
	OnPropUpdate(zidx);
	//inf
	static const dlg_str[] = "~w~…ѓE¦ €AЊPA‹KA:~n~~g~%d ~w~‡…¦PO‹ €A‡…¦O ";
	new str[sizeof(dlg_str)+2];
	format(str,sizeof(str),dlg_str,GetPVarInt(p,#P_Zapr_L));
	GameTextForPlayer(p,str,900,3);	
	
	SetTimerEx("@Fill", 1000, false, "iii",p,zidx,vid);//repeat
	return 1;
}
stock EndFill(p,zidx,reason)
{
	new str1[38];
	switch(reason)
	{
	case 0:	str1 = "{C91010} У вас закончились деньги.";
	case 1:	str1 = "{2E9AFE} Бак заполнен.";
	case 2:	str1 = "{C91010} На заправке кончился бензин.";
	case 3:	str1 = "{ff0000} Двигатель был заведен.";
	}
	new summ = GetPVarInt(p,#P_Zapr_L)* FuelsInfo[zidx][sbPriceProd];
	static const dlg_str[] = "\t{2E9AFE}Квитанция № {FFFFFF}%d\n{2E9AFE}Заправка \t\t{FFFFFF}%s\n{2E9AFE}Цена за литр \t\t{FFFFFF}%d {2E9AFE}рублей\n\
	Литров заправлено \t{FFFFFF}%d {2E9AFE}литра(-ов)\nИтого \t\t\t{FFFFFF}%d{2E9AFE} рублей\nПричина:{2E9AFE}%s\n\tСчастливого пути!";
	new str[sizeof(dlg_str)+24+2+2+3+37];
	format(str,sizeof(str),dlg_str,random(1000)+1,FuelsInfo[zidx][sbMessage],FuelsInfo[zidx][sbPriceProd],GetPVarInt(p,#P_Zapr_L),summ,str1);
	ShowPlayerDialog(p,0,DIALOG_STYLE_MSGBOX,"{2E9AFE}Заправка",str,"Спасибо","");
	TogglePlayerControllable(p,1);
	DeletePVar(p,#P_Zapr_L);
	return 1;
}
forward @Konvoi(p);
@Konvoi(p)
{
	new kp = GetPVarInt(p,#P_Konv_ID);
	new Float: GotDistance = GetDistanceBetweenPlayers(p, kp);
	if(GotDistance < 0.95)
	{
		TogglePlayerControllable(p, 0);
		SetPlayerToFacePlayer(p, kp);
		return 1;
	}
	else if(GotDistance > 10.0)
	{
		/*SendClientMessage(FollowBy[p], 0xFFFF00AA, "Вы ушли слишком далеко. Конвой закончен");
		SendClientMessage(p, 0xFFFF00AA, "Ваш конвой ушел слишком далеко, вы свободны.");*/
		TogglePlayerControllable(p, 1);
		ClearAnimations(p);
		KillTimer(GetPVarInt(p,#P_Konv_Tim));
		return 1;
	}
	else
	{
		TogglePlayerControllable(p, 1);
		SetPlayerToFacePlayer(p, kp);		
		ApplyAnimation(p, "ped", "WALK_civi", 4.1, 1, 1, 1, 1, 0, 1);
	}
	return 1;
}
stock SetPlayerToFacePlayer(playerid, targetid)
{
	new	Float:pX,Float:pY,Float:pZ,
Float:X,Float:Y,Float:Z,Float:ang;
	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return 0;
	GetPlayerPos(targetid, X, Y, Z);
	GetPlayerPos(playerid, pX, pY, pZ);
	if( Y > pY ) ang = (-acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	else if( Y < pY && X < pX ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 450.0);
	else if( Y < pY ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	if(X > pX) ang = (floatabs(floatabs(ang) + 180.0));
	else ang = (floatabs(ang) - 180.0);
	SetPlayerFacingAngle(playerid, ang);
	return 0;
}
forward @Load(p);
@Load(p)
{
	new tick = GetPVarInt(p,#P_Dal_L);
	SetPVarInt(p,#P_Dal_L,tick+1);
	static const dlg_str[] = "~w~…ѓE¦ €A‚PY€KA ~g~%d";
	new str[sizeof(dlg_str)+2];
	format(str,sizeof(str),dlg_str,GetPVarInt(p,#P_Dal_L));
	GameTextForPlayer(p,str,900,3);	
	if(GetPVarInt(p,#P_Dal_L) >= 10)
	{
		GameTextForPlayer(p,"€A‚PY€KA €A‹EPЋE®A!",1900,3);
		SendClientMessage(p,COLOR_GRAD1,#Отправляйтесь на базу для разгрузки!);
		TogglePlayerControllable(p,1);
		SetPVarInt(p,#P_Dal,2);
		SetPlayerCheckpoint(p,-874.3145,1175.6146,10.5005,5.0);
		DeletePVar(p,#P_Dal_L);
		return 1;
	}
	SetTimerEx("@Load", 1000, false, "i",p);//repeat
	return 1;
}
stock GetInterPosH(inter,&Float:x,&Float:y,&Float:z,&Float:a)
{
	switch(inter)
	{
	case 1:x = 899.4912,y = 1766.6261,z = -7.7272,a = 359.8;
	case 2:x = 899.4912,y = 1766.6261,z = -7.7272,a = 359.8;
	default: return 0;
	}
	return 1;
}
stock GetHouseIdx(z)
{
	for(new h = 0; h < sizeof(House); h++)
	{
		if(House[h][houseidd] == z)
		{
			return h;
		}
	}
	return -1;
}
publics: checkCarNumberPlate(number[])
{
	switch(number[0])
	{
	case 'A','B','C','E','P','K','M','O','T','X','Y': {}
	default: return false;
	}
	switch(number[1])
	{
	case '0'..'9': {}
	default: return false;
	}
	switch(number[2])
	{
	case '0'..'9': {}
	default: return false;
	}
	switch(number[3])
	{
	case '0'..'9': {}
	default: return false;
	}
	switch(number[4])
	{
	case 'A','B','C','E','P','K','M','O','T','X','Y': {}
	default: return false;
	}
	switch(number[5])
	{
	case 'A','B','C','E','P','K','M','O','T','X','Y': {}
	default: return false;
	}
	return true;
}
stock token_by_delim(const string[], return_str[], delim, start_index)
{
	new x=0;
	while(string[start_index] != EOS && string[start_index] != delim) {
		return_str[x] = string[start_index];
		x++;
		start_index++;
	}
	return_str[x] = EOS;
	if(string[start_index] == EOS) start_index = (-1);
	return start_index;
}
#define delim_flt(%0,%1) index = token_by_delim(line,var_from_line,%1,index+1); if(index == (-1)) continue; %0 = floatstr(var_from_line)
#define delim_int(%0,%1) index = token_by_delim(line,var_from_line,%1,index+1); if(index == (-1)) continue; %0 = strval(var_from_line)
#define delim_str(%0,%1) index = token_by_delim(line,var_from_line,%1,index+1); if(index == (-1)) continue; %0 = var_from_line
stock LoadObjects(const filename[])
{
	new File:file_ptr;
	new objects_loaded,dyn_objects_loaded;
	new line[256];
	new var_from_line[64];
	new index;
	file_ptr = fopen(filename,filemode:io_read);
	if(!file_ptr) return printf("[error] Ошибка при открытии файла %s",filename);
	objects_loaded = 0;
	while(fread(file_ptr,line,256) > 0)
	{
		index = 0;
		index = token_by_delim(line,var_from_line,'(',index);
		if(index == (-1)) continue;

		if(!strcmp(var_from_line, "CreateDynamicObject"))
		{
			new objecttype, Float:SpawnX, Float:SpawnY, Float:SpawnZ, Float:SpawnRotX, Float:SpawnRotY, Float:SpawnRotZ;
			delim_int(objecttype, ',');
			delim_flt(SpawnX, ',');
			delim_flt(SpawnY, ',');
			delim_flt(SpawnZ, ',');
			delim_flt(SpawnRotX, ',');
			delim_flt(SpawnRotY, ',');
			delim_flt(SpawnRotZ, ')');
			CreateDynamicObject(objecttype,SpawnX,SpawnY,SpawnZ,SpawnRotX,SpawnRotY,SpawnRotZ);
			dyn_objects_loaded++;
		}
		else if(!strcmp(var_from_line, "CreateObject"))
		{
			new objecttype, Float:SpawnX, Float:SpawnY, Float:SpawnZ, Float:SpawnRotX, Float:SpawnRotY, Float:SpawnRotZ;
			delim_int(objecttype, ',');
			delim_flt(SpawnX, ',');
			delim_flt(SpawnY, ',');
			delim_flt(SpawnZ, ',');
			delim_flt(SpawnRotX, ',');
			delim_flt(SpawnRotY, ',');
			delim_flt(SpawnRotZ, ')');
			CreateObject(objecttype,SpawnX,SpawnY,SpawnZ,SpawnRotX,SpawnRotY,SpawnRotZ);
			objects_loaded++;
		}
		else
		{
			printf("[error] Неизвестная строка - %s", var_from_line);
		}
	}
	fclose(file_ptr);
	printf("[loading] Loaded %d Objects from: %s",objects_loaded,filename);
	printf("[loading] Loaded %d DynamicObjects from: %s",dyn_objects_loaded,filename);
	printf("[loading] Всего загружено объектов из файла: %d",objects_loaded+dyn_objects_loaded);
	return true;
}
stock GetRestrictWeapon(wid)
{
	switch(wid)
	{
	case 2,4,16,18,26,35,36,37,38,44,45:return 0;
	default: return 1;
	}
	return 1;
}
stock IsAAntidm(playerid)
{
	if(PlayerToPoint(30.0,playerid,491.3319,1124.7892,12.0500) ||PlayerToPoint(20.0,playerid,543.2922,483.4012,451.7959)
			||PlayerToPoint(40.0,playerid,-872.5104,1184.9922,11.2362)||PlayerToPoint(40.0,playerid,2617.4414,1785.5770,-51.4266)// антидм
			||PlayerToPoint(30.0,playerid,812.9379,885.2468,12.2959))
	{
		return 1;
	}
	return 0;
}
stock SetPPos(playerid,Float:x,Float:y,Float:z) return TelePos[playerid][3]=x, TelePos[playerid][4]=y,TelePos[playerid][5]=z,SetPlayerPos(playerid,x,y,z), true;
stock PutPlayerInVeh(playerid, vehicleid, seatid) return PutPlayerInVehicle(playerid, vehicleid, seatid), true;
stock VehicleSpeed(carid)
{
	new Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(carid,X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y ) * 100.0 );
}
forward Reklama();
public Reklama()
{
	SendClientMessageToAll(0x66ff00AA, "Для просмотра всех доступных команд введите команду /help.");
	SendClientMessageToAll(0x66ff00AA, "Для связи с администрацией используйте /mn > Связь с администрацией.");
	SendClientMessageToAll(0x66ff00AA, "Для пополнения баланса игрового аккаунта перейдите на сайт > er-project.ru/donate. Действует акция X2 при пополнении!");
}
forward ClearAnim(playerid);
public ClearAnim(playerid)
{
	ClearAnimations(playerid);
	return 1;

}
stock eFuel__AddStaticVehicle(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, color1, color2)
{
	return Fuel[AddStaticVehicle(modelid, spawn_x, spawn_y, spawn_z, z_angle, color1, color2)] = 60;
}

stock eFuel__AddStaticVehicleEx(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, color1, color2, respawn_delay, addsiren = 0)
{
	return Fuel[AddStaticVehicleEx(modelid, spawn_x, spawn_y, spawn_z, z_angle, color1, color2, respawn_delay, addsiren)] = 60;
}
stock ShowBilet(playerid)
{
	static const dlg_str[] = "%s\n\n{A1A1A1}Для того чтобы ответить введите в поле ниже номер варианта и нажмите кнопку ввод.\n\n";
	new str[sizeof(dlg_str)+650];
	format(str,sizeof(str),dlg_str,AS_Teor[GetPVarInt(playerid,#ID_Bil)][strvop]);
	ShowPlayerDialog(playerid,1236,DIALOG_STYLE_INPUT,"{ffffff}Теоритический экзамен на знание ПДД",str,"Ввод","");
}
forward @Invent(p);
@Invent(p)
{
	new str[512];
	mysql_format(MySQLGo,str,sizeof(str),"SELECT * FROM `invent` WHERE `name` = '%e'",NamePlayer[p]);
	new Cache:k = mysql_query(MySQLGo,str);	
	new rows, fields;
	cache_get_data(rows, fields, MySQLGo);
	if(!rows)
	{
		glob_str = "";
		mysql_format(MySQLGo,glob_str,sizeof(glob_str),"INSERT INTO `invent`(`name`) VALUES ('%e')",NamePlayer[p]);
		mysql_tquery(MySQLGo,glob_str);
		glob_str = "";
		return 1;
	}
	printf("inv %s",NamePlayer[p]);
	for(new i,j; i < 8; i++,j+=3)
	{
		cache_get_field_content(0, type_name[i][eng_n], str, MySQLGo, 512);
		sscanf(str, "P<(),;>{s[2]}iifffffffff{s[2]}iifffffffff{s[2]}iifffffffff",
		test2[p][modelid0][j],test2[p][boneid0][j],test2[p][fOffsetX0][j],test2[p][fOffsetY0][j],
		test2[p][fOffsetZ0][j],test2[p][fRotX0][j],test2[p][fRotY0][j],test2[p][fRotZ0][j],test2[p][fScaleX0][j],test2[p][fScaleY0][j],test2[p][fScaleZ0][j],
		test2[p][modelid0][j+1],test2[p][boneid0][j+1],test2[p][fOffsetX0][j+1],test2[p][fOffsetY0][j+1],
		test2[p][fOffsetZ0][j+1],test2[p][fRotX0][j+1],test2[p][fRotY0][j+1],test2[p][fRotZ0][j+1],test2[p][fScaleX0][j+1],test2[p][fScaleY0][j+1],test2[p][fScaleZ0][j+1],
		test2[p][modelid0][j+2],test2[p][boneid0][j+2],test2[p][fOffsetX0][j+2],test2[p][fOffsetY0][j+2],
		test2[p][fOffsetZ0][j+2],test2[p][fRotX0][j+2],test2[p][fRotY0][j+2],test2[p][fRotZ0][j+2],test2[p][fScaleX0][j+2],test2[p][fScaleY0][j+2],test2[p][fScaleZ0][j+2]);
		test2[p][is_used][j] = 0;
		test2[p][is_used][j+1] = 0;
		test2[p][is_used][j+2] = 0;
		//printf("%s %d %d %s",type_name[i][eng_n],i,j,type_name[i][ru_n]);
	}
	cache_get_field_content(0, "radio", str, MySQLGo, 512);
	sscanf(str, "p<,>a<i>[2]", PlayerInfo[p][pRadio1]);
	cache_get_field_content(0, "kanistra", str, MySQLGo, 512);
	sscanf(str, "p<,>a<i>[2]", PlayerInfo[p][pFill]);
	PlayerInfo[p][pAptechka] = cache_get_field_content_int(0, "aptechka", MySQLGo);
	PlayerInfo[p][pMask] = cache_get_field_content_int(0, "mask", MySQLGo);
	PlayerInfo[p][pMFon] = cache_get_field_content_int(0, "mfon", MySQLGo);
	cache_delete(k);
	return 1;
}
stock GetListItems(p,r = 0)
{
	new str[sizeof(type_name)*24] = "{ffffff}";
	for(new i = 0; i < sizeof(type_name); i++)
	{
		format(str,sizeof(str),"%s%s\n",str,type_name[i][ru_n]);
	}
	switch(r)
	{
	case 0: ShowPlayerDialog(p,1200,DIALOG_STYLE_LIST,"Настройка цен",str,"Выбор","Отмена");//изменение цен магазин
	case 1: ShowPlayerDialog(p,1204,DIALOG_STYLE_LIST,"Выберите тип вещи для управления",str,"Выбор","Отмена");//управление шмотом инв
	case 2: ShowPlayerDialog(p,1214,DIALOG_STYLE_LIST,"Меню покупки",str,"Выбор","Отмена");//покупка в магазине
	}
	return 1;
}
stock SaveItems_Tp(type = 0,p, reason = 0)
{
	new str[512];
	switch(reason)
	{
	case 0:
		{
			new j = 3*type;
			mysql_format(MySQLGo, str, sizeof(str), "UPDATE `invent` SET `%s`='(%i,%i,%f,%f,%f,%f,%f,%f,%f,%f,%f);(%i,%i,%f,%f,%f,%f,%f,%f,%f,%f,%f);(%i,%i,%f,%f,%f,%f,%f,%f,%f,%f,%f);' WHERE `name`='%s'", 
			type_name[type][eng_n],test2[p][modelid0][j],test2[p][boneid0][j],test2[p][fOffsetX0][j],test2[p][fOffsetY0][j],
			test2[p][fOffsetZ0][j],test2[p][fRotX0][j],test2[p][fRotY0][j],test2[p][fRotZ0][j],test2[p][fScaleX0][j],test2[p][fScaleY0][j],test2[p][fScaleZ0][j],
			test2[p][modelid0][j+1],test2[p][boneid0][j+1],test2[p][fOffsetX0][j+1],test2[p][fOffsetY0][j+1],
			test2[p][fOffsetZ0][j+1],test2[p][fRotX0][j+1],test2[p][fRotY0][j+1],test2[p][fRotZ0][j+1],test2[p][fScaleX0][j+1],test2[p][fScaleY0][j+1],test2[p][fScaleZ0][j+1],
			test2[p][modelid0][j+2],test2[p][boneid0][j+2],test2[p][fOffsetX0][j+2],test2[p][fOffsetY0][j+2],
			test2[p][fOffsetZ0][j+2],test2[p][fRotX0][j+2],test2[p][fRotY0][j+2],test2[p][fRotZ0][j+2],test2[p][fScaleX0][j+2],test2[p][fScaleY0][j+2],test2[p][fScaleZ0][j+2],NamePlayer[p]);
			mysql_tquery(MySQLGo, str);			
		}
	case 1:
		{
			for(new i,j; i < 8; i++,j+=3)
			{
				mysql_format(MySQLGo, str, sizeof(str), "UPDATE `invent` SET `%s`='(%i,%i,%f,%f,%f,%f,%f,%f,%f,%f,%f);(%i,%i,%f,%f,%f,%f,%f,%f,%f,%f,%f);(%i,%i,%f,%f,%f,%f,%f,%f,%f,%f,%f);' WHERE `name`='%s'", 
				type_name[i][eng_n],test2[p][modelid0][j],test2[p][boneid0][j],test2[p][fOffsetX0][j],test2[p][fOffsetY0][j],
				test2[p][fOffsetZ0][j],test2[p][fRotX0][j],test2[p][fRotY0][j],test2[p][fRotZ0][j],test2[p][fScaleX0][j],test2[p][fScaleY0][j],test2[p][fScaleZ0][j],
				test2[p][modelid0][j+1],test2[p][boneid0][j+1],test2[p][fOffsetX0][j+1],test2[p][fOffsetY0][j+1],
				test2[p][fOffsetZ0][j+1],test2[p][fRotX0][j+1],test2[p][fRotY0][j+1],test2[p][fRotZ0][j+1],test2[p][fScaleX0][j+1],test2[p][fScaleY0][j+1],test2[p][fScaleZ0][j+1],
				test2[p][modelid0][j+2],test2[p][boneid0][j+2],test2[p][fOffsetX0][j+2],test2[p][fOffsetY0][j+2],
				test2[p][fOffsetZ0][j+2],test2[p][fRotX0][j+2],test2[p][fRotY0][j+2],test2[p][fRotZ0][j+2],test2[p][fScaleX0][j+2],test2[p][fScaleY0][j+2],test2[p][fScaleZ0][j+2],NamePlayer[p]);
				mysql_tquery(MySQLGo, str);
			}
			mysql_format(MySQLGo, str, sizeof(str), "UPDATE `invent` SET `radio` ='%d,%d', `aptechka` = '%d',`kanistra` = '%d,%d',`mask` = '%d',`mfon` = '%d' WHERE `name`='%s'",PlayerInfo[p][pRadio1][0],PlayerInfo[p][pRadio1][1],PlayerInfo[p][pAptechka],PlayerInfo[p][pFill][0],PlayerInfo[p][pFill][1],PlayerInfo[p][pMask],PlayerInfo[p][pMFon],NamePlayer[p]);
			mysql_tquery(MySQLGo, str);
		}
	case 3:
		{
			mysql_format(MySQLGo, str, sizeof(str), "UPDATE `invent` SET `radio` ='%d,%d', `aptechka` = '%d',`kanistra` = '%d,%d',`mask` = '%d',`mfon` = '%d' WHERE `name`='%s'",PlayerInfo[p][pRadio1][0],PlayerInfo[p][pRadio1][1],PlayerInfo[p][pAptechka],PlayerInfo[p][pFill][0],PlayerInfo[p][pFill][1],PlayerInfo[p][pMask],PlayerInfo[p][pMFon],NamePlayer[p]);
			mysql_tquery(MySQLGo, str);
		}
	}
	printf("Сохранение инвентаря игрока %s(%d)",NamePlayer[p],strlen(str));
}
stock GetNameByMId(mid)
{
	for(new i = 0; i < sizeof(Inv_Info); i++)
	{
		if(mid == Inv_Info[i][mod_id]) return i;
	}
	return -1;
}
stock GetAccIdx(i)
{
	for(new j = 0; j < sizeof(AC); j++)
	{
		if(AC[j][acID] == i) return j;
	}
	return -1;
}
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
	if(IsACop(playerid) && GetPlayerWeapon(playerid) == 3)
	{
		if(PlayerCuffed[damagedid]) return 1;
		new string[124];
		format(string, sizeof(string), "Вы были парализованы %s на 15 секунд.", NamePlayer[playerid]);
		SendClientMessage(damagedid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Вы парализовали %s на 15 секунд.", NamePlayer[damagedid]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* %s оглушил %s дубинкой", NamePlayer[playerid] ,NamePlayer[damagedid]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		TogglePlayerControllable(damagedid, 0);
		PlayerCuffed[damagedid] = 1;
		ApplyAnimation(damagedid,"CRACK","crckdeth1",4.1,1,1,1,1,1);
		SetTimerEx("@UnTazer", 15000, false, "i",damagedid);
	}
	return 1;
}
public avtbaum()
{
	SetObjectRot(avtbaum1, 0.00, -91.00, -22.06);

}
public shbaum()
{
	SetObjectRot(shbaum1, 0.00, -89.82, -9.82);

}
public baum()
{
	SetObjectRot(baum1, 0.3599, 449.5999, -97.2000);

}
public ppsbaum()
{
	SetObjectRot(ppsbaum1, 0.00, -90.00, -89.88);

}
public dpsbaum()
{
	SetObjectRot(dpsbaum1, 0.00, -90.00, -149.40);

}
forward @UnTazer(p);
@UnTazer(p)
{
	TogglePlayerControllable(p, 1); 
	ClearAnimations(p);
	PlayerCuffed[p] = 0;
}
forward @Satiety(playerid);
@Satiety(playerid)
{
	new tick = GetPVarInt(@p,#P_Timer_Sat);
	if(tick >= 25) SetFrackColor(@p);	
	if(tick >= 119)
	{
		DeletePVar(playerid,#P_Timer_Sat);
		tick = 0;
		if(PlayerInfo[playerid][pSatiety] > 0) PlayerInfo[playerid][pSatiety]--;
		SetPlayerProgressBarValue(playerid, pbar_sat, float(PlayerInfo[playerid][pSatiety]));
		switch(PlayerInfo[playerid][pSatiety])
		{
		case 7..21:
			{	
				if(!GetPVarInt(playerid,#P_Tim_Sat)) SendClientMessage(playerid,COLOR_LIGHTBLUE,"[!] Внимание! Вы проголодались, перекусите в ближайшей закусочной!");
				new p = GetPVarInt(playerid,#P_Tim_Sat);
				SetPVarInt(playerid,#P_Tim_Sat,p+1);
				if(GetPVarInt(playerid,#P_Tim_Sat) >= 4) DeletePVar(playerid,#P_Tim_Sat);
			}
		case 0..6:
			{
				ApplyAnimation(playerid,"CRACK","crckdeth1",4.1,1,1,1,1,1);				
				if(!GetPVarInt(playerid,#P_Hung_Ob))	SendClientMessage(playerid,COLOR_LIGHTRED,"Внимание! У вас случился голодный обморок! Вам требуется медицинская помощь.");
				SetPVarInt(playerid,#P_Hung_Ob,1);
			}
		}
	}
	if(gpvi(@p,#P_AutoEx_Tim) > 0)
	{
		if(gpvi(@p,#P_AutoEx_Tim) == 1)
		{
			SetVehicleToRespawn(gpvi(@p,#P_AutoEx_CarID));
			DeletePVar(@p,#P_AutoEx_CarID);
			DeletePVar(@p,"AutoExam");
			DeletePVar(@p,"LessonSlot");
			SCM(@p,-1,"Экзамен провален!");
		}
		spvi(@p,#P_AutoEx_Tim,gpvi(@p,#P_AutoEx_Tim)-1);
	}
	if(IsPlayerConnected(@p) && IsPlayerInAnyVehicle(@p) && GetPlayerState(@p) == PLAYER_STATE_DRIVER)
	{
		new Float:speed = fGetPlayerSpeed(@p), Float:x,Float:y,Float:z,
		string[128], vehicleid = GetPlayerVehicleID(@p);
		if(!IsABicycle(vehicleid))
		{
			GetVehicleVelocity(vehicleid, x,y,z);
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			new Float:msdrived = (speed/8.6)/600;
			new id_car = -1;
			if(GetPVarType(@p,#P_CarIdx))	id_car = gpvi(@p,#P_CarIdx);
			if(GetPVarInt(@p,#P_Taxi_On) && GetPVarInt(@p,#P_Taxi_State) == 2) Taksometr(GetPVarInt(@p,#P_Taxi_IDPass),GetPVarInt(@p,#P_Taxi_Type),msdrived);
			if(id_car != -1) aData[id_car][aMilleage] += msdrived;
			if(gpvi(@p,"AutoExam") && GetPVarType(@p,"LessonSlot"))
			{
				if((speed/1.5) > 80.0)
				{
					spvi(@p,#P_AutoEx_Sped,gpvi(@p,#P_AutoEx_Sped)+1);
					SCM(@p,COLOR_LIGHTRED,"Вы превысили скорость!");
					if(gpvi(@p,#P_AutoEx_Sped) >= 3)
					{
						SetVehicleToRespawn(gpvi(@p,#P_AutoEx_CarID));
						DeletePVar(@p,#P_AutoEx_CarID);
						DeletePVar(@p,"AutoExam");
						DeletePVar(@p,"LessonSlot");
						SCM(@p,-1,"Экзамен провален!");
					}
				}
			}
			if(!GetPVarInt(@p,#P_Speed_On))
			{
				// Открываем ТД
				for(new v = 0; v < 4; v++) PlayerTextDrawShow(@p, speedometer[v][@p]);
				if(VehInfo[vehicleid][vLeftBlink])
				{
					if(gpvi(@p,#P_povL)) DeletePVar(@p,#P_povL);
					else spvi(@p,#P_povL,1);
				}
				else DeletePVar(@p,#P_povL);
				if(VehInfo[vehicleid][vRightBlink])
				{
					if(gpvi(@p,#P_povR)) DeletePVar(@p,#P_povR);
					else spvi(@p,#P_povR,1);
				}
				else DeletePVar(@p,#P_povR);
				PlayerTextDrawSetString(@p,speedometer[0][@p],VehiclesName[GetVehicleModel(vehicleid)-400]);
				if(id_car == -1) format(string,sizeof(string),"~g~CKOPOC¦’: ~w~%.0f KM/Ќ~n~~g~ЏOЊ‡…‹O: ~w~%d ‡~n~~g~ЊPOЂE‚: ~w~--- KM",speed/1.5,Fuel[vehicleid]);
				else format(string,sizeof(string),"~g~CKOPOC¦’: ~w~%.0f KM/Ќ~n~~g~ЏOЊ‡…‹O: ~w~%d ‡~n~~g~ЊPOЂE‚: ~w~%.1f KM",speed/1.5,aData[id_car][aFuel],aData[id_car][aMilleage]);
				PlayerTextDrawSetString(@p,speedometer[2][@p],string);				
				format(string,sizeof(string),"~%s~<          ~%s~E  ~%s~L  ~%s~S           ~%s~>", gpvi(@p,#P_povL) ? ("g"):("r"),
				engine ? ("g"):("r"),lights ? ("g"):("r"),GetPVarInt(@p,"Seatbelt") ? ("g"):("r"),gpvi(@p,#P_povR) ? ("g"):("r"));
				PlayerTextDrawSetString(@p,speedometer[1][@p],string);
			}
		}
	}
	if(!IsPlayerInAnyVehicle(@p)) { for(new r = 0; r < 4; r++) PlayerTextDrawHide(@p, speedometer[r][@p]); }
	SetPVarInt(playerid,#P_Timer_Sat,tick+1);
	if(PlayerInfo[playerid][pSatiety] >= 0 && PlayerInfo[playerid][pSatiety] < 7) ApplyAnimation(playerid,"CRACK","crckdeth1",4.1,0,1,1,1,1);
	new tick_timer = SetTimerEx("@Satiety", 1000, false, "@p",playerid);
	SetPVarInt(playerid,#P_Tick_Timer,tick_timer);
}
stock SetPlayerWalkingStyle(playerid, style) { SetPVarInt(playerid,#P_Walk_Style,style);}
stock GetPlayerWalkingStyle(playerid) { return GetPVarInt(playerid,#P_Walk_Style);}  
forward WalkAnim(playerid);
public WalkAnim(playerid)
{
	new keys, updown, leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
	switch(GetPlayerWalkingStyle(playerid))
	{
	case 1:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","WALK_player",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ClearAnimations(playerid), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	case 2:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","WALK_civi",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ApplyAnimation(playerid,"PED","WALK_player",4.1,0,1,1,1,1), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	case 3:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","WALK_gang1",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ApplyAnimation(playerid,"PED","WALK_gang1",4.1,0,1,1,0,1), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	case 4:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","WALK_gang2",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ClearAnimations(playerid), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	case 5:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","WALK_old",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ClearAnimations(playerid), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	case 6:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","WALK_fatold",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ClearAnimations(playerid), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	case 7:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","WALK_fat",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ClearAnimations(playerid), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	case 8:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ClearAnimations(playerid), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	case 9:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ClearAnimations(playerid), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	case 10:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ClearAnimations(playerid), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	case 11:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ClearAnimations(playerid), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	case 12:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","WALK_drunk",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ClearAnimations(playerid), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	case 13:
		{
			if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
			{
				KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
				ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,0,1,1,0,200);
				new tick_id = SetTimerEx("WalkAnim",200,0,"d",playerid);
				SetPVarInt(playerid,#P_Walk_Timer,tick_id);
			}
			else ClearAnimations(playerid), KillTimer(GetPVarInt(playerid,#P_Walk_Timer));
		}
	}	
	return true;
}
stock Start_MFon(playerid)
{
	new string[64], Float:BBCoord[4];
	GetPlayerPos(playerid, BBCoord[0], BBCoord[1], BBCoord[2]);
	GetPlayerFacingAngle(playerid, BBCoord[3]);
	SetPVarFloat(playerid, #P_MFon_X, BBCoord[0]);
	SetPVarFloat(playerid, #P_MFon_Y, BBCoord[1]);
	SetPVarFloat(playerid, #P_MFon_Z, BBCoord[2]);
	BBCoord[0] += (2 * floatsin(-BBCoord[3], degrees));
	BBCoord[1] += (2 * floatcos(-BBCoord[3], degrees));
	BBCoord[2] -= 1.0;
	SetPVarInt(playerid, #P_MFon_Obj, CreateDynamicObject(10274, BBCoord[0], BBCoord[1], BBCoord[2], 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
	format(string, sizeof(string), "Установил: %s [%d]", NamePlayer[playerid], playerid);
	SetPVarInt(playerid, #P_MFon_Label, _:CreateDynamic3DTextLabel(string, -1, BBCoord[0], BBCoord[1], BBCoord[2]+0.6, 8, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
	SetPVarInt(playerid, #P_MFon_Area, CreateDynamicSphere(BBCoord[0], BBCoord[1], BBCoord[2], 20.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
	SetPVarInt(playerid, #P_MFon_Int, GetPlayerInterior(playerid));
	SetPVarInt(playerid, #P_MFon_VW, GetPlayerVirtualWorld(playerid));			
	ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
	ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);	
}
stock Stop_MFon(playerid)
{
	ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
	ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
	if(IsValidDynamicObject(GetPVarInt(playerid, #P_MFon_Obj))) DestroyDynamicObject(GetPVarInt(playerid, #P_MFon_Obj));
	if(IsValidDynamic3DTextLabel(Text3D:GetPVarInt(playerid, #P_MFon_Label))) DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, #P_MFon_Label));
	if(GetPVarType(playerid, #P_MFon_Area))
	{
		foreach(new i: Player)
		{
			if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, #P_MFon_Area)))
			{
				StopAudioStreamForPlayer(i);
				SendClientMessage(i, COLOR_LIGHTBLUE, "Магнитофон выключен");
			}
		}
	}
	DestroyDynamicArea(GetPVarInt(playerid, #P_MFon_Area));
	DeletePVar(playerid,#P_MFon_Label);
	DeletePVar(playerid,#P_MFon_Area);
	DeletePVar(playerid, #P_MFon_Obj);
	DeletePVar(playerid, #P_MFon_X);
	DeletePVar(playerid, #P_MFon_Y);
	DeletePVar(playerid, #P_MFon_Z);
	DeletePVar(playerid, #P_MFon_Int);
	DeletePVar(playerid, #P_MFon_VW);
	DeletePVar(playerid, #P_MFon_On);
	DeletePVar(playerid, #P_MFon_St);
}
stock CheckRef(p,sum)
{
	new ids,c;
	foreach(new i : Player)
	{
		if(strcmp(NamePlayer[i],PlayerInfo[p][pRef], true)) continue;
		else { c = i; break; }
		ids++;
	}
	if(ids)
	{
		SendClientMessage(c,COLOR_LIGHTBLUE,#Вы получили вознаграждение за приглашенного игрока!);
		PlayerInfo[c][pCash] += sum; GivePlayerMoney(c,sum);
	}
	else{
		new str[90];
		mysql_format(MySQLGo,str,sizeof(str),"SELECT `pCash` FROM `accounts` WHERE `pNickname` = '%s'",PlayerInfo[p][pRef]);
		new Cache:p1 = mysql_query(MySQLGo,str,true);
		if(!cache_num_rows()) return SCM(p,-1,"Произошла ошибка при зачислении средств по программе рефералов обратитесь к администрации!");
		new money = cache_get_field_content_int(0, "pCash", MySQLGo);
		cache_delete(p1);
		mysql_format(MySQLGo,str,sizeof(str),"UPDATE `accounts` SET `pCash` = '%d' WHERE `pNickname` = '%s'",money+sum,PlayerInfo[p][pRef]);
		mysql_tquery(MySQLGo,str);
	}
	return 1;
}
stock GetFuelIdx(i)
{
	for(new j = 0; j < sizeof(FuelsInfo); j++)
	{
		if(FuelsInfo[j][sbID] == i) return j;
	}
	return 255;
}
forward @Taxi(playerid);
@Taxi(playerid)
{
	new tick = GetPVarInt(@p,#P_Taxi_Tick);
	if(tick > 0)
	{			
		static const str0[] = "ѓO “‹AKYA‰……:~n~~r~%s";
		new str[sizeof(str0)+4];
		format(str,sizeof(str),str0,Convert(tick));
		PlayerTextDrawSetString(@p,taxi_info[@p],str);
		PlayerTextDrawShow(@p,taxi_info[@p]);
		SetPVarInt(@p,#P_Taxi_Tick,tick-1);
	}
	else
	{
		Taxi_DrvEx(@p);
		return 1;
	}
	SetPVarInt(@p,#P_Taxi_Timer,SetTimerEx("@Taxi", 1000, false, "i",@p));//repeat
	return 1;
}
stock Taxi_DrvEx(playerid)
{
	new vehid = GetPVarInt(@p,#P_Taxi_CarID);
	if(GetPVarInt(@p,#P_Taxi_State))
	{
		foreach(new i:Player)
		{
			if(GetPlayerVehicleID(i) == vehid) 
			{
				RemovePlayerFromVehicle(i);
				SCM(i,COLOR_LIGHTRED,#Водитель сбежал.);
				TextDrawHideForPlayer(i,taxi_fon);
				PlayerTextDrawHide(i,taxi_info[i]);		
				DeletePVar(i,#P_Taxi_Drive);//статус пассажира		
				DeletePVar(i,#P_Taxi_IDDriver);//ид пассажира		
				DeletePVar(i,#P_Taxi_Km);//км пассажира
				DeletePVar(i,#P_Taxi_KM_Int);//км окргуленные пассажира				
			}
		}
	}
	DestroyDynamic3DTextLabel(Text3D:GetPVarInt(@p,#P_Taxi_Text3d));
	DisablePlayerCheckpoint(@p);
	SetVehicleToRespawn(vehid);
	DeletePVar(@p,#P_Taxi_State);
	DeletePVar(@p,#P_Taxi_On);
	DeletePVar(@p,#P_Taxi_Tar);
	DeletePVar(@p,#P_Taxi_Type);
	DeletePVar(@p,#P_Taxi_Tick);
	DeletePVar(@p,#P_Taxi_IDPass);
	PlayerTextDrawHide(@p,taxi_info[@p]);
	TextDrawHideForPlayer(@p,taxi_fon);
	static const str0[] = "Заработано: {00ff00}%d {33CCFF}рублей.";
	new str[sizeof(str0)+11];
	format(str,sizeof(str),str0,GetPVarInt(@p,#P_Taxi_Summ));
	SCM(@p,COLOR_LIGHTBLUE,str);
	PlayerInfo[@p][pCash] += GetPVarInt(@p,#P_Taxi_Summ);
	GivePlayerMoney(@p,GetPVarInt(@p,#P_Taxi_Summ));		
	DeletePVar(@p,#P_Taxi_Summ);
	if(eGetPlayerMoney(@p) >= 1000) 
	{
		PlayerInfo[@p][pCash] -=1000;
		GivePlayerMoney(@p,-1000);
		SCM(@p,COLOR_LIGHTBLUE,"Ваше рабочее т/с было отбуксировано. За эвакуацию с Вас было списано 1000 рублей.");
	}
	else SCM(@p,COLOR_LIGHTBLUE,"Ваше рабочее т/с было отбуксировано.");
	DestroyDynamic3DTextLabel(Text3D:GetPVarInt(@p,#P_Taxi_Text3d));
	DeletePVar(@p,#P_Taxi_CarID);
	return 1;
}
stock Convert(number)
{
	new hours = 0, mins = 0, secs = 0, string[24];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(string, sizeof(string), "%d:%02dm:%02ds", hours, mins, secs);
	else format(string, sizeof(string), "%d:%02d", mins, secs);
	return string;
}
publics: J_Less(p)
{
	new c = gpvi(p,#P_JobLess_Tick);
	if(c < 10)
	{
		ApplyAnimation(p, "CHAINSAW", "WEAPON_csaw", 4.1, 1, 0, 0, 0, 0);
		spvi(p,#P_JobLess_Tick,c+1);
	}
	else
	{
		ApplyAnimation(p, "CARRY", "liftup", 4.0, 0, 0, 0, 1, 1);		
		RemovePlayerAttachedObject(p, 0);
		TogglePlayerControllable(p, true);
		SetPlayerAttachedObject(p, 0, 1463, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 0.476124, 0.468181, 0.470769); 
		SetPlayerSpecialAction(p, SPECIAL_ACTION_CARRY);
		ApplyAnimation(p,"CARRY","crry_prtial", 4.0, 0, 0, 0, 1, 1);
		KillTimer(gpvi(p,#P_JobLess_Timer));
		SetPlayerCheckpoint(p,-2141.7271,-542.9321,39.4659,2.0);
		SCM(p,COLOR_GRAD1,"{2E9AFE}Теперь отнесите древесину на склад!");
		spvi(p,#P_JobLess_St,1);
		DeletePVar(p,#P_JobLess_Tick);
		DeletePVar(p,#P_JobLess_Timer);
		return 1;
	}
	spvi(p,#P_JobLess_Timer,SetTimerEx("J_Less", 1000, false, "d", p));
	return 1;
}
publics: GiveRuda(playerid)
{
	new c = gpvi(@p,#P_Ruda_Tick);
	if(c < 10)
	{
		ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);
		spvi(@p,#P_Ruda_Tick,c+1);
	}
	else
	{
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
		RemovePlayerAttachedObject(playerid, 3);
		SendClientMessage(playerid,0xFFFFFFFF,"Вы добыли руду, отнесите ее на склад!");
		SetPlayerAttachedObject(playerid, 4, 2936, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 0.476124, 0.468181, 0.470769);
		SetPlayerCheckpoint(playerid, -845.4773,1213.5527,3011.5315, 4.0);
		SetPVarInt(playerid,"Nesti", 1);
		KillTimer(gpvi(@p,#P_RudaTimer));
		DeletePVar(@p,#P_Ruda_Tick);
		DeletePVar(@p,#P_RudaTimer);
		return true;
	}
	spvi(@p,#P_RudaTimer,SetTimerEx("GiveRuda", 1000, false, "i", playerid));
	return 1;
}
stock GetVehicleIdxByID(idcar)
{
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
		if(!aData[i][aKey]) continue;
		if(aData[i][aCarid] == idcar) return i;
	}
	return -1;
}
stock GetVehicleIdxByKey(key)
{
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
		if(!aData[i][aKey]) continue;
		if(aData[i][aKey] == key) return i;
	}
	return -1;
}
stock CheckLock(playerid,vehid,id_car)
{
	/*new Float:lcx, Float:lcy, Float:lcz;
	GetVehiclePos(vehid, lcx,lcy,lcz);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, lcx, lcy, lcz)) return SendClientMessage(playerid,COLOR_GREY, "Ты должен быть возле автомобиля.");*/
	glob_str = "";
	if(aData[id_car][aLock] == 1)
	{
		format(glob_str, sizeof(glob_str), "* %s закрывает центральный замок автомобиля.", NamePlayer[@p]);
		ProxDetector(15.0, playerid, glob_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		format(glob_str, sizeof(glob_str), "~w~ABЏO–OЂ…‡’ ~r~€AKP‘Џ");
		GameTextForPlayer(playerid, glob_str, 5000, 5);
		LockCar(vehid);
		aData[id_car][aLock] = 0;
		SaveVehicle(id_car);
		glob_str = "";
		return 1;
	}
	else if(aData[id_car][aLock] == 0)
	{
		format(glob_str, sizeof(glob_str), "* %s открывает центральный замок автомобиля.", NamePlayer[@p]);
		ProxDetector(15.0, playerid, glob_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		format(glob_str, sizeof(glob_str), "~w~ABЏO–OЂ…‡’ ~g~OЏKP‘Џ");
		GameTextForPlayer(playerid, glob_str, 5000, 5);
		UnLockCar(vehid);
		aData[id_car][aLock] = 1;
		SaveVehicle(id_car);
		glob_str = "";
		return 1;
	}
	return 1;
}
forward CheckUCP();
public CheckUCP() 
{
	new rows,fields;
	cache_get_data(rows,fields);
	if(!rows) return 1;
	else {
	    new frapsy_admin_name[MAX_PLAYER_NAME],frapsy_other_params[4],frapsy_txt[128];
	    for(new i; i < rows; i++) {		
	        cache_get_field_content(i,"playerid",frapsy_txt); frapsy_other_params[0] = strval(frapsy_txt);
			cache_get_field_content(i,"action",frapsy_txt); frapsy_other_params[1] = strval(frapsy_txt);
			cache_get_field_content(i,"amount",frapsy_txt); frapsy_other_params[2] = strval(frapsy_txt);
			cache_get_field_content(i,"id",frapsy_txt); frapsy_other_params[3] = strval(frapsy_txt);
			cache_get_field_content(i,"admin_name",frapsy_admin_name);
		    switch(frapsy_other_params[1]) {
		        case 1: {
		            PlayerInfo[frapsy_other_params[0]][pRank]++; // увеличиваем ранг, замените переменную на свою
		            format(frapsy_txt,sizeof(frapsy_txt),"* Лидер %s повысил Ваш ранг через UCP. Приятной игры.",frapsy_admin_name);
		            SendClientMessage(frapsy_other_params[0],-1,frapsy_txt); // по желанию, измените цвет текста
		            format(frapsy_txt,sizeof(frapsy_txt),"UPDATE `frapsy_queries` SET `flag` = '1' WHERE `id` = '%d'",frapsy_other_params[3]);
		            mysql_function_query(MySQLGo,frapsy_txt,false,"","");
				}
		        case 2: {
		            PlayerInfo[frapsy_other_params[0]][pRank]--; // понижаем ранг, замените переменную на свою
		            format(frapsy_txt,sizeof(frapsy_txt),"* Лидер %s понизил Ваш ранг через UCP. Приятной игры.",frapsy_admin_name);
		            SendClientMessage(frapsy_other_params[0],-1,frapsy_txt); // по желанию, измените цвет текста
		            format(frapsy_txt,sizeof(frapsy_txt),"UPDATE `frapsy_queries` SET `flag` = '1' WHERE `id` = '%d'",frapsy_other_params[3]);
		            mysql_function_query(MySQLGo,frapsy_txt,false,"","");
				}
		        case 3: {
		            PlayerInfo[frapsy_other_params[0]][pMember] = 0; // выкидываем игрока из фракции
					PlayerInfo[frapsy_other_params[0]][pRank] = 0; // обнуляем ранг
					// SetPlayerSkin(frapsy_other_params[0],24); // раскомментируйте, если необходимо
		            format(frapsy_txt,sizeof(frapsy_txt),"* Лидер %s уволил Вас из организации через UCP. Приятной игры.",frapsy_admin_name);
		            SendClientMessage(frapsy_other_params[0],-1,frapsy_txt); // по желанию, измените цвет текста
		            format(frapsy_txt,sizeof(frapsy_txt),"UPDATE `frapsy_queries` SET `flag` = '1' WHERE `id` = '%d'",frapsy_other_params[3]);
		            mysql_function_query(MySQLGo,frapsy_txt,false,"","");
				}
		        case 4: {
		            format(frapsy_txt,sizeof(frapsy_txt),"* Администратор %s забанил Вас через UCP.",frapsy_admin_name);
		            SendClientMessage(frapsy_other_params[0],-1,frapsy_txt); // по желанию, измените цвет текста
					Ban(frapsy_other_params[0]);
		            format(frapsy_txt,sizeof(frapsy_txt),"UPDATE `frapsy_queries` SET `flag` = '1' WHERE `id` = '%d'",frapsy_other_params[3]);
		            mysql_function_query(MySQLGo,frapsy_txt,false,"","");
				}
		        case 5: {
		            format(frapsy_txt,sizeof(frapsy_txt),"* Администратор %s выкинул Вас с сервера через UCP.",frapsy_admin_name);
		            SendClientMessage(frapsy_other_params[0],-1,frapsy_txt); // по желанию, измените цвет текста
					KickEx(frapsy_other_params[0]); // замените, если используете другую функцию кика
		            format(frapsy_txt,sizeof(frapsy_txt),"UPDATE `frapsy_queries` SET `flag` = '1' WHERE `id` = '%d'",frapsy_other_params[3]);
		            mysql_function_query(MySQLGo,frapsy_txt,false,"","");
				}
		        case 6: {
		            PlayerInfo[frapsy_other_params[0]][pDm] += frapsy_other_params[2]; // пополняем счет очков
		            format(frapsy_txt,sizeof(frapsy_txt),"* Ваш донат-счет пополнен на %d донат-очков. Приятной игры.",frapsy_other_params[2]);
		            SendClientMessage(frapsy_other_params[0],-1,frapsy_txt); // по желанию, измените цвет текста
		            format(frapsy_txt,sizeof(frapsy_txt),"UPDATE `frapsy_queries` SET `flag` = '1' WHERE `id` = '%d'",frapsy_other_params[3]);
		            mysql_function_query(MySQLGo,frapsy_txt,false,"","");
				}
		        case 7: {
		            new frapsy_new_name[MAX_PLAYER_NAME];
					cache_get_field_content(i,"new_nickname",frapsy_new_name);
					SetPlayerName(frapsy_other_params[0],frapsy_new_name);
		            format(frapsy_txt,sizeof(frapsy_txt),"* Администратор %s разрешил сменить Ваш ник на %s.",frapsy_admin_name,frapsy_new_name);
		            SendClientMessage(frapsy_other_params[0],-1,frapsy_txt); // по желанию, измените цвет текста
					SendClientMessage(frapsy_other_params[0],-1,"* Ваш ник изменен. Не забудьте изменить его в клиенте SAMP.");
		            format(frapsy_txt,sizeof(frapsy_txt),"UPDATE `frapsy_queries` SET `flag` = '1' WHERE `id` = '%d'",frapsy_other_params[3]);
		            mysql_function_query(MySQLGo,frapsy_txt,false,"","");
				}				
			}
		}
	}
	return 1;
}
public OnQueryError(errorid, error[], callback[], query[], connectionHandle)
{
	printf("[MySQL Error] #%d %s Callback(%s)",errorid, error, callback);
	printf("[Query] %s",query);
}
stock TimeConverter(seconds)
{
	new strings[64];
	new minutes = floatround(seconds/60);
	seconds -= minutes*60;
	format(strings, 64, "%02d:%02d", minutes, seconds);
	return strings;
}
publics: CheckUcP()
{
	mysql_function_query(MySQLGo,"SELECT * FROM `frapsy_queries` WHERE `flag` = '0'",true,"CheckUCP","");
}
